2024-11-16 17:20:12,059 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:12,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:12,312 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:12,327 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:12,330 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:12,400 [setup] WARN  impl.MetricsConfig (MetricsConfig.java:loadFirst(136)) - Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
2024-11-16 17:20:12,525 [setup] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:getMetricsSystem(250)) - Metrics system inited org.apache.hadoop.metrics2.impl.MetricsSystemImpl@7e9defc6
2024-11-16 17:20:12,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:12,536 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:12,538 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:12,538 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:12,538 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:12,538 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:12,539 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:12,541 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:12,542 [setup] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:12,548 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:12,553 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:12,556 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:12,556 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:12,558 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:12,558 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:12,571 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:12,572 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:12,574 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:12,574 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:12,775 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0]
2024-11-16 17:20:12,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0]
2024-11-16 17:20:12,787 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:12,933 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:12,933 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:12,934 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:12,934 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:12,935 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:12,937 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:12,939 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:12,990 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:12,992 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:13,008 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:13,009 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:13,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:13,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:13,161 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:13,162 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:13,167 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:13,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:13,170 [setup] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:13,170 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:13,170 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:13,171 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:13,173 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:20:13,174 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:13,175 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:13,175 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:13,175 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:20:13,175 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:20:13,210 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0], delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_continue_list_request=0) (fake_directories_created=0) (op_xattr_get_map=0) (object_metadata_request=0) (op_xattr_get_named_map.failures=0) (stream_write_queue_duration.failures=0) (op_hflush=0) (object_select_requests=0) (op_delete.failures=0) (op_rename=0) (op_openfile=0) (op_get_file_checksum=0) (op_list_located_status=0) (op_exists.failures=0) (op_list_files=0) (op_create_non_recursive=0) (stream_write_total_data=0) (multipart_upload_abort_under_path_invoked=0) (op_list_status=0) (directories_deleted=0) (audit_access_check_failure=0) (committer_commit_job.failures=0) (op_copy_from_local_file=0) (fake_directories_deleted=0) (committer_load_single_pending_file=0) (multipart_upload_list=0) (delegation_tokens_issued.failures=0) (op_rename.failures=0) (op_xattr_list=0) (committer_bytes_committed=0) (stream_read_closed=0) (audit_span_creation=1) (committer_tasks_failed=0) (audit_request_execution=0) (op_open=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (committer_tasks_completed=0) (multipart_upload_completed=0) (op_get_content_summary.failures=0) (store_exists_probe=0) (audit_failure=0) (op_is_file.failures=0) (multipart_upload_started=0) (action_file_opened.failures=0) (object_delete_request=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_aborted=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_write_exceptions_completing_upload=0) (committer_stage_file_upload.failures=0) (action_http_head_request=0) (stream_read_total_bytes=0) (object_delete_objects=0) (stream_read_vectored_read_bytes_discarded=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_bulk_delete_request=0) (stream_read_seek_backward_operations=0) (committer_commits_created=0) (files_delete_rejected=0) (committer_materialize_file=0) (op_xattr_get_map.failures=0) (op_createfile=0) (object_continue_list_request.failures=0) (op_mkdirs=0) (op_list_files.failures=0) (op_create.failures=0) (object_put_request=0) (object_list_request.failures=0) (stream_read_vectored_combined_ranges=0) (op_glob_status=0) (action_http_get_request=0) (op_get_file_status=0) (stream_write_exceptions=0) (files_created=0) (committer_magic_files_created=0) (stream_read_operations=0) (multipart_instantiated=0) (stream_read_vectored_operations=0) (object_multipart_initiated=0) (op_list_status.failures=0) (stream_write_block_uploads_committed=0) (op_hsync=0) (committer_bytes_uploaded=0) (object_put_request.failures=0) (op_is_file=0) (op_get_delegation_token=0) (stream_write_bytes=0) (op_xattr_get_named=0) (object_multipart_initiated.failures=0) (op_get_delegation_token.failures=0) (op_access.failures=0) (stream_read_unbuffered=0) (stream_aborted=0) (committer_commits_reverted=0) (store_io_request=0) (op_access=0) (stream_read_seek_forward_operations=0) (committer_jobs_completed=0) (multipart_upload_list.failures=0) (stream_read_version_mismatches=0) (op_createfile.failures=0) (stream_read_bytes_discarded_in_close=0) (files_copied=0) (store_io_throttled=0) (op_glob_status.failures=0) (ignored_errors=0) (object_multipart_aborted.failures=0) (object_put_request_completed=0) (op_is_directory.failures=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=0) (committer_commits.failures=0) (stream_read_bytes=0) (committer_commits_completed=0) (stream_read_opened=0) (committer_load_single_pending_file.failures=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (committer_materialize_file.failures=0) (object_put_bytes=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_read_operations_incomplete=0) (op_exists=0) (store_exists_probe.failures=0) (stream_read_exceptions=0) (action_file_opened=0) (multipart_upload_part_put_bytes=0) (committer_jobs_failed=0) (files_copied_bytes=0) (stream_read_vectored_incoming_ranges=0) (op_create=0) (op_get_file_checksum.failures=0) (object_delete_request.failures=0) (stream_write_block_uploads=0) (op_is_directory=0) (stream_write_queue_duration=0) (directories_created=0) (op_mkdirs.failures=0) (op_get_content_summary=0) (op_get_file_status.failures=0) (action_http_head_request.failures=0) (action_executor_acquired=0) (store_io_retry=0) (committer_stage_file_upload=0) (op_xattr_list.failures=0) (object_copy_requests=0) (op_xattr_get_named.failures=0) (stream_write_total_time=0) (op_abort=0) (stream_read_bytes_discarded_in_abort=0) (delegation_tokens_issued=0) (committer_commits_aborted=0) (object_bulk_delete_request.failures=0) (files_deleted=0) (op_xattr_get_named_map=0) (committer_commit_job=0) (object_list_request=0) (op_delete=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_policy_changed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((action_executor_acquired.min=-1) (op_list_files.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (action_http_head_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.min=-1) (op_mkdirs.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_rename.min=-1) (op_xattr_get_map.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_directory.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.failures.min=-1) (object_delete_request.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_list.failures.min=-1) (multipart_upload_list.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.min=-1) (op_get_file_checksum.min=-1) (committer_stage_file_upload.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_content_summary.failures.min=-1) (op_is_directory.failures.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_access.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (committer_commit_job.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.min=-1) (op_create.failures.min=-1) (object_put_request.failures.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.min=-1) (op_delete.failures.min=-1) (action_http_get_request.min=-1) (op_get_delegation_token.min=-1) (object_continue_list_request.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.min=-1) (object_list_request.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.failures.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.min=-1) (op_create.min=-1) (op_exists.min=-1) (object_multipart_aborted.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_createfile.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_delete_request.max=-1) (op_delete.failures.max=-1) (multipart_upload_list.max=-1) (op_delete.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_copy_from_local_file.max=-1) (action_executor_acquired.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.failures.max=-1) (op_create.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_access.max=-1) (op_is_file.max=-1) (op_xattr_get_named.max=-1) (object_list_request.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.max=-1) (action_http_get_request.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (op_get_delegation_token.max=-1) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_head_request.max=-1) (object_put_request.max=-1) (op_list_files.max=-1) (op_get_content_summary.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_list.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.max=-1) (object_list_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.max=-1) (op_rename.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.failures.max=-1) (object_continue_list_request.max=-1) (op_abort.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_commit_job.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_aborted.max=-1));
means=((committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:13,220 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:13,222 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:13,222 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:13,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:13,225 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:13,227 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a816350f-f985-4e5f-8ca8-679638bf3212-00000005 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000005&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=16&ts=1731777613219
2024-11-16 17:20:13,240 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:13,255 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.015s
2024-11-16 17:20:13,256 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:13,257 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:13,436 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.211s
2024-11-16 17:20:13,437 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:13,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:13,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:13,441 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:13,442 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a816350f-f985-4e5f-8ca8-679638bf3212-00000005 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000005&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=16&ts=1731777613219
2024-11-16 17:20:13,453 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:13,455 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:13,457 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:13,458 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:13,459 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a816350f-f985-4e5f-8ca8-679638bf3212-00000005 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000005&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=16&ts=1731777613219
2024-11-16 17:20:13,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:13,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:13,565 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.110s
2024-11-16 17:20:13,565 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:13,571 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:13,571 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:13,571 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:13,572 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:13,574 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a816350f-f985-4e5f-8ca8-679638bf3212-00000006 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000006&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=16&ts=1731777613569
2024-11-16 17:20:13,595 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:20:13,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:13,603 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:13,643 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1960035397923792008.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:13,648 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1960035397923792008.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (object_put_request.failures=0) (op_hsync=0) (stream_write_total_data=0) (stream_write_block_uploads=0) (op_abort=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1960035397923792008.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:13,648 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:13,649 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:13,649 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1960035397923792008.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:13,657 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:13,658 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:13,659 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:13,659 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:13,660 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a816350f-f985-4e5f-8ca8-679638bf3212-00000006 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000006&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=31&ts=1731777613569
2024-11-16 17:20:13,713 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:13,714 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:13,714 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.056s
2024-11-16 17:20:13,715 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1960035397923792008.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:13,715 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1960035397923792008.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:13,716 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1960035397923792008.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:13,716 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:13,717 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:13,726 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (op_hsync=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (op_abort=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (object_put_request=1) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=54) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=54) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=54, mean=54.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:13,728 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:13,730 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:13,730 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:13,733 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:13,734 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:13,738 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:13,741 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:13,741 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:13,741 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:13,742 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:13,743 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:13,744 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:13,744 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:13,745 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:13,745 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:13,746 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='b3251c85-8052-4260-8385-8ebfa15291f6', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:13,747 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='b3251c85-8052-4260-8385-8ebfa15291f6', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:13,747 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='b3251c85-8052-4260-8385-8ebfa15291f6', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:13,748 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:13,751 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:13,752 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:13,753 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:13,753 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:13,754 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:13,755 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f758f28]
2024-11-16 17:20:13,755 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f758f28]
2024-11-16 17:20:13,756 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:13,757 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:13,757 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:13,758 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:13,758 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:13,759 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:13,760 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:13,760 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:13,761 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:13,761 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:13,762 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:13,763 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:13,766 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:13,766 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:13,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:13,767 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:13,768 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:13,768 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:13,769 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:13,769 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:13,770 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:13,770 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:13,771 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:20:13,771 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:13,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:13,772 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:13,773 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:20:13,773 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:20:13,780 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:13,780 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:13,781 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:13,781 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] b3251c85-8052-4260-8385-8ebfa15291f6-00000009 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/b3251c85-8052-4260-8385-8ebfa15291f6-00000009/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=b3251c85-8052-4260-8385-8ebfa15291f6-00000009&t0=16&fs=b3251c85-8052-4260-8385-8ebfa15291f6&t1=16&ts=1731777613779
2024-11-16 17:20:13,782 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:13,783 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:20:13,784 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:13,784 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:13,802 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:13,804 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:13,807 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:13,850 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_opened=0) (stream_read_total_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_drain=0) (stream_read_block_read=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (action_http_get_request=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_operations=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=0) (stream_read_fully_operations=0) (action_file_opened=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=23) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=23) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=23, mean=23.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:13,856 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:13,858 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:13,858 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:13,858 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@787c016d[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:20:13,859 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:13,859 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics2-obs-bucket
2024-11-16 17:20:13,859 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:13,860 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f758f28] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:13,860 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f758f28] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:13,866 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_list_located_status=0) (committer_tasks_completed=0) (stream_read_total_bytes=0) (op_is_directory.failures=0) (op_get_file_checksum.failures=0) (op_abort.failures=0) (op_is_file.failures=0) (store_exists_probe.failures=0) (stream_write_bytes=0) (stream_read_operations_incomplete=0) (op_exists.failures=0) (stream_read_fully_operations=0) (committer_materialize_file.failures=0) (multipart_upload_aborted=0) (object_multipart_initiated.failures=0) (multipart_instantiated=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened=1) (action_http_head_request=1) (object_bulk_delete_request=0) (files_created=0) (store_io_request=1) (op_xattr_get_named.failures=0) (op_delete.failures=0) (store_io_retry=0) (ignored_errors=0) (op_get_file_status.failures=0) (op_is_file=0) (directories_deleted=0) (multipart_upload_part_put_bytes=0) (fake_directories_created=0) (stream_read_exceptions=0) (stream_write_exceptions_completing_upload=0) (stream_read_close_operations=1) (op_create=0) (op_mkdirs=0) (op_create.failures=0) (stream_read_seek_operations=0) (op_glob_status=0) (op_xattr_list.failures=0) (object_copy_requests=0) (object_delete_objects=0) (committer_commits_reverted=0) (op_xattr_get_named_map=0) (committer_commit_job.failures=0) (stream_read_bytes=0) (stream_write_exceptions=0) (committer_stage_file_upload=0) (op_list_files.failures=0) (op_access=0) (op_open=1) (op_openfile=0) (object_metadata_request=1) (op_xattr_get_named=0) (op_copy_from_local_file.failures=0) (stream_read_opened=0) (op_list_status=0) (op_get_delegation_token.failures=0) (op_get_file_checksum=0) (object_put_bytes=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_policy_changed=1) (stream_write_queue_duration=0) (op_rename=0) (committer_commits.failures=0) (multipart_upload_started=0) (store_io_throttled=0) (stream_read_vectored_incoming_ranges=0) (object_select_requests=0) (directories_created=0) (op_delete=0) (committer_magic_marker_put.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_discarded=0) (object_multipart_aborted=0) (committer_materialize_file=0) (stream_write_queue_duration.failures=0) (action_file_opened.failures=0) (action_executor_acquired=0) (committer_commits_created=0) (object_list_request.failures=0) (op_mkdirs.failures=0) (stream_read_closed=0) (committer_commits_aborted=0) (object_list_request=0) (committer_jobs_failed=0) (committer_load_single_pending_file=0) (op_exists=0) (committer_bytes_committed=0) (stream_read_unbuffered=0) (multipart_upload_completed=0) (op_hsync=0) (audit_span_creation=2) (delegation_tokens_issued.failures=0) (audit_access_check_failure=0) (stream_read_bytes_backwards_on_seek=0) (op_get_delegation_token=0) (fake_directories_deleted=0) (audit_request_execution=1) (op_get_content_summary.failures=0) (stream_read_seek_bytes_skipped=0) (files_deleted=0) (audit_failure=0) (committer_tasks_failed=0) (stream_read_vectored_operations=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (op_rename.failures=0) (committer_load_single_pending_file.failures=0) (op_createfile.failures=0) (object_put_request.failures=0) (action_http_get_request=0) (op_glob_status.failures=0) (action_http_get_request.failures=0) (op_xattr_get_map=0) (stream_read_vectored_read_bytes_discarded=0) (committer_magic_files_created=0) (committer_bytes_uploaded=0) (stream_write_total_time=0) (object_continue_list_request.failures=0) (store_exists_probe=0) (files_copied=0) (stream_read_remote_stream_drain=0) (committer_magic_marker_put=0) (op_xattr_list=0) (op_list_files=0) (object_put_request_completed=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_abort=0) (files_copied_bytes=0) (committer_jobs_completed=0) (stream_write_total_data=0) (committer_commits_completed=0) (multipart_upload_list.failures=0) (object_delete_request=0) (op_list_status.failures=0) (committer_commit_job=0) (committer_stage_file_upload.failures=0) (action_http_head_request.failures=0) (op_get_file_status=0) (op_xattr_get_map.failures=0) (delegation_tokens_issued=0) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_aborted=0) (op_get_content_summary=0) (files_delete_rejected=0) (op_xattr_get_named_map.failures=0) (op_is_directory=0) (object_multipart_aborted.failures=0) (op_create_non_recursive=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_block_uploads_committed=0) (object_put_request=0) (op_hflush=0) (multipart_upload_list=0) (action_executor_acquired.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_discarded_in_close=0) (object_bulk_delete_request.failures=0) (op_createfile=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations=0) (object_delete_request.failures=0) (stream_write_block_uploads=0) (op_copy_from_local_file=0) (op_access.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0));
minimums=((op_xattr_get_map.failures.min=-1) (op_get_file_status.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_list.min=-1) (op_access.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_content_summary.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.min=-1) (store_exists_probe.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.failures.min=-1) (object_put_request.failures.min=-1) (op_delete.min=-1) (op_createfile.failures.min=-1) (op_createfile.min=-1) (object_multipart_aborted.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.failures.min=-1) (object_delete_request.failures.min=-1) (op_create.min=-1) (op_glob_status.min=-1) (op_abort.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.min=-1) (object_delete_request.min=-1) (object_list_request.failures.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.min=-1) (action_executor_acquired.failures.min=-1) (op_list_status.min=-1) (action_file_opened.min=23) (stream_read_remote_stream_drain.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.failures.min=-1) (object_bulk_delete_request.min=-1) (op_is_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.min=21) (action_http_get_request.failures.min=-1) (op_rename.min=-1) (action_http_head_request.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (op_access.min=-1) (object_continue_list_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.min=-1));
maximums=((op_glob_status.failures.max=-1) (op_mkdirs.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_commit_job.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.max=-1) (op_exists.max=-1) (op_is_file.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named.max=-1) (committer_commit_job.failures.max=-1) (object_list_request.max=-1) (object_bulk_delete_request.max=-1) (op_delete.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (op_is_directory.failures.max=-1) (op_delete.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (store_exists_probe.max=-1) (action_file_opened.max=23) (op_list_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.max=-1) (op_createfile.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.max=-1) (action_http_get_request.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (committer_materialize_file.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.max=-1) (action_http_head_request.max=21) (object_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.failures.max=-1) (op_rename.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.max=-1));
means=((store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=21, mean=21.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=23, mean=23.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:13,868 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:13,868 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:13,868 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:13,869 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a816350f-f985-4e5f-8ca8-679638bf3212-00000010 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000010&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=16&ts=1731777613867
2024-11-16 17:20:13,876 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:13,877 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:13,879 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a816350f-f985-4e5f-8ca8-679638bf3212-00000010 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000010&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=16&ts=1731777613867
2024-11-16 17:20:13,893 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:20:13,894 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:13,894 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:13,895 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:13,895 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:13,897 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:13,898 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:13,899 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:13,899 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:13,900 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:13,900 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:13,901 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:13,904 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:13,904 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:13,904 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:13,905 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [35] a816350f-f985-4e5f-8ca8-679638bf3212-00000010 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000010&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=35&ts=1731777613867
2024-11-16 17:20:13,916 [s3a-transfer-obs-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:13,917 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:20:13,917 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:13,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:13,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:13,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777613708; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:13,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:13,921 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:13,923 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:13,925 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:13,933 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:13,937 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:13,939 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:13,941 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:13,941 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:13,942 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:13,942 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:13,944 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:13,949 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a816350f-f985-4e5f-8ca8-679638bf3212-00000010 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000010&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=36&ts=1731777613867
2024-11-16 17:20:13,972 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.028s
2024-11-16 17:20:13,973 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.032s
2024-11-16 17:20:13,973 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.032s
2024-11-16 17:20:13,975 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:13,975 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:13,976 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:13,977 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:13,977 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:13,978 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:13,979 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a816350f-f985-4e5f-8ca8-679638bf3212-00000010 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000010/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000010&t0=16&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=36&ts=1731777613867
2024-11-16 17:20:14,005 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.027s
2024-11-16 17:20:14,006 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.030s
2024-11-16 17:20:14,006 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.031s
2024-11-16 17:20:14,007 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.070s
2024-11-16 17:20:14,007 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.074s
2024-11-16 17:20:14,008 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.109s
2024-11-16 17:20:14,008 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:14,008 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:14,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:14,046 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_objects=2) (committer_stage_file_upload.failures=0) (committer_magic_files_created=0) (object_metadata_request=2) (stream_read_vectored_operations=0) (op_mkdirs.failures=0) (op_hsync=0) (op_get_file_status=0) (op_get_file_checksum.failures=0) (op_xattr_get_map=0) (audit_failure=0) (action_executor_acquired.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_checksum=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_unbuffered=0) (files_created=1) (files_copied=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_opened=0) (op_rename=0) (stream_read_operations=0) (committer_commits_aborted=0) (op_mkdirs=1) (audit_request_execution=10) (stream_read_total_bytes=0) (object_put_request.failures=0) (op_create.failures=0) (store_io_request=10) (action_http_head_request.failures=0) (op_xattr_get_named_map=0) (op_get_file_status.failures=0) (committer_stage_file_upload=0) (op_get_delegation_token=0) (files_deleted=1) (op_list_files=0) (fake_directories_deleted=1) (stream_read_closed=0) (stream_read_bytes=0) (stream_read_bytes_discarded_in_abort=0) (object_continue_list_request=0) (object_copy_requests=0) (stream_read_remote_stream_drain=0) (object_bulk_delete_request=2) (op_is_directory=0) (op_is_directory.failures=0) (op_create=1) (multipart_upload_list=0) (committer_tasks_completed=0) (object_continue_list_request.failures=0) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_aborted.failures=0) (op_list_located_status=0) (op_glob_status.failures=0) (op_get_content_summary=0) (op_is_file=0) (stream_read_close_operations=0) (stream_read_vectored_combined_ranges=0) (op_access.failures=0) (object_delete_request=0) (stream_read_seek_forward_operations=0) (op_get_delegation_token.failures=0) (stream_write_bytes=65536) (committer_bytes_uploaded=0) (stream_read_version_mismatches=0) (committer_load_single_pending_file=0) (op_exists.failures=0) (op_access=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (directories_deleted=0) (delegation_tokens_issued=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (op_create_non_recursive=0) (op_createfile=0) (stream_read_operations_incomplete=0) (op_abort=0) (committer_materialize_file=0) (delegation_tokens_issued.failures=0) (op_delete=1) (op_hflush=0) (action_http_get_request=0) (store_exists_probe=0) (committer_magic_marker_put.failures=0) (audit_span_creation=4) (object_bulk_delete_request.failures=0) (op_xattr_get_map.failures=0) (stream_aborted=0) (op_list_files.failures=0) (multipart_upload_started=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=0) (committer_load_single_pending_file.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (committer_jobs_completed=0) (op_list_status=0) (committer_commits_completed=0) (op_xattr_list.failures=0) (op_abort.failures=0) (directories_created=1) (op_copy_from_local_file=0) (op_createfile.failures=0) (object_list_request.failures=0) (object_list_request=4) (action_file_opened=0) (op_exists=0) (op_xattr_list=0) (store_exists_probe.failures=0) (op_rename.failures=0) (committer_commits.failures=0) (stream_write_block_uploads=1) (action_http_head_request=2) (committer_jobs_failed=0) (committer_materialize_file.failures=0) (committer_commit_job.failures=0) (action_file_opened.failures=0) (op_is_file.failures=0) (op_open=0) (multipart_instantiated=0) (stream_write_queue_duration.failures=0) (object_multipart_aborted=0) (committer_commit_job=0) (committer_commits_reverted=0) (committer_tasks_failed=0) (object_delete_request.failures=0) (object_select_requests=0) (committer_commits_created=0) (stream_write_total_data=131072) (files_copied_bytes=0) (store_io_throttled=0) (stream_read_seek_bytes_skipped=0) (op_glob_status=0) (op_openfile=0) (op_get_content_summary.failures=0) (multipart_upload_list.failures=0) (multipart_upload_part_put_bytes=0) (multipart_upload_part_put=0) (stream_read_seek_backward_operations=0) (ignored_errors=0) (op_xattr_get_named.failures=0) (op_delete.failures=0) (store_io_retry=0) (stream_write_exceptions_completing_upload=0) (stream_read_remote_stream_aborted=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (op_copy_from_local_file.failures=0) (stream_read_seek_operations=0) (committer_bytes_committed=0) (stream_read_seek_policy_changed=0) (op_xattr_get_named=0) (stream_read_vectored_read_bytes_discarded=0) (object_multipart_aborted.failures=0) (fake_directories_created=0) (audit_access_check_failure=0) (object_put_bytes=65536) (op_list_status.failures=0) (object_put_request=2) (files_delete_rejected=0) (object_multipart_initiated=0) (object_put_request_completed=2) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_close=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=1) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((object_list_request.failures.min=-1) (op_mkdirs.failures.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_put_request.failures.min=-1) (op_exists.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.min=-1) (object_delete_request.failures.min=-1) (action_http_head_request.min=8) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.failures.min=-1) (action_http_get_request.min=-1) (action_file_opened.min=-1) (op_list_files.min=-1) (op_list_files.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.failures.min=-1) (op_glob_status.failures.min=-1) (op_createfile.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_list_request.min=11) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_rename.min=-1) (op_get_content_summary.failures.min=-1) (op_copy_from_local_file.min=-1) (op_create.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_list.failures.min=-1) (op_glob_status.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.min=24) (op_get_delegation_token.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.min=-1) (store_exists_probe.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_create.min=74) (action_http_get_request.failures.min=-1) (op_xattr_get_named.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.min=111) (op_is_directory.failures.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (op_rename.failures.min=-1) (op_mkdirs.min=346) (op_abort.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_put_request.min=54) (op_list_status.failures.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.failures.min=-1));
maximums=((stream_write_queue_duration.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.max=-1) (action_http_get_request.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_commit_job.max=-1) (op_glob_status.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.max=346) (op_access.failures.max=-1) (op_exists.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.max=-1) (object_list_request.max=210) (op_abort.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_delete_request.max=-1) (op_list_files.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_head_request.max=11) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.max=27) (op_get_file_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (delegation_tokens_issued.failures.max=-1) (op_delete.max=111) (op_access.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.max=-1) (multipart_upload_list.failures.max=-1) (op_list_status.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.failures.max=-1) (op_rename.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_put_request.max=104) (op_glob_status.failures.max=-1) (action_file_opened.failures.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.max=-1) (op_list_status.failures.max=-1) (op_create.max=74) (object_list_request.failures.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_status.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.failures.max=-1) (op_get_delegation_token.failures.max=-1));
means=((op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=4, sum=253, mean=63.2500)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=2, sum=158, mean=79.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=1, sum=346, mean=346.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=1, sum=111, mean=111.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=2, sum=19, mean=9.5000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=2, sum=51, mean=25.5000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=1, sum=74, mean=74.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:14,048 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:14,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,052 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,056 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,056 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a816350f-f985-4e5f-8ca8-679638bf3212-00000011 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000011&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=37&ts=1731777614048
2024-11-16 17:20:14,072 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:20:14,073 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,074 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,076 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,076 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:14,077 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a816350f-f985-4e5f-8ca8-679638bf3212-00000011 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000011&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=37&ts=1731777614048
2024-11-16 17:20:14,087 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,087 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:14,088 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:14,088 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:14,089 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a816350f-f985-4e5f-8ca8-679638bf3212-00000011 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000011&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=37&ts=1731777614048
2024-11-16 17:20:14,111 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:14,111 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:14,112 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.025s
2024-11-16 17:20:14,112 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:14,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:14,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,114 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,114 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,115 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a816350f-f985-4e5f-8ca8-679638bf3212-00000012 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000012&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=37&ts=1731777614112
2024-11-16 17:20:14,126 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:14,126 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,128 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:14,129 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4606008943308461214.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:14,131 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4606008943308461214.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1));
maximums=((op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4606008943308461214.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,131 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:14,132 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:14,132 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4606008943308461214.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:14,132 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:14,133 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:14,133 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:14,133 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:14,134 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a816350f-f985-4e5f-8ca8-679638bf3212-00000012 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000012&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=38&ts=1731777614112
2024-11-16 17:20:14,171 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:14,172 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:14,172 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:20:14,172 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4606008943308461214.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:14,172 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4606008943308461214.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,172 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4606008943308461214.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,172 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:14,173 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:14,175 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (object_put_request.failures=0) (committer_magic_marker_put=0) (op_abort=0) (op_abort.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (object_multipart_aborted=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=38) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=38) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=38, mean=38.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:14,176 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:14,176 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:14,177 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:14,179 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:14,179 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:14,183 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:14,184 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:14,185 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:14,185 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:14,186 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:14,186 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:14,187 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:14,187 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:14,188 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:14,188 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:14,189 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='8afd8e11-59e3-4cb2-b143-fa95c1ab05a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:14,189 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='8afd8e11-59e3-4cb2-b143-fa95c1ab05a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:14,189 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='8afd8e11-59e3-4cb2-b143-fa95c1ab05a2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:14,190 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:14,190 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:14,191 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:14,192 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:14,192 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:14,193 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:14,193 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@33f17727]
2024-11-16 17:20:14,193 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@33f17727]
2024-11-16 17:20:14,193 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:14,194 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:14,195 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:14,195 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:14,195 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:14,195 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:14,195 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:14,195 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:14,196 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:14,197 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:14,197 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:14,197 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:14,201 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:14,202 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:14,202 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:14,202 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:14,203 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:14,203 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:14,203 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:14,204 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:14,204 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:14,205 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:14,205 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:20:14,205 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:14,205 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:14,206 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:14,206 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:20:14,206 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:20:14,210 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:14,210 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,210 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:14,211 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 8afd8e11-59e3-4cb2-b143-fa95c1ab05a2-00000015 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/8afd8e11-59e3-4cb2-b143-fa95c1ab05a2-00000015/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=8afd8e11-59e3-4cb2-b143-fa95c1ab05a2-00000015&t0=37&fs=8afd8e11-59e3-4cb2-b143-fa95c1ab05a2&t1=37&ts=1731777614209
2024-11-16 17:20:14,211 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:14,211 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:20:14,212 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:14,212 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:14,220 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:14,220 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:14,220 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:14,222 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=0) (stream_read_vectored_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_close_operations=1) (action_http_get_request=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations=0) (action_file_opened.failures=0) (action_file_opened=1) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0) (stream_read_total_bytes=0) (stream_read_unbuffered=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read.failures=0) (stream_read_version_mismatches=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=10) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=10) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:14,224 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:14,225 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:14,226 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:14,226 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@34f16d53[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:20:14,226 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:14,226 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics3-obs-bucket
2024-11-16 17:20:14,226 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:14,226 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@33f17727] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:14,227 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@33f17727] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:14,232 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_xattr_list=0) (op_get_file_checksum.failures=0) (op_delete=0) (stream_read_closed=0) (committer_magic_marker_put.failures=0) (op_rename=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (committer_jobs_failed=0) (stream_write_total_data=0) (stream_read_vectored_operations=0) (stream_read_operations=0) (committer_tasks_completed=0) (delegation_tokens_issued=0) (committer_jobs_completed=0) (files_copied_bytes=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (files_delete_rejected=0) (object_put_request=0) (op_is_file.failures=0) (object_list_request.failures=0) (audit_request_execution=1) (op_hsync=0) (object_multipart_initiated.failures=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload=0) (action_http_get_request=0) (stream_write_block_uploads_committed=0) (committer_commit_job.failures=0) (stream_read_operations_incomplete=0) (op_exists.failures=0) (op_copy_from_local_file=0) (stream_write_bytes=0) (op_createfile.failures=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (committer_magic_files_created=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (object_delete_request.failures=0) (op_create=0) (object_list_request=0) (committer_tasks_failed=0) (op_is_file=0) (store_io_retry=0) (ignored_errors=0) (op_get_file_checksum=0) (object_copy_requests=0) (directories_deleted=0) (committer_stage_file_upload.failures=0) (multipart_upload_list.failures=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_continue_list_request.failures=0) (op_xattr_get_map=0) (stream_read_version_mismatches=0) (op_glob_status=0) (fake_directories_created=0) (audit_access_check_failure=0) (object_bulk_delete_request=0) (audit_failure=0) (op_xattr_get_map.failures=0) (object_metadata_request=1) (files_deleted=0) (op_create.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (op_mkdirs=0) (op_openfile=0) (op_list_located_status=0) (stream_read_remote_stream_drain=0) (committer_commits_completed=0) (multipart_upload_part_put=0) (op_get_content_summary.failures=0) (object_put_bytes=0) (object_delete_request=0) (stream_read_bytes=0) (store_io_throttled=0) (stream_write_queue_duration.failures=0) (stream_read_opened=0) (op_get_content_summary=0) (stream_write_block_uploads=0) (object_put_request_completed=0) (op_list_status.failures=0) (op_is_directory.failures=0) (op_delete.failures=0) (committer_commits_created=0) (files_created=0) (stream_read_remote_stream_drain.failures=0) (object_put_request.failures=0) (committer_load_single_pending_file.failures=0) (op_hflush=0) (op_is_directory=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (store_exists_probe=0) (stream_read_seek_bytes_skipped=0) (op_xattr_list.failures=0) (store_io_request=1) (op_get_delegation_token.failures=0) (op_rename.failures=0) (multipart_upload_started=0) (op_list_files.failures=0) (stream_write_total_time=0) (op_access.failures=0) (op_list_files=0) (action_http_head_request.failures=0) (op_create_non_recursive=0) (stream_read_vectored_incoming_ranges=0) (multipart_upload_aborted=0) (stream_read_fully_operations=0) (op_get_file_status.failures=0) (stream_read_seek_operations=0) (delegation_tokens_issued.failures=0) (committer_commits_aborted=0) (stream_write_block_uploads_aborted=0) (committer_commits_reverted=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_queue_duration=0) (op_xattr_get_named_map=0) (object_bulk_delete_request.failures=0) (op_exists=0) (op_list_status=0) (action_http_head_request=1) (audit_span_creation=2) (op_open=1) (action_http_get_request.failures=0) (op_createfile=0) (object_delete_objects=0) (op_get_file_status=0) (committer_bytes_uploaded=0) (stream_read_exceptions=0) (committer_materialize_file=0) (object_continue_list_request=0) (multipart_instantiated=0) (committer_materialize_file.failures=0) (stream_read_close_operations=1) (fake_directories_deleted=0) (action_executor_acquired=0) (committer_bytes_committed=0) (committer_commit_job=0) (stream_read_seek_backward_operations=0) (multipart_upload_part_put_bytes=0) (multipart_upload_list=0) (action_file_opened=1) (stream_read_vectored_combined_ranges=0) (op_access=0) (op_xattr_get_named.failures=0) (stream_read_total_bytes=0) (op_abort=0) (op_mkdirs.failures=0) (op_get_delegation_token=0) (op_xattr_get_named_map.failures=0) (committer_commits.failures=0) (object_multipart_initiated=0) (action_file_opened.failures=0) (op_xattr_get_named=0) (object_select_requests=0) (directories_created=0) (op_glob_status.failures=0) (files_copied=0) (stream_read_remote_stream_aborted.failures=0) (committer_load_single_pending_file=0) (op_abort.failures=0) (store_exists_probe.failures=0) (op_copy_from_local_file.failures=0) (stream_read_seek_policy_changed=1));
gauges=((object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0));
minimums=((committer_stage_file_upload.failures.min=-1) (op_abort.min=-1) (action_http_head_request.min=10) (stream_read_remote_stream_aborted.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_named.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_initiated.failures.min=-1) (op_delete.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (stream_write_queue_duration.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_content_summary.failures.min=-1) (action_file_opened.min=10) (store_exists_probe.min=-1) (object_list_request.min=-1) (op_is_directory.failures.min=-1) (op_createfile.failures.min=-1) (op_exists.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_list.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.failures.min=-1) (op_get_file_status.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_commit_job.min=-1) (op_glob_status.min=-1) (op_list_status.min=-1) (object_continue_list_request.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_checksum.min=-1) (op_copy_from_local_file.min=-1) (op_exists.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_create.min=-1) (op_list_status.failures.min=-1) (op_access.min=-1) (op_get_delegation_token.failures.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_get_request.min=-1) (op_createfile.min=-1) (op_is_directory.min=-1) (op_list_files.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.min=-1) (op_xattr_list.failures.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (object_list_request.failures.min=-1) (op_create.failures.min=-1) (op_access.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (store_exists_probe.max=-1) (store_exists_probe.failures.max=-1) (op_get_delegation_token.max=-1) (op_list_files.max=-1) (op_access.failures.max=-1) (action_executor_acquired.max=-1) (object_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_file_status.failures.max=-1) (op_is_file.max=-1) (op_createfile.max=-1) (action_http_head_request.max=10) (op_get_file_checksum.max=-1) (op_get_content_summary.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.max=-1) (action_file_opened.failures.max=-1) (op_xattr_list.max=-1) (op_create.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_map.max=-1) (action_file_opened.max=10) (op_xattr_get_named_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_commit_job.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.failures.max=-1) (op_abort.max=-1) (op_copy_from_local_file.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (object_bulk_delete_request.max=-1) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_commit_job.max=-1) (object_delete_request.max=-1) (op_get_file_status.max=-1) (op_create.max=-1) (object_list_request.max=-1) (op_exists.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_file.failures.max=-1) (action_http_get_request.max=-1) (op_exists.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.max=-1) (committer_stage_file_upload.max=-1) (op_access.max=-1) (op_rename.max=-1) (op_mkdirs.max=-1) (op_mkdirs.failures.max=-1) (op_rename.failures.max=-1) (op_list_status.max=-1) (committer_materialize_file.max=-1) (object_put_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_delete.max=-1) (op_createfile.failures.max=-1) (op_abort.failures.max=-1));
means=((committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:14,233 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:14,233 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,233 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:14,234 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a816350f-f985-4e5f-8ca8-679638bf3212-00000016 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000016&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=37&ts=1731777614233
2024-11-16 17:20:14,239 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,240 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,240 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a816350f-f985-4e5f-8ca8-679638bf3212-00000016 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000016&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=37&ts=1731777614233
2024-11-16 17:20:14,252 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:14,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:14,253 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:14,253 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:14,254 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:14,254 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:14,255 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:14,255 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:14,256 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:14,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:14,257 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:14,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:14,261 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:14,262 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:14,263 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,263 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [40] a816350f-f985-4e5f-8ca8-679638bf3212-00000016 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000016&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=40&ts=1731777614233
2024-11-16 17:20:14,273 [s3a-transfer-obs-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:14,274 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:20:14,274 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:14,275 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:14,276 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:14,276 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777614165; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:14,276 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:14,277 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:14,277 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:14,278 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:14,279 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:14,279 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:14,280 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:14,280 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:14,280 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:14,280 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:14,280 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:14,280 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:14,281 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a816350f-f985-4e5f-8ca8-679638bf3212-00000016 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000016&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=41&ts=1731777614233
2024-11-16 17:20:14,294 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:20:14,295 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:20:14,295 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:20:14,296 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:14,296 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:14,297 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:14,297 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:14,297 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:14,298 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:14,299 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a816350f-f985-4e5f-8ca8-679638bf3212-00000016 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000016/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000016&t0=37&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=41&ts=1731777614233
2024-11-16 17:20:14,311 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:20:14,312 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:20:14,313 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:20:14,313 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:20:14,314 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.034s
2024-11-16 17:20:14,314 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.058s
2024-11-16 17:20:14,314 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:14,314 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:14,319 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:14,339 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_file_status=0) (object_multipart_aborted.failures=0) (op_xattr_get_map.failures=0) (op_rename.failures=0) (stream_write_block_uploads_committed=0) (stream_read_seek_bytes_discarded=0) (op_get_file_checksum=0) (files_created=2) (op_get_content_summary=0) (stream_read_unbuffered=0) (op_xattr_get_named.failures=0) (op_access=0) (committer_jobs_completed=0) (op_exists.failures=0) (stream_read_opened=0) (multipart_upload_list=0) (action_file_opened=0) (stream_write_queue_duration=0) (store_exists_probe.failures=0) (object_continue_list_request.failures=0) (op_openfile=0) (object_delete_objects=4) (stream_read_bytes_backwards_on_seek=0) (op_access.failures=0) (op_abort.failures=0) (committer_commit_job=0) (directories_deleted=0) (op_xattr_get_named=0) (stream_read_version_mismatches=0) (stream_write_total_time=0) (store_exists_probe=0) (committer_magic_marker_put.failures=0) (multipart_upload_aborted=0) (multipart_instantiated=0) (op_copy_from_local_file=0) (stream_read_vectored_incoming_ranges=0) (fake_directories_created=0) (object_multipart_aborted=0) (audit_span_creation=7) (committer_commits.failures=0) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (op_hsync=0) (stream_write_total_data=262144) (committer_bytes_uploaded=0) (op_open=0) (stream_read_seek_bytes_skipped=0) (store_io_retry=0) (stream_read_remote_stream_drain=0) (op_list_located_status=0) (action_http_get_request.failures=0) (audit_failure=0) (op_create_non_recursive=0) (object_delete_request=0) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_part_put_bytes=0) (files_deleted=2) (multipart_upload_list.failures=0) (committer_commits_completed=0) (op_is_file.failures=0) (stream_write_bytes=131072) (stream_read_vectored_combined_ranges=0) (stream_read_seek_backward_operations=0) (op_createfile.failures=0) (committer_stage_file_upload=0) (audit_access_check_failure=0) (files_copied_bytes=0) (object_put_request.failures=0) (multipart_upload_completed=0) (op_delete.failures=0) (stream_read_operations=0) (object_continue_list_request=0) (committer_magic_files_created=0) (op_get_file_status.failures=0) (multipart_upload_started=0) (committer_load_single_pending_file.failures=0) (object_put_request=4) (stream_write_exceptions_completing_upload=0) (committer_jobs_failed=0) (stream_read_close_operations=0) (stream_aborted=0) (committer_commits_reverted=0) (op_rename=0) (op_is_directory=0) (ignored_errors=0) (object_multipart_initiated.failures=0) (op_glob_status=0) (op_is_file=0) (stream_read_seek_operations=0) (object_list_request.failures=0) (delegation_tokens_issued=0) (committer_materialize_file=0) (object_bulk_delete_request=4) (multipart_upload_part_put=0) (object_list_request=8) (op_list_status=0) (op_xattr_get_named_map=0) (committer_bytes_committed=0) (action_http_get_request=0) (store_io_request=20) (stream_write_exceptions=0) (audit_request_execution=20) (op_get_content_summary.failures=0) (store_io_throttled=0) (op_mkdirs=2) (op_mkdirs.failures=0) (committer_materialize_file.failures=0) (op_xattr_list=0) (committer_tasks_failed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (directories_created=2) (object_select_requests=0) (op_is_directory.failures=0) (stream_read_seek_policy_changed=0) (op_copy_from_local_file.failures=0) (op_createfile=0) (op_create.failures=0) (op_abort=0) (stream_read_remote_stream_aborted=0) (op_list_files=0) (op_delete=2) (action_file_opened.failures=0) (action_executor_acquired=0) (op_list_status.failures=0) (object_copy_requests=0) (committer_tasks_completed=0) (op_xattr_get_map=0) (files_copied=0) (stream_read_vectored_operations=0) (op_exists=0) (stream_read_vectored_read_bytes_discarded=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_created=0) (op_xattr_get_named_map.failures=0) (stream_write_block_uploads=2) (delegation_tokens_issued.failures=0) (committer_commit_job.failures=0) (object_multipart_initiated=0) (object_put_request_completed=4) (op_list_files.failures=0) (op_get_file_checksum.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_create=2) (stream_write_block_uploads_aborted=0) (op_get_delegation_token.failures=0) (stream_read_seek_forward_operations=0) (object_bulk_delete_request.failures=0) (committer_commits_aborted=0) (action_http_head_request=4) (stream_read_bytes=0) (stream_read_bytes_discarded_in_close=0) (object_delete_request.failures=0) (committer_magic_marker_put=0) (action_http_head_request.failures=0) (op_glob_status.failures=0) (stream_read_closed=0) (object_put_bytes=131072) (fake_directories_deleted=2) (stream_read_total_bytes=0) (op_hflush=0) (stream_read_exceptions=0) (op_xattr_list.failures=0) (committer_stage_file_upload.failures=0) (stream_write_queue_duration.failures=0) (op_get_delegation_token=0) (object_metadata_request=4) (files_delete_rejected=0) (committer_load_single_pending_file=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=2) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0));
minimums=((op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (object_put_request.min=38) (op_exists.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.min=-1) (op_list_files.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_aborted.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.min=-1) (op_createfile.min=-1) (op_get_file_checksum.min=-1) (op_glob_status.failures.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.min=-1) (delegation_tokens_issued.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.min=10) (op_exists.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1) (op_delete.min=60) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_status.failures.min=-1) (action_http_head_request.min=6) (op_xattr_list.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.min=13) (object_continue_list_request.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.failures.min=-1) (object_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_create.min=16) (committer_materialize_file.failures.min=-1) (object_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_abort.min=-1) (op_is_file.min=-1) (op_get_content_summary.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.min=-1) (multipart_upload_list.failures.min=-1) (op_access.min=-1) (op_rename.min=-1) (op_mkdirs.min=64) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_access.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_create.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (op_copy_from_local_file.max=-1) (op_mkdirs.max=346) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.max=111) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.max=-1) (action_executor_acquired.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named.max=-1) (object_list_request.max=210) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (op_is_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (stream_write_queue_duration.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_delete.failures.max=-1) (op_create.failures.max=-1) (object_bulk_delete_request.max=27) (op_abort.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.max=-1) (action_file_opened.max=-1) (op_create.max=74) (op_get_file_checksum.max=-1) (object_put_request.max=104) (op_list_status.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.max=-1) (op_list_files.max=-1) (object_delete_request.max=-1) (store_exists_probe.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.max=-1) (op_rename.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_map.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.max=-1) (op_access.max=-1) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_exists.failures.max=-1) (action_http_head_request.max=11) (op_rename.max=-1) (op_xattr_get_named_map.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_list.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1));
means=((object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=4, sum=77, mean=19.2500)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=2, sum=90, mean=45.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=4, sum=35, mean=8.7500)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=2, sum=410, mean=205.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=8, sum=302, mean=37.7500)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=4, sum=218, mean=54.5000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=2, sum=171, mean=85.5000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:14,340 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:14,340 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,340 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,341 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,341 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,341 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000017 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000017&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614340
2024-11-16 17:20:14,351 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:14,351 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,351 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,351 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,352 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:14,352 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000017 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000017&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614340
2024-11-16 17:20:14,356 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,356 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:14,356 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:14,356 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:14,356 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000017 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000017&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614340
2024-11-16 17:20:14,368 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:14,369 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:14,369 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:20:14,369 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:14,370 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:14,370 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,370 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,370 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,371 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000018 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000018&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614369
2024-11-16 17:20:14,378 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:14,378 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,378 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:14,379 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2910780151191151812.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:14,380 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2910780151191151812.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_total_data=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_put_request=0) (op_hsync=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (op_hflush=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2910780151191151812.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,380 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:14,381 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:14,381 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2910780151191151812.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:14,381 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:14,382 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:14,382 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:14,382 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:14,383 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a816350f-f985-4e5f-8ca8-679638bf3212-00000018 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000018&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=43&ts=1731777614369
2024-11-16 17:20:14,429 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:14,429 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:14,429 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.048s
2024-11-16 17:20:14,434 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2910780151191151812.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:14,434 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2910780151191151812.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,435 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2910780151191151812.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,435 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:14,437 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:14,439 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (committer_magic_marker_put=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_put_request=1) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=45) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=45) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=45, mean=45.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:14,439 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:14,440 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:14,440 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,441 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:14,441 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000019 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000019/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000019&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614440
2024-11-16 17:20:14,454 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:14,455 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:14,455 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:14,455 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,457 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:14,458 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:14,458 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,458 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,466 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:20:14,473 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,471 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_vectored_operations=1) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=2) (stream_read_seek_operations=0) (stream_read_block_read=0) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_read_exceptions=0) (stream_read_total_bytes=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (action_executor_acquired=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=15) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=15) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=15, mean=15.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:14,482 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:14,482 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,483 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:14,483 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000020 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000020&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614482
2024-11-16 17:20:14,490 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:14,493 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:14,494 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:14,494 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,495 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:14,495 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:14,499 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,499 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,501 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:14,502 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:14,505 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a816350f-f985-4e5f-8ca8-679638bf3212-00000020 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000020&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=45&ts=1731777614482
2024-11-16 17:20:14,528 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.026s
2024-11-16 17:20:14,530 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:14,531 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations.failures=0) (stream_read_opened=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_unbuffered=0) (action_file_opened=1) (stream_read_close_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (stream_read_vectored_incoming_ranges=2) (action_http_get_request=1) (stream_read_seek_forward_operations=0) (stream_read_bytes=150) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_total_bytes=150) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read=0) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_exceptions=0) (stream_read_vectored_operations=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=11) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=26) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=26) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=11) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_http_get_request.mean=(samples=1, sum=26, mean=26.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:14,533 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:14,533 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,533 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:14,533 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000021 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000021&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614532
2024-11-16 17:20:14,535 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,541 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,542 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a816350f-f985-4e5f-8ca8-679638bf3212-00000021 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000021&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=42&ts=1731777614532
2024-11-16 17:20:14,550 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:14,550 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:14,550 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:14,550 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:14,550 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:14,551 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:14,551 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:14,551 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:14,551 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:14,551 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:14,551 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:14,551 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:14,551 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:14,552 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:14,552 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,552 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [46] a816350f-f985-4e5f-8ca8-679638bf3212-00000021 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000021&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=46&ts=1731777614532
2024-11-16 17:20:14,571 [s3a-transfer-obs-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:20:14,574 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.023s
2024-11-16 17:20:14,579 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:14,579 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:14,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:14,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777614424; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:14,580 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:14,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:14,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:14,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:14,594 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:14,594 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:14,595 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:14,595 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:14,595 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:14,595 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:14,595 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:14,595 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:14,596 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a816350f-f985-4e5f-8ca8-679638bf3212-00000021 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000021&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=47&ts=1731777614532
2024-11-16 17:20:14,609 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:20:14,610 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:20:14,610 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:20:14,611 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:14,611 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:14,611 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:14,611 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:14,611 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:14,611 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:14,612 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a816350f-f985-4e5f-8ca8-679638bf3212-00000021 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000021/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000021&t0=42&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=47&ts=1731777614532
2024-11-16 17:20:14,630 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:20:14,631 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.020s
2024-11-16 17:20:14,632 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.021s
2024-11-16 17:20:14,632 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.038s
2024-11-16 17:20:14,632 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:20:14,633 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.082s
2024-11-16 17:20:14,633 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:14,633 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:14,635 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:14,657 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((fake_directories_created=0) (op_list_files.failures=0) (stream_write_exceptions=0) (op_xattr_get_named.failures=0) (op_abort=0) (stream_read_seek_operations=0) (op_openfile=0) (files_delete_rejected=0) (committer_magic_marker_put.failures=0) (stream_read_seek_bytes_discarded=0) (op_get_file_checksum=0) (stream_read_seek_policy_changed=2) (object_multipart_aborted.failures=0) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_drain=0) (multipart_instantiated=0) (op_xattr_list.failures=0) (committer_commit_job=0) (op_mkdirs.failures=0) (audit_access_check_failure=0) (op_get_file_status.failures=0) (multipart_upload_started=0) (op_xattr_get_named=0) (op_get_file_status=0) (op_exists=0) (committer_tasks_failed=0) (fake_directories_deleted=3) (delegation_tokens_issued=0) (committer_bytes_committed=0) (object_list_request=12) (ignored_errors=0) (op_xattr_list=0) (object_copy_requests=0) (stream_read_operations=0) (stream_read_seek_forward_operations=0) (store_io_retry=0) (action_http_get_request=1) (multipart_upload_list=0) (op_mkdirs=3) (stream_read_vectored_incoming_ranges=4) (stream_write_block_uploads=3) (op_createfile=0) (op_list_status=0) (object_continue_list_request.failures=0) (op_get_delegation_token=0) (stream_read_seek_backward_operations=0) (files_created=3) (op_xattr_get_named_map=0) (committer_bytes_uploaded=0) (stream_read_remote_stream_aborted=0) (object_put_request=6) (stream_write_exceptions_completing_upload=0) (store_io_request=33) (files_copied=0) (op_get_delegation_token.failures=0) (op_hsync=0) (op_list_files=0) (object_multipart_aborted=0) (stream_read_vectored_combined_ranges=2) (multipart_upload_part_put_bytes=0) (op_is_file.failures=0) (action_http_head_request=8) (delegation_tokens_issued.failures=0) (committer_materialize_file=0) (stream_read_seek_bytes_skipped=0) (object_bulk_delete_request.failures=0) (stream_read_close_operations=2) (object_bulk_delete_request=6) (op_delete=3) (stream_aborted=0) (multipart_upload_part_put=0) (object_list_request.failures=0) (op_get_content_summary=0) (stream_write_bytes=196608) (committer_jobs_failed=0) (action_executor_acquired.failures=0) (multipart_upload_aborted=0) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_drain.failures=0) (store_exists_probe.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_write_queue_duration.failures=0) (stream_read_vectored_read_bytes_discarded=10) (committer_magic_files_created=0) (stream_read_vectored_operations=2) (committer_commit_job.failures=0) (op_copy_from_local_file=0) (action_http_get_request.failures=0) (object_continue_list_request=0) (op_xattr_get_map.failures=0) (op_get_file_checksum.failures=0) (committer_tasks_completed=0) (op_create_non_recursive=0) (op_list_located_status=0) (op_list_status.failures=0) (multipart_upload_abort_under_path_invoked=0) (directories_deleted=0) (store_exists_probe=0) (op_delete.failures=0) (op_is_directory=0) (object_delete_request=0) (op_rename.failures=0) (op_xattr_get_map=0) (committer_commits_created=0) (committer_commits_aborted=0) (committer_stage_file_upload=0) (audit_failure=0) (stream_write_total_data=393216) (committer_magic_marker_put=0) (object_metadata_request=8) (op_hflush=0) (action_file_opened.failures=0) (op_glob_status.failures=0) (object_multipart_initiated.failures=0) (op_get_content_summary.failures=0) (op_create=3) (op_glob_status=0) (action_executor_acquired=0) (op_exists.failures=0) (audit_span_creation=12) (stream_read_remote_stream_aborted.failures=0) (object_delete_request.failures=0) (op_access.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_http_head_request.failures=0) (action_file_opened=2) (stream_read_closed=0) (store_io_throttled=0) (committer_stage_file_upload.failures=0) (audit_request_execution=33) (committer_commits.failures=0) (stream_read_opened=0) (committer_commits_reverted=0) (committer_load_single_pending_file=0) (stream_read_fully_operations=0) (op_create.failures=0) (stream_write_total_time=0) (stream_read_total_bytes=150) (op_abort.failures=0) (op_xattr_get_named_map.failures=0) (files_deleted=3) (stream_read_version_mismatches=0) (multipart_upload_list.failures=0) (multipart_upload_completed=0) (op_rename=0) (op_open=2) (stream_read_bytes=150) (committer_jobs_completed=0) (files_copied_bytes=0) (op_is_file=0) (object_put_request.failures=0) (committer_commits_completed=0) (committer_materialize_file.failures=0) (object_put_request_completed=6) (stream_read_exceptions=0) (object_select_requests=0) (object_delete_objects=6) (op_createfile.failures=0) (stream_read_bytes_discarded_in_close=0) (directories_created=3) (op_access=0) (object_put_bytes=196608) (stream_write_queue_duration=0) (stream_read_unbuffered=0) (object_multipart_initiated=0) (op_copy_from_local_file.failures=0) (stream_write_block_uploads_aborted=0) (op_is_directory.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=3) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (object_put_bytes_pending=0));
minimums=((op_list_status.min=-1) (op_is_directory.failures.min=-1) (action_http_get_request.min=26) (op_xattr_get_named.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=13) (op_delete.min=60) (op_xattr_get_map.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_commit_job.min=-1) (action_file_opened.min=11) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_files.failures.min=-1) (op_access.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_file.failures.min=-1) (object_put_request.min=45) (op_createfile.min=-1) (op_is_directory.min=-1) (multipart_upload_list.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.min=-1) (action_executor_acquired.failures.min=-1) (op_list_status.failures.min=-1) (op_access.min=-1) (object_multipart_aborted.failures.min=-1) (op_rename.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_head_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_get_request.failures.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_glob_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.min=-1) (object_list_request.min=8) (object_delete_request.min=-1) (op_get_content_summary.min=-1) (action_file_opened.failures.min=-1) (multipart_upload_list.min=-1) (object_list_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.min=9) (op_exists.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.min=-1) (delegation_tokens_issued.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.min=29) (object_continue_list_request.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_head_request.min=4) (action_executor_acquired.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.failures.min=-1));
maximums=((object_delete_request.failures.max=-1) (op_access.max=-1) (multipart_upload_list.max=-1) (object_list_request.max=210) (store_exists_probe.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.max=-1) (object_list_request.failures.max=-1) (op_list_status.max=-1) (action_http_head_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_copy_from_local_file.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.max=-1) (op_mkdirs.max=346) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.failures.max=-1) (object_put_request.failures.max=-1) (op_exists.max=-1) (op_list_files.failures.max=-1) (op_delete.max=111) (object_multipart_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (op_access.failures.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.max=13) (op_list_status.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.max=-1) (object_put_request.max=104) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (committer_load_single_pending_file.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_content_summary.max=-1) (op_is_file.max=-1) (action_file_opened.max=15) (op_exists.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_rename.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_executor_acquired.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.max=-1) (object_delete_request.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_bulk_delete_request.max=27) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_get_file_status.max=-1) (action_http_get_request.max=26) (object_bulk_delete_request.failures.max=-1) (op_createfile.max=-1) (object_continue_list_request.max=-1) (op_create.max=74) (op_xattr_list.failures.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (stream_write_queue_duration.failures.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=26, mean=13.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=3, sum=99, mean=33.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=6, sum=275, mean=45.8333)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=3, sum=439, mean=146.3333)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=26, mean=26.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=6, sum=110, mean=18.3333)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=3, sum=253, mean=84.3333)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=8, sum=67, mean=8.3750)) (object_list_request.mean=(samples=12, sum=348, mean=29.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:14,658 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:14,658 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,658 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,658 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,658 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,659 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a816350f-f985-4e5f-8ca8-679638bf3212-00000022 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000022&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=48&ts=1731777614658
2024-11-16 17:20:14,670 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:14,670 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,670 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,670 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,670 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:14,670 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a816350f-f985-4e5f-8ca8-679638bf3212-00000022 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000022&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=48&ts=1731777614658
2024-11-16 17:20:14,676 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,677 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:14,677 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:14,677 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:14,677 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a816350f-f985-4e5f-8ca8-679638bf3212-00000022 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000022&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=48&ts=1731777614658
2024-11-16 17:20:14,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:14,715 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:14,716 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.039s
2024-11-16 17:20:14,716 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:14,722 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:14,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,724 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,724 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a816350f-f985-4e5f-8ca8-679638bf3212-00000023 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000023&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=48&ts=1731777614722
2024-11-16 17:20:14,737 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:20:14,738 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,748 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:14,750 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2881711551640805697.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:14,752 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2881711551640805697.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (op_abort=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (object_put_request=0) (op_abort.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (action_executor_acquired=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2881711551640805697.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,753 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:14,753 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:14,754 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2881711551640805697.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:14,755 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:14,755 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:14,756 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:14,757 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:14,757 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] a816350f-f985-4e5f-8ca8-679638bf3212-00000023 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000023&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=49&ts=1731777614722
2024-11-16 17:20:14,807 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:14,807 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:14,807 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.052s
2024-11-16 17:20:14,808 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2881711551640805697.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:14,808 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2881711551640805697.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,808 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2881711551640805697.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:14,808 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:14,809 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:14,810 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (op_abort.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_total_data=65536) (op_hsync=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=49));
maximums=((multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=49) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=49, mean=49.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:14,810 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:14,811 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:14,811 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:14,811 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:14,811 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a816350f-f985-4e5f-8ca8-679638bf3212-00000024 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000024&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=48&ts=1731777614811
2024-11-16 17:20:14,821 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:14,821 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:14,821 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:14,821 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,821 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:14,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:14,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,823 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,824 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:20:14,825 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,824 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_aborted=0) (action_http_get_request=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=2) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_drain=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_close_operations=0) (stream_read_seek_forward_operations=0) (stream_read_closed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (stream_read_unbuffered=1) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations=0) (action_file_opened=1) (stream_read_bytes=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=10) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=10) (action_http_get_request.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:14,826 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:20:14,827 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,827 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,827 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:14,827 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:14,827 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:14,827 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,828 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:14,829 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:14,829 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a816350f-f985-4e5f-8ca8-679638bf3212-00000024 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000024&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=51&ts=1731777614811
2024-11-16 17:20:14,849 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:20:14,851 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:14,853 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:14,854 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (stream_read_vectored_operations=2) (stream_read_vectored_read_bytes_discarded=10) (stream_read_exceptions=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations=0) (stream_read_opened=0) (stream_read_bytes=150) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=2) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read=0) (action_file_opened=1) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (stream_read_seek_backward_operations=0) (stream_read_operations=0) (stream_read_seek_policy_changed=2) (action_file_opened.failures=0) (stream_read_unbuffered=1) (action_http_get_request=1) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain=0) (stream_read_total_bytes=150) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (stream_read_block_read=0) (stream_read_closed=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=10) (action_http_get_request.min=20));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=20) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=10) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=20, mean=20.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:14,856 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:14,856 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,856 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:14,856 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a816350f-f985-4e5f-8ca8-679638bf3212-00000025 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000025&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=48&ts=1731777614856
2024-11-16 17:20:14,863 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,863 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,863 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a816350f-f985-4e5f-8ca8-679638bf3212-00000025 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000025&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=48&ts=1731777614856
2024-11-16 17:20:14,874 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:14,875 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:14,875 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:14,875 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:14,876 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:14,876 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:14,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:14,877 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:14,878 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:14,878 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:14,879 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:14,880 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:14,886 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:14,886 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:14,889 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,889 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [52] a816350f-f985-4e5f-8ca8-679638bf3212-00000025 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000025&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=52&ts=1731777614856
2024-11-16 17:20:14,899 [s3a-transfer-obs-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:14,900 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:20:14,900 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:14,900 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:14,900 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:14,900 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777614802; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:14,901 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:14,901 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:14,901 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:14,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:14,905 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:14,909 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:14,909 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:14,910 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:14,910 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:14,910 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:14,910 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:14,910 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:14,910 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a816350f-f985-4e5f-8ca8-679638bf3212-00000025 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000025&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=53&ts=1731777614856
2024-11-16 17:20:14,923 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:14,924 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a816350f-f985-4e5f-8ca8-679638bf3212-00000025 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000025/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000025&t0=48&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=53&ts=1731777614856
2024-11-16 17:20:14,939 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:20:14,940 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:20:14,940 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:20:14,940 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:20:14,941 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.036s
2024-11-16 17:20:14,941 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.063s
2024-11-16 17:20:14,941 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:14,941 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:14,946 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:14,971 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_deleted=4) (audit_access_check_failure=0) (stream_read_seek_backward_operations=0) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_map=0) (object_continue_list_request.failures=0) (audit_span_creation=16) (object_put_request_completed=8) (multipart_upload_aborted=0) (op_get_content_summary.failures=0) (op_list_files=0) (op_rename.failures=0) (stream_read_vectored_operations=4) (action_executor_acquired=0) (op_is_file.failures=0) (multipart_upload_part_put=0) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_aborted=0) (action_http_head_request=11) (op_openfile=0) (object_delete_request.failures=0) (action_executor_acquired.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_fully_operations=0) (fake_directories_deleted=4) (object_delete_objects=8) (op_access=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_discarded=0) (committer_stage_file_upload.failures=0) (committer_jobs_failed=0) (op_get_file_status.failures=0) (committer_tasks_failed=0) (stream_write_bytes=262144) (op_exists=0) (stream_read_operations_incomplete=0) (op_createfile.failures=0) (op_exists.failures=0) (stream_write_total_data=524288) (op_abort.failures=0) (multipart_instantiated=0) (op_xattr_get_map.failures=0) (committer_commit_job.failures=0) (op_is_file=0) (store_exists_probe.failures=0) (op_get_file_status=0) (committer_jobs_completed=0) (op_is_directory.failures=0) (op_mkdirs.failures=0) (stream_read_opened=0) (stream_write_total_time=0) (action_http_head_request.failures=0) (object_multipart_initiated.failures=0) (files_copied=0) (committer_commits_reverted=0) (files_delete_rejected=0) (op_rename=0) (store_io_retry=0) (stream_read_version_mismatches=0) (committer_magic_marker_put.failures=0) (committer_bytes_uploaded=0) (object_bulk_delete_request=8) (action_http_get_request=2) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads_committed=0) (op_xattr_list=0) (object_select_requests=0) (object_put_bytes=262144) (op_list_status.failures=0) (stream_read_seek_bytes_skipped=0) (op_list_files.failures=0) (object_put_request.failures=0) (op_hsync=0) (multipart_upload_list.failures=0) (audit_request_execution=45) (delegation_tokens_issued=0) (directories_deleted=0) (ignored_errors=0) (object_list_request.failures=0) (committer_tasks_completed=0) (committer_magic_files_created=0) (object_delete_request=0) (action_file_opened.failures=0) (object_continue_list_request=0) (committer_commits_created=0) (op_glob_status.failures=0) (stream_read_bytes_discarded_in_close=0) (op_xattr_get_named_map=0) (op_get_delegation_token=0) (committer_commit_job=0) (stream_read_unbuffered=1) (object_multipart_aborted.failures=0) (op_xattr_get_named.failures=0) (delegation_tokens_issued.failures=0) (multipart_upload_completed=0) (action_http_get_request.failures=0) (stream_read_total_bytes=300) (op_xattr_get_named_map.failures=0) (op_access.failures=0) (op_createfile=0) (op_hflush=0) (multipart_upload_part_put_bytes=0) (committer_materialize_file=0) (stream_read_closed=0) (op_list_located_status=0) (action_file_opened=3) (audit_failure=0) (op_glob_status=0) (stream_read_operations=0) (files_copied_bytes=0) (object_multipart_aborted=0) (files_created=4) (stream_read_vectored_read_bytes_discarded=20) (stream_read_bytes_backwards_on_seek=0) (store_io_throttled=0) (op_is_directory=0) (stream_write_queue_duration=0) (fake_directories_created=0) (store_io_request=45) (op_abort=0) (multipart_upload_list=0) (stream_read_seek_policy_changed=4) (op_create_non_recursive=0) (stream_write_block_uploads=4) (stream_write_queue_duration.failures=0) (stream_read_remote_stream_drain=0) (committer_commits_aborted=0) (committer_stage_file_upload=0) (op_xattr_get_named=0) (committer_commits_completed=0) (op_xattr_list.failures=0) (op_list_status=0) (stream_read_seek_operations=0) (committer_commits.failures=0) (op_open=3) (store_exists_probe=0) (op_get_file_checksum=0) (op_get_content_summary=0) (object_metadata_request=11) (object_bulk_delete_request.failures=0) (committer_magic_marker_put=0) (committer_bytes_committed=0) (object_copy_requests=0) (committer_load_single_pending_file=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=4) (op_mkdirs=4) (stream_read_bytes=300) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (op_create=4) (object_list_request=16) (directories_created=4) (stream_write_exceptions=0) (multipart_upload_started=0) (op_create.failures=0) (object_put_request=8) (stream_write_exceptions_completing_upload=0) (op_delete=4) (object_multipart_initiated=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (op_get_delegation_token.failures=0) (op_delete.failures=0) (op_copy_from_local_file=0) (op_get_file_checksum.failures=0) (stream_read_close_operations=3) (stream_read_vectored_incoming_ranges=8));
gauges=((stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=4) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((stream_write_queue_duration.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.min=-1) (op_delete.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_status.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.min=-1) (committer_materialize_file.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.min=-1) (op_access.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_map.failures.min=-1) (op_create.failures.min=-1) (op_create.min=9) (op_is_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=13) (op_get_delegation_token.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=49) (op_xattr_get_named.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_delegation_token.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_continue_list_request.min=-1) (committer_stage_file_upload.min=-1) (op_abort.min=-1) (action_http_get_request.min=20) (op_access.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_delete.min=60) (op_get_file_status.min=-1) (op_copy_from_local_file.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.min=10) (op_rename.failures.min=-1) (object_list_request.min=8) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_createfile.failures.min=-1) (object_delete_request.min=-1) (op_get_file_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_exists.min=-1) (action_http_head_request.min=4) (op_mkdirs.min=29) (committer_commit_job.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.max=-1) (object_list_request.max=210) (op_list_status.max=-1) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.max=13) (op_list_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_exists.failures.max=-1) (op_is_file.failures.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_rename.failures.max=-1) (op_get_content_summary.max=-1) (committer_stage_file_upload.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_delegation_token.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_get_request.max=26) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (object_put_request.failures.max=-1) (op_is_file.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_glob_status.failures.max=-1) (op_list_files.max=-1) (op_get_file_status.max=-1) (op_exists.max=-1) (op_xattr_list.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.max=15) (object_bulk_delete_request.max=27) (op_create.max=74) (op_delete.max=111) (object_put_request.max=104) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_get_request.failures.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.max=-1) (committer_materialize_file.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_mkdirs.max=346) (op_rename.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (op_xattr_list.failures.max=-1) (delegation_tokens_issued.max=-1) (op_access.max=-1));
means=((object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=11, sum=90, mean=8.1818)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=4, sum=318, mean=79.5000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=8, sum=138, mean=17.2500)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=16, sum=393, mean=24.5625)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=36, mean=12.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=8, sum=361, mean=45.1250)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=4, sum=127, mean=31.7500)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=46, mean=23.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=4, sum=502, mean=125.5000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:14,971 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:14,971 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,971 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,972 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:14,972 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:14,972 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a816350f-f985-4e5f-8ca8-679638bf3212-00000026 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000026&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=54&ts=1731777614971
2024-11-16 17:20:14,981 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:14,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:14,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:14,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:14,982 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a816350f-f985-4e5f-8ca8-679638bf3212-00000026 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000026&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=54&ts=1731777614971
2024-11-16 17:20:14,987 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:14,987 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:14,987 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:14,987 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:14,988 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a816350f-f985-4e5f-8ca8-679638bf3212-00000026 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000026&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=54&ts=1731777614971
2024-11-16 17:20:15,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:15,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:15,011 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:20:15,012 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:15,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:15,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,013 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,013 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a816350f-f985-4e5f-8ca8-679638bf3212-00000027 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000027&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=54&ts=1731777615012
2024-11-16 17:20:15,029 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:20:15,030 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,031 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:15,032 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6753417652456639220.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:15,035 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6753417652456639220.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (op_abort=0) (stream_write_total_data=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_hsync=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (op_abort.failures=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (op_hflush=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6753417652456639220.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,035 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,036 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:15,036 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6753417652456639220.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:15,037 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:15,038 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:15,039 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:15,039 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:15,040 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] a816350f-f985-4e5f-8ca8-679638bf3212-00000027 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000027&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=55&ts=1731777615012
2024-11-16 17:20:15,080 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:15,080 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:15,081 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:20:15,081 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6753417652456639220.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:15,081 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6753417652456639220.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,081 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6753417652456639220.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,081 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:15,082 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,083 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (object_multipart_aborted=0) (multipart_upload_completed=0) (op_abort=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (op_hsync=0) (object_multipart_initiated.failures=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (stream_write_total_time=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=39) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=39) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=39, mean=39.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:15,083 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:15,083 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:15,083 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:15,085 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:15,085 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:15,089 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:15,089 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:15,089 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:15,090 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:15,090 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:15,090 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:15,091 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:15,091 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:15,091 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:15,091 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:15,092 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='0a94e814-773e-447d-84f8-be0ec5b6465a', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:15,092 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='0a94e814-773e-447d-84f8-be0ec5b6465a', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:15,092 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='0a94e814-773e-447d-84f8-be0ec5b6465a', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:15,093 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:15,093 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:15,093 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:15,093 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:15,094 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:15,094 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:15,094 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@451b23d5]
2024-11-16 17:20:15,094 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@451b23d5]
2024-11-16 17:20:15,094 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:15,095 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:15,095 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:15,095 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:15,095 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:15,095 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:15,096 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:15,096 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:15,096 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:15,096 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:15,096 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:15,096 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:15,099 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:15,099 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:15,099 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:15,099 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:15,099 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:15,099 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:15,100 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:15,100 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:15,100 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:15,100 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:15,100 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:20:15,100 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:15,100 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:15,101 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:15,101 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:20:15,101 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:20:15,102 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:15,102 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,102 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:15,102 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 0a94e814-773e-447d-84f8-be0ec5b6465a-00000030 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/0a94e814-773e-447d-84f8-be0ec5b6465a-00000030/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=0a94e814-773e-447d-84f8-be0ec5b6465a-00000030&t0=54&fs=0a94e814-773e-447d-84f8-be0ec5b6465a&t1=54&ts=1731777615101
2024-11-16 17:20:15,102 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:15,103 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:20:15,103 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:15,103 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:15,110 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:15,113 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777615000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:15,115 [s3a-transfer-obs-bucket-unbounded-pool9-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:15,116 [s3a-transfer-obs-bucket-unbounded-pool9-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,116 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:15,116 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:15,116 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:15,117 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:15,117 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:15,117 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:15,117 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:15,118 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,119 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,119 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:15,119 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [58] 0a94e814-773e-447d-84f8-be0ec5b6465a-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/0a94e814-773e-447d-84f8-be0ec5b6465a-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-1099&id=0a94e814-773e-447d-84f8-be0ec5b6465a-00000031&t0=57&fs=0a94e814-773e-447d-84f8-be0ec5b6465a&t1=58&ts=1731777615115
2024-11-16 17:20:15,123 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:15,125 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,126 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,126 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:15,127 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [59] 0a94e814-773e-447d-84f8-be0ec5b6465a-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/0a94e814-773e-447d-84f8-be0ec5b6465a-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-1099&id=0a94e814-773e-447d-84f8-be0ec5b6465a-00000031&t0=57&fs=0a94e814-773e-447d-84f8-be0ec5b6465a&t1=59&ts=1731777615115
2024-11-16 17:20:15,144 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.024s
2024-11-16 17:20:15,144 [s3a-transfer-obs-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,145 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:20:15,146 [s3a-transfer-obs-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,151 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=0) (action_http_get_request=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_vectored_operations=2) (stream_read_total_bytes=2000) (stream_read_vectored_combined_ranges=2) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_seek_policy_changed=1) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=4) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_opened=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=2000) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (action_http_get_request.failures=0) (stream_read_block_read.failures=0) (stream_read_close_operations=1) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=19) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((action_executor_acquired.max=-1) (action_http_get_request.max=25) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=44, mean=22.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:15,153 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:15,158 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:15,159 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:15,159 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@7f7c0a68[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:20:15,159 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:15,159 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics4-obs-bucket
2024-11-16 17:20:15,159 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:15,159 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@451b23d5] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:15,159 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@451b23d5] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:15,162 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((object_select_requests=0) (committer_magic_marker_put.failures=0) (action_http_get_request=2) (stream_write_block_uploads_committed=0) (op_hsync=0) (object_bulk_delete_request.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_write_total_data=0) (files_created=0) (committer_load_single_pending_file.failures=0) (object_continue_list_request.failures=0) (committer_commit_job.failures=0) (audit_request_execution=3) (committer_bytes_committed=0) (op_is_directory=0) (object_put_request_completed=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_write_bytes=0) (op_openfile=0) (op_create.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_opened=0) (multipart_upload_list=0) (multipart_upload_part_put=0) (committer_stage_file_upload=0) (op_create=0) (committer_jobs_completed=0) (stream_read_unbuffered=0) (op_glob_status.failures=0) (op_createfile.failures=0) (fake_directories_deleted=0) (op_xattr_get_map=0) (multipart_instantiated=0) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired.failures=0) (op_xattr_get_named.failures=0) (op_abort=0) (action_http_get_request.failures=0) (action_http_head_request.failures=0) (op_list_files=0) (committer_bytes_uploaded=0) (op_is_file=0) (object_put_request=0) (op_xattr_list.failures=0) (action_file_opened=1) (committer_jobs_failed=0) (committer_magic_files_created=0) (fake_directories_created=0) (files_copied_bytes=0) (multipart_upload_abort_under_path_invoked=0) (op_exists=0) (stream_read_vectored_operations=2) (stream_read_bytes=2000) (op_get_file_status=1) (ignored_errors=0) (multipart_upload_part_put_bytes=0) (multipart_upload_aborted=0) (stream_read_close_operations=1) (object_delete_request.failures=0) (files_deleted=0) (stream_read_fully_operations=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe=0) (object_multipart_aborted=0) (files_copied=0) (op_copy_from_local_file.failures=0) (multipart_upload_started=0) (op_delete.failures=0) (stream_write_queue_duration=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_completed=0) (op_glob_status=0) (audit_access_check_failure=0) (committer_materialize_file=0) (object_bulk_delete_request=0) (committer_commits.failures=0) (store_exists_probe.failures=0) (action_file_opened.failures=0) (committer_commits_completed=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named_map=0) (object_put_bytes=0) (op_access.failures=0) (op_get_file_status.failures=0) (object_copy_requests=0) (stream_read_seek_forward_operations=0) (op_xattr_get_map.failures=0) (committer_commits_created=0) (op_is_directory.failures=0) (op_get_content_summary.failures=0) (action_http_head_request=1) (object_list_request=0) (committer_load_single_pending_file=0) (delegation_tokens_issued=0) (committer_commits_aborted=0) (op_mkdirs=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (audit_failure=0) (files_delete_rejected=0) (stream_read_exceptions=0) (op_xattr_get_named=0) (committer_materialize_file.failures=0) (op_is_file.failures=0) (stream_read_vectored_incoming_ranges=4) (store_io_request=3) (op_open=1) (object_multipart_initiated=0) (object_delete_objects=0) (op_get_file_checksum=0) (stream_write_total_time=0) (stream_write_queue_duration.failures=0) (op_abort.failures=0) (op_create_non_recursive=0) (op_list_files.failures=0) (stream_write_exceptions=0) (op_list_located_status=0) (op_mkdirs.failures=0) (stream_read_total_bytes=2000) (op_createfile=0) (object_list_request.failures=0) (directories_created=0) (object_metadata_request=1) (op_delete=0) (stream_read_vectored_combined_ranges=2) (store_io_throttled=0) (object_multipart_initiated.failures=0) (op_exists.failures=0) (stream_read_remote_stream_drain=0) (op_get_content_summary=0) (stream_read_seek_policy_changed=1) (committer_commit_job=0) (op_list_status=0) (directories_deleted=0) (stream_write_block_uploads=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_exceptions_completing_upload=0) (stream_read_version_mismatches=0) (op_xattr_list=0) (op_rename=0) (delegation_tokens_issued.failures=0) (committer_tasks_completed=0) (multipart_upload_list.failures=0) (stream_aborted=0) (store_io_retry=0) (object_delete_request=0) (op_get_file_checksum.failures=0) (op_rename.failures=0) (committer_commits_reverted=0) (committer_tasks_failed=0) (committer_magic_marker_put=0) (op_list_status.failures=0) (op_hflush=0) (stream_write_block_uploads_aborted=0) (committer_stage_file_upload.failures=0) (object_put_request.failures=0) (audit_span_creation=3) (stream_read_vectored_read_bytes_discarded=0) (op_get_delegation_token.failures=0) (stream_read_closed=0) (op_copy_from_local_file=0) (op_get_delegation_token=0) (stream_read_seek_operations=0) (op_access=0) (object_multipart_aborted.failures=0) (object_continue_list_request=0));
gauges=((stream_write_block_uploads_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((store_exists_probe.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_glob_status.min=-1) (op_create.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.min=8) (object_delete_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=-1) (committer_commit_job.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_exists.failures.min=-1) (op_get_delegation_token.min=-1) (op_delete.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.min=9) (object_put_request.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_files.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (op_mkdirs.min=-1) (action_http_get_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_file_opened.min=0) (object_put_request.min=-1) (op_access.failures.min=-1) (op_list_status.min=-1) (op_create.failures.min=-1) (op_get_content_summary.min=-1) (op_access.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (op_abort.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (store_exists_probe.min=-1) (op_abort.failures.min=-1) (object_delete_request.min=-1) (object_continue_list_request.min=-1) (delegation_tokens_issued.failures.min=-1) (delegation_tokens_issued.min=-1) (op_list_status.failures.min=-1) (op_rename.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.min=-1) (committer_materialize_file.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=19) (op_glob_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((stream_write_queue_duration.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.max=-1) (op_list_files.max=-1) (action_http_head_request.max=8) (object_multipart_aborted.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_access.failures.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.failures.max=-1) (committer_commit_job.max=-1) (op_rename.max=-1) (action_executor_acquired.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_createfile.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.max=-1) (action_file_opened.max=0) (op_xattr_get_map.failures.max=-1) (op_delete.max=-1) (op_mkdirs.max=-1) (object_bulk_delete_request.max=-1) (op_xattr_list.max=-1) (op_create.failures.max=-1) (object_put_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_status.failures.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.max=-1) (action_http_get_request.max=25) (committer_stage_file_upload.max=-1) (op_list_files.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (op_access.max=-1) (op_abort.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_status.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_list.max=-1) (op_get_file_status.max=9) (op_create.max=-1) (object_multipart_aborted.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=-1) (object_continue_list_request.failures.max=-1) (op_exists.max=-1) (op_glob_status.failures.max=-1) (object_put_request.max=-1) (op_is_directory.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_rename.failures.max=-1));
means=((op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=9, mean=9.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=44, mean=22.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=8, mean=8.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:15,163 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:15,163 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,163 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:15,164 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a816350f-f985-4e5f-8ca8-679638bf3212-00000032 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000032&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=54&ts=1731777615162
2024-11-16 17:20:15,182 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,182 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,182 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a816350f-f985-4e5f-8ca8-679638bf3212-00000032 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000032&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=54&ts=1731777615162
2024-11-16 17:20:15,193 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:15,194 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:15,194 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:15,194 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:15,194 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:15,194 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:15,195 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:15,195 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:15,195 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:15,195 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:15,195 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:15,195 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:15,196 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:15,196 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:15,196 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,197 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [62] a816350f-f985-4e5f-8ca8-679638bf3212-00000032 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000032&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=62&ts=1731777615162
2024-11-16 17:20:15,208 [s3a-transfer-obs-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:15,208 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:20:15,209 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:15,209 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:15,209 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:15,209 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777615075; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:15,209 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:15,209 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:15,209 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:15,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:15,210 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:15,211 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a816350f-f985-4e5f-8ca8-679638bf3212-00000032 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000032&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=63&ts=1731777615162
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:15,227 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:15,228 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a816350f-f985-4e5f-8ca8-679638bf3212-00000032 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000032/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000032&t0=54&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=63&ts=1731777615162
2024-11-16 17:20:15,236 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:15,236 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:15,236 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:20:15,236 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:20:15,237 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:20:15,238 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:20:15,238 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:15,238 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:15,239 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:15,259 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 5, active threads = 0, queued tasks = 0, completed tasks = 5], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_objects=10) (op_get_delegation_token=0) (committer_stage_file_upload=0) (action_file_opened=3) (op_delete=5) (op_createfile.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_magic_marker_put.failures=0) (op_glob_status=0) (object_list_request=20) (op_xattr_get_named_map=0) (committer_commits_completed=0) (stream_read_total_bytes=300) (stream_read_vectored_combined_ranges=4) (op_delete.failures=0) (files_copied=0) (stream_write_queue_duration.failures=0) (object_bulk_delete_request=10) (committer_load_single_pending_file=0) (stream_read_remote_stream_aborted=0) (committer_commit_job.failures=0) (stream_write_block_uploads=5) (op_hflush=0) (stream_read_seek_policy_changed=4) (stream_read_exceptions=0) (object_put_request=10) (committer_materialize_file=0) (delegation_tokens_issued.failures=0) (multipart_upload_completed=0) (op_get_file_status.failures=0) (committer_bytes_committed=0) (committer_commits_aborted=0) (fake_directories_created=0) (op_glob_status.failures=0) (op_hsync=0) (stream_read_operations=0) (object_put_bytes=327680) (committer_materialize_file.failures=0) (op_get_file_status=0) (op_get_file_checksum=0) (files_deleted=5) (op_rename.failures=0) (op_abort=0) (action_http_head_request=13) (stream_read_version_mismatches=0) (op_get_content_summary.failures=0) (stream_read_closed=0) (stream_write_total_data=655360) (stream_write_total_time=0) (object_continue_list_request.failures=0) (stream_read_bytes_discarded_in_close=0) (committer_tasks_failed=0) (stream_read_operations_incomplete=0) (committer_tasks_completed=0) (op_xattr_get_named.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_instantiated=0) (object_delete_request=0) (object_multipart_initiated.failures=0) (committer_commits_created=0) (object_bulk_delete_request.failures=0) (committer_magic_files_created=0) (audit_span_creation=19) (object_put_request.failures=0) (stream_read_bytes=300) (directories_deleted=0) (op_open=3) (files_created=5) (op_get_delegation_token.failures=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (multipart_upload_started=0) (object_multipart_aborted.failures=0) (object_copy_requests=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_exceptions_completing_upload=0) (op_mkdirs=5) (stream_read_remote_stream_aborted.failures=0) (committer_commits.failures=0) (object_continue_list_request=0) (object_multipart_initiated=0) (stream_read_fully_operations=0) (stream_read_opened=0) (object_metadata_request=13) (fake_directories_deleted=5) (directories_created=5) (op_is_directory.failures=0) (store_io_request=55) (committer_load_single_pending_file.failures=0) (stream_write_bytes=327680) (op_get_file_checksum.failures=0) (object_multipart_aborted=0) (op_access.failures=0) (stream_read_seek_backward_operations=0) (op_is_file=0) (committer_stage_file_upload.failures=0) (multipart_upload_part_put=0) (action_http_head_request.failures=0) (stream_write_exceptions=0) (object_select_requests=0) (audit_access_check_failure=0) (stream_write_block_uploads_committed=0) (op_create_non_recursive=0) (op_list_located_status=0) (op_list_files=0) (multipart_upload_list=0) (op_create.failures=0) (multipart_upload_list.failures=0) (op_copy_from_local_file=0) (files_copied_bytes=0) (committer_commit_job=0) (op_get_content_summary=0) (action_file_opened.failures=0) (op_exists.failures=0) (store_io_retry=0) (stream_read_vectored_read_bytes_discarded=20) (store_exists_probe=0) (object_delete_request.failures=0) (op_create=5) (stream_write_block_uploads_aborted=0) (op_createfile=0) (op_xattr_get_map.failures=0) (op_is_file.failures=0) (stream_read_vectored_operations=4) (delegation_tokens_issued=0) (op_rename=0) (committer_jobs_failed=0) (op_openfile=0) (op_copy_from_local_file.failures=0) (audit_request_execution=55) (stream_read_seek_forward_operations=0) (op_abort.failures=0) (files_delete_rejected=0) (audit_failure=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request=2) (op_xattr_list.failures=0) (op_list_files.failures=0) (committer_magic_marker_put=0) (stream_read_unbuffered=1) (op_exists=0) (op_xattr_get_map=0) (store_io_throttled=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (committer_bytes_uploaded=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (op_xattr_get_named=0) (op_list_status=0) (stream_read_remote_stream_drain=0) (op_xattr_list=0) (multipart_upload_aborted=0) (op_access=0) (stream_write_queue_duration=0) (op_mkdirs.failures=0) (committer_commits_reverted=0) (multipart_upload_part_put_bytes=0) (op_is_directory=0) (ignored_errors=0) (op_xattr_get_named_map.failures=0) (stream_read_close_operations=3) (stream_read_vectored_incoming_ranges=8) (object_list_request.failures=0) (committer_jobs_completed=0) (op_list_status.failures=0) (object_put_request_completed=10) (store_exists_probe.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=5) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((object_bulk_delete_request.min=8) (action_http_head_request.failures.min=-1) (op_is_file.failures.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_list.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=39) (op_is_directory.failures.min=-1) (op_get_file_status.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_abort.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.failures.min=-1) (op_list_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (object_delete_request.min=-1) (action_http_head_request.min=4) (op_abort.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.min=-1) (op_list_files.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.min=9) (object_delete_request.failures.min=-1) (op_mkdirs.min=29) (op_copy_from_local_file.failures.min=-1) (op_create.failures.min=-1) (op_access.failures.min=-1) (op_mkdirs.failures.min=-1) (op_rename.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_commit_job.min=-1) (committer_commit_job.failures.min=-1) (action_file_opened.failures.min=-1) (op_rename.min=-1) (object_continue_list_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_createfile.min=-1) (op_createfile.failures.min=-1) (op_exists.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_get_request.min=20) (op_glob_status.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_map.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (action_file_opened.min=10) (delegation_tokens_issued.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.min=-1) (action_executor_acquired.min=-1) (op_exists.min=-1) (object_list_request.min=8) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (store_exists_probe.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_xattr_get_named.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_status.min=-1) (op_delete.min=44) (committer_load_single_pending_file.min=-1) (op_xattr_list.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (object_list_request.max=210) (op_mkdirs.max=346) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_access.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_commit_job.max=-1) (object_continue_list_request.failures.max=-1) (op_create.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.max=-1) (op_access.failures.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.failures.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.failures.max=-1) (op_rename.failures.max=-1) (op_glob_status.max=-1) (op_get_file_status.max=-1) (op_xattr_get_named_map.max=-1) (object_bulk_delete_request.max=27) (action_http_head_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_is_file.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.max=-1) (action_executor_acquired.max=-1) (op_get_delegation_token.max=-1) (op_is_directory.max=-1) (op_createfile.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_exists.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_files.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (action_http_head_request.max=19) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.max=-1) (op_delete.max=111) (op_is_directory.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_http_get_request.max=26) (stream_read_remote_stream_aborted.max=-1) (op_list_status.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.failures.max=-1) (object_continue_list_request.max=-1) (stream_write_queue_duration.max=-1) (action_file_opened.max=15) (op_copy_from_local_file.failures.max=-1) (op_create.max=74) (delegation_tokens_issued.max=-1) (op_get_content_summary.max=-1) (committer_load_single_pending_file.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.max=-1) (object_put_request.max=104) (committer_materialize_file.max=-1) (multipart_upload_list.failures.max=-1));
means=((committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=5, sum=362, mean=72.4000)) (object_list_request.mean=(samples=20, sum=440, mean=22.0000)) (action_http_get_request.mean=(samples=2, sum=46, mean=23.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=10, sum=162, mean=16.2000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=10, sum=423, mean=42.3000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=5, sum=148, mean=29.6000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=5, sum=543, mean=108.6000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=13, sum=114, mean=8.7692)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=36, mean=12.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:15,260 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:15,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:15,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,261 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,261 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a816350f-f985-4e5f-8ca8-679638bf3212-00000033 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000033&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=64&ts=1731777615260
2024-11-16 17:20:15,269 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:15,269 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:15,270 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:15,270 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,270 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:15,270 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a816350f-f985-4e5f-8ca8-679638bf3212-00000033 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000033&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=64&ts=1731777615260
2024-11-16 17:20:15,275 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:15,276 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:15,276 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:15,276 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:15,276 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a816350f-f985-4e5f-8ca8-679638bf3212-00000033 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000033&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=64&ts=1731777615260
2024-11-16 17:20:15,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:15,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:15,298 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.022s
2024-11-16 17:20:15,298 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:15,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:15,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,299 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,299 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a816350f-f985-4e5f-8ca8-679638bf3212-00000034 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000034&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=64&ts=1731777615299
2024-11-16 17:20:15,306 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:15,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,307 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:15,307 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18419548104169794544.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:15,308 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18419548104169794544.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (stream_write_total_data=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (op_abort=0) (multipart_upload_completed=0) (op_hsync=0) (multipart_upload_part_put=0) (object_put_request=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18419548104169794544.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,309 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,309 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:15,309 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18419548104169794544.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:15,309 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:15,309 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:15,310 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:15,310 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:15,310 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a816350f-f985-4e5f-8ca8-679638bf3212-00000034 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000034&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=65&ts=1731777615299
2024-11-16 17:20:15,369 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:15,369 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:15,369 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.060s
2024-11-16 17:20:15,369 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18419548104169794544.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:15,369 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18419548104169794544.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,369 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18419548104169794544.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,369 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:15,370 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,371 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (stream_write_block_uploads=1) (stream_write_exceptions=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (op_hflush=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (stream_write_total_data=65536) (object_put_request.failures=0) (op_hsync=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=59) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=59) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=59, mean=59.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:15,371 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:15,371 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:15,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:15,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:15,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:15,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:15,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:15,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:15,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:15,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:15,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:15,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:15,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:15,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:15,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:15,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='dc8c830e-f36a-41c2-b512-4643099723e0', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:15,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='dc8c830e-f36a-41c2-b512-4643099723e0', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:15,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dc8c830e-f36a-41c2-b512-4643099723e0', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:15,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:15,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:15,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:15,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:15,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:15,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:15,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1134b0ae]
2024-11-16 17:20:15,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1134b0ae]
2024-11-16 17:20:15,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:15,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:15,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:15,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:15,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:15,381 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:15,381 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:15,381 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:15,381 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:15,381 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:15,384 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:15,384 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:15,386 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:15,386 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:15,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:15,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:15,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:20:15,388 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:20:15,389 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:15,389 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,389 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:15,390 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dc8c830e-f36a-41c2-b512-4643099723e0-00000037 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/dc8c830e-f36a-41c2-b512-4643099723e0-00000037/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000037&t0=64&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=64&ts=1731777615389
2024-11-16 17:20:15,390 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:15,390 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:20:15,390 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:15,390 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:15,399 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:15,399 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777615000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:15,401 [s3a-transfer-obs-bucket-unbounded-pool11-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:15,402 [s3a-transfer-obs-bucket-unbounded-pool11-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,402 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:15,402 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:15,402 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:20:15,402 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,403 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,403 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:15,403 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [68] dc8c830e-f36a-41c2-b512-4643099723e0-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000038&t0=67&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=68&ts=1731777615401
2024-11-16 17:20:15,404 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,405 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,405 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:15,406 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [69] dc8c830e-f36a-41c2-b512-4643099723e0-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-14435&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000038&t0=67&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=69&ts=1731777615401
2024-11-16 17:20:15,409 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:15,410 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,410 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,410 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:15,410 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [71] dc8c830e-f36a-41c2-b512-4643099723e0-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000038&t0=67&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=71&ts=1731777615401
2024-11-16 17:20:15,433 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.023s
2024-11-16 17:20:15,433 [s3a-transfer-obs-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,434 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.029s
2024-11-16 17:20:15,436 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:20:15,436 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:20:15,436 [s3a-transfer-obs-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,437 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.034s
2024-11-16 17:20:15,437 [s3a-transfer-obs-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,440 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=23));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=34));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=86, mean=28.6667)));

2024-11-16 17:20:15,441 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_close_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (stream_read_vectored_combined_ranges=3) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0) (action_file_opened=1) (stream_read_total_bytes=1424) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (stream_read_vectored_incoming_ranges=5) (action_http_get_request=3) (stream_read_bytes=1424) (stream_read_operations=0) (stream_read_block_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=23) (action_executor_acquired.failures.min=-1) (action_file_opened.min=0) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=34) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=0) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=86, mean=28.6667)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:15,443 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777615000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:15,444 [s3a-transfer-obs-bucket-unbounded-pool11-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:15,444 [s3a-transfer-obs-bucket-unbounded-pool11-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,446 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:15,447 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:20:15,447 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,447 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dc8c830e-f36a-41c2-b512-4643099723e0-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=10240-65535&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000039&t0=74&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=64&ts=1731777615444
2024-11-16 17:20:15,466 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.020s
2024-11-16 17:20:15,468 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:15,468 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:15,468 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:15,468 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:20:15,469 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:15,470 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:20:15,470 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,471 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://obs-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:20:15,472 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:20:15,472 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,473 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dc8c830e-f36a-41c2-b512-4643099723e0-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-8291&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000039&t0=74&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=64&ts=1731777615444
2024-11-16 17:20:15,490 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.022s
2024-11-16 17:20:15,491 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:15,492 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:20:15,492 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:15,492 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:15,493 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:20:15,493 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:15,494 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:20:15,494 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,495 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dc8c830e-f36a-41c2-b512-4643099723e0-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=14336-14435&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000039&t0=74&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=64&ts=1731777615444
2024-11-16 17:20:15,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.021s
2024-11-16 17:20:15,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:15,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:15,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:15,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:15,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:20:15,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:15,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:20:15,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dc8c830e-f36a-41c2-b512-4643099723e0-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000039&t0=74&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=64&ts=1731777615444
2024-11-16 17:20:15,536 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.023s
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:20:15,537 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,538 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] dc8c830e-f36a-41c2-b512-4643099723e0-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/dc8c830e-f36a-41c2-b512-4643099723e0-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=dc8c830e-f36a-41c2-b512-4643099723e0-00000039&t0=74&fs=dc8c830e-f36a-41c2-b512-4643099723e0&t1=64&ts=1731777615444
2024-11-16 17:20:15,550 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.013s
2024-11-16 17:20:15,551 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:15,551 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:15,553 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=13)
(stream_read_remote_stream_aborted.min=3)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=22)
(stream_read_remote_stream_aborted.max=3)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=90, mean=18.0000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=1, mean=0.3333)));

2024-11-16 17:20:15,553 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:15,553 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:20:15,553 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:15,554 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=5) (stream_read_bytes_discarded_in_abort=55196) (stream_read_operations_incomplete=0) (stream_read_block_read=0) (stream_read_opened=5) (stream_read_vectored_combined_ranges=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=44957) (stream_read_prefetch_operations=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (action_file_opened.failures=0) (stream_aborted=1) (stream_read_seek_policy_changed=2) (stream_read_version_mismatches=0) (action_http_get_request=5) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=1) (stream_read_closed=4) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=2) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=1424) (stream_read_total_bytes=1424) (stream_read_fully_operations=5) (stream_read_vectored_read_bytes_discarded=0) (stream_read_unbuffered=0) (action_file_opened=1) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=14637) (stream_read_seek_backward_operations=2) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_drain=4) (stream_read_seek_operations=4));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=0) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=13) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=3) (stream_read_remote_stream_drain.min=0) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=3) (action_http_get_request.failures.max=-1) (action_http_get_request.max=22) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=0));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=1, mean=0.2500)) (action_http_get_request.mean=(samples=5, sum=90, mean=18.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:15,556 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:15,559 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:15,559 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:15,559 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@28384368[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:20:15,559 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:15,559 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics5-obs-bucket
2024-11-16 17:20:15,559 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:15,560 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1134b0ae] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:15,560 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1134b0ae] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:15,562 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_create=0) (object_delete_request=0) (op_list_located_status=0) (object_put_request.failures=0) (stream_write_total_data=0) (stream_read_seek_operations=4) (multipart_upload_part_put_bytes=0) (action_file_opened=2) (committer_tasks_failed=0) (op_get_delegation_token.failures=0) (op_mkdirs=0) (files_copied=0) (op_abort=0) (committer_stage_file_upload=0) (files_deleted=0) (multipart_upload_part_put=0) (op_get_content_summary.failures=0) (object_continue_list_request.failures=0) (multipart_upload_aborted=0) (stream_write_total_time=0) (store_exists_probe=0) (stream_read_remote_stream_drain.failures=0) (op_create.failures=0) (object_select_requests=0) (stream_write_queue_duration.failures=0) (committer_magic_marker_put.failures=0) (op_list_status=0) (object_put_request_completed=0) (object_copy_requests=0) (committer_jobs_completed=0) (committer_tasks_completed=0) (stream_read_vectored_incoming_ranges=5) (directories_deleted=0) (op_xattr_get_named.failures=0) (op_xattr_list=0) (committer_bytes_uploaded=0) (op_hflush=0) (op_get_file_checksum=0) (committer_load_single_pending_file.failures=0) (op_rename.failures=0) (object_put_request=0) (stream_read_bytes=2848) (committer_magic_files_created=0) (stream_read_version_mismatches=0) (committer_commits_reverted=0) (committer_commits_completed=0) (object_multipart_aborted=0) (stream_read_bytes_backwards_on_seek=14637) (op_createfile.failures=0) (multipart_instantiated=0) (files_delete_rejected=0) (op_is_directory=0) (ignored_errors=0) (op_open=2) (committer_commits_created=0) (object_delete_objects=0) (stream_write_bytes=0) (op_xattr_get_map=0) (stream_read_vectored_read_bytes_discarded=5944) (op_xattr_get_named_map.failures=0) (fake_directories_deleted=0) (action_file_opened.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=2) (object_delete_request.failures=0) (store_io_retry=0) (committer_commits.failures=0) (directories_created=0) (files_created=0) (object_list_request=0) (stream_aborted=1) (fake_directories_created=0) (object_multipart_initiated.failures=0) (op_get_content_summary=0) (op_access.failures=0) (store_io_request=9) (op_create_non_recursive=0) (op_copy_from_local_file=0) (object_list_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=5) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (committer_jobs_failed=0) (op_delete=0) (op_list_status.failures=0) (stream_read_seek_forward_operations=2) (stream_read_opened=5) (op_is_file=0) (op_is_directory.failures=0) (stream_write_block_uploads_committed=0) (op_xattr_get_named=0) (stream_read_seek_policy_changed=3) (object_metadata_request=1) (committer_load_single_pending_file=0) (committer_commits_aborted=0) (action_executor_acquired=0) (stream_read_exceptions=0) (object_bulk_delete_request=0) (files_copied_bytes=0) (op_mkdirs.failures=0) (committer_commit_job.failures=0) (store_exists_probe.failures=0) (delegation_tokens_issued=0) (multipart_upload_list.failures=0) (op_abort.failures=0) (stream_read_operations_incomplete=0) (action_http_get_request=8) (op_xattr_get_map.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=1) (multipart_upload_started=0) (stream_read_fully_operations=5) (op_list_files.failures=0) (committer_stage_file_upload.failures=0) (multipart_upload_list=0) (action_http_head_request.failures=0) (audit_request_execution=9) (op_get_file_status.failures=0) (action_http_get_request.failures=0) (committer_commit_job=0) (stream_read_bytes_discarded_in_abort=55196) (op_exists=0) (stream_write_queue_duration=0) (op_access=0) (op_hsync=0) (action_http_head_request=1) (op_exists.failures=0) (op_openfile=0) (stream_write_exceptions=0) (committer_bytes_committed=0) (stream_read_vectored_combined_ranges=3) (op_copy_from_local_file.failures=0) (op_xattr_list.failures=0) (committer_materialize_file.failures=0) (stream_read_closed=4) (op_list_files=0) (stream_read_remote_stream_drain=4) (op_get_file_checksum.failures=0) (committer_magic_marker_put=0) (stream_read_vectored_operations=1) (audit_access_check_failure=0) (op_get_file_status=1) (store_io_throttled=0) (object_continue_list_request=0) (op_glob_status.failures=0) (committer_materialize_file=0) (object_put_bytes=0) (op_delete.failures=0) (stream_read_seek_bytes_skipped=44957) (stream_write_block_uploads_aborted=0) (delegation_tokens_issued.failures=0) (multipart_upload_completed=0) (stream_read_close_operations=2) (op_rename=0) (object_multipart_aborted.failures=0) (audit_failure=0) (object_multipart_initiated=0) (object_bulk_delete_request.failures=0) (op_createfile=0) (op_xattr_get_named_map=0) (op_is_file.failures=0) (stream_read_unbuffered=0) (op_glob_status=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=2848) (op_get_delegation_token=0) (audit_span_creation=4));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((op_xattr_get_map.failures.min=-1) (op_mkdirs.failures.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.min=-1) (op_xattr_get_named.min=-1) (op_list_status.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.min=-1) (op_createfile.min=-1) (op_get_content_summary.failures.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.failures.min=-1) (object_put_request.min=-1) (op_get_delegation_token.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.min=10) (committer_magic_marker_put.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_access.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_list.min=-1) (op_access.failures.min=-1) (op_get_file_status.min=10) (object_delete_request.failures.min=-1) (action_http_get_request.min=13) (action_file_opened.min=0) (op_glob_status.min=-1) (op_is_directory.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (store_exists_probe.min=-1) (op_rename.failures.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.min=-1) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_aborted.min=3) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_file_status.failures.min=-1) (op_create.failures.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_delete.min=-1) (object_bulk_delete_request.min=-1) (op_create.min=-1) (op_get_file_checksum.failures.min=-1) (op_exists.min=-1) (op_abort.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.min=0) (committer_materialize_file.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_content_summary.min=-1) (op_copy_from_local_file.min=-1) (op_delete.failures.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1) (committer_materialize_file.min=-1) (stream_write_queue_duration.failures.min=-1));
maximums=((op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (object_multipart_aborted.failures.max=-1) (store_exists_probe.max=-1) (object_bulk_delete_request.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_xattr_get_map.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (object_list_request.max=-1) (op_get_content_summary.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_files.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_status.max=-1) (op_abort.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_aborted.max=3) (object_delete_request.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (op_rename.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_is_directory.max=-1) (op_delete.max=-1) (delegation_tokens_issued.failures.max=-1) (op_is_file.max=-1) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_status.max=10) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.max=0) (committer_magic_marker_put.failures.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.failures.max=-1) (object_delete_request.max=-1) (op_access.max=-1) (object_put_request.max=-1) (op_create.max=-1) (object_multipart_initiated.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.max=-1) (op_rename.max=-1) (op_copy_from_local_file.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=34) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (action_http_head_request.max=10) (op_exists.max=-1) (op_get_file_status.failures.max=-1) (op_mkdirs.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.failures.max=-1));
means=((op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=176, mean=22.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=1, mean=0.2500)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=10, mean=10.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=10, mean=10.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:15,563 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:15,563 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,564 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:15,564 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a816350f-f985-4e5f-8ca8-679638bf3212-00000040 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000040&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=64&ts=1731777615563
2024-11-16 17:20:15,570 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,570 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,571 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a816350f-f985-4e5f-8ca8-679638bf3212-00000040 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000040&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=64&ts=1731777615563
2024-11-16 17:20:15,595 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.023s
2024-11-16 17:20:15,595 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:15,596 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:15,596 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:15,596 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:15,597 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:15,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:15,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:15,598 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:15,598 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:15,598 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:15,598 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:15,599 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:15,599 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:15,600 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,600 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [76] a816350f-f985-4e5f-8ca8-679638bf3212-00000040 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000040&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=76&ts=1731777615563
2024-11-16 17:20:15,614 [s3a-transfer-obs-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:20:15,614 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.015s
2024-11-16 17:20:15,614 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:15,614 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777615359; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:15,615 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:15,615 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:15,615 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:15,615 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:15,615 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:15,616 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a816350f-f985-4e5f-8ca8-679638bf3212-00000040 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000040&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=77&ts=1731777615563
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:15,630 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a816350f-f985-4e5f-8ca8-679638bf3212-00000040 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000040/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000040&t0=64&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=77&ts=1731777615563
2024-11-16 17:20:15,646 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:20:15,647 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:20:15,647 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:20:15,647 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:20:15,647 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.032s
2024-11-16 17:20:15,647 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.049s
2024-11-16 17:20:15,647 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:15,647 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:15,651 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:15,671 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 6, active threads = 0, queued tasks = 0, completed tasks = 6], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_hsync=0) (op_get_file_checksum.failures=0) (op_delete.failures=0) (op_glob_status=0) (object_metadata_request=15) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (op_get_content_summary=0) (stream_write_block_uploads=6) (stream_read_bytes_discarded_in_close=0) (op_mkdirs.failures=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_list.failures=0) (store_io_throttled=0) (stream_read_vectored_combined_ranges=4) (action_executor_acquired.failures=0) (object_delete_objects=12) (op_list_files=0) (op_xattr_get_named=0) (object_put_request.failures=0) (store_exists_probe=0) (object_continue_list_request=0) (object_multipart_aborted.failures=0) (op_abort=0) (committer_commit_job=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_started=0) (committer_magic_files_created=0) (stream_read_bytes_discarded_in_abort=0) (object_put_request=12) (stream_write_exceptions_completing_upload=0) (op_get_file_checksum=0) (object_multipart_initiated=0) (stream_read_unbuffered=1) (ignored_errors=0) (object_list_request=24) (committer_jobs_completed=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named_map.failures=0) (fake_directories_deleted=6) (op_get_file_status.failures=0) (op_xattr_list.failures=0) (op_xattr_get_named_map=0) (multipart_upload_part_put=0) (action_http_get_request.failures=0) (audit_request_execution=65) (committer_commits.failures=0) (committer_stage_file_upload=0) (stream_read_vectored_operations=4) (op_access.failures=0) (op_create=6) (committer_jobs_failed=0) (store_io_request=65) (op_is_directory=0) (action_file_opened=3) (audit_access_check_failure=0) (committer_magic_marker_put=0) (stream_read_closed=0) (store_io_retry=0) (object_bulk_delete_request=12) (op_create_non_recursive=0) (committer_load_single_pending_file.failures=0) (op_rename.failures=0) (op_list_files.failures=0) (stream_read_close_operations=3) (op_abort.failures=0) (op_get_delegation_token.failures=0) (op_exists.failures=0) (committer_commits_aborted=0) (stream_read_fully_operations=0) (delegation_tokens_issued.failures=0) (files_copied=0) (stream_read_seek_policy_changed=4) (stream_read_operations=0) (committer_load_single_pending_file=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (op_get_content_summary.failures=0) (op_is_file.failures=0) (op_access=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_exceptions=0) (object_copy_requests=0) (op_copy_from_local_file=0) (committer_commits_completed=0) (audit_span_creation=22) (committer_commits_created=0) (delegation_tokens_issued=0) (multipart_upload_part_put_bytes=0) (op_open=3) (op_copy_from_local_file.failures=0) (files_created=6) (fake_directories_created=0) (op_glob_status.failures=0) (stream_read_remote_stream_drain=0) (op_get_delegation_token=0) (object_delete_request.failures=0) (stream_write_bytes=393216) (op_list_located_status=0) (action_http_head_request=15) (op_rename=0) (committer_bytes_uploaded=0) (op_createfile=0) (op_xattr_get_map=0) (stream_write_total_data=786432) (object_list_request.failures=0) (op_create.failures=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (stream_write_queue_duration=0) (stream_read_bytes=300) (op_xattr_get_named.failures=0) (files_deleted=6) (directories_created=6) (object_delete_request=0) (op_list_status=0) (op_is_file=0) (op_get_file_status=0) (op_createfile.failures=0) (store_exists_probe.failures=0) (stream_read_seek_backward_operations=0) (op_exists=0) (op_xattr_list=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_map.failures=0) (stream_read_total_bytes=300) (stream_read_remote_stream_drain.failures=0) (audit_failure=0) (op_hflush=0) (directories_deleted=0) (committer_materialize_file=0) (object_multipart_aborted=0) (files_copied_bytes=0) (committer_bytes_committed=0) (op_delete=6) (op_openfile=0) (stream_read_seek_operations=0) (op_mkdirs=6) (op_list_status.failures=0) (object_continue_list_request.failures=0) (committer_tasks_failed=0) (stream_read_remote_stream_aborted.failures=0) (action_http_head_request.failures=0) (action_http_get_request=2) (committer_stage_file_upload.failures=0) (multipart_upload_aborted=0) (stream_read_operations_incomplete=0) (stream_write_queue_duration.failures=0) (multipart_upload_list=0) (committer_commit_job.failures=0) (stream_read_remote_stream_aborted=0) (stream_write_total_time=0) (stream_read_opened=0) (committer_materialize_file.failures=0) (committer_commits_reverted=0) (multipart_instantiated=0) (object_put_bytes=393216) (stream_write_block_uploads_committed=0) (object_select_requests=0) (files_delete_rejected=0) (stream_write_exceptions=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (object_put_request_completed=12) (stream_read_vectored_incoming_ranges=8) (committer_magic_marker_put.failures=0) (op_is_directory.failures=0));
gauges=((object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=6) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0));
minimums=((object_multipart_initiated.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_mkdirs.failures.min=-1) (op_abort.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (object_delete_request.min=-1) (op_get_file_status.failures.min=-1) (op_is_directory.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=29) (op_delete.min=44) (object_continue_list_request.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (committer_materialize_file.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.min=59) (committer_load_single_pending_file.min=-1) (op_exists.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.failures.min=-1) (op_list_files.failures.min=-1) (op_delete.failures.min=-1) (op_get_file_status.min=-1) (op_get_file_checksum.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_write_queue_duration.min=-1) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=8) (op_list_files.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (op_access.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.min=7) (op_glob_status.failures.min=-1) (store_exists_probe.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (action_http_head_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.failures.min=-1) (action_file_opened.min=10) (op_copy_from_local_file.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_map.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.min=-1) (op_create.min=8) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_is_file.min=-1) (op_get_delegation_token.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.min=4) (object_bulk_delete_request.failures.min=-1) (action_http_get_request.min=20) (op_create.failures.min=-1) (op_xattr_list.min=-1) (op_exists.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1));
maximums=((store_exists_probe.failures.max=-1) (object_put_request.max=104) (op_glob_status.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.max=-1) (action_http_get_request.max=26) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.max=-1) (op_is_file.max=-1) (op_mkdirs.max=346) (op_get_delegation_token.max=-1) (action_http_head_request.failures.max=-1) (op_rename.max=-1) (action_executor_acquired.max=-1) (op_createfile.max=-1) (object_multipart_initiated.max=-1) (action_http_get_request.failures.max=-1) (op_access.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.max=-1) (op_access.failures.max=-1) (committer_commit_job.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_file_opened.max=15) (op_create.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (object_list_request.max=210) (delegation_tokens_issued.max=-1) (object_delete_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_content_summary.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (op_xattr_list.max=-1) (op_create.max=74) (op_abort.failures.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_exists.max=-1) (op_exists.failures.max=-1) (op_rename.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_get_content_summary.failures.max=-1) (action_http_head_request.max=19) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.failures.max=-1) (op_delete.max=111) (op_list_status.failures.max=-1) (object_bulk_delete_request.max=27) (committer_load_single_pending_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_createfile.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=6, sum=412, mean=68.6667)) (object_list_request.mean=(samples=24, sum=491, mean=20.4583)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=6, sum=156, mean=26.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=6, sum=581, mean=96.8333)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=12, sum=504, mean=42.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=46, mean=23.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=36, mean=12.0000)) (action_http_head_request.mean=(samples=15, sum=125, mean=8.3333)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=12, sum=192, mean=16.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:15,672 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:15,673 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:15,673 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,673 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,674 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,674 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000041 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000041&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615672
2024-11-16 17:20:15,683 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:15,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:15,684 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:15,685 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,685 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:15,686 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000041 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000041&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615672
2024-11-16 17:20:15,691 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:15,691 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:15,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:15,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:15,693 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000041 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000041&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615672
2024-11-16 17:20:15,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:15,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:15,715 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:20:15,715 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:15,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:15,716 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,717 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,717 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,718 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000042 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000042&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615716
2024-11-16 17:20:15,734 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:20:15,735 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,735 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:15,736 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16803602079471027818.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:15,738 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16803602079471027818.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (stream_write_total_time=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (multipart_upload_completed=0) (op_abort.failures=0) (op_hsync=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (object_put_request=0) (object_multipart_aborted=0) (op_abort=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16803602079471027818.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,745 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,746 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:15,746 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16803602079471027818.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:15,747 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:15,748 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:15,748 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:15,748 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:15,749 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a816350f-f985-4e5f-8ca8-679638bf3212-00000042 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000042&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=79&ts=1731777615716
2024-11-16 17:20:15,788 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:15,789 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:15,790 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.041s
2024-11-16 17:20:15,790 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16803602079471027818.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:15,790 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16803602079471027818.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,791 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16803602079471027818.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,791 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:15,791 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,792 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_total_data=65536) (op_abort.failures=0) (stream_write_total_time=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (object_multipart_aborted.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=39) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=39) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=39, mean=39.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:15,792 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:15,793 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:15,793 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,793 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:15,793 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000043 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000043&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615792
2024-11-16 17:20:15,797 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:15,798 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:15,798 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,798 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:15,798 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:15,798 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:15,798 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:15,799 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:15,799 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,799 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:20:15,799 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,799 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:15,799 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:15,799 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-65535&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000043&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615792
2024-11-16 17:20:15,799 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] a816350f-f985-4e5f-8ca8-679638bf3212-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000043&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=80&ts=1731777615792
2024-11-16 17:20:15,818 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.018s
2024-11-16 17:20:15,818 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:20:15,821 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:15,822 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:20:15,821 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:15,822 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:15,826 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:15,826 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:20:15,826 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:20:15,826 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7443 bytes
2024-11-16 17:20:15,827 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:15,827 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:15,827 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:15,827 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8741 bytes
2024-11-16 17:20:15,827 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:20:15,827 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:15,828 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_unbuffered=0) (stream_read_bytes=350) (stream_read_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (stream_read_total_bytes=65686) (action_http_get_request=2) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_vectored_read_bytes_discarded=10) (action_file_opened=1) (stream_read_block_read=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_block_read.failures=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_seek_bytes_skipped=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=1) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_operations_incomplete=0) (stream_read_closed=1) (stream_read_vectored_incoming_ranges=2) (stream_read_operations=1) (stream_read_remote_stream_drain=1) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=18) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=22) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=5));
means=((action_http_get_request.mean=(samples=2, sum=40, mean=20.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:15,830 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:15,830 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,830 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:15,830 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000044 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000044&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615830
2024-11-16 17:20:15,840 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,840 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,840 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a816350f-f985-4e5f-8ca8-679638bf3212-00000044 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000044&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=78&ts=1731777615830
2024-11-16 17:20:15,850 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:15,851 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:15,851 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:15,851 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:15,851 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:15,851 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:15,851 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:15,852 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:15,852 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:15,852 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:15,852 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:15,852 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:15,853 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:15,853 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:15,854 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,854 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [81] a816350f-f985-4e5f-8ca8-679638bf3212-00000044 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000044&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=81&ts=1731777615830
2024-11-16 17:20:15,860 [s3a-transfer-obs-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:15,861 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:15,861 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:15,861 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:15,861 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:15,861 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777615785; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:15,862 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:15,862 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:15,862 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:15,862 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:15,863 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:15,863 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:15,863 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:15,863 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:15,863 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:15,863 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:15,863 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:15,863 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:15,864 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a816350f-f985-4e5f-8ca8-679638bf3212-00000044 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000044&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=82&ts=1731777615830
2024-11-16 17:20:15,874 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:15,874 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:15,875 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:20:15,875 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:15,875 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:15,875 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:15,875 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:15,875 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:15,875 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:15,876 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a816350f-f985-4e5f-8ca8-679638bf3212-00000044 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000044/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000044&t0=78&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=82&ts=1731777615830
2024-11-16 17:20:15,883 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:15,884 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:15,884 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:20:15,884 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:20:15,884 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:20:15,884 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.032s
2024-11-16 17:20:15,884 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:15,884 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:15,886 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:15,898 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 7], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_createfile=0) (stream_write_exceptions_completing_upload=0) (op_is_file.failures=0) (op_list_located_status=0) (action_http_head_request.failures=0) (op_rename=0) (action_http_head_request=18) (stream_read_fully_operations=0) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_close=65336) (object_multipart_aborted.failures=0) (object_copy_requests=0) (committer_commits_reverted=0) (op_is_file=0) (op_list_status.failures=0) (op_copy_from_local_file=0) (delegation_tokens_issued.failures=0) (object_metadata_request=18) (object_bulk_delete_request=14) (committer_commit_job=0) (op_xattr_list.failures=0) (op_get_content_summary.failures=0) (stream_write_block_uploads_committed=0) (committer_magic_marker_put=0) (stream_read_vectored_combined_ranges=5) (stream_aborted=0) (files_delete_rejected=0) (op_get_file_status=0) (op_is_directory=0) (object_multipart_aborted=0) (op_create_non_recursive=0) (store_io_request=78) (op_xattr_get_map=0) (action_executor_acquired.failures=0) (committer_load_single_pending_file=0) (object_bulk_delete_request.failures=0) (stream_write_queue_duration.failures=0) (object_list_request=28) (op_get_content_summary=0) (stream_read_vectored_read_bytes_discarded=30) (store_exists_probe=0) (stream_read_seek_operations=0) (files_created=7) (stream_read_version_mismatches=0) (fake_directories_created=0) (stream_read_exceptions=0) (multipart_upload_started=0) (committer_bytes_uploaded=0) (committer_magic_marker_put.failures=0) (committer_load_single_pending_file.failures=0) (audit_request_execution=78) (multipart_instantiated=0) (object_delete_request.failures=0) (op_exists.failures=0) (multipart_upload_list=0) (stream_write_bytes=458752) (committer_tasks_failed=0) (committer_commits_aborted=0) (op_create=7) (committer_commits.failures=0) (op_delete.failures=0) (delegation_tokens_issued=0) (op_hflush=0) (stream_read_vectored_operations=5) (op_xattr_get_map.failures=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain.failures=0) (op_mkdirs=7) (object_continue_list_request.failures=0) (op_get_file_checksum=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=650) (stream_read_operations_incomplete=0) (op_delete=7) (stream_read_operations=1) (committer_stage_file_upload=0) (stream_read_seek_policy_changed=5) (op_get_file_checksum.failures=0) (committer_materialize_file.failures=0) (stream_write_queue_duration=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_backward_operations=0) (op_hsync=0) (object_put_request_completed=14) (op_abort=0) (op_rename.failures=0) (action_http_get_request.failures=0) (op_is_directory.failures=0) (committer_commits_created=0) (op_abort.failures=0) (committer_tasks_completed=0) (stream_read_remote_stream_drain=1) (object_multipart_initiated=0) (op_access.failures=0) (op_xattr_get_named_map=0) (stream_read_unbuffered=1) (op_access=0) (stream_read_seek_bytes_skipped=0) (committer_magic_files_created=0) (object_multipart_initiated.failures=0) (audit_span_creation=26) (op_xattr_get_named_map.failures=0) (directories_created=7) (stream_write_total_time=0) (object_list_request.failures=0) (stream_read_opened=1) (ignored_errors=0) (object_continue_list_request=0) (object_delete_objects=14) (stream_read_total_bytes=65986) (committer_stage_file_upload.failures=0) (object_put_request=14) (op_list_status=0) (op_get_delegation_token=0) (op_openfile=0) (store_io_throttled=0) (stream_write_total_data=917504) (committer_commit_job.failures=0) (op_list_files.failures=0) (multipart_upload_part_put_bytes=0) (op_glob_status=0) (op_createfile.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_closed=1) (stream_read_close_operations=4) (fake_directories_deleted=7) (op_create.failures=0) (op_glob_status.failures=0) (stream_write_block_uploads=7) (directories_deleted=0) (op_xattr_get_named=0) (committer_commits_completed=0) (committer_materialize_file=0) (object_put_request.failures=0) (store_exists_probe.failures=0) (committer_jobs_failed=0) (store_io_retry=0) (op_exists=0) (op_xattr_get_named.failures=0) (committer_bytes_committed=0) (op_xattr_list=0) (object_delete_request=0) (files_copied=0) (committer_jobs_completed=0) (multipart_upload_list.failures=0) (multipart_upload_part_put=0) (files_deleted=7) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_write_block_uploads_aborted=0) (audit_access_check_failure=0) (stream_write_exceptions=0) (multipart_upload_aborted=0) (action_file_opened=4) (action_http_get_request=4) (stream_read_bytes_discarded_in_abort=0) (op_get_delegation_token.failures=0) (multipart_upload_completed=0) (object_select_requests=0) (op_open=4) (op_list_files=0) (audit_failure=0) (stream_read_vectored_incoming_ranges=10) (stream_read_bytes_backwards_on_seek=0) (object_put_bytes=458752) (files_copied_bytes=0) (multipart_upload_abort_under_path_invoked=0) (op_get_file_status.failures=0));
gauges=((stream_read_blocks_in_cache=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=7));
minimums=((delegation_tokens_issued.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.min=-1) (op_get_content_summary.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.min=-1) (op_mkdirs.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.failures.min=-1) (op_delete.min=34) (stream_write_queue_duration.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.min=-1) (op_abort.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_list_request.failures.min=-1) (op_createfile.min=-1) (op_list_files.min=-1) (op_is_file.min=-1) (object_delete_request.min=-1) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.min=-1) (op_exists.failures.min=-1) (action_file_opened.min=5) (op_list_status.failures.min=-1) (op_get_file_status.min=-1) (op_is_directory.failures.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.failures.min=-1) (op_access.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_list_request.min=6) (op_xattr_get_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.min=29) (committer_commit_job.failures.min=-1) (committer_magic_marker_put.min=-1) (action_http_head_request.min=4) (multipart_upload_list.min=-1) (op_create.min=8) (op_list_status.min=-1) (object_multipart_aborted.min=-1) (op_access.min=-1) (op_rename.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.min=-1) (object_put_request.min=39) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.min=7) (action_http_get_request.min=18) (op_is_directory.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_delete_request.failures.min=-1) (op_delete.failures.min=-1) (op_rename.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (op_exists.min=-1));
maximums=((op_create.max=74) (op_list_files.failures.max=-1) (op_xattr_get_map.failures.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.max=-1) (action_http_head_request.max=19) (op_glob_status.failures.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (op_is_file.max=-1) (object_list_request.max=210) (op_delete.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_directory.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (op_exists.failures.max=-1) (op_delete.max=111) (multipart_upload_list.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.max=15) (object_continue_list_request.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (store_exists_probe.max=-1) (object_put_request.max=104) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_delete_request.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named.failures.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.max=-1) (op_list_files.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.max=346) (stream_read_remote_stream_aborted.max=-1) (delegation_tokens_issued.max=-1) (op_createfile.max=-1) (op_get_content_summary.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.max=-1) (object_bulk_delete_request.max=27) (stream_read_remote_stream_drain.max=1) (op_exists.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.max=26) (object_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (op_rename.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=7, sum=177, mean=25.2857)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=86, mean=21.5000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=7, sum=446, mean=63.7143)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=4, sum=41, mean=10.2500)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=18, sum=144, mean=8.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=14, sum=564, mean=40.2857)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=14, sum=210, mean=15.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=7, sum=624, mean=89.1429)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=28, sum=532, mean=19.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:15,899 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:15,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:15,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,900 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,900 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a816350f-f985-4e5f-8ca8-679638bf3212-00000045 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000045&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=83&ts=1731777615899
2024-11-16 17:20:15,907 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:15,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:15,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:15,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:15,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:15,908 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a816350f-f985-4e5f-8ca8-679638bf3212-00000045 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000045&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=83&ts=1731777615899
2024-11-16 17:20:15,912 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:15,912 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:15,912 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:15,912 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:15,913 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a816350f-f985-4e5f-8ca8-679638bf3212-00000045 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000045&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=83&ts=1731777615899
2024-11-16 17:20:15,925 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:15,926 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:15,926 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:20:15,926 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:15,926 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:15,927 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,927 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:15,927 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:15,927 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a816350f-f985-4e5f-8ca8-679638bf3212-00000046 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000046&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=83&ts=1731777615926
2024-11-16 17:20:15,936 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:15,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:15,937 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:15,937 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3666621801566800042.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:15,939 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3666621801566800042.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_hflush=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (op_abort=0) (multipart_upload_completed.failures=0) (object_put_request=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (op_abort.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3666621801566800042.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,939 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,939 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:15,939 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3666621801566800042.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:15,940 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:15,940 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:15,940 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:15,940 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:15,940 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] a816350f-f985-4e5f-8ca8-679638bf3212-00000046 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000046&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=84&ts=1731777615926
2024-11-16 17:20:15,989 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:15,989 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:15,990 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.049s
2024-11-16 17:20:15,993 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3666621801566800042.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:15,993 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3666621801566800042.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,993 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3666621801566800042.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:15,993 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:15,994 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:15,995 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (op_hflush=0) (object_multipart_aborted.failures=0) (op_hsync=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (stream_write_exceptions=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (stream_write_total_time=0) (stream_write_queue_duration=0) (object_put_request=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=49));
maximums=((multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=49) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=49, mean=49.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:15,995 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:16,001 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,002 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,002 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:16,003 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [85] a816350f-f985-4e5f-8ca8-679638bf3212-00000047 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000047/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000047&t0=85&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=85&ts=1731777616001
2024-11-16 17:20:16,008 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:16,009 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:16,009 [s3a-transfer-obs-bucket-unbounded-pool2-t8] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,010 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:20:16,012 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request.failures=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_operations_incomplete=0) (stream_read_close_operations=1) (action_file_opened=1) (action_executor_acquired=0) (stream_read_vectored_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=0) (stream_read_prefetch_operations=0) (stream_read_total_bytes=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (action_file_opened.failures=0) (stream_read_closed=0) (stream_read_vectored_incoming_ranges=0) (stream_read_prefetch_operations.failures=0) (stream_read_exceptions=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (action_http_get_request=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=8));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=8) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:16,013 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:16,013 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,013 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,014 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a816350f-f985-4e5f-8ca8-679638bf3212-00000048 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000048&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=83&ts=1731777616013
2024-11-16 17:20:16,018 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,018 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,018 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a816350f-f985-4e5f-8ca8-679638bf3212-00000048 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000048&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=83&ts=1731777616013
2024-11-16 17:20:16,027 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:16,027 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:16,027 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:16,027 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:16,027 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:16,027 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:16,027 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:16,028 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:16,028 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:16,028 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:16,028 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:16,028 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:16,029 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:16,029 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:16,029 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,030 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [86] a816350f-f985-4e5f-8ca8-679638bf3212-00000048 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000048&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=86&ts=1731777616013
2024-11-16 17:20:16,039 [s3a-transfer-obs-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:16,039 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:20:16,039 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:16,039 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:16,040 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:16,040 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777615985; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:16,040 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:16,040 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:16,040 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:16,040 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:16,045 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:16,045 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:16,046 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:16,046 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:16,046 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,046 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,046 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:16,046 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,047 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a816350f-f985-4e5f-8ca8-679638bf3212-00000048 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000048&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=87&ts=1731777616013
2024-11-16 17:20:16,060 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:20:16,060 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:20:16,060 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:20:16,060 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:16,061 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:16,061 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,061 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,061 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:16,061 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,061 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a816350f-f985-4e5f-8ca8-679638bf3212-00000048 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000048/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000048&t0=83&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=87&ts=1731777616013
2024-11-16 17:20:16,073 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:20:16,073 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:20:16,073 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:20:16,073 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:20:16,074 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:20:16,074 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.046s
2024-11-16 17:20:16,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:16,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:16,077 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:16,104 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_combined_ranges=5) (stream_read_unbuffered=1) (store_exists_probe.failures=0) (op_xattr_get_map.failures=0) (committer_commits_completed=0) (stream_write_queue_duration=0) (stream_write_block_uploads=8) (op_list_files=0) (multipart_upload_part_put=0) (multipart_upload_part_put_bytes=0) (committer_commit_job=0) (committer_stage_file_upload=0) (action_file_opened.failures=0) (op_is_directory.failures=0) (object_copy_requests=0) (object_select_requests=0) (files_deleted=8) (action_http_get_request=4) (object_delete_request=0) (op_xattr_get_map=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named=0) (fake_directories_created=0) (op_get_file_checksum=0) (object_list_request.failures=0) (op_is_directory=0) (op_xattr_get_named_map=0) (op_get_file_status=0) (op_access.failures=0) (object_multipart_aborted.failures=0) (committer_jobs_failed=0) (multipart_upload_completed=0) (stream_read_remote_stream_aborted=0) (multipart_upload_aborted=0) (delegation_tokens_issued=0) (committer_commits.failures=0) (files_copied=0) (op_create.failures=0) (op_get_delegation_token=0) (op_get_file_checksum.failures=0) (op_delete.failures=0) (op_list_located_status=0) (op_list_status.failures=0) (files_created=8) (stream_read_closed=1) (multipart_upload_abort_under_path_invoked=0) (object_continue_list_request=0) (multipart_upload_list=0) (stream_read_version_mismatches=0) (multipart_upload_started=0) (audit_request_execution=89) (op_xattr_get_named_map.failures=0) (action_http_head_request.failures=0) (store_exists_probe=0) (op_abort=0) (op_get_content_summary.failures=0) (stream_read_exceptions=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (committer_magic_files_created=0) (op_open=5) (multipart_upload_list.failures=0) (op_exists.failures=0) (stream_read_vectored_operations=5) (action_http_get_request.failures=0) (action_file_opened=5) (op_get_file_status.failures=0) (op_list_files.failures=0) (audit_failure=0) (stream_read_seek_backward_operations=0) (ignored_errors=0) (object_multipart_aborted=0) (stream_read_fully_operations=0) (committer_commits_aborted=0) (stream_write_exceptions=0) (object_list_request=32) (op_hsync=0) (files_copied_bytes=0) (object_put_request=16) (committer_tasks_failed=0) (stream_aborted=0) (object_put_request_completed=16) (stream_read_seek_policy_changed=6) (object_put_request.failures=0) (op_glob_status.failures=0) (stream_write_block_uploads_committed=0) (op_copy_from_local_file=0) (stream_read_vectored_read_bytes_discarded=30) (stream_read_bytes=650) (stream_write_bytes=524288) (stream_read_remote_stream_drain.failures=0) (committer_materialize_file=0) (stream_read_seek_operations=0) (files_delete_rejected=0) (op_mkdirs.failures=0) (op_get_content_summary=0) (multipart_instantiated=0) (stream_read_total_bytes=65986) (committer_stage_file_upload.failures=0) (op_xattr_list.failures=0) (op_access=0) (stream_read_bytes_discarded_in_close=65336) (action_executor_acquired.failures=0) (object_put_bytes=524288) (op_delete=8) (fake_directories_deleted=8) (op_mkdirs=8) (object_multipart_initiated.failures=0) (stream_write_queue_duration.failures=0) (committer_commits_created=0) (audit_access_check_failure=0) (store_io_request=89) (stream_write_total_time=0) (op_create_non_recursive=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named.failures=0) (stream_read_seek_bytes_discarded=0) (op_create=8) (stream_read_bytes_backwards_on_seek=0) (committer_load_single_pending_file=0) (directories_deleted=0) (op_list_status=0) (store_io_throttled=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (committer_load_single_pending_file.failures=0) (committer_tasks_completed=0) (stream_read_seek_bytes_skipped=0) (stream_write_block_uploads_aborted=0) (stream_read_opened=1) (committer_commits_reverted=0) (op_exists=0) (op_glob_status=0) (stream_write_total_data=1048576) (stream_read_operations_incomplete=0) (op_openfile=0) (object_metadata_request=21) (action_http_head_request=21) (op_rename.failures=0) (stream_read_operations=1) (object_bulk_delete_request.failures=0) (op_is_file.failures=0) (op_hflush=0) (committer_commit_job.failures=0) (committer_bytes_uploaded=0) (op_createfile.failures=0) (delegation_tokens_issued.failures=0) (object_delete_request.failures=0) (object_delete_objects=16) (op_xattr_list=0) (op_is_file=0) (op_copy_from_local_file.failures=0) (committer_bytes_committed=0) (object_bulk_delete_request=16) (op_createfile=0) (committer_materialize_file.failures=0) (object_continue_list_request.failures=0) (stream_read_remote_stream_drain=1) (store_io_retry=0) (op_rename=0) (committer_magic_marker_put=0) (directories_created=8) (stream_read_vectored_incoming_ranges=10) (stream_read_close_operations=5) (committer_jobs_completed=0) (op_get_delegation_token.failures=0) (audit_span_creation=30));
gauges=((stream_write_block_uploads_pending=8) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0));
minimums=((op_is_directory.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=8) (committer_magic_marker_put.min=-1) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.min=7) (object_put_request.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (op_delete.min=34) (committer_commit_job.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=18) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.min=4) (committer_materialize_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.failures.min=-1) (object_put_request.min=49) (action_file_opened.min=8) (op_xattr_get_named.failures.min=-1) (op_mkdirs.min=27) (op_createfile.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.failures.min=-1) (object_delete_request.min=-1) (op_rename.min=-1) (op_mkdirs.failures.min=-1) (op_is_file.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_list.failures.min=-1) (object_continue_list_request.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.failures.min=-1) (op_create.failures.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.failures.min=-1) (action_executor_acquired.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_list.min=-1) (op_access.min=-1) (op_get_file_checksum.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_checksum.min=-1) (op_glob_status.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.min=-1) (op_is_file.failures.min=-1) (op_exists.failures.min=-1) (object_list_request.min=6) (op_get_file_status.min=-1) (op_list_status.min=-1) (op_xattr_get_map.min=-1) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((op_access.failures.max=-1) (op_access.max=-1) (object_delete_request.max=-1) (op_list_files.max=-1) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.failures.max=-1) (op_exists.failures.max=-1) (action_http_head_request.max=19) (object_multipart_initiated.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_abort.max=-1) (op_create.failures.max=-1) (op_get_file_status.failures.max=-1) (multipart_upload_list.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.max=-1) (op_is_directory.failures.max=-1) (op_create.max=74) (op_list_files.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.max=104) (action_file_opened.max=15) (object_list_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.max=-1) (op_rename.max=-1) (op_is_file.failures.max=-1) (op_glob_status.failures.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_directory.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_xattr_list.failures.max=-1) (op_is_file.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_copy_from_local_file.failures.max=-1) (op_delete.max=111) (op_abort.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_status.max=-1) (action_http_get_request.max=26) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.max=27) (op_get_file_checksum.max=-1) (op_glob_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.max=346) (object_put_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (object_delete_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_list_request.max=210) (object_continue_list_request.failures.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.max=-1) (committer_magic_marker_put.max=-1));
means=((op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=16, sum=625, mean=39.0625)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=86, mean=21.5000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=16, sum=235, mean=14.6875)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=32, sum=566, mean=17.6875)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=8, sum=493, mean=61.6250)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=5, sum=49, mean=9.8000)) (action_http_head_request.mean=(samples=21, sum=160, mean=7.6190)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=8, sum=651, mean=81.3750)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=8, sum=189, mean=23.6250)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:16,105 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:16,105 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,105 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,105 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,105 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,105 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a816350f-f985-4e5f-8ca8-679638bf3212-00000049 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000049&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=88&ts=1731777616104
2024-11-16 17:20:16,119 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:20:16,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,120 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a816350f-f985-4e5f-8ca8-679638bf3212-00000049 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000049&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=88&ts=1731777616104
2024-11-16 17:20:16,124 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,124 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:16,124 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:16,124 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:16,125 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a816350f-f985-4e5f-8ca8-679638bf3212-00000049 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000049&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=88&ts=1731777616104
2024-11-16 17:20:16,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:16,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:16,151 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.027s
2024-11-16 17:20:16,151 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:16,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,152 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,152 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a816350f-f985-4e5f-8ca8-679638bf3212-00000050 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000050&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=88&ts=1731777616152
2024-11-16 17:20:16,165 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:20:16,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,167 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:16,167 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11779881173009916840.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:16,168 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11779881173009916840.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort=0) (object_multipart_initiated=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11779881173009916840.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,168 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,168 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:16,168 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11779881173009916840.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:16,169 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:16,169 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:16,169 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:16,169 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:16,169 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a816350f-f985-4e5f-8ca8-679638bf3212-00000050 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000050&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=89&ts=1731777616152
2024-11-16 17:20:16,208 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:16,208 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:16,208 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:20:16,208 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11779881173009916840.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:16,209 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11779881173009916840.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,209 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11779881173009916840.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,209 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:16,209 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,210 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (stream_write_total_time=0) (committer_magic_marker_put=0) (op_hsync=0) (stream_write_block_uploads=1) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (op_abort=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (object_put_request=1) (op_hflush=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=39) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((op_abort.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=39) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=39, mean=39.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:16,210 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:16,211 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,211 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,211 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:16,211 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a816350f-f985-4e5f-8ca8-679638bf3212-00000051 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000051&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=88&ts=1731777616210
2024-11-16 17:20:16,216 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:16,216 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:16,216 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,216 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:20:16,217 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:16,217 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:20:16,217 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:20:16,218 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,218 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,218 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:16,218 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] a816350f-f985-4e5f-8ca8-679638bf3212-00000051 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-999&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000051&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=90&ts=1731777616210
2024-11-16 17:20:16,230 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:20:16,231 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,233 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (stream_read_vectored_operations=1) (stream_read_bytes=1000) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read=0) (stream_read_seek_operations=0) (stream_read_closed=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=1) (action_http_get_request.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_incoming_ranges=10) (action_file_opened=1) (stream_read_total_bytes=1000) (stream_read_block_acquire_read.failures=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (action_http_get_request=1) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=5) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=13) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_file_opened.max=5) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=13) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=13, mean=13.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:16,235 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:16,236 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,236 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,236 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a816350f-f985-4e5f-8ca8-679638bf3212-00000052 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000052&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=88&ts=1731777616235
2024-11-16 17:20:16,241 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,241 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,242 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a816350f-f985-4e5f-8ca8-679638bf3212-00000052 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000052&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=88&ts=1731777616235
2024-11-16 17:20:16,250 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:16,251 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:16,251 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:16,251 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:16,251 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:16,251 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:16,251 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:16,252 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:16,252 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:16,252 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:16,252 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:16,252 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:16,253 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:16,253 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:16,253 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,254 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [91] a816350f-f985-4e5f-8ca8-679638bf3212-00000052 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000052&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=91&ts=1731777616235
2024-11-16 17:20:16,261 [s3a-transfer-obs-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:16,261 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:20:16,261 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:16,262 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:16,262 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:16,262 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777616203; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:16,262 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:16,262 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:16,262 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:16,262 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:16,263 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:16,263 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:16,263 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:16,263 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:16,263 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,263 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,263 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:16,264 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,264 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a816350f-f985-4e5f-8ca8-679638bf3212-00000052 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000052&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=92&ts=1731777616235
2024-11-16 17:20:16,273 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:16,274 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,275 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a816350f-f985-4e5f-8ca8-679638bf3212-00000052 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000052/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000052&t0=88&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=92&ts=1731777616235
2024-11-16 17:20:16,282 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:16,283 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:16,283 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:20:16,283 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:20:16,283 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:20:16,283 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:20:16,283 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:16,283 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:16,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:16,298 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 10, active threads = 0, queued tasks = 0, completed tasks = 10], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_completed=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain=1) (stream_write_block_uploads_committed=0) (op_delete=9) (op_is_directory=0) (audit_failure=0) (object_bulk_delete_request.failures=0) (object_put_request_completed=18) (object_delete_request.failures=0) (op_get_file_status=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (op_get_file_checksum.failures=0) (op_glob_status.failures=0) (object_bulk_delete_request=18) (op_list_files.failures=0) (stream_aborted=0) (stream_write_total_data=1179648) (committer_stage_file_upload=0) (files_delete_rejected=0) (op_get_file_checksum=0) (action_http_get_request.failures=0) (multipart_upload_aborted=0) (audit_access_check_failure=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_map.failures=0) (stream_read_fully_operations=0) (stream_read_opened=1) (directories_created=9) (op_get_content_summary.failures=0) (stream_read_version_mismatches=0) (files_created=9) (stream_read_seek_policy_changed=7) (object_continue_list_request=0) (op_rename.failures=0) (op_create.failures=0) (object_list_request.failures=0) (multipart_instantiated=0) (multipart_upload_part_put_bytes=0) (stream_write_block_uploads_aborted=0) (object_metadata_request=24) (multipart_upload_list=0) (stream_read_exceptions=0) (op_list_status=0) (op_create=9) (committer_jobs_completed=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (op_is_directory.failures=0) (object_delete_request=0) (stream_read_bytes=1650) (object_delete_objects=18) (op_exists.failures=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_list.failures=0) (object_continue_list_request.failures=0) (stream_write_exceptions=0) (op_xattr_get_named_map=0) (fake_directories_created=0) (stream_write_bytes=589824) (stream_read_vectored_read_bytes_discarded=30) (delegation_tokens_issued.failures=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=6) (object_multipart_initiated=0) (store_io_retry=0) (action_http_get_request=5) (op_xattr_list=0) (op_glob_status=0) (committer_magic_marker_put.failures=0) (op_mkdirs=9) (op_get_file_status.failures=0) (op_exists=0) (object_select_requests=0) (committer_materialize_file.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_load_single_pending_file.failures=0) (op_xattr_list.failures=0) (op_abort.failures=0) (committer_commits_created=0) (stream_write_queue_duration.failures=0) (committer_commits_completed=0) (op_createfile.failures=0) (action_http_head_request=24) (op_hsync=0) (files_copied_bytes=0) (op_openfile=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (multipart_upload_started=0) (op_is_file=0) (committer_magic_marker_put=0) (files_copied=0) (op_rename=0) (stream_read_operations=1) (object_multipart_aborted=0) (stream_read_vectored_incoming_ranges=20) (op_get_delegation_token=0) (delegation_tokens_issued=0) (op_create_non_recursive=0) (fake_directories_deleted=9) (committer_commit_job.failures=0) (stream_read_seek_operations=0) (committer_materialize_file=0) (stream_write_block_uploads=9) (audit_span_creation=34) (object_multipart_aborted.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named_map.failures=0) (op_list_files=0) (committer_bytes_uploaded=0) (object_put_request=18) (stream_read_operations_incomplete=0) (object_copy_requests=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_aborted=0) (stream_read_seek_bytes_discarded=0) (op_is_file.failures=0) (object_list_request=36) (stream_read_closed=1) (directories_deleted=0) (op_copy_from_local_file.failures=0) (op_get_delegation_token.failures=0) (stream_write_queue_duration=0) (action_http_head_request.failures=0) (op_access=0) (store_exists_probe.failures=0) (op_open=6) (op_xattr_get_map=0) (op_abort=0) (stream_read_bytes_discarded_in_abort=0) (committer_magic_files_created=0) (ignored_errors=0) (op_list_located_status=0) (audit_request_execution=101) (object_multipart_initiated.failures=0) (committer_commit_job=0) (stream_read_vectored_combined_ranges=6) (op_list_status.failures=0) (stream_read_unbuffered=1) (op_xattr_get_named.failures=0) (op_access.failures=0) (committer_commits.failures=0) (stream_read_vectored_operations=6) (committer_stage_file_upload.failures=0) (stream_read_total_bytes=66986) (store_io_request=101) (object_put_bytes=589824) (committer_load_single_pending_file=0) (store_io_throttled=0) (action_file_opened.failures=0) (multipart_upload_part_put=0) (action_file_opened=6) (committer_bytes_committed=0) (stream_read_bytes_discarded_in_close=65336) (op_get_content_summary=0) (store_exists_probe=0) (op_createfile=0) (committer_tasks_failed=0) (op_delete.failures=0) (op_copy_from_local_file=0) (committer_tasks_completed=0) (committer_commits_reverted=0) (op_xattr_get_named=0) (files_deleted=9) (committer_jobs_failed=0) (op_hflush=0) (object_put_request.failures=0));
gauges=((object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_pending=9) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (store_exists_probe.failures.min=-1) (op_mkdirs.min=27) (op_glob_status.min=-1) (op_exists.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.min=-1) (object_list_request.min=6) (op_create.min=8) (multipart_upload_list.failures.min=-1) (op_rename.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.failures.min=-1) (object_continue_list_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_glob_status.failures.min=-1) (op_createfile.failures.min=-1) (op_is_directory.min=-1) (op_delete.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.min=13) (op_xattr_get_map.min=-1) (op_get_content_summary.min=-1) (op_access.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_drain.min=1) (op_copy_from_local_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.failures.min=-1) (store_exists_probe.min=-1) (op_access.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.failures.min=-1) (action_file_opened.min=5) (op_abort.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.min=-1) (op_exists.min=-1) (op_rename.failures.min=-1) (action_http_head_request.min=4) (object_put_request.min=39) (object_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (object_bulk_delete_request.min=7) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_initiated.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_commit_job.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_list_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named_map.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.failures.min=-1) (op_is_file.failures.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_list.failures.min=-1) (op_is_file.min=-1) (op_list_status.min=-1) (op_get_file_status.min=-1) (op_get_content_summary.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.min=-1) (op_delete.min=32));
maximums=((op_glob_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=111) (object_put_request.max=104) (delegation_tokens_issued.max=-1) (object_multipart_initiated.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_head_request.max=19) (op_is_directory.failures.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_create.failures.max=-1) (action_file_opened.max=15) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.max=-1) (object_bulk_delete_request.max=27) (op_xattr_list.max=-1) (op_get_file_status.failures.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (op_delete.failures.max=-1) (action_http_get_request.max=26) (op_xattr_get_named.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.failures.max=-1) (op_exists.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_access.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.max=-1) (op_access.failures.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_put_request.failures.max=-1) (op_rename.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.max=346) (op_list_status.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_file.max=-1) (object_list_request.max=210) (op_xattr_get_map.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.max=74) (op_xattr_get_map.max=-1) (object_list_request.failures.max=-1) (op_abort.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_status.max=-1) (op_abort.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_executor_acquired.max=-1) (op_rename.max=-1) (op_exists.failures.max=-1) (object_multipart_aborted.max=-1) (op_is_directory.max=-1));
means=((op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=9, sum=525, mean=58.3333)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=18, sum=252, mean=14.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=9, sum=204, mean=22.6667)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=24, sum=175, mean=7.2917)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=6, sum=54, mean=9.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=99, mean=19.8000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=9, sum=697, mean=77.4444)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=18, sum=690, mean=38.3333)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=36, sum=610, mean=16.9444)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:16,299 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:16,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,301 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,301 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,302 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a816350f-f985-4e5f-8ca8-679638bf3212-00000053 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000053&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=93&ts=1731777616299
2024-11-16 17:20:16,310 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:16,310 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,310 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,311 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,311 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,311 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a816350f-f985-4e5f-8ca8-679638bf3212-00000053 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000053&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=93&ts=1731777616299
2024-11-16 17:20:16,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,315 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:16,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:16,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:16,316 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a816350f-f985-4e5f-8ca8-679638bf3212-00000053 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000053&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=93&ts=1731777616299
2024-11-16 17:20:16,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:16,332 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:16,332 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.017s
2024-11-16 17:20:16,332 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:16,332 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,332 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,333 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,333 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,333 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a816350f-f985-4e5f-8ca8-679638bf3212-00000054 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000054&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=93&ts=1731777616332
2024-11-16 17:20:16,340 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:16,340 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,340 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:16,341 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3845558046719776486.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:16,342 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3845558046719776486.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_total_time=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (object_put_request=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (op_abort=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (object_put_request.failures=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3845558046719776486.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,343 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,343 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:16,343 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3845558046719776486.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:16,343 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:16,343 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:16,344 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:16,344 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:16,344 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] a816350f-f985-4e5f-8ca8-679638bf3212-00000054 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000054&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=94&ts=1731777616332
2024-11-16 17:20:16,366 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:16,366 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:16,366 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:20:16,366 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3845558046719776486.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:16,366 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3845558046719776486.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,366 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3845558046719776486.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,367 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:16,367 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,368 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (object_put_request=1) (object_multipart_aborted=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (op_abort=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=22) (op_abort.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=22));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=22, mean=22.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:16,369 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:16,370 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,370 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,370 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:16,370 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a816350f-f985-4e5f-8ca8-679638bf3212-00000055 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/a816350f-f985-4e5f-8ca8-679638bf3212-00000055/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000055&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=93&ts=1731777616370
2024-11-16 17:20:16,375 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:16,375 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777616000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:16,378 [s3a-transfer-obs-bucket-unbounded-pool2-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:16,378 [s3a-transfer-obs-bucket-unbounded-pool2-t11] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,380 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:16,380 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:16,381 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:20:16,385 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,385 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,385 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:16,385 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:16,385 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] a816350f-f985-4e5f-8ca8-679638bf3212-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-14435&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000056&t0=95&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=97&ts=1731777616378
2024-11-16 17:20:16,386 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,387 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,387 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,387 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:16,387 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] a816350f-f985-4e5f-8ca8-679638bf3212-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000056&t0=95&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=96&ts=1731777616378
2024-11-16 17:20:16,387 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,388 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:16,389 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a816350f-f985-4e5f-8ca8-679638bf3212-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000056&t0=95&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=98&ts=1731777616378
2024-11-16 17:20:16,410 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.023s
2024-11-16 17:20:16,411 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,411 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.026s
2024-11-16 17:20:16,413 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:20:16,413 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:20:16,413 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,418 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.030s
2024-11-16 17:20:16,418 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,421 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=1) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_backward_operations=0) (action_file_opened.failures=0) (stream_read_operations_incomplete=0) (stream_read_unbuffered=0) (stream_read_block_read=0) (action_http_get_request=3) (stream_read_operations=0) (stream_read_opened=0) (action_http_get_request.failures=0) (stream_read_vectored_incoming_ranges=5) (stream_read_bytes=1424) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=3) (stream_read_vectored_operations=1) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=1424) (action_file_opened=1) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=24) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=0) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=30) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=0) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=82, mean=27.3333)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:16,423 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:16,423 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,423 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,424 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a816350f-f985-4e5f-8ca8-679638bf3212-00000057 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000057&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=93&ts=1731777616423
2024-11-16 17:20:16,428 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,428 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,429 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a816350f-f985-4e5f-8ca8-679638bf3212-00000057 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000057&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=93&ts=1731777616423
2024-11-16 17:20:16,438 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:16,438 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:16,438 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:16,438 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:16,438 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:16,438 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:16,438 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:16,438 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:16,438 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:16,438 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:16,438 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:16,438 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:16,441 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:16,442 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:16,442 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,443 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [99] a816350f-f985-4e5f-8ca8-679638bf3212-00000057 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000057&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=99&ts=1731777616423
2024-11-16 17:20:16,452 [s3a-transfer-obs-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:16,453 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:20:16,453 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:16,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:16,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:16,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777616363; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:16,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:16,454 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:16,454 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:16,455 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:16,460 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:16,460 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:16,460 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:16,461 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:16,461 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,461 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,461 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:16,462 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,462 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a816350f-f985-4e5f-8ca8-679638bf3212-00000057 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000057&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=100&ts=1731777616423
2024-11-16 17:20:16,479 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:20:16,480 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:20:16,480 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.019s
2024-11-16 17:20:16,480 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:16,480 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:16,480 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,480 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,481 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:16,481 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,481 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a816350f-f985-4e5f-8ca8-679638bf3212-00000057 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000057/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000057&t0=93&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=100&ts=1731777616423
2024-11-16 17:20:16,492 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:16,493 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:20:16,493 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:20:16,493 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.033s
2024-11-16 17:20:16,493 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.033s
2024-11-16 17:20:16,493 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.055s
2024-11-16 17:20:16,493 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:16,493 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:16,498 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:16,510 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_io_retry=0) (object_multipart_aborted=0) (committer_commits_created=0) (stream_read_remote_stream_drain=1) (stream_write_exceptions=0) (multipart_upload_started=0) (op_xattr_list=0) (stream_read_seek_bytes_discarded=0) (stream_write_block_uploads_aborted=0) (delegation_tokens_issued=0) (op_hflush=0) (op_exists=0) (object_list_request=40) (action_http_head_request=27) (op_get_content_summary.failures=0) (action_http_get_request=8) (object_delete_request=0) (audit_request_execution=115) (stream_read_bytes_discarded_in_abort=0) (op_rename=0) (object_put_request_completed=20) (ignored_errors=0) (op_rename.failures=0) (op_mkdirs.failures=0) (op_get_file_status.failures=0) (audit_span_creation=39) (op_delete.failures=0) (stream_read_vectored_read_bytes_discarded=5974) (stream_write_block_uploads_committed=0) (fake_directories_deleted=10) (stream_read_bytes_discarded_in_close=65336) (object_multipart_initiated.failures=0) (stream_read_vectored_incoming_ranges=25) (op_list_status=0) (committer_stage_file_upload=0) (object_delete_objects=20) (object_multipart_initiated=0) (committer_materialize_file=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_block_uploads=10) (directories_deleted=0) (committer_commits_aborted=0) (op_xattr_list.failures=0) (stream_read_total_bytes=68410) (op_list_files=0) (op_list_files.failures=0) (op_mkdirs=10) (op_xattr_get_map=0) (multipart_upload_list.failures=0) (op_is_directory.failures=0) (multipart_upload_list=0) (committer_commits_completed=0) (files_delete_rejected=0) (op_get_delegation_token.failures=0) (op_is_file.failures=0) (op_create_non_recursive=0) (stream_read_close_operations=7) (stream_read_bytes_backwards_on_seek=0) (committer_jobs_failed=0) (stream_write_queue_duration.failures=0) (object_put_request=20) (stream_read_seek_operations=0) (committer_magic_files_created=0) (stream_read_seek_forward_operations=0) (files_copied=0) (op_hsync=0) (op_get_content_summary=0) (multipart_upload_aborted=0) (object_select_requests=0) (stream_write_total_data=1310720) (delegation_tokens_issued.failures=0) (op_get_delegation_token=0) (op_exists.failures=0) (fake_directories_created=0) (op_open=7) (action_http_head_request.failures=0) (op_is_directory=0) (stream_read_remote_stream_drain.failures=0) (op_list_located_status=0) (object_copy_requests=0) (object_multipart_aborted.failures=0) (store_io_throttled=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (action_file_opened.failures=0) (committer_commits.failures=0) (committer_load_single_pending_file=0) (committer_magic_marker_put=0) (object_list_request.failures=0) (stream_read_unbuffered=1) (op_access.failures=0) (committer_magic_marker_put.failures=0) (committer_tasks_failed=0) (multipart_upload_part_put=0) (files_copied_bytes=0) (multipart_upload_completed=0) (op_xattr_get_named_map=0) (op_list_status.failures=0) (multipart_instantiated=0) (object_metadata_request=27) (action_http_get_request.failures=0) (action_executor_acquired=0) (audit_access_check_failure=0) (op_createfile=0) (op_access=0) (committer_jobs_completed=0) (committer_tasks_completed=0) (stream_read_operations_incomplete=0) (object_bulk_delete_request=20) (object_continue_list_request.failures=0) (stream_read_seek_policy_changed=8) (directories_created=10) (stream_read_bytes=3074) (op_is_file=0) (multipart_upload_abort_under_path_invoked=0) (committer_materialize_file.failures=0) (op_get_file_status=1) (committer_commits_reverted=0) (object_delete_request.failures=0) (op_xattr_get_map.failures=0) (files_deleted=10) (stream_read_operations=1) (store_io_request=115) (stream_read_fully_operations=0) (action_file_opened=7) (stream_write_bytes=655360) (op_abort=0) (op_glob_status.failures=0) (multipart_upload_part_put_bytes=0) (object_continue_list_request=0) (op_openfile=0) (op_delete=10) (committer_bytes_committed=0) (committer_commit_job=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named=0) (op_copy_from_local_file.failures=0) (op_create.failures=0) (files_created=10) (committer_commit_job.failures=0) (stream_read_closed=1) (op_copy_from_local_file=0) (stream_aborted=0) (op_create=10) (store_exists_probe=0) (stream_read_remote_stream_aborted.failures=0) (op_get_file_checksum=0) (op_createfile.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=9) (stream_read_version_mismatches=0) (op_xattr_get_named_map.failures=0) (op_get_file_checksum.failures=0) (store_exists_probe.failures=0) (op_xattr_get_named.failures=0) (object_put_request.failures=0) (audit_failure=0) (committer_stage_file_upload.failures=0) (object_put_bytes=655360) (op_glob_status=0) (stream_write_exceptions_completing_upload=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (stream_read_opened=1) (committer_bytes_uploaded=0) (stream_read_vectored_operations=7) (committer_load_single_pending_file.failures=0));
gauges=((object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=10) (client_side_encryption_enabled=0));
minimums=((committer_magic_marker_put.min=-1) (op_delete.min=32) (object_multipart_initiated.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.failures.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_map.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.min=7) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (op_access.failures.min=-1) (op_is_directory.min=-1) (op_access.min=-1) (action_file_opened.failures.min=-1) (op_rename.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_delete_request.failures.min=-1) (action_file_opened.min=0) (op_xattr_get_named.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_list_request.failures.min=-1) (op_list_status.min=-1) (op_mkdirs.min=27) (action_http_get_request.failures.min=-1) (op_glob_status.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_content_summary.min=-1) (object_list_request.min=6) (op_create.min=8) (committer_stage_file_upload.min=-1) (action_http_head_request.min=4) (op_create.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_status.min=5) (op_abort.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_files.min=-1) (object_put_request.min=22) (op_delete.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_head_request.failures.min=-1) (multipart_upload_list.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.failures.min=-1) (object_put_request.failures.min=-1) (op_list_files.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_glob_status.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.min=24) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.min=-1));
maximums=((op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_rename.max=-1) (op_get_file_status.max=5) (op_copy_from_local_file.max=-1) (op_create.failures.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.max=-1) (object_continue_list_request.failures.max=-1) (op_access.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_directory.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (store_exists_probe.max=-1) (op_glob_status.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=15) (op_create.max=74) (multipart_upload_list.max=-1) (action_http_head_request.max=19) (op_mkdirs.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_delegation_token.max=-1) (committer_magic_marker_put.max=-1) (op_list_status.max=-1) (op_abort.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_files.max=-1) (op_createfile.failures.max=-1) (object_list_request.failures.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.max=-1) (object_put_request.max=104) (committer_load_single_pending_file.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_delete_request.failures.max=-1) (op_delete.max=111) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.max=-1) (op_get_file_checksum.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_get_request.max=30) (op_is_file.max=-1) (op_delete.failures.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.failures.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.max=27) (op_xattr_list.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.max=210) (op_mkdirs.max=346) (committer_magic_marker_put.failures.max=-1) (op_get_content_summary.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.failures.max=-1) (op_exists.max=-1) (object_multipart_initiated.max=-1) (store_exists_probe.failures.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=1) (multipart_upload_list.failures.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.failures.max=-1) (delegation_tokens_issued.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=40, sum=643, mean=16.0750)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=10, sum=213, mean=21.3000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=181, mean=22.6250)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_bulk_delete_request.mean=(samples=20, sum=280, mean=14.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=20, sum=727, mean=36.3500)) (action_http_head_request.mean=(samples=27, sum=189, mean=7.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=10, sum=580, mean=58.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=7, sum=54, mean=7.7143)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=10, sum=730, mean=73.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:16,511 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:16,511 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,511 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,512 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,512 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,512 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a816350f-f985-4e5f-8ca8-679638bf3212-00000058 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000058&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=101&ts=1731777616511
2024-11-16 17:20:16,519 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:16,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,520 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a816350f-f985-4e5f-8ca8-679638bf3212-00000058 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000058&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=101&ts=1731777616511
2024-11-16 17:20:16,524 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,525 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:16,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:16,526 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:16,526 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a816350f-f985-4e5f-8ca8-679638bf3212-00000058 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000058&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=101&ts=1731777616511
2024-11-16 17:20:16,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:16,542 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:16,542 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.017s
2024-11-16 17:20:16,543 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:16,544 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,544 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,545 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,545 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,546 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a816350f-f985-4e5f-8ca8-679638bf3212-00000059 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000059&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=101&ts=1731777616544
2024-11-16 17:20:16,553 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:16,553 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,554 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:16,555 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7931848128722860432.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:16,556 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7931848128722860432.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (op_hflush=0) (stream_write_total_data=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (object_multipart_aborted=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (op_hsync=0) (action_executor_acquired=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7931848128722860432.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,556 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,557 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:16,557 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7931848128722860432.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:16,558 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:16,558 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:16,559 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:16,559 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:16,560 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] a816350f-f985-4e5f-8ca8-679638bf3212-00000059 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000059&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=102&ts=1731777616544
2024-11-16 17:20:16,595 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:16,596 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:16,597 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:20:16,597 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7931848128722860432.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:16,598 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7931848128722860432.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,598 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7931848128722860432.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,598 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:16,599 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,599 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (op_hflush=0) (op_hsync=0) (action_executor_acquired=0) (op_abort.failures=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (op_abort=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=35) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=35) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.mean=(samples=1, sum=35, mean=35.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:16,600 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:16,603 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,603 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,604 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:16,604 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [103] a816350f-f985-4e5f-8ca8-679638bf3212-00000060 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000060/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000060&t0=103&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=103&ts=1731777616602
2024-11-16 17:20:16,609 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:16,609 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:16,610 [s3a-transfer-obs-bucket-unbounded-pool2-t13] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,610 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:20:16,610 [JUnit-testEOFRanges[Buffer type : direct]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,612 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (action_executor_acquired=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_total_bytes=0) (stream_aborted=0) (stream_read_operations=0) (stream_read_block_read.failures=0) (stream_read_exceptions=0) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_closed=0) (action_file_opened=1) (stream_read_seek_backward_operations=0) (action_http_get_request=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations=0) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_vectored_incoming_ranges=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=0) (stream_read_opened=0) (stream_read_vectored_operations=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=7) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=7) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:16,617 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:16,617 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,617 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,617 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a816350f-f985-4e5f-8ca8-679638bf3212-00000061 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000061&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=101&ts=1731777616617
2024-11-16 17:20:16,622 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,622 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,623 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a816350f-f985-4e5f-8ca8-679638bf3212-00000061 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000061&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=101&ts=1731777616617
2024-11-16 17:20:16,631 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:16,631 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:16,632 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:16,632 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:16,632 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:16,632 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:16,632 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:16,632 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:16,632 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:16,632 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:16,633 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:16,633 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:16,633 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:16,633 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:16,633 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,634 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [104] a816350f-f985-4e5f-8ca8-679638bf3212-00000061 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000061&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=104&ts=1731777616617
2024-11-16 17:20:16,642 [s3a-transfer-obs-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:16,643 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:20:16,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:16,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:16,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:16,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777616592; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:16,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:16,643 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:16,643 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:16,644 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:16,645 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:16,645 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:16,646 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:16,646 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:16,646 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,646 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,646 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:16,646 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,647 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a816350f-f985-4e5f-8ca8-679638bf3212-00000061 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000061&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=105&ts=1731777616617
2024-11-16 17:20:16,662 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:20:16,662 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:20:16,663 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.017s
2024-11-16 17:20:16,663 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:16,664 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:16,664 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,664 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,665 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:16,665 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,665 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a816350f-f985-4e5f-8ca8-679638bf3212-00000061 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000061/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000061&t0=101&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=105&ts=1731777616617
2024-11-16 17:20:16,677 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:16,677 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:20:16,678 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:20:16,678 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.033s
2024-11-16 17:20:16,678 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.033s
2024-11-16 17:20:16,678 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.046s
2024-11-16 17:20:16,679 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:16,679 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:16,682 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:16,699 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 14, active threads = 0, queued tasks = 0, completed tasks = 14], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_close_operations=8) (op_is_directory=0) (committer_magic_files_created=0) (op_exists=0) (op_delete.failures=0) (object_continue_list_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_operations=0) (audit_request_execution=126) (object_put_request=22) (action_file_opened=8) (stream_read_fully_operations=0) (committer_materialize_file.failures=0) (stream_read_exceptions=0) (stream_read_vectored_read_bytes_discarded=5974) (op_copy_from_local_file=0) (object_delete_request.failures=0) (object_bulk_delete_request=22) (object_delete_request=0) (stream_read_seek_bytes_skipped=0) (committer_commit_job.failures=0) (action_file_opened.failures=0) (op_open=8) (op_get_content_summary.failures=0) (object_put_bytes=720896) (files_delete_rejected=0) (op_mkdirs.failures=0) (committer_materialize_file=0) (op_get_file_checksum=0) (object_continue_list_request=0) (op_create.failures=0) (object_list_request.failures=0) (stream_write_total_time=0) (stream_read_operations_incomplete=0) (op_create=11) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_close=65336) (committer_stage_file_upload.failures=0) (op_createfile.failures=0) (op_is_file.failures=0) (op_glob_status=0) (multipart_upload_aborted=0) (committer_tasks_completed=0) (fake_directories_created=0) (stream_read_operations=1) (multipart_upload_completed=0) (op_xattr_get_named.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=11) (op_access=0) (committer_load_single_pending_file.failures=0) (op_access.failures=0) (stream_read_seek_forward_operations=0) (store_exists_probe=0) (op_mkdirs=11) (committer_bytes_uploaded=0) (object_put_request_completed=22) (op_xattr_get_map.failures=0) (stream_read_bytes_backwards_on_seek=0) (store_exists_probe.failures=0) (stream_read_seek_policy_changed=9) (stream_read_vectored_operations=7) (stream_read_bytes_discarded_in_abort=0) (op_list_status.failures=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_completed=0) (op_xattr_get_named_map.failures=0) (op_abort.failures=0) (delegation_tokens_issued.failures=0) (stream_write_bytes=720896) (object_select_requests=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (op_create_non_recursive=0) (op_xattr_list=0) (op_exists.failures=0) (stream_write_total_data=1441792) (op_xattr_get_named=0) (op_get_file_status=1) (op_copy_from_local_file.failures=0) (multipart_upload_list=0) (store_io_throttled=0) (action_executor_acquired=0) (object_put_request.failures=0) (directories_deleted=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (object_multipart_initiated.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted=0) (delegation_tokens_issued=0) (object_multipart_aborted=0) (committer_commits_aborted=0) (stream_write_queue_duration.failures=0) (committer_commits_reverted=0) (op_get_file_checksum.failures=0) (op_delete=11) (committer_tasks_failed=0) (op_list_files=0) (committer_commit_job=0) (store_io_request=126) (multipart_upload_started=0) (stream_read_closed=1) (ignored_errors=0) (op_list_files.failures=0) (committer_stage_file_upload=0) (files_deleted=11) (stream_write_block_uploads_committed=0) (committer_commits.failures=0) (object_multipart_initiated=0) (stream_read_vectored_combined_ranges=9) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (op_xattr_list.failures=0) (committer_load_single_pending_file=0) (object_delete_objects=22) (directories_created=11) (op_rename=0) (committer_jobs_completed=0) (files_copied_bytes=0) (stream_read_vectored_incoming_ranges=25) (action_http_head_request.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=1) (multipart_instantiated=0) (action_http_get_request=8) (files_created=11) (op_abort=0) (files_copied=0) (committer_commits_created=0) (op_xattr_get_map=0) (multipart_upload_list.failures=0) (object_copy_requests=0) (op_get_delegation_token=0) (op_hsync=0) (stream_write_block_uploads_aborted=0) (committer_magic_marker_put=0) (op_is_directory.failures=0) (stream_read_seek_backward_operations=0) (committer_bytes_committed=0) (stream_write_exceptions=0) (fake_directories_deleted=11) (op_get_content_summary=0) (op_rename.failures=0) (audit_access_check_failure=0) (object_bulk_delete_request.failures=0) (op_list_located_status=0) (op_openfile=0) (committer_jobs_failed=0) (store_io_retry=0) (audit_failure=0) (op_createfile=0) (op_get_file_status.failures=0) (action_http_head_request=30) (stream_aborted=0) (audit_span_creation=43) (stream_read_total_bytes=68410) (op_xattr_get_named_map=0) (op_list_status=0) (stream_read_remote_stream_drain=1) (stream_read_bytes=3074) (object_list_request=44) (op_is_file=0) (op_glob_status.failures=0) (stream_read_opened=1) (object_metadata_request=30) (op_get_delegation_token.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=11) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((object_delete_request.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_abort.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (op_mkdirs.min=27) (op_is_directory.min=-1) (op_xattr_list.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_files.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.min=-1) (op_access.min=-1) (op_get_file_checksum.min=-1) (stream_write_queue_duration.min=-1) (object_continue_list_request.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (action_executor_acquired.min=-1) (op_delete.min=32) (op_access.failures.min=-1) (op_createfile.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.min=6) (op_get_file_status.failures.min=-1) (action_http_get_request.min=24) (op_glob_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.failures.min=-1) (object_list_request.failures.min=-1) (op_create.min=8) (committer_load_single_pending_file.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_map.min=-1) (op_exists.min=-1) (action_executor_acquired.failures.min=-1) (action_http_head_request.min=4) (op_exists.failures.min=-1) (multipart_upload_list.min=-1) (object_bulk_delete_request.min=7) (op_list_status.min=-1) (object_put_request.min=35) (op_rename.min=-1) (object_continue_list_request.min=-1) (op_rename.failures.min=-1) (object_multipart_aborted.min=-1) (op_createfile.failures.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.failures.min=-1) (action_file_opened.min=7) (op_list_status.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.min=5) (op_is_directory.failures.min=-1) (committer_materialize_file.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_file.min=-1));
maximums=((op_get_content_summary.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.max=-1) (object_continue_list_request.max=-1) (op_get_file_checksum.max=-1) (op_rename.max=-1) (op_createfile.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.max=-1) (op_list_status.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.max=30) (op_exists.max=-1) (op_xattr_get_named.failures.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (object_multipart_aborted.max=-1) (stream_write_queue_duration.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.max=27) (op_xattr_get_named.max=-1) (op_create.max=74) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (op_is_file.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_checksum.failures.max=-1) (action_file_opened.max=15) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.failures.max=-1) (object_delete_request.failures.max=-1) (op_exists.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=19) (op_get_file_status.max=5) (stream_read_remote_stream_drain.max=1) (op_mkdirs.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_put_request.max=104) (committer_magic_marker_put.failures.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.max=346) (action_file_opened.failures.max=-1) (op_list_files.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_createfile.max=-1) (object_list_request.failures.max=-1) (op_access.failures.max=-1) (object_list_request.max=210) (action_executor_acquired.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_head_request.failures.max=-1) (store_exists_probe.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_files.max=-1) (op_delete.max=111) (stream_read_remote_stream_aborted.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=11, sum=224, mean=20.3636)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=30, sum=203, mean=6.7667)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=22, sum=307, mean=13.9545)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=8, sum=61, mean=7.6250)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=22, sum=777, mean=35.3182)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=44, sum=673, mean=15.2955)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=11, sum=762, mean=69.2727)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=181, mean=22.6250)) (op_delete.mean=(samples=11, sum=627, mean=57.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:16,699 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:16,700 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,700 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,700 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,700 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,700 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000062 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000062&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616699
2024-11-16 17:20:16,710 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:16,711 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,712 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,713 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,713 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000062 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000062&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616699
2024-11-16 17:20:16,718 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,718 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:16,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:16,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:16,720 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000062 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000062&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616699
2024-11-16 17:20:16,745 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:16,746 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:16,746 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.028s
2024-11-16 17:20:16,747 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:16,748 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,748 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,749 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,749 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,750 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000063 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000063&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616747
2024-11-16 17:20:16,761 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:16,761 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,762 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:16,762 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18217565358182312221.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:16,763 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18217565358182312221.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_multipart_initiated=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (op_abort=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18217565358182312221.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,763 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,763 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:16,763 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18217565358182312221.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:16,764 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:16,764 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:16,764 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:16,765 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:16,765 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] a816350f-f985-4e5f-8ca8-679638bf3212-00000063 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000063&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=107&ts=1731777616747
2024-11-16 17:20:16,797 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:16,797 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:16,797 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.033s
2024-11-16 17:20:16,801 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18217565358182312221.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:16,801 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18217565358182312221.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,801 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18217565358182312221.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,801 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:16,801 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,802 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (op_hflush=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (object_put_request=1) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (action_executor_acquired=0) (op_abort=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=32) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=32) (op_abort.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=32, mean=32.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:16,802 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:16,803 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,803 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,803 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:16,803 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000064 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000064&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616803
2024-11-16 17:20:16,808 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:16,809 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:16,809 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,809 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:16,809 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:20:16,809 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,809 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-65535&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000064&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616803
2024-11-16 17:20:16,826 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.017s
2024-11-16 17:20:16,826 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:16,827 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:20:16,827 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:16,828 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:16,828 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:16,831 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:16,832 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,832 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,832 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:16,832 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] a816350f-f985-4e5f-8ca8-679638bf3212-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000064&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=108&ts=1731777616803
2024-11-16 17:20:16,849 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:20:16,849 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:16,849 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,850 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:16,850 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:20:16,850 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:20:16,850 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7436 bytes
2024-11-16 17:20:16,850 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:16,850 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:16,850 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:16,851 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8748 bytes
2024-11-16 17:20:16,851 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:20:16,851 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:16,852 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_closed=1) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_operations=1) (action_http_get_request=2) (stream_read_prefetch_operations=0) (stream_read_opened=1) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_vectored_incoming_ranges=2) (stream_read_block_read.failures=0) (stream_read_total_bytes=65686) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain=1) (action_file_opened=1) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_bytes=350) (action_http_get_request.failures=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.failures.min=-1) (action_http_get_request.min=17) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=5));
maximums=((action_file_opened.max=5) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_get_request.max=17) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.mean=(samples=2, sum=34, mean=17.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:16,853 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:16,853 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,854 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,854 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000065 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000065&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616853
2024-11-16 17:20:16,861 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,861 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,861 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a816350f-f985-4e5f-8ca8-679638bf3212-00000065 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000065&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=106&ts=1731777616853
2024-11-16 17:20:16,871 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:16,872 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:16,872 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:16,872 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:16,872 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:16,873 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:16,873 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:16,873 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:16,873 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:16,873 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:16,875 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:16,875 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:16,875 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:16,875 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:16,875 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,875 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [109] a816350f-f985-4e5f-8ca8-679638bf3212-00000065 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000065&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=109&ts=1731777616853
2024-11-16 17:20:16,881 [s3a-transfer-obs-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:16,882 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:16,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:16,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:16,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:16,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777616793; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:16,883 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:16,883 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:16,883 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:16,884 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:16,884 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:16,884 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:16,885 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:16,885 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:16,885 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,885 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,885 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:16,885 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,885 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a816350f-f985-4e5f-8ca8-679638bf3212-00000065 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000065&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=110&ts=1731777616853
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:16,896 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:16,897 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:16,897 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a816350f-f985-4e5f-8ca8-679638bf3212-00000065 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000065/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000065&t0=106&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=110&ts=1731777616853
2024-11-16 17:20:16,904 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:16,904 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:16,904 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:20:16,904 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:20:16,904 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:20:16,904 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:20:16,904 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:16,904 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:16,906 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:16,917 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 15], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_bytes=786432) (multipart_upload_abort_under_path_invoked=0) (committer_commit_job=0) (stream_read_fully_operations=0) (committer_commits.failures=0) (store_exists_probe=0) (op_list_located_status=0) (stream_read_vectored_incoming_ranges=27) (stream_read_opened=2) (op_get_file_status=1) (committer_jobs_completed=0) (op_delete=12) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (object_delete_request=0) (stream_write_exceptions_completing_upload=0) (store_io_throttled=0) (op_get_delegation_token=0) (op_xattr_get_named=0) (multipart_upload_aborted=0) (directories_deleted=0) (action_http_get_request=10) (op_is_file=0) (files_copied=0) (stream_read_operations_incomplete=0) (op_rename.failures=0) (stream_aborted=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_createfile.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_map.failures=0) (op_glob_status.failures=0) (stream_read_close_operations=9) (stream_read_seek_backward_operations=0) (object_list_request.failures=0) (stream_read_remote_stream_drain.failures=0) (multipart_instantiated=0) (action_http_head_request.failures=0) (op_get_file_checksum.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads_committed=0) (committer_bytes_uploaded=0) (op_is_directory=0) (committer_commit_job.failures=0) (stream_write_block_uploads=12) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=1) (multipart_upload_list=0) (op_xattr_list.failures=0) (stream_read_seek_forward_operations=0) (object_multipart_initiated=0) (files_created=12) (action_http_head_request=33) (op_is_file.failures=0) (stream_write_queue_duration=0) (committer_jobs_failed=0) (committer_tasks_completed=0) (multipart_upload_part_put=0) (op_exists=0) (stream_read_version_mismatches=0) (multipart_upload_part_put_bytes=0) (op_is_directory.failures=0) (object_multipart_aborted=0) (object_delete_request.failures=0) (committer_commits_completed=0) (object_bulk_delete_request=24) (object_put_request.failures=0) (op_hflush=0) (stream_read_closed=2) (directories_created=12) (store_exists_probe.failures=0) (op_get_content_summary.failures=0) (audit_request_execution=139) (action_http_get_request.failures=0) (op_list_status=0) (stream_read_exceptions=0) (stream_read_bytes=3424) (committer_commits_created=0) (files_copied_bytes=0) (multipart_upload_started=0) (multipart_upload_completed=0) (stream_read_seek_policy_changed=10) (committer_commits_aborted=0) (stream_write_block_uploads_aborted=0) (audit_failure=0) (op_list_status.failures=0) (stream_read_vectored_combined_ranges=10) (committer_load_single_pending_file=0) (op_xattr_list=0) (op_mkdirs.failures=0) (op_mkdirs=12) (op_xattr_get_map=0) (committer_stage_file_upload=0) (committer_load_single_pending_file.failures=0) (op_delete.failures=0) (object_list_request=48) (op_create.failures=0) (committer_tasks_failed=0) (stream_write_exceptions=0) (committer_stage_file_upload.failures=0) (audit_span_creation=47) (op_access.failures=0) (stream_write_total_data=1572864) (op_open=9) (committer_commits_reverted=0) (op_get_content_summary=0) (audit_access_check_failure=0) (op_copy_from_local_file=0) (stream_read_vectored_operations=8) (op_access=0) (fake_directories_deleted=12) (object_put_request=24) (stream_read_operations=2) (store_io_retry=0) (op_create_non_recursive=0) (delegation_tokens_issued.failures=0) (op_abort=0) (stream_read_total_bytes=134096) (object_select_requests=0) (stream_write_total_time=0) (multipart_upload_list.failures=0) (committer_magic_marker_put.failures=0) (op_list_files.failures=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_discarded=0) (op_get_delegation_token.failures=0) (op_glob_status=0) (op_get_file_status.failures=0) (object_multipart_aborted.failures=0) (stream_read_seek_operations=0) (object_multipart_initiated.failures=0) (files_delete_rejected=0) (committer_bytes_committed=0) (store_io_request=139) (stream_read_remote_stream_drain=2) (op_abort.failures=0) (stream_write_queue_duration.failures=0) (object_bulk_delete_request.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (op_rename=0) (fake_directories_created=0) (committer_magic_files_created=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named_map=0) (delegation_tokens_issued=0) (object_copy_requests=0) (op_create=12) (object_metadata_request=33) (object_put_request_completed=24) (action_file_opened=9) (op_exists.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_openfile=0) (object_continue_list_request=0) (object_continue_list_request.failures=0) (files_deleted=12) (object_delete_objects=24) (committer_materialize_file=0) (op_get_file_checksum=0) (ignored_errors=0) (op_list_files=0) (op_xattr_get_named.failures=0) (stream_read_vectored_read_bytes_discarded=5984) (op_xattr_get_named_map.failures=0) (object_put_bytes=786432) (op_createfile=0) (action_executor_acquired=0));
gauges=((object_put_request_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=12) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0));
minimums=((object_list_request.min=6) (op_delete.min=31) (op_xattr_list.min=-1) (object_continue_list_request.min=-1) (object_bulk_delete_request.min=7) (committer_commit_job.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (op_list_status.min=-1) (op_get_file_status.min=5) (op_exists.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_get_request.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=5) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_file_opened.failures.min=-1) (op_createfile.min=-1) (object_multipart_initiated.min=-1) (op_glob_status.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (op_rename.failures.min=-1) (op_create.min=8) (store_exists_probe.failures.min=-1) (op_mkdirs.min=27) (op_xattr_get_named.min=-1) (op_list_files.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.min=32) (object_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.failures.min=-1) (op_access.min=-1) (op_get_delegation_token.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_get_request.min=17) (op_rename.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.failures.min=-1) (object_list_request.failures.min=-1) (committer_materialize_file.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.failures.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_head_request.min=4) (object_put_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.min=-1) (object_delete_request.min=-1));
maximums=((committer_stage_file_upload.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=27) (op_get_file_status.failures.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_materialize_file.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.max=-1) (action_http_get_request.max=30) (op_xattr_get_named.failures.max=-1) (op_list_status.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_write_queue_duration.max=-1) (object_delete_request.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.max=74) (op_copy_from_local_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_is_directory.max=-1) (op_is_file.max=-1) (action_http_head_request.max=19) (op_createfile.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=111) (store_exists_probe.failures.max=-1) (op_access.max=-1) (op_xattr_get_map.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=210) (op_glob_status.failures.max=-1) (op_rename.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.max=346) (op_get_file_checksum.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named_map.max=-1) (action_file_opened.max=15) (action_http_head_request.failures.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (op_access.failures.max=-1) (object_put_request.max=104) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_content_summary.max=-1) (op_create.failures.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (op_xattr_list.max=-1) (op_get_file_status.max=5) (committer_commit_job.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (object_put_request.failures.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (op_delete.failures.max=-1));
means=((object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=24, sum=325, mean=13.5417)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=33, sum=220, mean=6.6667)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=10, sum=215, mean=21.5000)) (op_delete.mean=(samples=12, sum=658, mean=54.8333)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=12, sum=238, mean=19.8333)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=12, sum=810, mean=67.5000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=48, sum=710, mean=14.7917)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=9, sum=66, mean=7.3333)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=24, sum=835, mean=34.7917)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:16,917 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:16,917 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,917 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,918 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,918 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,918 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a816350f-f985-4e5f-8ca8-679638bf3212-00000066 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000066&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=111&ts=1731777616917
2024-11-16 17:20:16,924 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:16,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:16,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:16,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:16,924 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a816350f-f985-4e5f-8ca8-679638bf3212-00000066 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000066&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=111&ts=1731777616917
2024-11-16 17:20:16,927 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:16,927 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:16,927 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:16,927 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:16,928 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a816350f-f985-4e5f-8ca8-679638bf3212-00000066 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000066&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=111&ts=1731777616917
2024-11-16 17:20:16,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:16,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:16,938 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:20:16,939 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:16,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:16,940 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:16,940 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a816350f-f985-4e5f-8ca8-679638bf3212-00000067 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000067&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=111&ts=1731777616939
2024-11-16 17:20:16,946 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:16,946 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,947 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:16,947 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5899557733445921031.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:16,949 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5899557733445921031.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (action_executor_acquired=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (op_abort=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (op_abort.failures=0) (op_hsync=0) (object_multipart_initiated=0) (op_hflush=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1));
maximums=((op_abort.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5899557733445921031.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,949 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,949 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:16,949 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5899557733445921031.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:16,950 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:16,950 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:16,950 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:16,950 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:16,950 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] a816350f-f985-4e5f-8ca8-679638bf3212-00000067 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000067&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=112&ts=1731777616939
2024-11-16 17:20:16,981 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:16,981 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:16,981 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.031s
2024-11-16 17:20:16,982 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5899557733445921031.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:16,982 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5899557733445921031.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,982 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5899557733445921031.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:16,982 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:16,983 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:16,984 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (stream_write_total_data=65536) (object_put_request=1) (object_put_request.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (op_abort=0) (stream_write_bytes=65536) (op_hflush=0) (stream_write_total_time=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=31) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=31) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=31, mean=31.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:16,984 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:16,985 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:16,985 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:16,985 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:16,985 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a816350f-f985-4e5f-8ca8-679638bf3212-00000068 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000068&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=111&ts=1731777616985
2024-11-16 17:20:16,990 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:16,990 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:16,990 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,990 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:20:16,990 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:16,990 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:20:16,992 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,992 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:16,992 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,992 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:16,992 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a816350f-f985-4e5f-8ca8-679638bf3212-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=16101-16200&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000068&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=114&ts=1731777616985
2024-11-16 17:20:16,992 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:20:16,992 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:16,993 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:16,994 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a816350f-f985-4e5f-8ca8-679638bf3212-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-4200&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000068&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=113&ts=1731777616985
2024-11-16 17:20:17,011 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:20:17,011 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:20:17,012 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,012 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:20:17,012 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,013 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_close_operations=1) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_closed=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_incoming_ranges=3) (stream_read_bytes=300) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_fully_operations=0) (action_file_opened=1) (stream_read_total_bytes=300) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_block_acquire_read.failures=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request=2) (stream_read_vectored_combined_ranges=2) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=18) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=19) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=5) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=37, mean=18.5000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:17,014 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:17,015 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,015 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,015 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a816350f-f985-4e5f-8ca8-679638bf3212-00000069 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000069&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=111&ts=1731777617014
2024-11-16 17:20:17,018 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,018 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,019 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a816350f-f985-4e5f-8ca8-679638bf3212-00000069 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000069&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=111&ts=1731777617014
2024-11-16 17:20:17,026 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:17,026 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:17,026 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:17,026 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:17,026 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:17,026 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:17,027 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:17,027 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:17,027 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:17,027 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:17,027 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:17,027 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:17,027 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:17,028 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:17,028 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,028 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [115] a816350f-f985-4e5f-8ca8-679638bf3212-00000069 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000069&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=115&ts=1731777617014
2024-11-16 17:20:17,034 [s3a-transfer-obs-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:17,034 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:17,034 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:17,034 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:17,034 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:17,034 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777616976; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:17,034 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:17,035 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:17,035 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:17,035 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:17,035 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:17,035 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:17,035 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:17,036 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:17,036 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,036 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,036 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:17,036 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,036 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a816350f-f985-4e5f-8ca8-679638bf3212-00000069 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000069&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=116&ts=1731777617014
2024-11-16 17:20:17,046 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:20:17,046 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:20:17,046 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:20:17,046 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:17,046 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:17,046 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,047 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,047 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:17,047 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,047 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a816350f-f985-4e5f-8ca8-679638bf3212-00000069 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000069/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000069&t0=111&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=116&ts=1731777617014
2024-11-16 17:20:17,055 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:17,056 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:20:17,056 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:20:17,056 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:20:17,056 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:20:17,056 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:20:17,056 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:17,056 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:17,058 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:17,069 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 16], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_aborted=0) (object_metadata_request=36) (op_xattr_list=0) (object_put_bytes=851968) (object_multipart_initiated=0) (object_delete_request.failures=0) (stream_read_total_bytes=134396) (stream_read_seek_operations=0) (op_list_files.failures=0) (stream_read_seek_bytes_skipped=0) (object_bulk_delete_request=26) (op_open=10) (files_copied=0) (op_hsync=0) (action_file_opened.failures=0) (object_put_request.failures=0) (store_io_throttled=0) (stream_read_bytes_discarded_in_close=130672) (multipart_upload_list=0) (op_mkdirs.failures=0) (op_create_non_recursive=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads_aborted=0) (object_delete_request=0) (store_io_request=152) (stream_read_unbuffered=1) (files_created=13) (audit_access_check_failure=0) (op_mkdirs=13) (op_create=13) (multipart_upload_list.failures=0) (files_delete_rejected=0) (stream_read_seek_policy_changed=11) (op_glob_status=0) (stream_read_operations=2) (multipart_upload_part_put_bytes=0) (committer_materialize_file=0) (committer_magic_files_created=0) (action_executor_acquired=0) (op_xattr_get_named_map=0) (op_xattr_get_named.failures=0) (stream_write_total_data=1703936) (multipart_upload_started=0) (stream_read_bytes=3724) (committer_jobs_failed=0) (op_list_status.failures=0) (op_delete.failures=0) (committer_bytes_uploaded=0) (committer_magic_marker_put=0) (op_create.failures=0) (audit_request_execution=152) (store_exists_probe.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_part_put=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (multipart_upload_completed=0) (stream_read_bytes_backwards_on_seek=0) (op_is_directory=0) (op_is_file.failures=0) (object_list_request=52) (object_delete_objects=26) (stream_read_vectored_combined_ranges=12) (committer_tasks_failed=0) (committer_commit_job.failures=0) (action_http_head_request.failures=0) (committer_magic_marker_put.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (op_list_files=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (op_get_content_summary=0) (stream_aborted=0) (object_copy_requests=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_created=0) (directories_deleted=0) (op_is_directory.failures=0) (committer_commits_reverted=0) (object_continue_list_request.failures=0) (op_list_located_status=0) (op_access=0) (committer_stage_file_upload.failures=0) (action_http_head_request=36) (committer_jobs_completed=0) (action_executor_acquired.failures=0) (op_copy_from_local_file=0) (action_http_get_request=12) (object_continue_list_request=0) (stream_write_exceptions=0) (op_xattr_get_map=0) (object_list_request.failures=0) (stream_write_queue_duration.failures=0) (op_get_file_checksum.failures=0) (op_xattr_get_named=0) (op_get_content_summary.failures=0) (stream_read_version_mismatches=0) (op_openfile=0) (committer_stage_file_upload=0) (stream_read_seek_forward_operations=0) (store_io_retry=0) (op_rename=0) (op_abort=0) (stream_read_vectored_operations=9) (multipart_upload_aborted=0) (committer_materialize_file.failures=0) (op_hflush=0) (committer_load_single_pending_file=0) (stream_write_exceptions_completing_upload=0) (stream_read_fully_operations=0) (op_glob_status.failures=0) (committer_commits.failures=0) (committer_bytes_committed=0) (op_delete=13) (committer_tasks_completed=0) (directories_created=13) (audit_failure=0) (stream_write_block_uploads_committed=0) (action_file_opened=10) (op_get_delegation_token=0) (fake_directories_deleted=13) (stream_write_queue_duration=0) (action_http_get_request.failures=0) (op_rename.failures=0) (stream_read_remote_stream_drain=2) (committer_commit_job=0) (stream_write_block_uploads=13) (object_put_request_completed=26) (op_get_file_status=1) (op_get_file_checksum=0) (audit_span_creation=51) (stream_read_close_operations=10) (files_copied_bytes=0) (op_exists=0) (op_abort.failures=0) (op_exists.failures=0) (op_get_delegation_token.failures=0) (op_xattr_list.failures=0) (op_xattr_get_map.failures=0) (op_xattr_get_named_map.failures=0) (object_select_requests=0) (stream_read_operations_incomplete=0) (files_deleted=13) (stream_write_bytes=851968) (committer_commits_completed=0) (op_copy_from_local_file.failures=0) (op_createfile.failures=0) (object_put_request=26) (fake_directories_created=0) (multipart_instantiated=0) (delegation_tokens_issued=0) (committer_commits_aborted=0) (op_createfile=0) (stream_read_vectored_incoming_ranges=30) (stream_read_opened=2) (stream_write_total_time=0) (op_is_file=0) (object_multipart_initiated.failures=0) (stream_read_closed=2) (object_multipart_aborted.failures=0) (op_access.failures=0) (op_get_file_status.failures=0) (stream_read_vectored_read_bytes_discarded=9985) (delegation_tokens_issued.failures=0) (op_list_status=0) (store_exists_probe=0) (ignored_errors=0));
gauges=((stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=13) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_xattr_get_named_map.failures.min=-1) (action_file_opened.min=5) (op_list_status.failures.min=-1) (object_multipart_aborted.min=-1) (op_rename.failures.min=-1) (op_xattr_list.failures.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_delete.min=30) (op_get_content_summary.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.min=8) (op_list_status.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=3) (op_glob_status.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.min=31) (op_xattr_get_named_map.min=-1) (op_abort.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.failures.min=-1) (op_list_files.failures.min=-1) (op_is_file.min=-1) (op_createfile.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.min=5) (multipart_upload_list.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_rename.min=-1) (op_get_file_checksum.min=-1) (committer_stage_file_upload.min=-1) (action_executor_acquired.min=-1) (op_createfile.failures.min=-1) (action_http_get_request.min=18) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.failures.min=-1) (store_exists_probe.min=-1) (object_bulk_delete_request.min=7) (op_create.failures.min=-1) (object_delete_request.min=-1) (store_exists_probe.failures.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.failures.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.min=-1) (op_is_file.failures.min=-1) (object_list_request.min=5) (op_xattr_list.min=-1) (object_delete_request.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.min=22) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.min=-1) (committer_commit_job.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (op_xattr_get_named.max=-1) (op_mkdirs.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.max=210) (op_list_files.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_list.max=-1) (op_createfile.failures.max=-1) (op_list_files.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.max=19) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_materialize_file.max=-1) (op_access.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (op_delete.max=111) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.max=-1) (op_rename.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (op_get_delegation_token.max=-1) (op_abort.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.max=27) (stream_read_remote_stream_drain.max=1) (op_access.failures.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.max=-1) (action_http_get_request.max=30) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_list.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.failures.max=-1) (op_get_content_summary.max=-1) (object_put_request.max=104) (action_executor_acquired.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.max=-1) (op_is_directory.max=-1) (op_get_content_summary.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.max=74) (op_mkdirs.max=346) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.max=-1) (action_file_opened.max=15) (object_multipart_aborted.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.max=-1) (op_exists.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.max=-1) (op_glob_status.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_list_status.max=-1) (op_createfile.max=-1) (object_delete_request.max=-1) (op_exists.failures.max=-1) (op_abort.failures.max=-1) (op_get_file_status.max=5) (op_xattr_get_map.max=-1) (op_is_file.failures.max=-1));
means=((op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=36, sum=231, mean=6.4167)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=13, sum=832, mean=64.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=252, mean=21.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=52, sum=734, mean=14.1154)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=13, sum=688, mean=52.9231)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=10, sum=71, mean=7.1000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=26, sum=343, mean=13.1923)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=13, sum=247, mean=19.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=26, sum=876, mean=33.6923)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:17,069 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:17,070 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,070 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,070 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,070 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,070 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a816350f-f985-4e5f-8ca8-679638bf3212-00000070 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000070&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=117&ts=1731777617069
2024-11-16 17:20:17,080 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:17,080 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,080 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,080 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,080 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,080 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a816350f-f985-4e5f-8ca8-679638bf3212-00000070 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000070&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=117&ts=1731777617069
2024-11-16 17:20:17,085 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,086 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:17,086 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:17,086 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:17,086 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a816350f-f985-4e5f-8ca8-679638bf3212-00000070 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000070&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=117&ts=1731777617069
2024-11-16 17:20:17,097 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:17,097 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:17,097 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:20:17,097 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:17,098 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,098 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,098 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,098 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,098 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a816350f-f985-4e5f-8ca8-679638bf3212-00000071 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000071&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=117&ts=1731777617098
2024-11-16 17:20:17,105 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:17,105 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,105 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:17,106 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2324681113085224401.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:17,110 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2324681113085224401.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (object_put_request=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (op_hflush=0) (op_hsync=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (op_abort=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2324681113085224401.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,110 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,110 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:17,110 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2324681113085224401.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:17,112 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:17,113 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:17,113 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:17,113 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:17,113 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] a816350f-f985-4e5f-8ca8-679638bf3212-00000071 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000071&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=118&ts=1731777617098
2024-11-16 17:20:17,138 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:17,138 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:17,138 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:20:17,142 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2324681113085224401.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:17,142 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2324681113085224401.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,142 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2324681113085224401.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,142 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:17,142 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,143 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (committer_magic_marker_put=0) (op_abort=0) (op_hsync=0) (stream_write_exceptions=0) (object_put_request=1) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (op_hflush=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=25) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.max=25) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:17,143 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:17,144 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,144 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,144 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:17,145 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a816350f-f985-4e5f-8ca8-679638bf3212-00000072 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000072/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000072&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=117&ts=1731777617144
2024-11-16 17:20:17,149 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:17,149 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:17,149 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,151 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=0) (stream_read_version_mismatches=0) (stream_read_total_bytes=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=1) (stream_read_close_operations=1) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (action_http_get_request=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_fully_operations=0) (stream_read_exceptions=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=5));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=5) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:17,155 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:17,155 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,155 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,155 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a816350f-f985-4e5f-8ca8-679638bf3212-00000073 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000073&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=117&ts=1731777617155
2024-11-16 17:20:17,163 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,163 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,164 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a816350f-f985-4e5f-8ca8-679638bf3212-00000073 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000073&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=117&ts=1731777617155
2024-11-16 17:20:17,171 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:17,171 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:17,171 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:17,171 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:17,172 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:17,172 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:17,172 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:17,172 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:17,172 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:17,172 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:17,172 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:17,172 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:17,172 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:17,173 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:17,173 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,173 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [119] a816350f-f985-4e5f-8ca8-679638bf3212-00000073 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000073&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=119&ts=1731777617155
2024-11-16 17:20:17,180 [s3a-transfer-obs-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:17,180 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:20:17,180 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:17,180 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:17,181 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:17,181 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777617134; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:17,181 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:17,181 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:17,181 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:17,181 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:17,182 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:17,185 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:17,185 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:17,186 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:17,186 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,186 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,186 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:17,186 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,186 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] a816350f-f985-4e5f-8ca8-679638bf3212-00000073 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000073&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=120&ts=1731777617155
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:17,194 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,195 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] a816350f-f985-4e5f-8ca8-679638bf3212-00000073 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000073/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000073&t0=117&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=120&ts=1731777617155
2024-11-16 17:20:17,202 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:17,203 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:17,203 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:20:17,203 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.018s
2024-11-16 17:20:17,203 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:20:17,203 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:20:17,203 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:17,203 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:17,205 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:17,218 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 17, active threads = 0, queued tasks = 0, completed tasks = 17], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_create_non_recursive=0) (multipart_upload_part_put=0) (files_copied_bytes=0) (committer_commits_completed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_drain=2) (object_put_request.failures=0) (op_createfile=0) (op_is_directory.failures=0) (stream_read_seek_backward_operations=0) (object_delete_objects=28) (action_file_opened.failures=0) (op_exists.failures=0) (op_xattr_get_named_map.failures=0) (object_multipart_initiated.failures=0) (op_glob_status=0) (op_is_file=0) (committer_tasks_failed=0) (op_list_located_status=0) (op_open=11) (stream_read_bytes=3724) (op_xattr_get_map=0) (stream_write_exceptions=0) (op_get_content_summary.failures=0) (object_continue_list_request=0) (op_xattr_list.failures=0) (store_io_retry=0) (audit_failure=0) (stream_write_block_uploads=14) (stream_read_remote_stream_aborted=0) (object_put_bytes=917504) (stream_read_version_mismatches=0) (stream_read_closed=2) (op_hsync=0) (committer_stage_file_upload=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_forward_operations=0) (multipart_upload_part_put_bytes=0) (fake_directories_created=0) (op_hflush=0) (op_delete=14) (files_created=14) (stream_write_exceptions_completing_upload=0) (stream_read_seek_policy_changed=12) (object_copy_requests=0) (stream_read_unbuffered=1) (committer_tasks_completed=0) (delegation_tokens_issued.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (op_get_file_status.failures=0) (committer_commit_job=0) (audit_span_creation=55) (stream_read_total_bytes=134396) (committer_magic_files_created=0) (fake_directories_deleted=14) (object_continue_list_request.failures=0) (op_xattr_get_named_map=0) (committer_commits_reverted=0) (object_list_request=56) (stream_read_bytes_discarded_in_abort=0) (stream_write_total_data=1835008) (committer_jobs_completed=0) (action_http_head_request.failures=0) (audit_request_execution=163) (object_select_requests=0) (committer_commits_created=0) (delegation_tokens_issued=0) (stream_read_bytes_discarded_in_close=130672) (committer_magic_marker_put=0) (op_openfile=0) (object_bulk_delete_request.failures=0) (multipart_upload_started=0) (committer_bytes_uploaded=0) (store_io_request=163) (stream_read_vectored_combined_ranges=12) (object_metadata_request=39) (action_http_get_request=12) (op_access.failures=0) (files_copied=0) (committer_stage_file_upload.failures=0) (stream_read_operations_incomplete=0) (committer_materialize_file=0) (store_exists_probe=0) (stream_read_seek_operations=0) (op_xattr_get_named=0) (op_create.failures=0) (op_xattr_list=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (multipart_upload_list=0) (multipart_upload_completed=0) (stream_read_seek_bytes_discarded=0) (op_list_status=0) (op_get_file_status=1) (committer_bytes_committed=0) (committer_commit_job.failures=0) (files_deleted=14) (op_createfile.failures=0) (multipart_upload_aborted=0) (stream_read_bytes_backwards_on_seek=0) (op_access=0) (store_exists_probe.failures=0) (stream_write_total_time=0) (multipart_upload_list.failures=0) (stream_write_queue_duration.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads_aborted=0) (op_mkdirs.failures=0) (op_is_directory=0) (ignored_errors=0) (op_rename.failures=0) (op_get_file_checksum=0) (op_abort=0) (stream_write_bytes=917504) (object_put_request_completed=28) (stream_write_block_uploads_committed=0) (stream_read_fully_operations=0) (op_get_delegation_token=0) (op_list_status.failures=0) (committer_materialize_file.failures=0) (committer_magic_marker_put.failures=0) (action_file_opened=11) (directories_created=14) (object_put_request=28) (multipart_instantiated=0) (object_delete_request=0) (op_delete.failures=0) (op_mkdirs=14) (directories_deleted=0) (op_list_files=0) (committer_commits_aborted=0) (op_xattr_get_named.failures=0) (files_delete_rejected=0) (stream_read_exceptions=0) (op_list_files.failures=0) (committer_commits.failures=0) (committer_jobs_failed=0) (stream_read_vectored_operations=9) (stream_read_vectored_read_bytes_discarded=9985) (op_copy_from_local_file.failures=0) (op_get_delegation_token.failures=0) (action_http_head_request=39) (op_glob_status.failures=0) (op_is_file.failures=0) (stream_read_operations=2) (object_list_request.failures=0) (op_xattr_get_map.failures=0) (op_abort.failures=0) (op_create=14) (stream_read_seek_bytes_skipped=0) (op_rename=0) (object_multipart_aborted.failures=0) (op_get_file_checksum.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (committer_load_single_pending_file=0) (object_multipart_initiated=0) (stream_aborted=0) (object_delete_request.failures=0) (stream_read_opened=2) (object_bulk_delete_request=28) (stream_read_close_operations=11) (op_get_content_summary=0) (audit_access_check_failure=0) (op_exists=0) (op_copy_from_local_file=0) (store_io_throttled=0) (stream_read_vectored_incoming_ranges=30));
gauges=((stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=14) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0));
minimums=((op_xattr_list.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_directory.min=-1) (op_rename.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.failures.min=-1) (op_create.min=8) (object_delete_request.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=5) (object_put_request.min=25) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.failures.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_createfile.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_delete.failures.min=-1) (op_list_status.failures.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=18) (op_get_delegation_token.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_content_summary.min=-1) (op_is_file.min=-1) (op_exists.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_glob_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_delete_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.min=30) (op_abort.failures.min=-1) (object_list_request.failures.min=-1) (op_mkdirs.min=22) (op_rename.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_status.min=5) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (op_exists.failures.min=-1) (object_continue_list_request.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.min=3) (op_list_status.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.min=-1) (action_file_opened.min=5) (op_list_files.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.failures.min=-1) (op_list_files.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (object_bulk_delete_request.min=7) (op_copy_from_local_file.failures.min=-1));
maximums=((op_access.max=-1) (op_get_file_checksum.failures.max=-1) (op_mkdirs.max=346) (op_is_directory.max=-1) (object_multipart_aborted.max=-1) (action_file_opened.failures.max=-1) (op_exists.max=-1) (action_file_opened.max=15) (object_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (op_delete.max=111) (committer_load_single_pending_file.failures.max=-1) (op_is_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.failures.max=-1) (op_delete.failures.max=-1) (op_abort.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.max=1) (op_createfile.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_delegation_token.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.max=104) (object_delete_request.max=-1) (committer_commit_job.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.max=5) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_rename.failures.max=-1) (op_create.max=74) (op_xattr_list.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (op_access.failures.max=-1) (op_mkdirs.failures.max=-1) (op_create.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_content_summary.max=-1) (object_list_request.max=210) (object_multipart_aborted.failures.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.max=30) (op_get_content_summary.failures.max=-1) (action_executor_acquired.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.max=-1) (store_exists_probe.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.max=27) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_createfile.max=-1) (action_http_head_request.max=19) (op_copy_from_local_file.max=-1));
means=((action_http_get_request.mean=(samples=12, sum=252, mean=21.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=39, sum=249, mean=6.3846)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=56, sum=764, mean=13.6429)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=28, sum=912, mean=32.5714)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=14, sum=860, mean=61.4286)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=14, sum=255, mean=18.2143)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=11, sum=76, mean=6.9091)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=14, sum=719, mean=51.3571)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=28, sum=359, mean=12.8214)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:17,218 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:17,218 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,218 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,218 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,219 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,219 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a816350f-f985-4e5f-8ca8-679638bf3212-00000074 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000074&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=121&ts=1731777617218
2024-11-16 17:20:17,228 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:17,228 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,228 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,229 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,229 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,229 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a816350f-f985-4e5f-8ca8-679638bf3212-00000074 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000074&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=121&ts=1731777617218
2024-11-16 17:20:17,232 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,232 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:17,232 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:17,233 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:17,233 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a816350f-f985-4e5f-8ca8-679638bf3212-00000074 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000074&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=121&ts=1731777617218
2024-11-16 17:20:17,245 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:17,245 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:17,245 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:20:17,245 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:17,246 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,246 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,246 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,246 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,246 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a816350f-f985-4e5f-8ca8-679638bf3212-00000075 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000075&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=121&ts=1731777617246
2024-11-16 17:20:17,253 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:17,254 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,254 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:17,254 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15471328310745937010.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:17,255 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15471328310745937010.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort=0) (op_abort.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (op_hsync=0) (object_put_request.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (op_hflush=0) (stream_write_total_data=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15471328310745937010.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,255 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,255 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:17,255 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15471328310745937010.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:17,255 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:17,255 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:17,256 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:17,256 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:17,256 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a816350f-f985-4e5f-8ca8-679638bf3212-00000075 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000075&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=122&ts=1731777617246
2024-11-16 17:20:17,283 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:17,284 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:17,284 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:20:17,284 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15471328310745937010.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:17,284 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15471328310745937010.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,284 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15471328310745937010.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,284 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:17,284 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,287 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (object_put_request=1) (stream_write_block_uploads=1) (op_abort.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (op_abort=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=27) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=27) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:17,287 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:17,288 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,288 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,288 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:17,288 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a816350f-f985-4e5f-8ca8-679638bf3212-00000076 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000076&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=121&ts=1731777617288
2024-11-16 17:20:17,293 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:17,293 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:17,293 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,293 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:20:17,293 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:17,293 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:20:17,293 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:20:17,293 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,294 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,294 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:17,294 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] a816350f-f985-4e5f-8ca8-679638bf3212-00000076 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=10-1199&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000076&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=123&ts=1731777617288
2024-11-16 17:20:17,307 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:20:17,308 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:20:17,308 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:20:17,308 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:20:17,308 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,309 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_prefetch_operations=0) (stream_read_close_operations=1) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_total_bytes=315) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_vectored_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_unbuffered=0) (stream_read_vectored_incoming_ranges=4) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=1) (action_executor_acquired=0) (stream_read_closed=0) (stream_read_vectored_combined_ranges=1) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_bytes=315));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=5) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=14) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=5) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=14) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=14, mean=14.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:17,311 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:17,311 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,311 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,312 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a816350f-f985-4e5f-8ca8-679638bf3212-00000077 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000077&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=121&ts=1731777617310
2024-11-16 17:20:17,317 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,317 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,317 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a816350f-f985-4e5f-8ca8-679638bf3212-00000077 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000077&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=121&ts=1731777617310
2024-11-16 17:20:17,326 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:17,327 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:17,327 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:17,327 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:17,327 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:17,328 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:17,328 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:17,328 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:17,329 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:17,329 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:17,331 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:17,331 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:17,333 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:17,333 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:17,334 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,339 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [124] a816350f-f985-4e5f-8ca8-679638bf3212-00000077 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000077&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=124&ts=1731777617310
2024-11-16 17:20:17,349 [s3a-transfer-obs-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:20:17,349 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.016s
2024-11-16 17:20:17,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:17,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:17,351 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:17,351 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777617278; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:17,351 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:17,352 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:17,352 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:17,353 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:17,353 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:17,353 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:17,354 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:17,354 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:17,354 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,354 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,354 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:17,354 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,355 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a816350f-f985-4e5f-8ca8-679638bf3212-00000077 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000077&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=125&ts=1731777617310
2024-11-16 17:20:17,365 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:17,365 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,366 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a816350f-f985-4e5f-8ca8-679638bf3212-00000077 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000077/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000077&t0=121&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=125&ts=1731777617310
2024-11-16 17:20:17,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:20:17,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:20:17,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:20:17,383 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:20:17,383 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.030s
2024-11-16 17:20:17,383 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.054s
2024-11-16 17:20:17,383 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:17,384 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:17,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:17,401 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 18, active threads = 0, queued tasks = 0, completed tasks = 18], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_exists.failures=0) (stream_read_remote_stream_aborted=0) (op_get_content_summary.failures=0) (audit_span_creation=59) (committer_commits_reverted=0) (delegation_tokens_issued.failures=0) (committer_load_single_pending_file.failures=0) (op_access.failures=0) (committer_commit_job.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_write_exceptions_completing_upload=0) (op_exists=0) (stream_read_seek_bytes_discarded=0) (multipart_instantiated=0) (object_delete_request=0) (files_deleted=15) (stream_aborted=0) (op_xattr_get_named_map.failures=0) (op_delete=15) (committer_bytes_uploaded=0) (stream_read_operations_incomplete=0) (op_mkdirs.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (op_get_file_checksum.failures=0) (object_metadata_request=42) (op_create_non_recursive=0) (store_io_request=175) (op_is_directory.failures=0) (audit_failure=0) (op_xattr_get_map.failures=0) (op_createfile=0) (op_rename.failures=0) (object_multipart_initiated=0) (op_delete.failures=0) (committer_load_single_pending_file=0) (op_list_files.failures=0) (fake_directories_deleted=15) (object_copy_requests=0) (object_bulk_delete_request.failures=0) (committer_tasks_failed=0) (object_put_bytes=983040) (stream_write_total_data=1966080) (stream_read_seek_operations=0) (op_xattr_list=0) (op_hflush=0) (stream_write_queue_duration=0) (object_select_requests=0) (object_delete_request.failures=0) (op_is_directory=0) (stream_read_remote_stream_drain=2) (committer_commits_created=0) (files_copied_bytes=0) (audit_access_check_failure=0) (op_open=12) (stream_read_bytes_discarded_in_abort=0) (committer_jobs_failed=0) (action_executor_acquired.failures=0) (committer_commits_completed=0) (stream_read_exceptions=0) (op_xattr_get_named_map=0) (multipart_upload_part_put_bytes=0) (action_file_opened=12) (stream_read_unbuffered=1) (committer_stage_file_upload=0) (action_http_head_request.failures=0) (multipart_upload_list=0) (op_xattr_get_named.failures=0) (store_exists_probe=0) (delegation_tokens_issued=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_drain.failures=0) (op_get_content_summary=0) (op_abort.failures=0) (object_continue_list_request.failures=0) (op_mkdirs=15) (op_xattr_get_map=0) (op_is_file=0) (committer_bytes_committed=0) (op_create.failures=0) (multipart_upload_aborted=0) (files_copied=0) (directories_created=15) (object_put_request=30) (object_list_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_copy_from_local_file=0) (op_list_status=0) (op_access=0) (ignored_errors=0) (stream_read_total_bytes=134711) (store_io_retry=0) (op_list_files=0) (op_hsync=0) (committer_magic_files_created=0) (committer_commits_aborted=0) (committer_magic_marker_put=0) (stream_read_opened=2) (action_http_head_request=42) (stream_write_block_uploads_aborted=0) (op_openfile=0) (store_exists_probe.failures=0) (op_is_file.failures=0) (object_multipart_aborted=0) (op_list_status.failures=0) (op_rename=0) (stream_write_queue_duration.failures=0) (stream_write_bytes=983040) (committer_magic_marker_put.failures=0) (object_bulk_delete_request=30) (stream_read_close_operations=12) (files_created=15) (op_get_delegation_token=0) (op_get_file_status.failures=0) (object_list_request=60) (op_abort=0) (committer_commits.failures=0) (op_get_file_checksum=0) (action_http_get_request.failures=0) (fake_directories_created=0) (op_copy_from_local_file.failures=0) (object_put_request.failures=0) (stream_read_fully_operations=0) (multipart_upload_completed=0) (audit_request_execution=175) (stream_read_vectored_incoming_ranges=34) (stream_read_closed=2) (object_put_request_completed=30) (multipart_upload_list.failures=0) (stream_read_vectored_read_bytes_discarded=10860) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (committer_jobs_completed=0) (op_list_located_status=0) (stream_read_seek_policy_changed=13) (stream_write_block_uploads_committed=0) (files_delete_rejected=0) (op_createfile.failures=0) (stream_read_vectored_operations=10) (multipart_upload_started=0) (committer_materialize_file.failures=0) (stream_read_operations=2) (store_io_throttled=0) (directories_deleted=0) (stream_read_bytes=4039) (committer_stage_file_upload.failures=0) (stream_write_total_time=0) (op_create=15) (op_xattr_list.failures=0) (action_executor_acquired=0) (stream_read_bytes_backwards_on_seek=0) (object_multipart_aborted.failures=0) (committer_materialize_file=0) (op_xattr_get_named=0) (action_http_get_request=13) (multipart_upload_abort_under_path_invoked=0) (op_get_file_status=1) (op_glob_status.failures=0) (op_glob_status=0) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_close=130672) (object_continue_list_request=0) (stream_write_block_uploads=15) (committer_commit_job=0) (stream_read_vectored_combined_ranges=13) (object_delete_objects=30) (committer_tasks_completed=0) (action_file_opened.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=15) (stream_read_active_prefetch_operations=0));
minimums=((op_create.min=8) (op_get_file_status.failures.min=-1) (op_is_directory.min=-1) (op_abort.min=-1) (op_xattr_get_named.min=-1) (store_exists_probe.min=-1) (op_delete.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.failures.min=-1) (op_access.min=-1) (op_glob_status.failures.min=-1) (op_get_file_status.min=5) (object_bulk_delete_request.min=7) (multipart_upload_list.min=-1) (object_delete_request.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_get_request.min=14) (op_copy_from_local_file.min=-1) (op_list_files.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.min=5) (object_put_request.min=27) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_checksum.failures.min=-1) (store_exists_probe.failures.min=-1) (op_rename.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.failures.min=-1) (op_createfile.min=-1) (committer_commit_job.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (action_file_opened.min=5) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=3) (delegation_tokens_issued.min=-1) (op_mkdirs.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.min=-1) (op_access.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_mkdirs.min=22) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (op_rename.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.min=30) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.failures.min=-1));
maximums=((object_bulk_delete_request.max=27) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (object_list_request.max=210) (op_exists.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named.max=-1) (op_mkdirs.failures.max=-1) (object_put_request.max=104) (object_delete_request.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_create.max=74) (op_get_file_status.failures.max=-1) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.max=-1) (multipart_upload_list.max=-1) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (op_delete.max=111) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (action_file_opened.max=15) (op_xattr_get_named_map.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_directory.max=-1) (op_createfile.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_content_summary.failures.max=-1) (op_get_file_status.max=5) (op_get_delegation_token.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (action_http_get_request.max=30) (committer_magic_marker_put.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (op_is_directory.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.max=346) (stream_read_remote_stream_aborted.max=-1) (op_get_file_checksum.max=-1) (op_list_files.max=-1) (op_access.max=-1) (op_list_status.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (op_delete.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_file.max=-1) (action_http_head_request.max=19) (op_access.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.max=-1) (op_exists.failures.max=-1) (op_rename.max=-1) (committer_load_single_pending_file.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=42, sum=261, mean=6.2143)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=30, sum=951, mean=31.7000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=15, sum=775, mean=51.6667)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=13, sum=266, mean=20.4615)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=30, sum=387, mean=12.9000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=15, sum=888, mean=59.2000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=15, sum=263, mean=17.5333)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=60, sum=804, mean=13.4000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=12, sum=81, mean=6.7500)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:17,402 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:17,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,402 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,403 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a816350f-f985-4e5f-8ca8-679638bf3212-00000078 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000078&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=126&ts=1731777617402
2024-11-16 17:20:17,413 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:17,413 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,415 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a816350f-f985-4e5f-8ca8-679638bf3212-00000078 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000078&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=126&ts=1731777617402
2024-11-16 17:20:17,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,420 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:17,420 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:17,421 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:17,421 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a816350f-f985-4e5f-8ca8-679638bf3212-00000078 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000078&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=126&ts=1731777617402
2024-11-16 17:20:17,443 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:17,443 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:17,443 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:20:17,443 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:17,444 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,444 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,444 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,444 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,444 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a816350f-f985-4e5f-8ca8-679638bf3212-00000079 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000079&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=126&ts=1731777617444
2024-11-16 17:20:17,463 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:20:17,463 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,463 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:17,464 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7866259825452381392.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:17,465 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7866259825452381392.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (op_abort=0) (multipart_upload_completed.failures=0) (object_put_request=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (op_hflush=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_hsync=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7866259825452381392.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,465 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,465 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:17,465 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7866259825452381392.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:17,466 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:17,466 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:17,466 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:17,466 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:17,466 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] a816350f-f985-4e5f-8ca8-679638bf3212-00000079 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000079&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=127&ts=1731777617444
2024-11-16 17:20:17,507 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:17,507 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:17,507 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.041s
2024-11-16 17:20:17,507 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7866259825452381392.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:17,508 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7866259825452381392.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,508 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7866259825452381392.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,508 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:17,508 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,509 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (action_executor_acquired.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (object_put_request.failures=0) (object_put_request=1) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (op_hsync=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (op_abort.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_put_request.min=41) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=41) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=41, mean=41.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:17,510 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:17,511 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,512 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,512 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:17,512 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a816350f-f985-4e5f-8ca8-679638bf3212-00000080 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000080&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=126&ts=1731777617511
2024-11-16 17:20:17,518 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:17,518 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:17,518 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,518 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:20:17,518 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:17,519 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:20:17,519 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:20:17,519 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,519 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,519 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:17,520 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] a816350f-f985-4e5f-8ca8-679638bf3212-00000080 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-7998&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000080&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=128&ts=1731777617511
2024-11-16 17:20:17,538 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:20:17,539 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:20:17,539 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:20:17,539 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,540 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=300) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_block_read=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_operations=1) (action_executor_acquired=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes=300) (stream_read_vectored_incoming_ranges=3) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=1) (stream_read_close_operations=1) (stream_read_remote_stream_drain=0) (stream_read_seek_operations=0) (stream_read_unbuffered=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_opened=0) (action_http_get_request=1) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_version_mismatches=0) (stream_read_operations=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.min=7) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=20) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=20) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=7) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=20, mean=20.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:17,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:17,542 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,542 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,543 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a816350f-f985-4e5f-8ca8-679638bf3212-00000081 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000081&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=126&ts=1731777617541
2024-11-16 17:20:17,549 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,549 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,549 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a816350f-f985-4e5f-8ca8-679638bf3212-00000081 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000081&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=126&ts=1731777617541
2024-11-16 17:20:17,585 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.036s
2024-11-16 17:20:17,585 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:17,586 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:17,586 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:17,586 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:17,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:17,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:17,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:17,586 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:17,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:17,586 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:17,586 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:17,589 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:17,590 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:17,590 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,591 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [129] a816350f-f985-4e5f-8ca8-679638bf3212-00000081 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000081&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=129&ts=1731777617541
2024-11-16 17:20:17,603 [s3a-transfer-obs-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:20:17,604 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.015s
2024-11-16 17:20:17,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:17,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:17,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:17,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777617499; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:17,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:17,604 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:17,605 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:17,605 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:17,605 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:17,605 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:17,605 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:17,606 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:17,606 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,606 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,606 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:17,606 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,606 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a816350f-f985-4e5f-8ca8-679638bf3212-00000081 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000081&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=130&ts=1731777617541
2024-11-16 17:20:17,617 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:17,618 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:20:17,618 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:20:17,618 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:17,618 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:17,618 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,618 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,619 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:17,619 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,619 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a816350f-f985-4e5f-8ca8-679638bf3212-00000081 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000081/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000081&t0=126&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=130&ts=1731777617541
2024-11-16 17:20:17,633 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:20:17,634 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:20:17,634 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:20:17,634 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.029s
2024-11-16 17:20:17,634 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:20:17,634 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.048s
2024-11-16 17:20:17,634 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:17,634 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:17,645 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:17,663 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 19, active threads = 0, queued tasks = 0, completed tasks = 19], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_content_summary.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (stream_write_bytes=1048576) (op_exists.failures=0) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_close=130672) (store_io_retry=0) (op_create.failures=0) (ignored_errors=0) (audit_request_execution=187) (multipart_upload_started=0) (op_xattr_list=0) (committer_tasks_completed=0) (stream_write_block_uploads=16) (stream_write_queue_duration.failures=0) (op_xattr_get_map.failures=0) (stream_read_remote_stream_drain=2) (object_put_request.failures=0) (object_list_request.failures=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=18559) (op_xattr_get_named_map=0) (delegation_tokens_issued.failures=0) (stream_read_total_bytes=135011) (op_delete=16) (committer_load_single_pending_file=0) (stream_write_total_data=2097152) (stream_write_queue_duration=0) (stream_read_seek_bytes_discarded=0) (files_delete_rejected=0) (stream_read_version_mismatches=0) (action_http_head_request=45) (stream_read_remote_stream_aborted.failures=0) (committer_commits.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_list_files.failures=0) (stream_write_exceptions=0) (object_metadata_request=45) (op_list_status.failures=0) (store_exists_probe.failures=0) (stream_read_vectored_incoming_ranges=37) (action_file_opened.failures=0) (op_create=16) (files_copied=0) (stream_read_closed=2) (op_mkdirs=16) (committer_jobs_completed=0) (multipart_upload_list.failures=0) (object_multipart_initiated=0) (audit_access_check_failure=0) (op_is_file.failures=0) (action_http_get_request=14) (stream_aborted=0) (op_access.failures=0) (object_multipart_initiated.failures=0) (stream_read_seek_forward_operations=0) (op_createfile=0) (committer_tasks_failed=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_get_named.failures=0) (op_hflush=0) (object_delete_request.failures=0) (committer_commits_created=0) (multipart_upload_abort_under_path_invoked=0) (op_copy_from_local_file=0) (directories_deleted=0) (op_access=0) (op_xattr_get_named=0) (op_hsync=0) (store_exists_probe=0) (committer_load_single_pending_file.failures=0) (op_xattr_list.failures=0) (stream_read_opened=2) (audit_span_creation=63) (multipart_upload_list=0) (op_glob_status.failures=0) (stream_read_remote_stream_aborted=0) (op_mkdirs.failures=0) (stream_read_unbuffered=1) (files_created=16) (op_createfile.failures=0) (stream_read_seek_policy_changed=14) (object_multipart_aborted.failures=0) (action_http_head_request.failures=0) (op_get_file_checksum=0) (multipart_upload_completed=0) (audit_failure=0) (stream_write_block_uploads_aborted=0) (op_exists=0) (object_delete_objects=32) (op_delete.failures=0) (committer_stage_file_upload=0) (committer_commit_job.failures=0) (multipart_instantiated=0) (committer_materialize_file=0) (committer_commits_aborted=0) (op_is_file=0) (op_get_file_checksum.failures=0) (object_multipart_aborted=0) (committer_commit_job=0) (stream_read_bytes=4339) (op_rename.failures=0) (object_put_bytes=1048576) (object_continue_list_request.failures=0) (files_deleted=16) (op_get_content_summary=0) (object_bulk_delete_request=32) (op_get_file_status=1) (op_abort=0) (op_abort.failures=0) (stream_write_total_time=0) (action_http_get_request.failures=0) (stream_read_close_operations=13) (stream_write_exceptions_completing_upload=0) (op_list_located_status=0) (stream_read_exceptions=0) (committer_magic_files_created=0) (op_get_file_status.failures=0) (files_copied_bytes=0) (committer_commits_reverted=0) (committer_bytes_uploaded=0) (object_bulk_delete_request.failures=0) (object_continue_list_request=0) (multipart_upload_part_put_bytes=0) (op_is_directory.failures=0) (op_is_directory=0) (object_copy_requests=0) (store_io_request=187) (op_xattr_get_map=0) (op_xattr_get_named_map.failures=0) (op_list_files=0) (committer_stage_file_upload.failures=0) (op_list_status=0) (op_openfile=0) (multipart_upload_part_put=0) (committer_bytes_committed=0) (committer_magic_marker_put=0) (object_put_request_completed=32) (op_rename=0) (directories_created=16) (fake_directories_created=0) (stream_read_operations=2) (object_delete_request=0) (action_file_opened=13) (committer_commits_completed=0) (fake_directories_deleted=16) (committer_jobs_failed=0) (action_executor_acquired=0) (op_glob_status=0) (stream_read_seek_backward_operations=0) (store_io_throttled=0) (op_copy_from_local_file.failures=0) (object_list_request=64) (committer_magic_marker_put.failures=0) (delegation_tokens_issued=0) (op_open=13) (stream_read_operations_incomplete=0) (op_get_delegation_token.failures=0) (op_create_non_recursive=0) (object_select_requests=0) (object_put_request=32) (stream_read_vectored_operations=11) (op_get_delegation_token=0) (stream_read_vectored_combined_ranges=14) (stream_read_fully_operations=0) (stream_write_block_uploads_committed=0));
gauges=((object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=16) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((object_delete_request.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_create.failures.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.min=-1) (op_create.min=8) (op_get_content_summary.failures.min=-1) (op_rename.failures.min=-1) (committer_commit_job.min=-1) (op_list_status.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.failures.min=-1) (op_exists.min=-1) (committer_materialize_file.failures.min=-1) (op_rename.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.min=-1) (op_copy_from_local_file.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.min=7) (store_exists_probe.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_materialize_file.min=-1) (op_abort.failures.min=-1) (op_delete.min=30) (delegation_tokens_issued.failures.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.failures.min=-1) (op_access.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.min=-1) (op_mkdirs.min=22) (op_list_files.min=-1) (action_http_head_request.min=3) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_list_request.min=5) (op_get_file_checksum.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_map.min=-1) (op_createfile.failures.min=-1) (op_get_file_status.min=5) (op_get_delegation_token.failures.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=20) (action_file_opened.min=7) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named.min=-1) (object_put_request.min=41));
maximums=((stream_write_queue_duration.max=-1) (op_exists.max=-1) (store_exists_probe.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_abort.max=-1) (op_create.max=74) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_status.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_aborted.max=-1) (op_rename.max=-1) (action_file_opened.max=15) (op_list_status.max=-1) (object_bulk_delete_request.max=27) (op_is_directory.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.max=19) (store_exists_probe.failures.max=-1) (object_list_request.failures.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.max=5) (stream_read_remote_stream_drain.max=1) (object_multipart_initiated.max=-1) (op_glob_status.failures.max=-1) (op_rename.failures.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (op_xattr_get_named.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_list_request.max=210) (stream_read_remote_stream_drain.failures.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_file.max=-1) (op_access.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.max=-1) (op_is_directory.max=-1) (op_list_files.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.max=-1) (op_copy_from_local_file.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (op_glob_status.max=-1) (op_list_files.max=-1) (action_http_get_request.max=30) (object_delete_request.max=-1) (op_mkdirs.max=346) (op_createfile.failures.max=-1) (op_delete.failures.max=-1) (op_delete.max=111) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.max=104) (op_is_file.failures.max=-1) (op_create.failures.max=-1));
means=((op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=64, sum=882, mean=13.7813)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=32, sum=1014, mean=31.6875)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=32, sum=412, mean=12.8750)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=14, sum=286, mean=20.4286)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=45, sum=278, mean=6.1778)) (op_create.mean=(samples=16, sum=283, mean=17.6875)) (op_mkdirs.mean=(samples=16, sum=929, mean=58.0625)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=16, sum=823, mean=51.4375)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=13, sum=88, mean=6.7692)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:17,664 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:17,664 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,665 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,665 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,665 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,665 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a816350f-f985-4e5f-8ca8-679638bf3212-00000082 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000082&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=131&ts=1731777617664
2024-11-16 17:20:17,674 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:17,674 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,674 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,674 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,674 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,674 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a816350f-f985-4e5f-8ca8-679638bf3212-00000082 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000082&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=131&ts=1731777617664
2024-11-16 17:20:17,679 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,679 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:17,679 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:17,679 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:17,679 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a816350f-f985-4e5f-8ca8-679638bf3212-00000082 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000082&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=131&ts=1731777617664
2024-11-16 17:20:17,705 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:17,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:17,706 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.027s
2024-11-16 17:20:17,706 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:17,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,706 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,706 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,706 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a816350f-f985-4e5f-8ca8-679638bf3212-00000083 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000083&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=131&ts=1731777617706
2024-11-16 17:20:17,723 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:20:17,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,723 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:17,724 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18019149147811729286.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:17,725 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18019149147811729286.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (op_hsync=0) (object_multipart_initiated=0) (op_abort.failures=0) (op_abort=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18019149147811729286.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,725 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,726 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:17,726 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18019149147811729286.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:17,728 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:17,728 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:17,728 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:17,728 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:17,728 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] a816350f-f985-4e5f-8ca8-679638bf3212-00000083 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000083&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=132&ts=1731777617706
2024-11-16 17:20:17,775 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:17,775 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:17,775 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.047s
2024-11-16 17:20:17,776 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18019149147811729286.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:17,776 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18019149147811729286.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,776 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18019149147811729286.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,776 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:17,776 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,777 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_total_time=0) (object_multipart_aborted=0) (op_abort=0) (object_multipart_initiated.failures=0) (object_put_request=1) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (op_abort.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=47) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=47) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=47, mean=47.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:17,778 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:17,778 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,778 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,778 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:17,779 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a816350f-f985-4e5f-8ca8-679638bf3212-00000084 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000084&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=131&ts=1731777617778
2024-11-16 17:20:17,782 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:17,782 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:17,783 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,783 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:17,783 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:17,783 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:20:17,784 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,784 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,784 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:17,784 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,784 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,785 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:17,785 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] a816350f-f985-4e5f-8ca8-679638bf3212-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000084&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=133&ts=1731777617778
2024-11-16 17:20:17,785 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,785 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,786 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:17,786 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a816350f-f985-4e5f-8ca8-679638bf3212-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000084&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=135&ts=1731777617778
2024-11-16 17:20:17,785 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:17,786 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] a816350f-f985-4e5f-8ca8-679638bf3212-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-14435&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000084&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=134&ts=1731777617778
2024-11-16 17:20:17,813 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.027s
2024-11-16 17:20:17,813 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:20:17,814 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,822 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,828 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.043s
2024-11-16 17:20:17,828 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:20:17,829 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:20:17,829 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:17,829 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=1424) (stream_aborted=0) (stream_read_opened=0) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_combined_ranges=3) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=5) (action_file_opened.failures=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_bytes=1424) (stream_read_seek_policy_changed=1) (action_file_opened=1) (stream_read_version_mismatches=0) (stream_read_block_read.failures=0) (action_http_get_request=3));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=28) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=4) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=4) (action_http_get_request.max=43) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=99, mean=33.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:17,831 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:17,831 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,832 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,832 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a816350f-f985-4e5f-8ca8-679638bf3212-00000085 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000085&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=131&ts=1731777617831
2024-11-16 17:20:17,836 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,836 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,836 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a816350f-f985-4e5f-8ca8-679638bf3212-00000085 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000085&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=131&ts=1731777617831
2024-11-16 17:20:17,843 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:17,843 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:17,844 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:17,844 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:17,844 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:17,844 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:17,844 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:17,844 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:17,844 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:17,844 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:17,844 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:17,844 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:17,844 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:17,844 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:17,845 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,845 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [141] a816350f-f985-4e5f-8ca8-679638bf3212-00000085 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000085&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=141&ts=1731777617831
2024-11-16 17:20:17,851 [s3a-transfer-obs-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:17,853 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:20:17,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:17,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:17,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:17,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777617772; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:17,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:17,856 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:17,856 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:17,856 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:17,858 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:17,858 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:17,859 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:17,859 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:17,859 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,860 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,860 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:17,860 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,861 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] a816350f-f985-4e5f-8ca8-679638bf3212-00000085 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000085&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=142&ts=1731777617831
2024-11-16 17:20:17,871 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:17,872 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:17,873 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] a816350f-f985-4e5f-8ca8-679638bf3212-00000085 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000085/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000085&t0=131&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=142&ts=1731777617831
2024-11-16 17:20:17,881 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:17,881 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:17,882 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:20:17,882 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:20:17,882 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:20:17,882 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.038s
2024-11-16 17:20:17,882 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:17,882 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:17,884 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:17,898 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 20, active threads = 0, queued tasks = 0, completed tasks = 20], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request.failures=0) (object_delete_request.failures=0) (action_executor_acquired=0) (stream_write_block_uploads_aborted=0) (action_http_head_request.failures=0) (op_mkdirs.failures=0) (op_rename=0) (object_continue_list_request=0) (op_is_directory.failures=0) (action_executor_acquired.failures=0) (stream_write_bytes=1114112) (stream_read_vectored_operations=12) (op_xattr_list.failures=0) (op_xattr_get_named_map.failures=0) (ignored_errors=0) (committer_load_single_pending_file=0) (stream_read_vectored_read_bytes_discarded=24503) (op_rename.failures=0) (committer_magic_files_created=0) (object_multipart_initiated.failures=0) (stream_read_remote_stream_drain=2) (files_copied=0) (stream_write_exceptions_completing_upload=0) (object_select_requests=0) (op_createfile=0) (object_metadata_request=48) (stream_read_operations=2) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=5763) (op_get_file_status=1) (stream_read_total_bytes=136435) (stream_read_bytes_backwards_on_seek=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (op_list_status.failures=0) (object_multipart_aborted=0) (audit_failure=0) (audit_access_check_failure=0) (op_access.failures=0) (op_get_delegation_token.failures=0) (op_exists=0) (stream_write_block_uploads=17) (multipart_upload_part_put_bytes=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (op_get_content_summary.failures=0) (object_copy_requests=0) (action_file_opened.failures=0) (op_xattr_get_named_map=0) (committer_stage_file_upload.failures=0) (op_get_file_checksum=0) (op_access=0) (action_http_get_request=17) (op_list_files.failures=0) (op_get_file_checksum.failures=0) (committer_materialize_file.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (op_copy_from_local_file.failures=0) (stream_read_vectored_combined_ranges=17) (committer_jobs_completed=0) (op_delete.failures=0) (multipart_upload_started=0) (stream_read_seek_operations=0) (op_xattr_get_named=0) (store_io_retry=0) (op_copy_from_local_file=0) (action_file_opened=14) (op_glob_status.failures=0) (object_multipart_aborted.failures=0) (op_mkdirs=17) (audit_request_execution=201) (committer_bytes_committed=0) (committer_stage_file_upload=0) (object_bulk_delete_request=34) (multipart_upload_list.failures=0) (committer_bytes_uploaded=0) (stream_read_remote_stream_aborted.failures=0) (op_openfile=0) (op_is_directory=0) (committer_commit_job.failures=0) (stream_read_closed=2) (object_continue_list_request.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=2228224) (stream_read_operations_incomplete=0) (committer_commits.failures=0) (object_delete_request=0) (multipart_instantiated=0) (stream_aborted=0) (op_is_file=0) (store_exists_probe.failures=0) (object_put_request_completed=34) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (op_create_non_recursive=0) (stream_read_seek_bytes_discarded=0) (op_hsync=0) (fake_directories_deleted=17) (committer_tasks_completed=0) (op_open=14) (committer_materialize_file=0) (multipart_upload_completed=0) (stream_write_block_uploads_committed=0) (op_list_files=0) (files_deleted=17) (stream_read_close_operations=14) (committer_tasks_failed=0) (object_put_request.failures=0) (op_list_status=0) (op_create=17) (op_glob_status=0) (op_hflush=0) (object_put_bytes=1114112) (op_create.failures=0) (stream_write_exceptions=0) (object_delete_objects=34) (stream_write_total_time=0) (store_io_request=201) (object_list_request=68) (files_delete_rejected=0) (stream_read_unbuffered=1) (multipart_upload_abort_under_path_invoked=0) (committer_jobs_failed=0) (op_get_content_summary=0) (committer_commits_created=0) (delegation_tokens_issued.failures=0) (delegation_tokens_issued=0) (stream_read_opened=2) (multipart_upload_list=0) (directories_deleted=0) (audit_span_creation=67) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_aborted=0) (op_xattr_list=0) (committer_commits_reverted=0) (op_get_file_status.failures=0) (op_is_file.failures=0) (committer_commit_job=0) (op_get_delegation_token=0) (action_http_head_request=48) (stream_read_vectored_incoming_ranges=42) (op_xattr_get_map=0) (files_created=17) (op_list_located_status=0) (fake_directories_created=0) (store_exists_probe=0) (op_delete=17) (op_xattr_get_named.failures=0) (object_multipart_initiated=0) (stream_read_seek_bytes_skipped=0) (op_createfile.failures=0) (stream_read_seek_policy_changed=15) (directories_created=17) (stream_read_seek_backward_operations=0) (stream_write_queue_duration.failures=0) (store_io_throttled=0) (files_copied_bytes=0) (committer_load_single_pending_file.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_xattr_get_map.failures=0) (object_bulk_delete_request.failures=0) (committer_commits_completed=0) (op_exists.failures=0) (stream_read_version_mismatches=0) (object_put_request=34) (committer_commits_aborted=0) (op_abort=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=17) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (object_put_bytes_pending=0));
minimums=((object_list_request.min=5) (op_get_file_checksum.min=-1) (op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (op_is_file.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.min=1) (store_exists_probe.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.min=47) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.failures.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=4) (action_http_head_request.failures.min=-1) (op_xattr_get_map.min=-1) (multipart_upload_list.min=-1) (op_create.failures.min=-1) (op_access.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_named_map.min=-1) (object_bulk_delete_request.min=7) (op_exists.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_glob_status.min=-1) (object_continue_list_request.failures.min=-1) (op_delete.min=30) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.min=5) (op_get_content_summary.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (action_http_head_request.min=3) (op_abort.failures.min=-1) (op_createfile.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_create.min=8) (stream_write_queue_duration.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.min=-1) (op_delete.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=28) (op_list_files.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (op_rename.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.min=22) (object_multipart_initiated.min=-1) (op_rename.failures.min=-1) (op_access.min=-1) (committer_commit_job.min=-1) (action_http_get_request.failures.min=-1) (committer_materialize_file.min=-1) (op_is_directory.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (store_exists_probe.failures.max=-1) (op_glob_status.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.max=19) (committer_stage_file_upload.failures.max=-1) (op_is_file.max=-1) (committer_commit_job.failures.max=-1) (op_abort.max=-1) (op_rename.max=-1) (committer_commit_job.max=-1) (store_exists_probe.max=-1) (op_exists.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.max=5) (op_createfile.max=-1) (delegation_tokens_issued.max=-1) (object_bulk_delete_request.max=27) (op_get_content_summary.max=-1) (op_list_files.failures.max=-1) (object_put_request.max=104) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_mkdirs.failures.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1) (op_list_files.max=-1) (op_get_file_status.failures.max=-1) (action_http_get_request.max=43) (object_bulk_delete_request.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.max=74) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.failures.max=-1) (op_list_status.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_initiated.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (op_rename.failures.max=-1) (op_abort.failures.max=-1) (op_mkdirs.max=346) (op_access.max=-1) (stream_write_queue_duration.failures.max=-1) (op_glob_status.failures.max=-1) (op_delete.max=111) (action_http_get_request.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.max=1) (op_create.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_list_request.max=210) (op_exists.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (action_file_opened.max=15) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.failures.max=-1));
means=((op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=17, sum=385, mean=22.6471)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=17, sum=861, mean=50.6471)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=14, sum=92, mean=6.5714)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=48, sum=290, mean=6.0417)) (object_put_request.mean=(samples=34, sum=1087, mean=31.9706)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=68, sum=921, mean=13.5441)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=2, mean=1.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=34, sum=432, mean=12.7059)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=17, sum=971, mean=57.1176)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=17, sum=301, mean=17.7059)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:17,899 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:17,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,900 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,900 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000086 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000086&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777617899
2024-11-16 17:20:17,906 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:17,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:17,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:17,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:17,907 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000086 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000086&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777617899
2024-11-16 17:20:17,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:17,911 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:17,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:17,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:17,911 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000086 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000086&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777617899
2024-11-16 17:20:17,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:17,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:17,936 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.025s
2024-11-16 17:20:17,937 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:17,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:17,937 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:17,938 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000087 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000087&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777617937
2024-11-16 17:20:17,943 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:17,943 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,944 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:17,944 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3957488833695179144.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:17,945 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3957488833695179144.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (op_hsync=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (op_hflush=0) (multipart_upload_completed=0) (stream_write_total_data=0) (stream_write_exceptions=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_abort=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3957488833695179144.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,945 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,945 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:17,945 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3957488833695179144.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:17,946 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:17,947 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:17,947 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:17,947 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:17,947 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] a816350f-f985-4e5f-8ca8-679638bf3212-00000087 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000087&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=144&ts=1731777617937
2024-11-16 17:20:17,979 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:17,979 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:17,980 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.033s
2024-11-16 17:20:17,981 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3957488833695179144.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:17,982 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3957488833695179144.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,982 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3957488833695179144.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:17,982 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:17,983 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:17,984 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (op_abort.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (op_hsync=0) (object_put_request=1) (op_abort=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=32) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_put_request.max=32));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=32, mean=32.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:17,985 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:17,986 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:17,986 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:17,986 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:17,986 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000088 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000088&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777617986
2024-11-16 17:20:17,991 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:17,991 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:17,992 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,992 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:20:17,992 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:20:17,997 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:20:17,997 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:17,998 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:20:17,998 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:17,998 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-65535&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000088&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777617986
2024-11-16 17:20:18,001 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,002 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,002 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:20:18,003 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] a816350f-f985-4e5f-8ca8-679638bf3212-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-199&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000088&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=145&ts=1731777617986
2024-11-16 17:20:18,016 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.014s
2024-11-16 17:20:18,018 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,039 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.042s
2024-11-16 17:20:18,039 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:18,039 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:18,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:18,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:20:18,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:20:18,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7539 bytes
2024-11-16 17:20:18,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:18,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:18,041 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:18,042 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8645 bytes
2024-11-16 17:20:18,042 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:20:18,042 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:18,042 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=1) (stream_read_vectored_operations=1) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=2) (stream_read_seek_operations=0) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_opened=1) (stream_read_fully_operations=1) (stream_read_vectored_incoming_ranges=1) (stream_read_vectored_combined_ranges=1) (stream_read_block_acquire_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=1) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_bytes=200) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (stream_read_total_bytes=65536) (stream_aborted=0) (stream_read_operations=1) (action_file_opened=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=5) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=1) (action_executor_acquired.min=-1) (action_http_get_request.min=16) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((action_http_get_request.max=41) (action_file_opened.max=5) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=57, mean=28.5000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:18,042 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:18,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,043 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000089 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000089&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777618042
2024-11-16 17:20:18,047 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,047 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,047 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a816350f-f985-4e5f-8ca8-679638bf3212-00000089 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000089&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=143&ts=1731777618042
2024-11-16 17:20:18,059 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:18,059 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:18,059 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:18,059 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:18,059 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:18,059 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:18,059 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:18,059 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:18,059 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:18,060 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:18,060 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:18,060 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:18,061 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:18,061 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:18,062 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,062 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [146] a816350f-f985-4e5f-8ca8-679638bf3212-00000089 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000089&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=146&ts=1731777618042
2024-11-16 17:20:18,069 [s3a-transfer-obs-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:18,070 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:20:18,070 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:18,070 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:18,070 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:18,070 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777617974; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:18,070 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:18,070 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:18,070 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:18,070 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:18,073 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:18,073 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:18,074 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:18,074 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:18,075 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,075 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,075 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:18,076 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,076 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a816350f-f985-4e5f-8ca8-679638bf3212-00000089 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000089&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=147&ts=1731777618042
2024-11-16 17:20:18,088 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:20:18,088 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:20:18,089 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:20:18,089 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:18,090 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:18,090 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,090 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,091 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:18,091 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,091 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a816350f-f985-4e5f-8ca8-679638bf3212-00000089 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000089/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000089&t0=143&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=147&ts=1731777618042
2024-11-16 17:20:18,100 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:18,101 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:18,101 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:20:18,102 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.029s
2024-11-16 17:20:18,102 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:20:18,102 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:20:18,102 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:18,102 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:18,106 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:18,118 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 21, active threads = 0, queued tasks = 0, completed tasks = 21], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_io_throttled=0) (action_executor_acquired.failures=0) (op_mkdirs.failures=0) (committer_tasks_completed=0) (stream_write_total_time=0) (object_list_request=72) (stream_read_seek_bytes_skipped=0) (op_rename=0) (op_xattr_list=0) (stream_read_seek_policy_changed=16) (op_create_non_recursive=0) (stream_read_seek_bytes_discarded=0) (committer_materialize_file.failures=0) (op_xattr_get_named.failures=0) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_close=196008) (action_http_head_request.failures=0) (op_access=0) (object_bulk_delete_request.failures=0) (committer_jobs_completed=0) (op_createfile=0) (directories_deleted=0) (op_create=18) (op_is_file=0) (audit_failure=0) (op_is_file.failures=0) (action_file_opened=15) (committer_stage_file_upload=0) (ignored_errors=0) (store_exists_probe=0) (stream_read_vectored_combined_ranges=18) (object_put_bytes=1179648) (op_get_file_checksum=0) (stream_write_queue_duration.failures=0) (op_xattr_get_map=0) (stream_read_exceptions=0) (stream_write_bytes=1179648) (multipart_upload_completed=0) (fake_directories_created=0) (op_list_files.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (op_list_located_status=0) (multipart_upload_list.failures=0) (op_openfile=0) (object_delete_request=0) (stream_write_total_data=2359296) (object_put_request_completed=36) (stream_write_block_uploads=18) (op_copy_from_local_file=0) (stream_read_vectored_operations=13) (op_list_files=0) (object_copy_requests=0) (committer_magic_marker_put.failures=0) (object_delete_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_list_request.failures=0) (object_multipart_initiated.failures=0) (op_is_directory.failures=0) (op_delete=18) (op_createfile.failures=0) (stream_read_seek_forward_operations=0) (op_open=15) (op_get_delegation_token=0) (op_xattr_list.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=24503) (op_xattr_get_map.failures=0) (stream_read_vectored_incoming_ranges=43) (committer_bytes_committed=0) (committer_magic_files_created=0) (op_get_file_checksum.failures=0) (committer_commit_job=0) (stream_read_remote_stream_drain.failures=0) (op_exists.failures=0) (files_copied=0) (files_deleted=18) (committer_commits.failures=0) (object_multipart_initiated=0) (op_rename.failures=0) (object_continue_list_request.failures=0) (object_bulk_delete_request=36) (op_delete.failures=0) (action_http_get_request=19) (stream_write_exceptions_completing_upload=0) (object_delete_objects=36) (object_put_request.failures=0) (object_select_requests=0) (op_xattr_get_named=0) (files_delete_rejected=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations=3) (op_get_file_status=1) (delegation_tokens_issued.failures=0) (op_hflush=0) (op_abort=0) (stream_read_total_bytes=201971) (committer_bytes_uploaded=0) (audit_span_creation=71) (object_metadata_request=51) (delegation_tokens_issued=0) (store_io_retry=0) (fake_directories_deleted=18) (committer_stage_file_upload.failures=0) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (directories_created=18) (op_get_content_summary=0) (stream_read_closed=3) (stream_read_seek_backward_operations=0) (stream_read_close_operations=15) (op_create.failures=0) (stream_read_operations_incomplete=0) (op_list_status.failures=0) (committer_commits_aborted=0) (op_glob_status=0) (multipart_upload_abort_under_path_invoked=0) (op_hsync=0) (op_exists=0) (action_file_opened.failures=0) (object_continue_list_request=0) (committer_materialize_file=0) (action_http_head_request=51) (stream_read_unbuffered=1) (committer_commits_reverted=0) (committer_tasks_failed=0) (store_io_request=214) (committer_load_single_pending_file=0) (op_access.failures=0) (op_get_file_status.failures=0) (op_xattr_get_named_map=0) (op_get_content_summary.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=5963) (committer_commits_completed=0) (op_abort.failures=0) (multipart_upload_part_put_bytes=0) (committer_commits_created=0) (multipart_upload_started=0) (stream_write_queue_duration=0) (audit_request_execution=214) (op_glob_status.failures=0) (stream_read_seek_operations=0) (op_is_directory=0) (stream_read_opened=3) (action_executor_acquired=0) (op_mkdirs=18) (stream_write_block_uploads_committed=0) (stream_write_exceptions=0) (stream_read_remote_stream_drain=3) (op_get_delegation_token.failures=0) (stream_aborted=0) (multipart_instantiated=0) (committer_commit_job.failures=0) (audit_access_check_failure=0) (stream_read_fully_operations=1) (multipart_upload_aborted=0) (object_multipart_aborted=0) (files_created=18) (files_copied_bytes=0) (committer_load_single_pending_file.failures=0) (object_put_request=36) (stream_write_block_uploads_aborted=0) (store_exists_probe.failures=0) (op_list_status=0) (op_xattr_get_named_map.failures=0) (committer_jobs_failed=0) (multipart_upload_list=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=18) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0));
minimums=((object_put_request.failures.min=-1) (action_file_opened.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_mkdirs.min=22) (committer_load_single_pending_file.failures.min=-1) (op_create.min=7) (object_list_request.failures.min=-1) (op_delete.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (op_get_delegation_token.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (op_create.failures.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_access.min=-1) (op_exists.min=-1) (multipart_upload_list.min=-1) (committer_commit_job.min=-1) (action_file_opened.min=5) (store_exists_probe.failures.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=16) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.failures.min=-1) (op_createfile.min=-1) (op_get_file_checksum.min=-1) (op_rename.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.min=-1) (op_abort.min=-1) (stream_read_remote_stream_drain.min=1) (op_is_file.min=-1) (object_list_request.min=5) (op_xattr_list.min=-1) (object_put_request.min=32) (op_delete.min=30) (delegation_tokens_issued.min=-1) (object_delete_request.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.min=3) (op_xattr_list.failures.min=-1) (op_is_directory.failures.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.min=-1) (op_list_files.failures.min=-1) (op_rename.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_magic_marker_put.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.min=7) (op_xattr_get_map.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=5) (op_xattr_get_map.min=-1) (op_glob_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((op_glob_status.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.failures.max=-1) (op_exists.failures.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.max=-1) (op_abort.max=-1) (action_http_head_request.max=19) (op_is_directory.max=-1) (op_list_status.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.failures.max=-1) (op_delete.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_access.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.failures.max=-1) (op_rename.failures.max=-1) (object_put_request.max=104) (op_get_file_status.max=5) (op_rename.max=-1) (object_list_request.max=210) (object_multipart_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.max=27) (op_get_content_summary.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.max=15) (op_xattr_get_named.failures.max=-1) (op_copy_from_local_file.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (committer_materialize_file.max=-1) (op_createfile.max=-1) (op_mkdirs.max=346) (action_file_opened.failures.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_exists.max=-1) (op_abort.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=1) (committer_stage_file_upload.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (multipart_upload_list.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_create.max=74) (op_xattr_get_map.max=-1) (action_http_head_request.failures.max=-1) (op_delete.max=111) (stream_read_remote_stream_aborted.max=-1) (op_get_file_checksum.max=-1) (op_copy_from_local_file.failures.max=-1) (op_glob_status.failures.max=-1) (op_create.failures.max=-1) (action_http_get_request.max=43) (committer_commit_job.failures.max=-1) (op_list_status.failures.max=-1) (op_access.max=-1) (object_delete_request.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1));
means=((op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=442, mean=23.2632)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=51, sum=303, mean=5.9412)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=72, sum=952, mean=13.2222)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=36, sum=453, mean=12.5833)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=36, sum=1144, mean=31.7778)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=18, sum=1009, mean=56.0556)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=18, sum=904, mean=50.2222)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=18, sum=308, mean=17.1111)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=15, sum=97, mean=6.4667)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:18,119 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:18,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,119 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,120 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,120 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a816350f-f985-4e5f-8ca8-679638bf3212-00000090 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000090&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=148&ts=1731777618119
2024-11-16 17:20:18,128 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:18,128 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,128 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,128 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,129 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,129 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a816350f-f985-4e5f-8ca8-679638bf3212-00000090 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000090&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=148&ts=1731777618119
2024-11-16 17:20:18,132 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,133 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:18,133 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:18,133 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:18,133 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a816350f-f985-4e5f-8ca8-679638bf3212-00000090 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000090&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=148&ts=1731777618119
2024-11-16 17:20:18,145 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:18,145 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:18,145 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:20:18,145 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:18,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,146 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,146 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,146 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a816350f-f985-4e5f-8ca8-679638bf3212-00000091 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000091&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=148&ts=1731777618146
2024-11-16 17:20:18,152 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:18,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,152 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:18,153 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11694597237440629249.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:18,157 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11694597237440629249.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (object_put_request=0) (object_multipart_initiated=0) (object_put_request.failures=0) (multipart_upload_completed=0) (op_abort=0) (op_hsync=0) (stream_write_total_data=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11694597237440629249.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,157 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,158 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:18,158 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11694597237440629249.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:18,162 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:18,163 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:18,163 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:18,163 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:18,163 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] a816350f-f985-4e5f-8ca8-679638bf3212-00000091 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000091&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=149&ts=1731777618146
2024-11-16 17:20:18,199 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:18,199 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:18,199 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.036s
2024-11-16 17:20:18,200 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11694597237440629249.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:18,200 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11694597237440629249.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,200 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11694597237440629249.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,200 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:18,201 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,202 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_put_request=1) (stream_write_block_uploads=1) (op_hsync=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (op_hflush=0) (object_multipart_aborted=0) (object_put_request.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.min=36) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=36) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_put_request.mean=(samples=1, sum=36, mean=36.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:18,202 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:18,205 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,205 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,206 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:18,206 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] a816350f-f985-4e5f-8ca8-679638bf3212-00000092 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000092/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000092&t0=150&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=150&ts=1731777618205
2024-11-16 17:20:18,215 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:18,216 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:18,216 [s3a-transfer-obs-bucket-unbounded-pool2-t22] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,216 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:20:18,219 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_exceptions=0) (action_file_opened=1) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes=0) (action_http_get_request=0) (stream_read_opened=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_read_vectored_operations=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=0) (stream_read_fully_operations=0) (stream_read_total_bytes=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_file_opened.min=10) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=10) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:18,221 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:18,221 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,222 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,222 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a816350f-f985-4e5f-8ca8-679638bf3212-00000093 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000093&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=148&ts=1731777618221
2024-11-16 17:20:18,227 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,227 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,228 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a816350f-f985-4e5f-8ca8-679638bf3212-00000093 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000093&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=148&ts=1731777618221
2024-11-16 17:20:18,236 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:18,237 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:18,237 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:18,238 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:18,238 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:18,239 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:18,239 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:18,239 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:18,240 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:18,240 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:18,240 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:18,241 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:18,242 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:18,242 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:18,242 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,243 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [151] a816350f-f985-4e5f-8ca8-679638bf3212-00000093 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000093&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=151&ts=1731777618221
2024-11-16 17:20:18,248 [s3a-transfer-obs-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:18,249 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:18,249 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:18,250 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:18,250 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:18,251 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777618194; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:18,251 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:18,251 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:18,251 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:18,251 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:18,251 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:18,251 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:18,252 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:18,252 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:18,252 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,252 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,252 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:18,252 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,252 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a816350f-f985-4e5f-8ca8-679638bf3212-00000093 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000093&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=152&ts=1731777618221
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:18,259 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,260 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a816350f-f985-4e5f-8ca8-679638bf3212-00000093 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000093/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000093&t0=148&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=152&ts=1731777618221
2024-11-16 17:20:18,266 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:18,266 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:18,266 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:20:18,266 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:20:18,266 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:20:18,266 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.026s
2024-11-16 17:20:18,266 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:18,266 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:18,267 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:18,277 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 23, active threads = 0, queued tasks = 0, completed tasks = 23], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_head_request=54) (stream_read_seek_bytes_discarded=0) (store_io_retry=0) (op_get_content_summary=0) (action_executor_acquired=0) (op_mkdirs.failures=0) (op_is_file.failures=0) (stream_write_bytes=1245184) (stream_read_operations_incomplete=0) (op_exists.failures=0) (committer_materialize_file.failures=0) (audit_span_creation=75) (committer_magic_marker_put=0) (committer_commit_job=0) (op_get_file_status=1) (committer_stage_file_upload=0) (op_create=19) (stream_read_remote_stream_drain.failures=0) (committer_commits.failures=0) (directories_deleted=0) (op_list_located_status=0) (op_is_file=0) (op_create_non_recursive=0) (multipart_upload_aborted=0) (object_list_request.failures=0) (op_delete.failures=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_list=0) (stream_read_version_mismatches=0) (ignored_errors=0) (op_exists=0) (object_multipart_aborted=0) (op_glob_status=0) (multipart_upload_part_put=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=3) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (stream_read_seek_forward_operations=0) (audit_request_execution=225) (committer_jobs_completed=0) (op_xattr_get_named=0) (delegation_tokens_issued.failures=0) (op_openfile=0) (stream_read_opened=3) (op_get_delegation_token=0) (op_hflush=0) (files_delete_rejected=0) (audit_failure=0) (stream_read_vectored_combined_ranges=18) (op_copy_from_local_file=0) (op_list_files.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_queue_duration.failures=0) (committer_load_single_pending_file=0) (object_continue_list_request=0) (stream_read_exceptions=0) (committer_bytes_uploaded=0) (stream_read_bytes_discarded_in_close=196008) (op_hsync=0) (store_io_throttled=0) (op_copy_from_local_file.failures=0) (action_executor_acquired.failures=0) (committer_stage_file_upload.failures=0) (object_bulk_delete_request=38) (stream_read_seek_backward_operations=0) (op_rename=0) (multipart_upload_started=0) (action_http_get_request.failures=0) (object_put_request_completed=38) (op_xattr_get_named_map.failures=0) (stream_read_close_operations=16) (op_is_directory=0) (object_multipart_initiated=0) (committer_commit_job.failures=0) (object_multipart_aborted.failures=0) (store_exists_probe.failures=0) (committer_tasks_failed=0) (stream_write_queue_duration=0) (op_abort.failures=0) (op_get_delegation_token.failures=0) (op_xattr_get_map=0) (fake_directories_created=0) (op_list_status.failures=0) (op_xattr_get_map.failures=0) (committer_commits_created=0) (files_created=19) (files_deleted=19) (stream_read_remote_stream_aborted.failures=0) (op_get_content_summary.failures=0) (object_select_requests=0) (stream_aborted=0) (action_http_get_request=19) (op_list_status=0) (stream_read_vectored_read_bytes_discarded=24503) (stream_read_seek_operations=0) (committer_bytes_committed=0) (stream_read_seek_bytes_skipped=0) (committer_commits_completed=0) (stream_read_operations=3) (op_delete=19) (op_xattr_get_named.failures=0) (action_file_opened.failures=0) (stream_read_vectored_operations=13) (files_copied_bytes=0) (stream_write_block_uploads_committed=0) (multipart_upload_abort_under_path_invoked=0) (object_put_request.failures=0) (stream_read_seek_policy_changed=17) (stream_write_total_time=0) (stream_write_block_uploads_aborted=0) (object_list_request=76) (object_delete_objects=38) (op_create.failures=0) (stream_write_block_uploads=19) (op_get_file_status.failures=0) (committer_jobs_failed=0) (op_xattr_get_named_map=0) (action_file_opened=16) (store_io_request=225) (stream_read_bytes_backwards_on_seek=0) (object_delete_request.failures=0) (object_put_request=38) (object_continue_list_request.failures=0) (op_mkdirs=19) (op_rename.failures=0) (stream_read_unbuffered=1) (stream_read_bytes_discarded_in_abort=0) (multipart_instantiated=0) (directories_created=19) (delegation_tokens_issued=0) (fake_directories_deleted=19) (op_access.failures=0) (multipart_upload_list=0) (object_copy_requests=0) (stream_read_bytes=5963) (action_http_head_request.failures=0) (op_open=16) (op_createfile.failures=0) (op_access=0) (committer_commits_aborted=0) (committer_magic_marker_put.failures=0) (stream_read_closed=3) (op_get_file_checksum=0) (op_xattr_list.failures=0) (audit_access_check_failure=0) (object_delete_request=0) (op_glob_status.failures=0) (stream_read_vectored_incoming_ranges=43) (op_createfile=0) (committer_tasks_completed=0) (files_copied=0) (committer_magic_files_created=0) (stream_read_total_bytes=201971) (multipart_upload_completed=0) (stream_write_total_data=2490368) (stream_read_fully_operations=1) (committer_materialize_file=0) (op_is_directory.failures=0) (op_get_file_checksum.failures=0) (object_put_bytes=1245184) (store_exists_probe=0) (committer_commits_reverted=0) (multipart_upload_list.failures=0) (object_metadata_request=54) (op_abort=0) (op_list_files=0) (multipart_upload_part_put_bytes=0));
gauges=((object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=19) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0));
minimums=((op_get_file_status.min=5) (object_put_request.min=36) (object_bulk_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.failures.min=-1) (object_delete_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_delegation_token.failures.min=-1) (op_rename.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_files.min=-1) (multipart_upload_list.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (op_create.min=7) (multipart_upload_list.failures.min=-1) (op_list_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.min=-1) (op_abort.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (store_exists_probe.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (op_rename.min=-1) (op_get_delegation_token.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.min=-1) (op_mkdirs.min=22) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.failures.min=-1) (action_http_head_request.min=3) (object_list_request.min=5) (stream_read_remote_stream_drain.min=1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_bulk_delete_request.min=6) (object_delete_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.min=27) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_createfile.min=-1) (op_is_directory.min=-1) (action_executor_acquired.min=-1) (op_is_file.min=-1) (action_file_opened.min=10) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.min=16) (object_continue_list_request.min=-1) (op_xattr_get_named.min=-1));
maximums=((multipart_upload_list.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (op_is_directory.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=27) (op_mkdirs.max=346) (op_delete.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.max=-1) (op_copy_from_local_file.max=-1) (op_rename.failures.max=-1) (committer_commit_job.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.max=210) (committer_load_single_pending_file.max=-1) (op_exists.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_createfile.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_list_request.failures.max=-1) (op_access.max=-1) (action_file_opened.max=15) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_create.max=74) (store_exists_probe.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.max=-1) (committer_commit_job.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.max=-1) (op_glob_status.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.max=104) (op_xattr_list.failures.max=-1) (op_list_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_delete.max=111) (op_xattr_get_map.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (object_multipart_aborted.max=-1) (object_delete_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_head_request.max=19) (op_exists.failures.max=-1) (object_delete_request.max=-1) (op_access.failures.max=-1) (op_is_directory.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=5) (action_file_opened.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.max=-1) (action_http_head_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_get_request.max=43) (op_xattr_list.max=-1));
means=((delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=19, sum=1035, mean=54.4737)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=19, sum=931, mean=49.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=54, sum=321, mean=5.9444)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=38, sum=1192, mean=31.3684)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=76, sum=981, mean=12.9079)) (op_create.mean=(samples=19, sum=315, mean=16.5789)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=16, sum=107, mean=6.6875)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=442, mean=23.2632)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=38, sum=466, mean=12.2632)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:18,278 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:18,278 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,278 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,278 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,278 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,278 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a816350f-f985-4e5f-8ca8-679638bf3212-00000094 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000094&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=153&ts=1731777618278
2024-11-16 17:20:18,283 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:18,284 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,284 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,284 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,284 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,284 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a816350f-f985-4e5f-8ca8-679638bf3212-00000094 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000094&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=153&ts=1731777618278
2024-11-16 17:20:18,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,287 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:18,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:18,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:18,288 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a816350f-f985-4e5f-8ca8-679638bf3212-00000094 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000094&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=153&ts=1731777618278
2024-11-16 17:20:18,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:18,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:18,300 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:20:18,300 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:18,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,300 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,300 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a816350f-f985-4e5f-8ca8-679638bf3212-00000095 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000095&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=153&ts=1731777618300
2024-11-16 17:20:18,305 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:18,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,306 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:18,306 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17223142796788399559.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:18,306 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17223142796788399559.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (op_abort.failures=0) (op_abort=0) (object_multipart_initiated.failures=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (op_hsync=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (op_hflush=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17223142796788399559.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,306 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,306 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:18,307 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17223142796788399559.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:18,307 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:18,307 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:18,307 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:18,307 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:18,307 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] a816350f-f985-4e5f-8ca8-679638bf3212-00000095 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000095&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=155&ts=1731777618300
2024-11-16 17:20:18,337 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:18,337 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:18,337 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.030s
2024-11-16 17:20:18,339 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17223142796788399559.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:18,339 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17223142796788399559.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,339 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17223142796788399559.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,339 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:18,340 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,340 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (op_hflush=0) (object_multipart_aborted=0) (action_executor_acquired=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (op_abort=0) (stream_write_total_data=65536) (op_abort.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (object_put_request=1) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=30) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=30) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=30, mean=30.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:18,340 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:18,341 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,342 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,342 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:18,342 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [156] a816350f-f985-4e5f-8ca8-679638bf3212-00000096 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000096/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000096&t0=156&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=156&ts=1731777618341
2024-11-16 17:20:18,346 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:18,346 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:18,346 [s3a-transfer-obs-bucket-unbounded-pool2-t24] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,346 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:20:18,347 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (stream_aborted=0) (stream_read_fully_operations=0) (stream_read_opened=0) (stream_read_operations=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_vectored_incoming_ranges=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_total_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (action_http_get_request=0) (stream_read_bytes=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=5) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=5) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:18,348 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:18,348 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,348 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,349 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a816350f-f985-4e5f-8ca8-679638bf3212-00000097 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000097&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=153&ts=1731777618348
2024-11-16 17:20:18,353 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,353 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,353 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a816350f-f985-4e5f-8ca8-679638bf3212-00000097 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000097&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=153&ts=1731777618348
2024-11-16 17:20:18,359 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:18,359 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:18,359 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:18,359 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:18,359 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:18,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:18,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:18,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:18,359 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:18,360 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:18,360 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:18,360 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:18,360 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:18,360 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:18,360 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,360 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] a816350f-f985-4e5f-8ca8-679638bf3212-00000097 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000097&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=157&ts=1731777618348
2024-11-16 17:20:18,368 [s3a-transfer-obs-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:18,368 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:20:18,368 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:18,369 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:18,369 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:18,369 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777618333; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:18,369 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:18,369 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:18,369 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:18,370 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:18,370 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:18,370 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:18,370 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:18,371 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:18,371 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,371 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,371 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:18,371 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,371 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a816350f-f985-4e5f-8ca8-679638bf3212-00000097 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000097&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=158&ts=1731777618348
2024-11-16 17:20:18,379 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:18,379 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:18,379 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:20:18,379 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:18,379 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:18,380 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,380 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,380 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:18,380 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,380 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a816350f-f985-4e5f-8ca8-679638bf3212-00000097 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000097/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000097&t0=153&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=158&ts=1731777618348
2024-11-16 17:20:18,388 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:18,388 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:18,388 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:20:18,389 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:20:18,389 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:20:18,389 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:20:18,389 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:18,389 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:18,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:18,405 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 25, active threads = 0, queued tasks = 0, completed tasks = 25], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe.failures=0) (store_io_retry=0) (stream_read_total_bytes=201971) (object_put_bytes=1310720) (op_xattr_list.failures=0) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map.failures=0) (op_xattr_get_named.failures=0) (action_http_get_request.failures=0) (files_deleted=20) (op_list_files.failures=0) (stream_write_block_uploads_committed=0) (committer_materialize_file=0) (audit_span_creation=79) (stream_read_seek_policy_changed=18) (stream_read_remote_stream_drain=3) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_remote_stream_aborted=0) (object_multipart_aborted=0) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named_map=0) (stream_write_block_uploads_aborted=0) (stream_read_operations=3) (object_bulk_delete_request=40) (op_get_content_summary.failures=0) (stream_read_vectored_operations=13) (action_file_opened.failures=0) (files_copied=0) (op_xattr_get_map=0) (op_create_non_recursive=0) (op_list_located_status=0) (op_glob_status=0) (action_file_opened=17) (object_list_request.failures=0) (audit_access_check_failure=0) (stream_read_operations_incomplete=0) (action_http_head_request.failures=0) (op_exists=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (fake_directories_created=0) (stream_read_bytes=5963) (op_is_file=0) (committer_jobs_completed=0) (op_create.failures=0) (files_created=20) (directories_created=20) (action_http_head_request=57) (op_hflush=0) (op_get_file_checksum.failures=0) (committer_jobs_failed=0) (store_io_request=236) (committer_tasks_failed=0) (op_createfile=0) (op_copy_from_local_file.failures=0) (object_put_request.failures=0) (stream_write_queue_duration.failures=0) (op_access=0) (committer_commits_completed=0) (committer_magic_marker_put=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=1) (committer_load_single_pending_file=0) (audit_request_execution=236) (op_delete.failures=0) (committer_commits_reverted=0) (object_put_request=40) (stream_read_vectored_read_bytes_discarded=24503) (op_mkdirs.failures=0) (fake_directories_deleted=20) (store_exists_probe=0) (op_is_file.failures=0) (object_put_request_completed=40) (committer_commits_aborted=0) (object_delete_request=0) (op_access.failures=0) (action_executor_acquired=0) (object_select_requests=0) (store_io_throttled=0) (object_copy_requests=0) (op_hsync=0) (stream_read_seek_operations=0) (committer_tasks_completed=0) (committer_commits.failures=0) (op_xattr_list=0) (object_multipart_aborted.failures=0) (op_open=17) (committer_commit_job.failures=0) (committer_magic_files_created=0) (op_get_file_status=1) (op_mkdirs=20) (object_metadata_request=57) (committer_stage_file_upload=0) (committer_commits_created=0) (stream_aborted=0) (committer_commit_job=0) (stream_write_block_uploads=20) (ignored_errors=0) (directories_deleted=0) (op_xattr_get_named=0) (audit_failure=0) (committer_bytes_committed=0) (object_continue_list_request=0) (committer_stage_file_upload.failures=0) (object_list_request=80) (stream_write_total_data=2621440) (stream_read_seek_forward_operations=0) (stream_read_closed=3) (multipart_upload_completed=0) (op_rename.failures=0) (op_get_delegation_token=0) (object_multipart_initiated=0) (stream_read_fully_operations=1) (op_abort.failures=0) (op_get_file_status.failures=0) (op_copy_from_local_file=0) (action_http_get_request=19) (stream_read_vectored_combined_ranges=18) (stream_read_remote_stream_drain.failures=0) (committer_magic_marker_put.failures=0) (op_is_directory.failures=0) (op_get_delegation_token.failures=0) (delegation_tokens_issued=0) (stream_read_seek_backward_operations=0) (files_copied_bytes=0) (object_delete_request.failures=0) (stream_read_close_operations=17) (op_get_content_summary=0) (committer_materialize_file.failures=0) (delegation_tokens_issued.failures=0) (multipart_upload_abort_under_path_invoked=0) (files_delete_rejected=0) (multipart_upload_started=0) (op_abort=0) (op_exists.failures=0) (op_get_file_checksum=0) (op_list_files=0) (multipart_upload_list=0) (object_bulk_delete_request.failures=0) (object_continue_list_request.failures=0) (multipart_upload_part_put_bytes=0) (op_create=20) (stream_read_opened=3) (object_multipart_initiated.failures=0) (committer_load_single_pending_file.failures=0) (action_executor_acquired.failures=0) (op_list_status.failures=0) (stream_write_exceptions=0) (committer_bytes_uploaded=0) (op_xattr_get_map.failures=0) (op_createfile.failures=0) (op_openfile=0) (stream_write_queue_duration=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=43) (multipart_upload_list.failures=0) (op_list_status=0) (multipart_instantiated=0) (stream_write_bytes=1310720) (op_delete=20) (op_glob_status.failures=0) (object_delete_objects=40) (op_rename=0) (op_is_directory=0) (stream_write_total_time=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=20) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (op_createfile.min=-1) (op_glob_status.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_delete_request.min=-1) (op_is_file.min=-1) (op_list_files.failures.min=-1) (object_put_request.min=30) (object_continue_list_request.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.min=16) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_initiated.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.failures.min=-1) (op_rename.min=-1) (committer_materialize_file.min=-1) (op_is_directory.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named.min=-1) (action_file_opened.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_map.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.failures.min=-1) (object_list_request.min=5) (op_get_content_summary.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.failures.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_checksum.min=-1) (op_get_file_status.failures.min=-1) (op_access.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=3) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_mkdirs.min=22) (op_abort.failures.min=-1) (op_exists.min=-1) (object_list_request.failures.min=-1) (op_create.min=6) (op_glob_status.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_status.min=5) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (op_list_status.failures.min=-1) (op_is_directory.min=-1) (op_access.min=-1) (action_file_opened.min=5) (op_get_delegation_token.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (op_abort.min=-1) (op_xattr_get_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=27) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=6) (committer_materialize_file.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=1) (object_put_request.max=104) (op_list_files.failures.max=-1) (op_access.max=-1) (op_list_files.max=-1) (op_create.failures.max=-1) (op_rename.max=-1) (op_xattr_list.max=-1) (op_list_status.failures.max=-1) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=15) (op_mkdirs.max=346) (op_is_file.failures.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_materialize_file.failures.max=-1) (op_delete.max=111) (op_xattr_get_named_map.max=-1) (op_get_delegation_token.failures.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.max=27) (object_multipart_initiated.max=-1) (action_http_get_request.max=43) (object_continue_list_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_commit_job.max=-1) (op_glob_status.failures.max=-1) (delegation_tokens_issued.max=-1) (op_createfile.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (op_get_content_summary.max=-1) (op_delete.failures.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.max=-1) (action_http_head_request.max=19) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.failures.max=-1) (action_http_head_request.failures.max=-1) (op_create.max=74) (stream_read_remote_stream_aborted.max=-1) (op_get_file_status.max=5) (op_access.failures.max=-1) (op_get_file_checksum.max=-1) (op_is_file.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.failures.max=-1) (op_get_delegation_token.max=-1) (object_list_request.max=210) (op_xattr_get_map.failures.max=-1) (op_glob_status.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (multipart_upload_list.max=-1) (op_exists.max=-1) (op_get_content_summary.failures.max=-1));
means=((op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=20, sum=321, mean=16.0500)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=442, mean=23.2632)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=20, sum=961, mean=48.0500)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=80, sum=1005, mean=12.5625)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_mkdirs.mean=(samples=20, sum=1057, mean=52.8500)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=40, sum=482, mean=12.0500)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=57, sum=333, mean=5.8421)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=17, sum=112, mean=6.5882)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=40, sum=1233, mean=30.8250)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:18,405 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:18,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,405 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,406 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a816350f-f985-4e5f-8ca8-679638bf3212-00000098 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000098&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=159&ts=1731777618405
2024-11-16 17:20:18,412 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:18,413 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,413 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,413 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,414 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a816350f-f985-4e5f-8ca8-679638bf3212-00000098 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000098&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=159&ts=1731777618405
2024-11-16 17:20:18,420 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,420 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:18,421 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:18,421 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:18,421 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a816350f-f985-4e5f-8ca8-679638bf3212-00000098 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000098&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=159&ts=1731777618405
2024-11-16 17:20:18,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:18,439 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:18,439 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:20:18,439 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:18,440 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,440 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,440 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,440 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,440 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a816350f-f985-4e5f-8ca8-679638bf3212-00000099 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000099&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=159&ts=1731777618440
2024-11-16 17:20:18,447 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:18,447 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,448 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:18,448 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3618415294897977454.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:18,449 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3618415294897977454.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (action_executor_acquired=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (object_put_request=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (op_hsync=0) (op_hflush=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1));
maximums=((op_abort.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3618415294897977454.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,449 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,449 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:18,449 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3618415294897977454.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:18,457 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:18,457 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:18,458 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:18,458 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:18,458 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] a816350f-f985-4e5f-8ca8-679638bf3212-00000099 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000099&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=160&ts=1731777618440
2024-11-16 17:20:18,491 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:18,491 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:18,491 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.034s
2024-11-16 17:20:18,491 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3618415294897977454.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:18,491 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3618415294897977454.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,491 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3618415294897977454.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,491 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:18,492 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,493 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (op_hsync=0) (object_multipart_aborted.failures=0) (object_put_request=1) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (object_put_request.failures=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (op_abort=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=33) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=33) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=33, mean=33.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:18,494 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:18,495 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,495 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,495 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:18,495 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a816350f-f985-4e5f-8ca8-679638bf3212-00000100 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000100&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=159&ts=1731777618494
2024-11-16 17:20:18,503 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:18,503 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:18,503 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,503 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:18,503 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:18,503 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:18,505 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:18,505 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:18,505 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,505 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:18,506 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,506 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:18,506 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:18,506 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a816350f-f985-4e5f-8ca8-679638bf3212-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000100&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=163&ts=1731777618494
2024-11-16 17:20:18,509 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:18,509 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,509 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,510 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:18,510 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] a816350f-f985-4e5f-8ca8-679638bf3212-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000100&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=164&ts=1731777618494
2024-11-16 17:20:18,528 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:20:18,529 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:18,529 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,529 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:20:18,530 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:18,530 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,531 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_combined_ranges=2) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=2) (stream_read_vectored_read_bytes_discarded=20) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=2) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_total_bytes=300) (stream_read_prefetch_operations.failures=0) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_read=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=4) (stream_read_opened=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (stream_read_close_operations=1) (stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=300));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=20) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=8) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=23) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=8) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.mean=(samples=2, sum=43, mean=21.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:18,532 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:18,532 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,532 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,532 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a816350f-f985-4e5f-8ca8-679638bf3212-00000101 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000101&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=159&ts=1731777618532
2024-11-16 17:20:18,536 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,536 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,536 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a816350f-f985-4e5f-8ca8-679638bf3212-00000101 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000101&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=159&ts=1731777618532
2024-11-16 17:20:18,542 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:18,543 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:18,543 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:18,543 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:18,543 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:18,543 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:18,543 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:18,543 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:18,543 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:18,543 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:18,544 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:18,544 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:18,544 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:18,544 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:18,545 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,545 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] a816350f-f985-4e5f-8ca8-679638bf3212-00000101 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000101&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=165&ts=1731777618532
2024-11-16 17:20:18,553 [s3a-transfer-obs-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:18,554 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:20:18,554 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:18,554 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:18,554 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:18,554 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777618486; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:18,554 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:18,555 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:18,555 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:18,555 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:18,555 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:18,555 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:18,556 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:18,556 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:18,556 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,556 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,556 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:18,556 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,557 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a816350f-f985-4e5f-8ca8-679638bf3212-00000101 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000101&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=166&ts=1731777618532
2024-11-16 17:20:18,570 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:20:18,570 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:20:18,570 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:20:18,570 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:18,570 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:18,570 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,570 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,571 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:18,571 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,571 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a816350f-f985-4e5f-8ca8-679638bf3212-00000101 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000101/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000101&t0=159&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=166&ts=1731777618532
2024-11-16 17:20:18,586 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:20:18,586 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:20:18,586 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:20:18,586 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:20:18,586 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.031s
2024-11-16 17:20:18,586 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:20:18,587 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:18,587 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:18,588 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:18,601 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 26, active threads = 0, queued tasks = 0, completed tasks = 26], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_file_checksum=0) (op_copy_from_local_file.failures=0) (stream_read_fully_operations=1) (stream_write_queue_duration.failures=0) (files_deleted=21) (object_multipart_initiated=0) (op_list_located_status=0) (object_put_bytes=1376256) (multipart_upload_part_put_bytes=0) (object_multipart_aborted=0) (stream_aborted=0) (op_glob_status=0) (files_created=21) (action_http_get_request=21) (audit_access_check_failure=0) (stream_read_total_bytes=202271) (stream_read_seek_bytes_discarded=0) (delegation_tokens_issued.failures=0) (stream_read_bytes=6263) (op_delete.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_is_directory=0) (object_delete_request.failures=0) (stream_read_operations_incomplete=0) (committer_tasks_completed=0) (op_exists.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (stream_read_vectored_operations=15) (multipart_upload_part_put=0) (stream_read_operations=3) (multipart_upload_started=0) (op_get_file_status=1) (store_io_retry=0) (stream_read_closed=3) (object_multipart_initiated.failures=0) (audit_span_creation=83) (object_list_request.failures=0) (op_openfile=0) (committer_magic_marker_put=0) (op_copy_from_local_file=0) (object_continue_list_request.failures=0) (op_mkdirs.failures=0) (op_get_delegation_token=0) (audit_request_execution=249) (object_put_request.failures=0) (object_bulk_delete_request.failures=0) (op_create.failures=0) (op_is_file=0) (action_executor_acquired.failures=0) (op_get_file_status.failures=0) (fake_directories_deleted=21) (object_metadata_request=60) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=18) (stream_read_remote_stream_drain=3) (op_get_delegation_token.failures=0) (store_io_request=249) (op_list_status.failures=0) (files_copied=0) (multipart_upload_list.failures=0) (op_access=0) (committer_commits_reverted=0) (op_createfile=0) (stream_read_vectored_incoming_ranges=47) (op_get_content_summary=0) (action_http_get_request.failures=0) (committer_bytes_uploaded=0) (op_hsync=0) (stream_write_block_uploads_aborted=0) (stream_read_opened=3) (op_rename.failures=0) (op_list_status=0) (stream_read_seek_backward_operations=0) (stream_write_block_uploads_committed=0) (action_http_head_request=60) (op_open=18) (op_xattr_get_named_map=0) (action_executor_acquired=0) (object_bulk_delete_request=42) (committer_jobs_failed=0) (op_xattr_get_map.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (op_exists=0) (stream_read_exceptions=0) (directories_created=21) (action_file_opened.failures=0) (object_delete_objects=42) (object_put_request=42) (stream_write_exceptions=0) (committer_commits_created=0) (committer_jobs_completed=0) (op_xattr_get_map=0) (files_delete_rejected=0) (op_xattr_get_named.failures=0) (op_xattr_get_named_map.failures=0) (committer_tasks_failed=0) (object_delete_request=0) (stream_read_vectored_combined_ranges=20) (stream_write_exceptions_completing_upload=0) (op_list_files=0) (stream_read_bytes_backwards_on_seek=0) (committer_commit_job=0) (object_list_request=84) (op_xattr_list=0) (op_xattr_get_named=0) (stream_read_bytes_discarded_in_close=196008) (stream_write_block_uploads=21) (committer_magic_files_created=0) (op_get_file_checksum.failures=0) (op_abort.failures=0) (object_copy_requests=0) (op_rename=0) (action_http_head_request.failures=0) (op_create=21) (stream_read_seek_operations=0) (object_continue_list_request=0) (op_xattr_list.failures=0) (store_exists_probe.failures=0) (multipart_upload_list=0) (store_io_throttled=0) (stream_read_seek_bytes_skipped=0) (op_is_file.failures=0) (op_list_files.failures=0) (ignored_errors=0) (object_put_request_completed=42) (action_file_opened=18) (op_hflush=0) (stream_read_seek_policy_changed=19) (stream_write_total_data=2752512) (op_access.failures=0) (op_is_directory.failures=0) (stream_read_remote_stream_drain.failures=0) (op_abort=0) (store_exists_probe=0) (stream_write_bytes=1376256) (fake_directories_created=0) (object_multipart_aborted.failures=0) (audit_failure=0) (delegation_tokens_issued=0) (committer_commit_job.failures=0) (op_delete=21) (committer_bytes_committed=0) (committer_commits_aborted=0) (object_select_requests=0) (committer_commits.failures=0) (op_mkdirs=21) (committer_stage_file_upload.failures=0) (op_glob_status.failures=0) (committer_stage_file_upload=0) (multipart_instantiated=0) (committer_magic_marker_put.failures=0) (committer_commits_completed=0) (stream_write_queue_duration=0) (committer_materialize_file.failures=0) (op_get_content_summary.failures=0) (directories_deleted=0) (committer_load_single_pending_file.failures=0) (committer_load_single_pending_file=0) (stream_read_unbuffered=1) (files_copied_bytes=0) (committer_materialize_file=0) (multipart_upload_aborted=0) (op_create_non_recursive=0) (op_createfile.failures=0) (multipart_upload_abort_under_path_invoked=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=21) (client_side_encryption_enabled=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_access.min=-1) (op_copy_from_local_file.failures.min=-1) (action_file_opened.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_delete_request.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (committer_materialize_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_continue_list_request.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_get_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.min=27) (op_mkdirs.min=22) (op_get_delegation_token.failures.min=-1) (op_create.min=6) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.min=5) (store_exists_probe.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_map.min=-1) (op_rename.failures.min=-1) (object_list_request.min=5) (committer_commit_job.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_file_opened.min=8) (object_put_request.failures.min=-1) (op_list_status.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_head_request.min=3) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (op_abort.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_list_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_get_request.min=20) (committer_magic_marker_put.failures.min=-1) (op_is_file.min=-1) (op_list_files.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.min=-1) (object_put_request.min=33) (op_abort.failures.min=-1) (op_list_status.failures.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_is_directory.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.failures.min=-1) (object_bulk_delete_request.min=6) (delegation_tokens_issued.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_list.min=-1) (op_create.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_file.failures.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((op_abort.max=-1) (op_get_file_status.max=5) (op_is_directory.failures.max=-1) (object_delete_request.failures.max=-1) (op_createfile.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.failures.max=-1) (stream_write_queue_duration.max=-1) (action_file_opened.failures.max=-1) (object_bulk_delete_request.max=27) (op_create.max=74) (object_delete_request.max=-1) (delegation_tokens_issued.max=-1) (op_list_files.max=-1) (object_multipart_aborted.max=-1) (op_xattr_list.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (action_executor_acquired.failures.max=-1) (op_is_file.max=-1) (op_get_file_checksum.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (op_delete.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_access.max=-1) (op_delete.max=111) (op_get_content_summary.max=-1) (committer_commit_job.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (op_create.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_list.max=-1) (action_http_get_request.max=43) (op_glob_status.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (op_glob_status.max=-1) (op_get_content_summary.failures.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.max=346) (committer_magic_marker_put.failures.max=-1) (op_access.failures.max=-1) (object_put_request.failures.max=-1) (op_list_status.failures.max=-1) (object_list_request.max=210) (action_file_opened.max=15) (action_http_head_request.max=19) (object_list_request.failures.max=-1) (object_put_request.max=104) (op_list_files.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_rename.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_exists.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_continue_list_request.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=84, sum=1033, mean=12.2976)) (object_put_request.mean=(samples=42, sum=1284, mean=30.5714)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=21, sum=329, mean=15.6667)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=485, mean=23.0952)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=21, sum=1005, mean=47.8571)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=21, sum=1091, mean=51.9524)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=42, sum=510, mean=12.1429)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=18, sum=120, mean=6.6667)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=60, sum=351, mean=5.8500)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:18,602 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:18,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,603 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,603 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,603 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a816350f-f985-4e5f-8ca8-679638bf3212-00000102 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000102&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=167&ts=1731777618602
2024-11-16 17:20:18,610 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:18,611 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,611 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,611 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,611 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,611 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a816350f-f985-4e5f-8ca8-679638bf3212-00000102 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000102&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=167&ts=1731777618602
2024-11-16 17:20:18,615 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,616 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:18,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:18,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:18,616 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a816350f-f985-4e5f-8ca8-679638bf3212-00000102 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000102&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=167&ts=1731777618602
2024-11-16 17:20:18,632 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:18,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:18,633 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.017s
2024-11-16 17:20:18,633 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:18,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,634 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,634 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,634 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a816350f-f985-4e5f-8ca8-679638bf3212-00000103 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000103&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=167&ts=1731777618633
2024-11-16 17:20:18,644 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:18,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,644 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:18,644 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5280720272807281780.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:18,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5280720272807281780.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (op_abort.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (action_executor_acquired=0) (op_hsync=0) (op_hflush=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5280720272807281780.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,645 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:18,645 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5280720272807281780.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:18,646 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:18,646 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:18,646 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:18,646 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:18,646 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a816350f-f985-4e5f-8ca8-679638bf3212-00000103 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000103&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=169&ts=1731777618633
2024-11-16 17:20:18,685 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:18,685 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:18,685 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:20:18,686 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5280720272807281780.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:18,686 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5280720272807281780.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,686 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5280720272807281780.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,686 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:18,686 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,690 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (stream_write_bytes=65536) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (object_put_request=1) (op_abort.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (multipart_upload_part_put=0) (op_hsync=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=39) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=39) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=39, mean=39.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:18,690 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:18,691 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,691 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,691 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:18,691 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] a816350f-f985-4e5f-8ca8-679638bf3212-00000104 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000104/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000104&t0=170&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=170&ts=1731777618691
2024-11-16 17:20:18,697 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:18,698 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:18,698 [s3a-transfer-obs-bucket-unbounded-pool2-t27] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,698 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:20:18,699 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (stream_read_seek_operations=0) (stream_read_bytes=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (action_file_opened=1) (stream_read_operations=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (stream_read_close_operations=1) (action_http_get_request=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=7) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=7) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:18,700 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:18,700 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,700 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,700 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a816350f-f985-4e5f-8ca8-679638bf3212-00000105 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000105&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=167&ts=1731777618700
2024-11-16 17:20:18,704 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,704 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,704 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a816350f-f985-4e5f-8ca8-679638bf3212-00000105 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000105&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=167&ts=1731777618700
2024-11-16 17:20:18,711 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:18,711 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:18,711 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:18,712 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:18,712 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:18,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:18,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:18,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:18,712 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:18,712 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:18,713 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:18,713 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:18,713 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:18,713 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:18,714 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,714 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [172] a816350f-f985-4e5f-8ca8-679638bf3212-00000105 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000105&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=172&ts=1731777618700
2024-11-16 17:20:18,720 [s3a-transfer-obs-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:18,720 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:18,720 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:18,720 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:18,720 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:18,720 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777618678; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:18,721 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:18,721 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:18,721 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:18,721 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:18,721 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,722 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] a816350f-f985-4e5f-8ca8-679638bf3212-00000105 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000105&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=173&ts=1731777618700
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:18,735 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,736 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] a816350f-f985-4e5f-8ca8-679638bf3212-00000105 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000105/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000105&t0=167&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=173&ts=1731777618700
2024-11-16 17:20:18,756 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:20:18,756 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.021s
2024-11-16 17:20:18,756 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.021s
2024-11-16 17:20:18,757 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.035s
2024-11-16 17:20:18,757 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.036s
2024-11-16 17:20:18,757 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.045s
2024-11-16 17:20:18,757 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:18,757 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:18,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:18,778 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 28, active threads = 0, queued tasks = 0, completed tasks = 28], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_continue_list_request=0) (op_get_file_checksum=0) (committer_magic_marker_put.failures=0) (object_bulk_delete_request.failures=0) (stream_aborted=0) (op_rename=0) (stream_read_vectored_incoming_ranges=47) (op_get_file_status=1) (object_multipart_aborted=0) (op_copy_from_local_file=0) (committer_commits_created=0) (object_delete_request=0) (op_list_status=0) (committer_magic_files_created=0) (op_is_directory.failures=0) (op_glob_status=0) (object_multipart_aborted.failures=0) (op_is_file=0) (op_mkdirs.failures=0) (files_deleted=22) (object_multipart_initiated=0) (stream_read_operations_incomplete=0) (committer_tasks_completed=0) (object_bulk_delete_request=44) (committer_magic_marker_put=0) (object_put_request_completed=44) (stream_read_seek_bytes_skipped=0) (object_delete_request.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (object_list_request=88) (multipart_upload_list.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (committer_commits_reverted=0) (multipart_upload_abort_under_path_invoked=0) (store_io_retry=0) (op_open=19) (stream_read_vectored_combined_ranges=20) (stream_read_remote_stream_drain.failures=0) (audit_failure=0) (op_access=0) (directories_deleted=0) (stream_read_unbuffered=1) (stream_read_bytes=6263) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (op_xattr_list.failures=0) (stream_read_version_mismatches=0) (action_file_opened=19) (op_hsync=0) (committer_stage_file_upload=0) (committer_bytes_uploaded=0) (committer_materialize_file=0) (action_executor_acquired=0) (committer_jobs_completed=0) (op_create=22) (stream_read_bytes_discarded_in_close=196008) (committer_jobs_failed=0) (stream_read_seek_forward_operations=0) (committer_commit_job=0) (op_openfile=0) (stream_write_queue_duration.failures=0) (action_http_get_request=21) (stream_read_fully_operations=1) (action_file_opened.failures=0) (op_get_content_summary=0) (fake_directories_deleted=22) (stream_write_total_data=2883584) (op_get_file_checksum.failures=0) (committer_commits_aborted=0) (files_copied_bytes=0) (stream_read_vectored_operations=15) (stream_write_queue_duration=0) (object_copy_requests=0) (store_io_throttled=0) (op_xattr_get_map.failures=0) (stream_read_exceptions=0) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (op_get_delegation_token.failures=0) (multipart_upload_list=0) (action_http_head_request.failures=0) (store_io_request=260) (op_exists.failures=0) (op_list_files=0) (stream_read_opened=3) (object_continue_list_request.failures=0) (object_metadata_request=63) (stream_write_block_uploads=22) (op_list_located_status=0) (stream_write_bytes=1441792) (committer_stage_file_upload.failures=0) (object_delete_objects=44) (stream_read_remote_stream_aborted.failures=0) (op_list_status.failures=0) (action_http_head_request=63) (committer_commits_completed=0) (op_access.failures=0) (audit_request_execution=260) (stream_read_seek_bytes_discarded=0) (committer_commit_job.failures=0) (stream_write_total_time=0) (stream_read_operations=3) (stream_write_block_uploads_committed=0) (directories_created=22) (op_is_directory=0) (op_get_delegation_token=0) (stream_read_bytes_discarded_in_abort=0) (delegation_tokens_issued.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (object_put_request=44) (files_created=22) (audit_span_creation=87) (op_xattr_get_named=0) (op_list_files.failures=0) (stream_read_total_bytes=202271) (audit_access_check_failure=0) (ignored_errors=0) (op_is_file.failures=0) (op_xattr_list=0) (committer_bytes_committed=0) (op_createfile.failures=0) (op_xattr_get_named_map=0) (op_create_non_recursive=0) (op_rename.failures=0) (stream_read_remote_stream_aborted=0) (op_xattr_get_named.failures=0) (multipart_upload_part_put_bytes=0) (store_exists_probe=0) (committer_load_single_pending_file=0) (committer_tasks_failed=0) (op_delete=22) (object_list_request.failures=0) (files_copied=0) (delegation_tokens_issued=0) (op_create.failures=0) (committer_load_single_pending_file.failures=0) (op_glob_status.failures=0) (stream_read_seek_operations=0) (store_exists_probe.failures=0) (stream_read_closed=3) (multipart_upload_completed=0) (stream_write_block_uploads_aborted=0) (stream_read_close_operations=19) (stream_read_seek_policy_changed=20) (multipart_upload_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (op_abort.failures=0) (op_get_content_summary.failures=0) (files_delete_rejected=0) (op_exists=0) (fake_directories_created=0) (op_xattr_get_map=0) (object_put_request.failures=0) (multipart_instantiated=0) (op_abort=0) (object_put_bytes=1441792) (stream_read_remote_stream_drain=3) (action_http_get_request.failures=0) (op_createfile=0) (op_delete.failures=0) (multipart_upload_started=0) (multipart_upload_part_put=0) (op_xattr_get_named_map.failures=0) (object_select_requests=0) (committer_commits.failures=0) (op_mkdirs=22));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=22) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0));
minimums=((op_xattr_get_map.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_file_opened.min=7) (op_list_status.failures.min=-1) (op_createfile.failures.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.min=-1) (op_delete.failures.min=-1) (op_get_file_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=22) (store_exists_probe.min=-1) (op_exists.min=-1) (op_rename.failures.min=-1) (multipart_upload_list.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (op_delete.min=27) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_copy_from_local_file.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_status.min=5) (op_list_files.failures.min=-1) (object_put_request.min=39) (object_delete_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=3) (op_get_delegation_token.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.min=-1) (op_create.min=6) (object_multipart_aborted.min=-1) (object_continue_list_request.min=-1) (op_glob_status.min=-1) (op_rename.min=-1) (op_exists.failures.min=-1) (object_list_request.min=5) (op_copy_from_local_file.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.min=1) (store_exists_probe.failures.min=-1) (op_list_files.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.min=6) (op_access.min=-1) (op_is_directory.min=-1) (delegation_tokens_issued.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_list_request.failures.min=-1) (action_http_get_request.min=20) (op_create.failures.min=-1) (op_xattr_list.failures.min=-1) (op_access.failures.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1));
maximums=((object_continue_list_request.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_access.max=-1) (op_list_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_head_request.failures.max=-1) (object_list_request.max=210) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.max=-1) (op_delete.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (action_file_opened.max=15) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.max=27) (op_mkdirs.failures.max=-1) (op_abort.max=-1) (op_createfile.max=-1) (op_xattr_list.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_status.max=5) (op_exists.max=-1) (op_is_directory.failures.max=-1) (object_put_request.max=104) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1) (action_file_opened.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.max=-1) (op_glob_status.max=-1) (committer_commit_job.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (action_http_get_request.max=43) (object_multipart_aborted.max=-1) (committer_stage_file_upload.max=-1) (object_list_request.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.max=-1) (op_list_status.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_mkdirs.max=346) (op_create.max=74) (committer_materialize_file.max=-1) (action_executor_acquired.max=-1) (store_exists_probe.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.failures.max=-1) (op_delete.max=111) (op_glob_status.failures.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_map.failures.max=-1) (object_delete_request.failures.max=-1) (op_rename.max=-1) (op_access.failures.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.max=19) (op_is_directory.max=-1) (store_exists_probe.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_create.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.failures.max=-1) (op_is_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.failures.max=-1));
means=((op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=44, sum=1339, mean=30.4318)) (object_bulk_delete_request.mean=(samples=44, sum=543, mean=12.3409)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=22, sum=1050, mean=47.7273)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=63, sum=365, mean=5.7937)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=19, sum=127, mean=6.6842)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=88, sum=1063, mean=12.0795)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=22, sum=340, mean=15.4545)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=22, sum=1122, mean=51.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=485, mean=23.0952)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:18,778 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:18,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,779 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,779 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,779 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,779 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a816350f-f985-4e5f-8ca8-679638bf3212-00000106 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000106&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=174&ts=1731777618778
2024-11-16 17:20:18,786 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:18,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,787 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a816350f-f985-4e5f-8ca8-679638bf3212-00000106 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000106&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=174&ts=1731777618778
2024-11-16 17:20:18,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,791 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:18,791 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:18,791 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:18,791 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a816350f-f985-4e5f-8ca8-679638bf3212-00000106 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000106&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=174&ts=1731777618778
2024-11-16 17:20:18,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:18,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:18,810 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:20:18,810 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:18,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,811 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,811 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a816350f-f985-4e5f-8ca8-679638bf3212-00000107 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000107&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=174&ts=1731777618810
2024-11-16 17:20:18,818 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:18,818 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,818 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:18,819 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3813040238061983785.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:18,820 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3813040238061983785.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (stream_write_bytes=65536) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (object_put_request=0) (object_multipart_aborted.failures=0) (op_abort=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_put_request.failures=0) (stream_write_total_data=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (object_multipart_initiated=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3813040238061983785.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,820 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,820 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:18,820 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3813040238061983785.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:18,820 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:18,820 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:18,820 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:18,820 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a816350f-f985-4e5f-8ca8-679638bf3212-00000107 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000107&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=31&ts=1731777618810
2024-11-16 17:20:18,822 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:18,843 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:18,843 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:18,843 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:20:18,844 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3813040238061983785.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:18,844 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3813040238061983785.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,844 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3813040238061983785.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:18,844 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:18,844 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:18,857 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (stream_write_total_time=0) (object_multipart_initiated=0) (op_hflush=0) (action_executor_acquired=0) (op_abort=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (object_put_request=1) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (op_abort.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=23) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_put_request.max=23) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=23, mean=23.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:18,858 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:18,859 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,859 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,859 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:18,859 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a816350f-f985-4e5f-8ca8-679638bf3212-00000108 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000108&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=174&ts=1731777618858
2024-11-16 17:20:18,863 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:18,863 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:18,864 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,864 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:20:18,864 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:18,864 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:20:18,864 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,864 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:18,864 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:18,864 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a816350f-f985-4e5f-8ca8-679638bf3212-00000108 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=500-899&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000108&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=36&ts=1731777618858
2024-11-16 17:20:18,865 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:20:18,875 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:20:18,876 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:18,878 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=3) (stream_read_remote_stream_aborted=0) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (stream_read_bytes=400) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_block_read=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (action_http_get_request=1) (action_executor_acquired=0) (action_http_get_request.failures=0) (stream_read_closed=0) (stream_read_block_read.failures=0) (stream_read_vectored_combined_ranges=1) (action_file_opened=1) (stream_read_seek_operations=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_total_bytes=400) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=12) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=4) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=12) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=4));
means=((action_http_get_request.mean=(samples=1, sum=12, mean=12.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:18,879 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:18,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,881 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a816350f-f985-4e5f-8ca8-679638bf3212-00000109 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000109&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=174&ts=1731777618879
2024-11-16 17:20:18,885 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,885 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,885 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a816350f-f985-4e5f-8ca8-679638bf3212-00000109 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000109&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=174&ts=1731777618879
2024-11-16 17:20:18,893 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:18,893 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:18,893 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:18,893 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:18,894 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:18,894 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:18,894 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:18,894 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:18,894 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:18,894 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:18,894 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:18,894 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:18,895 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:18,895 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:18,895 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,895 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [175] a816350f-f985-4e5f-8ca8-679638bf3212-00000109 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000109&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=175&ts=1731777618879
2024-11-16 17:20:18,906 [s3a-transfer-obs-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:18,907 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:20:18,907 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:18,907 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:18,907 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:18,908 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777618839; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:18,908 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:18,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:18,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:18,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,909 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a816350f-f985-4e5f-8ca8-679638bf3212-00000109 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000109&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=38&ts=1731777618879
2024-11-16 17:20:18,910 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:18,920 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:18,921 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a816350f-f985-4e5f-8ca8-679638bf3212-00000109 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000109/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000109&t0=174&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=38&ts=1731777618879
2024-11-16 17:20:18,935 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:20:18,935 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:20:18,935 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:20:18,935 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:20:18,935 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:20:18,936 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:20:18,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:18,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:18,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:18,957 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 29, active threads = 0, queued tasks = 0, completed tasks = 29], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commit_job.failures=0) (committer_jobs_failed=0) (committer_tasks_completed=0) (stream_read_seek_operations=0) (committer_magic_files_created=0) (action_http_get_request.failures=0) (directories_created=23) (op_xattr_get_map=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (object_continue_list_request=0) (op_xattr_list=0) (op_list_status=0) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=50) (object_put_request=46) (stream_write_block_uploads_aborted=0) (committer_load_single_pending_file=0) (fake_directories_created=0) (op_get_file_status.failures=0) (committer_stage_file_upload.failures=0) (stream_read_seek_bytes_discarded=0) (store_exists_probe.failures=0) (stream_read_bytes=6663) (op_list_files=0) (object_continue_list_request.failures=0) (stream_write_queue_duration.failures=0) (committer_commits_completed=0) (committer_materialize_file=0) (committer_commits_aborted=0) (op_rename.failures=0) (op_get_file_checksum=0) (committer_commits_created=0) (op_get_delegation_token.failures=0) (object_multipart_aborted.failures=0) (op_openfile=0) (store_io_throttled=0) (op_get_content_summary=0) (op_createfile.failures=0) (stream_read_remote_stream_drain=3) (stream_read_remote_stream_aborted.failures=0) (audit_span_creation=91) (op_exists.failures=0) (stream_read_total_bytes=202671) (op_glob_status.failures=0) (audit_request_execution=272) (op_xattr_get_named.failures=0) (action_http_head_request=66) (stream_read_bytes_backwards_on_seek=0) (object_multipart_initiated=0) (op_exists=0) (stream_write_block_uploads=23) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=20) (multipart_upload_list=0) (op_create.failures=0) (stream_write_exceptions_completing_upload=0) (files_copied_bytes=0) (op_list_located_status=0) (store_exists_probe=0) (op_is_directory=0) (op_copy_from_local_file.failures=0) (op_is_file=0) (stream_read_vectored_operations=16) (ignored_errors=0) (stream_read_opened=3) (op_get_delegation_token=0) (committer_commits_reverted=0) (stream_read_vectored_read_bytes_discarded=24523) (op_list_files.failures=0) (op_is_file.failures=0) (audit_access_check_failure=0) (op_access=0) (op_glob_status=0) (op_xattr_get_named_map=0) (op_create=23) (multipart_upload_part_put_bytes=0) (multipart_upload_completed=0) (op_copy_from_local_file=0) (op_mkdirs=23) (object_put_request.failures=0) (stream_read_closed=3) (object_delete_request=0) (stream_read_seek_policy_changed=21) (committer_tasks_failed=0) (store_io_retry=0) (committer_bytes_uploaded=0) (files_delete_rejected=0) (stream_write_total_time=0) (committer_stage_file_upload=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads_committed=0) (fake_directories_deleted=23) (committer_magic_marker_put=0) (object_delete_objects=46) (op_abort.failures=0) (multipart_upload_aborted=0) (object_delete_request.failures=0) (object_put_request_completed=46) (stream_read_bytes_discarded_in_close=196008) (stream_read_operations=3) (multipart_upload_abort_under_path_invoked=0) (op_delete=23) (op_access.failures=0) (committer_bytes_committed=0) (store_io_request=272) (stream_write_queue_duration=0) (files_copied=0) (op_hsync=0) (stream_read_seek_backward_operations=0) (audit_failure=0) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_list.failures=0) (object_put_bytes=1507328) (object_bulk_delete_request.failures=0) (op_open=20) (action_http_head_request.failures=0) (op_hflush=0) (stream_read_operations_incomplete=0) (stream_read_unbuffered=1) (op_get_file_status=1) (object_list_request.failures=0) (object_list_request=92) (action_file_opened=20) (object_multipart_initiated.failures=0) (op_is_directory.failures=0) (stream_read_remote_stream_aborted=0) (op_get_content_summary.failures=0) (stream_write_exceptions=0) (op_createfile=0) (delegation_tokens_issued=0) (committer_commits.failures=0) (delegation_tokens_issued.failures=0) (committer_commit_job=0) (stream_write_bytes=1507328) (files_created=23) (op_abort=0) (object_copy_requests=0) (op_rename=0) (files_deleted=23) (op_get_file_checksum.failures=0) (op_xattr_get_named=0) (object_select_requests=0) (directories_deleted=0) (op_xattr_get_named_map.failures=0) (object_multipart_aborted=0) (committer_jobs_completed=0) (multipart_upload_started=0) (op_xattr_get_map.failures=0) (stream_read_version_mismatches=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_combined_ranges=21) (committer_materialize_file.failures=0) (object_bulk_delete_request=46) (action_file_opened.failures=0) (op_mkdirs.failures=0) (op_delete.failures=0) (action_http_get_request=22) (op_xattr_list.failures=0) (stream_read_seek_bytes_skipped=0) (object_metadata_request=66) (op_create_non_recursive=0) (stream_write_total_data=3014656) (op_list_status.failures=0) (stream_read_fully_operations=1) (stream_read_exceptions=0) (stream_aborted=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=23) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0));
minimums=((op_create.failures.min=-1) (op_list_status.failures.min=-1) (op_is_file.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=12) (action_executor_acquired.failures.min=-1) (object_put_request.min=23) (object_list_request.min=5) (object_multipart_initiated.failures.min=-1) (action_file_opened.min=4) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_map.min=-1) (op_glob_status.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (object_continue_list_request.min=-1) (delegation_tokens_issued.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.min=22) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.min=6) (committer_load_single_pending_file.min=-1) (committer_commit_job.failures.min=-1) (op_delete.failures.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (op_create.min=6) (op_get_content_summary.failures.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (multipart_upload_list.min=-1) (op_glob_status.failures.min=-1) (op_abort.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.failures.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_exists.min=-1) (op_list_files.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.min=-1) (store_exists_probe.min=-1) (op_exists.failures.min=-1) (op_rename.failures.min=-1) (stream_write_queue_duration.min=-1) (op_rename.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_list.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (op_delete.min=27) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.min=3) (action_executor_acquired.min=-1) (op_access.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.failures.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_drain.min=1) (object_delete_request.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (op_createfile.min=-1) (op_get_file_status.min=5) (committer_materialize_file.failures.min=-1) (op_list_files.failures.min=-1));
maximums=((op_get_content_summary.max=-1) (op_glob_status.failures.max=-1) (committer_commit_job.max=-1) (op_access.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.max=-1) (op_exists.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (op_access.failures.max=-1) (object_list_request.max=210) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_status.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_is_directory.max=-1) (op_get_file_status.max=5) (stream_write_queue_duration.max=-1) (object_multipart_initiated.failures.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_head_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (op_list_files.failures.max=-1) (action_file_opened.max=15) (object_multipart_initiated.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_file_opened.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.max=346) (action_http_get_request.max=43) (committer_materialize_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.failures.max=-1) (op_abort.max=-1) (op_is_directory.failures.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (op_list_files.max=-1) (op_mkdirs.failures.max=-1) (committer_stage_file_upload.max=-1) (object_multipart_aborted.max=-1) (action_http_head_request.max=19) (op_xattr_get_named.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.max=-1) (op_createfile.max=-1) (action_executor_acquired.failures.max=-1) (op_rename.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=104) (op_create.max=74) (object_delete_request.max=-1) (op_list_status.failures.max=-1) (op_delete.max=111) (object_bulk_delete_request.max=27) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.failures.max=-1) (op_create.failures.max=-1));
means=((action_file_opened.mean=(samples=20, sum=131, mean=6.5500)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=92, sum=1096, mean=11.9130)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=66, sum=377, mean=5.7121)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=497, mean=22.5909)) (op_create.mean=(samples=23, sum=349, mean=15.1739)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=46, sum=568, mean=12.3478)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=23, sum=1154, mean=50.1739)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=46, sum=1380, mean=30.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=23, sum=1092, mean=47.4783)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:18,957 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:18,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,958 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,958 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,958 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a816350f-f985-4e5f-8ca8-679638bf3212-00000110 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000110&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=176&ts=1731777618957
2024-11-16 17:20:18,967 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:18,967 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,967 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:18,967 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:18,967 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:18,968 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a816350f-f985-4e5f-8ca8-679638bf3212-00000110 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000110&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=176&ts=1731777618957
2024-11-16 17:20:18,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:18,975 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:18,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:18,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:18,975 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a816350f-f985-4e5f-8ca8-679638bf3212-00000110 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000110&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=176&ts=1731777618957
2024-11-16 17:20:18,991 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:18,992 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:18,992 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.017s
2024-11-16 17:20:18,992 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:18,993 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:18,993 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:18,993 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:18,993 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:18,993 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a816350f-f985-4e5f-8ca8-679638bf3212-00000111 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000111&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=176&ts=1731777618993
2024-11-16 17:20:19,002 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:19,002 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,003 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,003 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4056323211735105080.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:19,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4056323211735105080.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (op_abort=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (stream_write_total_time=0) (op_abort.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (stream_write_bytes=65536) (op_hflush=0) (op_hsync=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4056323211735105080.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,004 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:19,004 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4056323211735105080.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:19,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:19,005 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:19,005 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:19,005 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:19,005 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a816350f-f985-4e5f-8ca8-679638bf3212-00000111 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000111&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=41&ts=1731777618993
2024-11-16 17:20:19,033 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:19,034 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:19,034 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:20:19,034 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4056323211735105080.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:19,034 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4056323211735105080.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,034 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4056323211735105080.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,034 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:19,034 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,036 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (op_hsync=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (stream_write_total_time=0) (op_abort.failures=0) (op_hflush=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_put_request.min=28) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=28) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=28, mean=28.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:19,036 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:19,037 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:19,037 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:19,039 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:19,039 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,041 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:19,041 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:19,041 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:19,041 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:19,041 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:19,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:19,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:19,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:19,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:19,042 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:19,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='49cb42a1-23de-4260-8a57-35f965c21a24', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:19,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='49cb42a1-23de-4260-8a57-35f965c21a24', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:19,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='49cb42a1-23de-4260-8a57-35f965c21a24', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:19,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:19,043 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:19,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:19,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:19,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:19,044 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:19,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47c3d97e]
2024-11-16 17:20:19,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47c3d97e]
2024-11-16 17:20:19,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:19,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:19,045 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:19,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:19,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:19,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:19,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:19,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:19,046 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:19,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:19,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:19,047 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:19,049 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:19,049 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:19,049 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:19,049 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:19,050 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:19,050 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:19,050 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:19,050 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:19,050 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:19,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:19,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:20:19,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:19,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:19,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:19,051 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:20:19,052 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:20:19,053 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,053 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,053 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:19,053 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 49cb42a1-23de-4260-8a57-35f965c21a24-00000114 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/49cb42a1-23de-4260-8a57-35f965c21a24-00000114/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=49cb42a1-23de-4260-8a57-35f965c21a24-00000114&t0=176&fs=49cb42a1-23de-4260-8a57-35f965c21a24&t1=176&ts=1731777619053
2024-11-16 17:20:19,054 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:19,054 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:20:19,054 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:19,055 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:19,063 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:19,063 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:19,063 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,064 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_operations=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_closed=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_opened=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_drain=0) (stream_aborted=0) (stream_read_exceptions=0) (action_http_get_request=0) (stream_read_fully_operations=0) (stream_read_bytes=0) (stream_read_unbuffered=0) (action_file_opened=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (stream_read_total_bytes=0) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=10) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=10));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,065 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:19,065 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:19,065 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:19,066 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@76e65e46[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:20:19,066 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:19,066 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics6-obs-bucket
2024-11-16 17:20:19,066 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:19,066 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47c3d97e] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:19,066 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47c3d97e] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:19,068 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((multipart_upload_list.failures=0) (stream_read_remote_stream_aborted=0) (object_put_request=0) (stream_read_remote_stream_aborted.failures=0) (op_get_delegation_token.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_map=0) (delegation_tokens_issued=0) (op_xattr_list.failures=0) (object_put_request.failures=0) (files_delete_rejected=0) (stream_read_bytes_backwards_on_seek=0) (committer_materialize_file.failures=0) (store_io_throttled=0) (stream_read_version_mismatches=0) (delegation_tokens_issued.failures=0) (op_is_directory=0) (action_http_get_request.failures=0) (committer_load_single_pending_file=0) (committer_jobs_failed=0) (action_http_head_request.failures=0) (op_delete.failures=0) (stream_read_remote_stream_drain=0) (op_list_status=0) (object_select_requests=0) (op_xattr_get_named=0) (object_delete_request.failures=0) (stream_write_queue_duration.failures=0) (multipart_upload_list=0) (object_put_bytes=0) (object_copy_requests=0) (op_get_delegation_token=0) (op_get_file_checksum=0) (committer_commits_completed=0) (op_createfile.failures=0) (committer_magic_marker_put.failures=0) (op_xattr_get_named_map=0) (op_is_file=0) (stream_write_total_time=0) (op_list_located_status=0) (multipart_instantiated=0) (stream_read_opened=0) (stream_read_operations=0) (stream_read_total_bytes=0) (multipart_upload_started=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (op_get_content_summary.failures=0) (stream_write_block_uploads_committed=0) (multipart_upload_part_put_bytes=0) (committer_tasks_failed=0) (op_abort=0) (audit_access_check_failure=0) (action_file_opened=1) (op_delete=0) (op_exists=0) (op_create.failures=0) (stream_write_exceptions=0) (op_hsync=0) (ignored_errors=0) (stream_aborted=0) (audit_failure=0) (op_abort.failures=0) (op_get_file_checksum.failures=0) (object_metadata_request=1) (op_glob_status.failures=0) (op_list_files=0) (stream_read_operations_incomplete=0) (op_xattr_get_map.failures=0) (op_glob_status=0) (stream_read_bytes=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_close=0) (op_get_file_status=0) (object_continue_list_request.failures=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe.failures=0) (stream_read_seek_policy_changed=1) (committer_stage_file_upload=0) (committer_magic_files_created=0) (op_xattr_list=0) (action_http_get_request=0) (stream_write_bytes=0) (committer_tasks_completed=0) (op_list_status.failures=0) (action_file_opened.failures=0) (op_get_file_status.failures=0) (stream_write_block_uploads=0) (committer_commit_job=0) (op_open=1) (stream_read_exceptions=0) (committer_materialize_file=0) (stream_read_seek_forward_operations=0) (object_list_request.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (stream_read_unbuffered=0) (audit_span_creation=2) (object_put_request_completed=0) (op_create_non_recursive=0) (op_rename.failures=0) (action_executor_acquired=0) (committer_commits_aborted=0) (op_get_content_summary=0) (committer_commit_job.failures=0) (stream_read_closed=0) (fake_directories_deleted=0) (committer_load_single_pending_file.failures=0) (op_xattr_get_named_map.failures=0) (object_continue_list_request=0) (committer_jobs_completed=0) (op_copy_from_local_file.failures=0) (op_mkdirs=0) (op_is_file.failures=0) (object_multipart_initiated.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=0) (files_deleted=0) (committer_commits_reverted=0) (store_io_retry=0) (store_io_request=1) (op_is_directory.failures=0) (files_copied_bytes=0) (multipart_upload_aborted=0) (op_openfile=0) (stream_write_block_uploads_aborted=0) (object_bulk_delete_request=0) (audit_request_execution=1) (store_exists_probe=0) (fake_directories_created=0) (object_bulk_delete_request.failures=0) (directories_deleted=0) (stream_write_exceptions_completing_upload=0) (op_access=0) (op_copy_from_local_file=0) (committer_commits.failures=0) (object_multipart_aborted.failures=0) (committer_bytes_committed=0) (action_executor_acquired.failures=0) (committer_bytes_uploaded=0) (stream_read_fully_operations=0) (op_exists.failures=0) (files_created=0) (stream_read_vectored_incoming_ranges=0) (object_delete_objects=0) (multipart_upload_part_put=0) (stream_read_seek_backward_operations=0) (stream_read_close_operations=1) (committer_commits_created=0) (op_create=0) (stream_write_total_data=0) (object_multipart_initiated=0) (op_xattr_get_named.failures=0) (op_createfile=0) (committer_magic_marker_put=0) (object_list_request=0) (op_hflush=0) (op_access.failures=0) (object_multipart_aborted=0) (op_list_files.failures=0) (action_http_head_request=1) (files_copied=0) (stream_read_remote_stream_drain.failures=0) (committer_stage_file_upload.failures=0) (op_mkdirs.failures=0) (op_rename=0) (stream_read_vectored_combined_ranges=0) (directories_created=0) (object_delete_request=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((op_get_delegation_token.failures.min=-1) (op_mkdirs.failures.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_get_request.min=-1) (op_delete.failures.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.min=-1) (op_glob_status.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.failures.min=-1) (object_multipart_aborted.min=-1) (object_continue_list_request.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.failures.min=-1) (op_delete.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.min=-1) (object_list_request.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (op_create.min=-1) (delegation_tokens_issued.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.min=-1) (op_is_directory.failures.min=-1) (op_abort.min=-1) (op_rename.min=-1) (op_is_file.min=-1) (op_list_files.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_named.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_createfile.failures.min=-1) (op_get_file_status.min=-1) (object_put_request.min=-1) (op_access.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_list.min=-1) (op_get_content_summary.min=-1) (op_xattr_list.failures.min=-1) (op_list_files.min=-1) (object_delete_request.min=-1) (op_exists.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.min=10) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.min=-1) (action_http_head_request.min=10) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_map.min=-1) (stream_write_queue_duration.min=-1) (op_is_directory.min=-1) (committer_materialize_file.min=-1));
maximums=((object_delete_request.max=-1) (multipart_upload_list.max=-1) (op_create.max=-1) (op_get_file_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (object_bulk_delete_request.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_head_request.max=10) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_write_queue_duration.max=-1) (op_get_content_summary.max=-1) (action_file_opened.max=10) (op_get_file_status.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (store_exists_probe.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.max=-1) (committer_materialize_file.max=-1) (op_list_files.failures.max=-1) (op_exists.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.max=-1) (delegation_tokens_issued.max=-1) (op_rename.failures.max=-1) (op_createfile.failures.max=-1) (op_delete.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.failures.max=-1) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_status.max=-1) (op_xattr_list.failures.max=-1) (op_mkdirs.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_access.max=-1) (object_continue_list_request.max=-1) (op_abort.max=-1) (committer_load_single_pending_file.max=-1) (op_delete.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.failures.max=-1) (op_exists.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_files.max=-1) (committer_materialize_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_list_request.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (op_is_file.max=-1) (op_createfile.max=-1) (op_rename.max=-1));
means=((op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=10, mean=10.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,069 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:19,069 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,069 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,069 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a816350f-f985-4e5f-8ca8-679638bf3212-00000115 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000115&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=176&ts=1731777619068
2024-11-16 17:20:19,073 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,073 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,073 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a816350f-f985-4e5f-8ca8-679638bf3212-00000115 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000115&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=176&ts=1731777619068
2024-11-16 17:20:19,080 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:19,080 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:19,080 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:19,080 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:19,080 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:19,081 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:19,081 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:19,081 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:19,081 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:19,081 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:19,081 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:19,081 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:19,082 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:19,082 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:19,082 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,082 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [178] a816350f-f985-4e5f-8ca8-679638bf3212-00000115 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000115&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=178&ts=1731777619068
2024-11-16 17:20:19,088 [s3a-transfer-obs-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:19,090 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:20:19,090 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:19,090 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:19,090 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:19,090 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777619030; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:19,090 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:19,090 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:19,090 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:19,090 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,091 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a816350f-f985-4e5f-8ca8-679638bf3212-00000115 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000115&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=43&ts=1731777619068
2024-11-16 17:20:19,092 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:19,098 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,099 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a816350f-f985-4e5f-8ca8-679638bf3212-00000115 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000115/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000115&t0=176&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=43&ts=1731777619068
2024-11-16 17:20:19,111 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:20:19,113 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:20:19,113 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:20:19,113 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:20:19,117 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:20:19,117 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.036s
2024-11-16 17:20:19,117 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:19,117 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:19,121 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:19,136 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 30, active threads = 0, queued tasks = 0, completed tasks = 30], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe.failures=0) (committer_tasks_failed=0) (object_delete_request=0) (multipart_upload_aborted=0) (committer_tasks_completed=0) (stream_write_total_data=3145728) (stream_read_operations=3) (op_copy_from_local_file=0) (object_multipart_initiated.failures=0) (object_put_request_completed=48) (committer_materialize_file.failures=0) (op_create.failures=0) (stream_read_exceptions=0) (object_metadata_request=68) (op_hsync=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map=0) (op_get_file_status=1) (object_continue_list_request.failures=0) (stream_read_seek_bytes_discarded=0) (committer_commits_completed=0) (op_open=20) (op_list_files.failures=0) (stream_read_seek_forward_operations=0) (action_file_opened=20) (multipart_upload_part_put_bytes=0) (store_io_request=282) (stream_write_total_time=0) (object_select_requests=0) (committer_magic_marker_put.failures=0) (op_list_located_status=0) (object_put_bytes=1572864) (committer_bytes_committed=0) (committer_bytes_uploaded=0) (op_createfile=0) (audit_span_creation=94) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads=24) (op_copy_from_local_file.failures=0) (multipart_upload_completed=0) (stream_read_seek_backward_operations=0) (multipart_upload_part_put=0) (stream_read_closed=3) (committer_materialize_file=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_policy_changed=21) (object_list_request.failures=0) (stream_read_remote_stream_aborted=0) (action_http_get_request=22) (committer_magic_marker_put=0) (delegation_tokens_issued=0) (action_http_head_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (store_exists_probe=0) (op_exists.failures=0) (op_mkdirs.failures=0) (action_file_opened.failures=0) (op_rename.failures=0) (op_access=0) (committer_commits_created=0) (object_delete_objects=48) (op_get_file_checksum=0) (op_xattr_get_map.failures=0) (stream_write_queue_duration.failures=0) (op_openfile=0) (action_http_head_request=68) (op_get_file_checksum.failures=0) (stream_write_exceptions=0) (stream_read_remote_stream_drain=3) (object_continue_list_request=0) (committer_commits_aborted=0) (committer_stage_file_upload=0) (multipart_upload_started=0) (stream_read_seek_operations=0) (fake_directories_created=0) (op_is_file.failures=0) (object_list_request=96) (op_exists=0) (store_io_throttled=0) (op_get_content_summary=0) (committer_jobs_failed=0) (object_multipart_initiated=0) (op_glob_status.failures=0) (files_deleted=24) (object_copy_requests=0) (stream_write_bytes=1572864) (op_get_delegation_token.failures=0) (object_bulk_delete_request=48) (op_list_files=0) (store_io_retry=0) (committer_commit_job.failures=0) (files_copied_bytes=0) (stream_read_vectored_read_bytes_discarded=24523) (committer_stage_file_upload.failures=0) (op_delete.failures=0) (op_xattr_list.failures=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=21) (op_xattr_get_named=0) (op_create=24) (op_xattr_get_map=0) (committer_jobs_completed=0) (stream_read_vectored_operations=16) (op_createfile.failures=0) (op_get_content_summary.failures=0) (op_access.failures=0) (action_executor_acquired=0) (op_mkdirs=24) (op_create_non_recursive=0) (files_copied=0) (op_is_file=0) (op_get_delegation_token=0) (op_list_status=0) (op_glob_status=0) (stream_read_vectored_incoming_ranges=50) (action_http_get_request.failures=0) (op_abort.failures=0) (op_get_file_status.failures=0) (delegation_tokens_issued.failures=0) (multipart_instantiated=0) (op_xattr_get_named_map.failures=0) (op_hflush=0) (stream_read_bytes=6663) (stream_read_bytes_discarded_in_close=196008) (stream_read_bytes_discarded_in_abort=0) (committer_commits.failures=0) (op_is_directory.failures=0) (stream_read_unbuffered=1) (files_delete_rejected=0) (stream_write_queue_duration=0) (multipart_upload_list=0) (audit_failure=0) (object_multipart_aborted=0) (object_bulk_delete_request.failures=0) (action_executor_acquired.failures=0) (fake_directories_deleted=24) (stream_aborted=0) (object_put_request=48) (audit_request_execution=282) (op_xattr_list=0) (committer_commits_reverted=0) (stream_read_fully_operations=1) (op_rename=0) (stream_write_exceptions_completing_upload=0) (directories_deleted=0) (op_xattr_get_named.failures=0) (committer_commit_job=0) (committer_magic_files_created=0) (multipart_upload_list.failures=0) (object_put_request.failures=0) (audit_access_check_failure=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads_aborted=0) (stream_read_total_bytes=202671) (op_delete=24) (op_abort=0) (op_list_status.failures=0) (object_delete_request.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=3) (directories_created=24) (ignored_errors=0) (stream_read_close_operations=20) (stream_read_operations_incomplete=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted.failures=0) (committer_load_single_pending_file.failures=0) (files_created=24) (op_is_directory=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=24));
minimums=((op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.min=-1) (stream_write_queue_duration.min=-1) (op_rename.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.min=12) (op_access.failures.min=-1) (op_access.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_drain.min=1) (store_exists_probe.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_exists.min=-1) (op_createfile.failures.min=-1) (op_is_directory.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_status.failures.min=-1) (op_xattr_list.min=-1) (op_list_status.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=6) (op_mkdirs.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.min=-1) (op_exists.failures.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.min=-1) (op_glob_status.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_commit_job.failures.min=-1) (op_abort.failures.min=-1) (op_is_directory.failures.min=-1) (object_put_request.min=28) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=5) (committer_load_single_pending_file.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.min=22) (op_is_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.min=4) (action_file_opened.failures.min=-1) (op_create.min=6) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (op_list_files.failures.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named_map.min=-1) (multipart_upload_list.min=-1) (op_delete.min=27) (multipart_upload_list.failures.min=-1) (object_delete_request.min=-1) (op_get_file_status.min=5) (op_create.failures.min=-1) (action_http_head_request.min=3) (object_delete_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (op_is_file.min=-1) (committer_commit_job.min=-1) (object_continue_list_request.failures.min=-1) (op_get_content_summary.min=-1) (op_createfile.min=-1) (op_get_file_checksum.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_delete.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_file_opened.max=15) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_file_checksum.max=-1) (op_create.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_delete.max=111) (committer_load_single_pending_file.max=-1) (committer_commit_job.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_list.max=-1) (object_continue_list_request.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_map.failures.max=-1) (op_glob_status.max=-1) (op_is_file.max=-1) (committer_stage_file_upload.max=-1) (op_exists.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.max=27) (op_mkdirs.max=346) (op_rename.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.max=-1) (action_http_head_request.max=19) (committer_magic_marker_put.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (op_createfile.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (op_abort.max=-1) (object_put_request.max=104) (op_create.max=74) (object_continue_list_request.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_get_request.max=43) (multipart_upload_list.failures.max=-1) (op_is_directory.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.max=5) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.failures.max=-1) (op_exists.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.failures.max=-1) (store_exists_probe.max=-1) (object_list_request.max=210) (op_access.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.failures.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.max=-1) (op_list_status.max=-1) (op_get_content_summary.max=-1));
means=((op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=24, sum=359, mean=14.9583)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=96, sum=1127, mean=11.7396)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=48, sum=1424, mean=29.6667)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=24, sum=1129, mean=47.0417)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=68, sum=389, mean=5.7206)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=48, sum=587, mean=12.2292)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=24, sum=1189, mean=49.5417)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=497, mean=22.5909)) (action_file_opened.mean=(samples=20, sum=131, mean=6.5500)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:19,137 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:19,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,139 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,139 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a816350f-f985-4e5f-8ca8-679638bf3212-00000116 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000116&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=179&ts=1731777619137
2024-11-16 17:20:19,151 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:19,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,152 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a816350f-f985-4e5f-8ca8-679638bf3212-00000116 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000116&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=179&ts=1731777619137
2024-11-16 17:20:19,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,157 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:19,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:19,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:19,157 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a816350f-f985-4e5f-8ca8-679638bf3212-00000116 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000116&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=179&ts=1731777619137
2024-11-16 17:20:19,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:19,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:19,178 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.021s
2024-11-16 17:20:19,178 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:19,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,179 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,179 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a816350f-f985-4e5f-8ca8-679638bf3212-00000117 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000117&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=179&ts=1731777619178
2024-11-16 17:20:19,185 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:19,186 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,186 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,187 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5720729171577429242.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:19,188 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5720729171577429242.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (op_abort=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (op_hflush=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (action_executor_acquired=0) (object_put_request.failures=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (op_hsync=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5720729171577429242.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,189 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,189 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:19,189 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5720729171577429242.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:19,190 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:19,190 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:19,191 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:19,191 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:19,191 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a816350f-f985-4e5f-8ca8-679638bf3212-00000117 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000117&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=44&ts=1731777619178
2024-11-16 17:20:19,229 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:19,230 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:19,230 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.040s
2024-11-16 17:20:19,230 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5720729171577429242.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:19,230 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5720729171577429242.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,230 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5720729171577429242.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,230 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:19,230 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,232 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (op_abort=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (op_abort.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_completed=0) (op_hsync=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (object_put_request=1) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=38) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=38) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.mean=(samples=1, sum=38, mean=38.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:19,232 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:19,232 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:19,232 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:19,234 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:19,234 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='1840c9f6-8b26-4c10-8b7c-3708e71fb352', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='1840c9f6-8b26-4c10-8b7c-3708e71fb352', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='1840c9f6-8b26-4c10-8b7c-3708e71fb352', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:19,236 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f3a22d8]
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f3a22d8]
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:19,237 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:19,238 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:19,239 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:19,240 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:19,240 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:19,240 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:19,240 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:19,240 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:19,240 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:19,240 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:19,241 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:19,241 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:19,241 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:20:19,241 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:19,241 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:19,241 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:19,241 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:20:19,242 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:20:19,242 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,242 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,243 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:19,243 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 1840c9f6-8b26-4c10-8b7c-3708e71fb352-00000120 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/1840c9f6-8b26-4c10-8b7c-3708e71fb352-00000120/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=1840c9f6-8b26-4c10-8b7c-3708e71fb352-00000120&t0=179&fs=1840c9f6-8b26-4c10-8b7c-3708e71fb352&t1=179&ts=1731777619242
2024-11-16 17:20:19,243 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:19,243 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:20:19,244 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:19,244 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:19,249 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:19,250 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:19,250 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,250 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_closed=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (action_http_get_request=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_close_operations=1) (action_file_opened=1) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_combined_ranges=0) (action_file_opened.failures=0) (stream_read_seek_operations=0) (stream_read_total_bytes=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=0) (stream_read_block_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=8) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=8) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,251 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:19,252 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:19,252 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:19,252 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@7ae32a40[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:20:19,253 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:19,253 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics7-obs-bucket
2024-11-16 17:20:19,253 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:19,253 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f3a22d8] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:19,253 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f3a22d8] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:19,255 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_is_directory=0) (object_put_request_completed=0) (stream_read_seek_operations=0) (stream_read_close_operations=1) (committer_bytes_committed=0) (committer_magic_files_created=0) (stream_read_fully_operations=0) (op_mkdirs=0) (object_continue_list_request.failures=0) (stream_read_bytes_discarded_in_close=0) (op_list_files=0) (committer_bytes_uploaded=0) (object_delete_objects=0) (directories_deleted=0) (action_file_opened.failures=0) (multipart_upload_started=0) (committer_stage_file_upload.failures=0) (object_multipart_initiated=0) (stream_read_version_mismatches=0) (stream_write_total_time=0) (stream_write_block_uploads_aborted=0) (op_abort.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_write_exceptions_completing_upload=0) (op_get_file_status=0) (action_file_opened=1) (op_xattr_get_map.failures=0) (fake_directories_deleted=0) (op_create=0) (object_put_request.failures=0) (store_io_retry=0) (action_http_get_request.failures=0) (op_rename.failures=0) (committer_commit_job=0) (op_xattr_get_map=0) (op_hflush=0) (object_delete_request.failures=0) (committer_materialize_file=0) (op_get_content_summary.failures=0) (op_xattr_get_named_map=0) (files_created=0) (audit_access_check_failure=0) (object_list_request.failures=0) (stream_write_exceptions=0) (stream_read_bytes=0) (delegation_tokens_issued.failures=0) (multipart_upload_aborted=0) (store_exists_probe.failures=0) (op_get_content_summary=0) (stream_read_seek_forward_operations=0) (store_exists_probe=0) (object_multipart_initiated.failures=0) (multipart_instantiated=0) (object_metadata_request=1) (committer_jobs_completed=0) (stream_read_seek_backward_operations=0) (object_bulk_delete_request.failures=0) (committer_magic_marker_put.failures=0) (op_xattr_get_named=0) (op_openfile=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted.failures=0) (op_rename=0) (op_get_file_status.failures=0) (op_copy_from_local_file.failures=0) (multipart_upload_list=0) (committer_tasks_failed=0) (stream_read_seek_bytes_skipped=0) (op_list_status.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (op_glob_status=0) (multipart_upload_completed=0) (stream_read_bytes_discarded_in_abort=0) (object_continue_list_request=0) (object_copy_requests=0) (stream_read_operations_incomplete=0) (audit_request_execution=1) (action_http_head_request.failures=0) (stream_write_queue_duration=0) (op_is_file.failures=0) (committer_tasks_completed=0) (committer_commits.failures=0) (stream_read_operations=0) (committer_commits_completed=0) (action_http_get_request=0) (op_access=0) (stream_write_block_uploads_committed=0) (action_http_head_request=1) (stream_read_total_bytes=0) (multipart_upload_part_put=0) (stream_read_seek_policy_changed=1) (multipart_upload_abort_under_path_invoked=0) (stream_read_closed=0) (stream_read_vectored_operations=0) (op_delete.failures=0) (op_xattr_list.failures=0) (stream_write_bytes=0) (op_exists=0) (ignored_errors=0) (op_createfile.failures=0) (committer_commits_aborted=0) (stream_read_exceptions=0) (committer_commit_job.failures=0) (object_delete_request=0) (op_get_file_checksum=0) (op_open=1) (object_multipart_aborted=0) (op_abort=0) (op_get_delegation_token.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named.failures=0) (stream_write_total_data=0) (op_hsync=0) (committer_load_single_pending_file.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_drain.failures=0) (op_is_file=0) (store_io_throttled=0) (committer_materialize_file.failures=0) (audit_failure=0) (committer_jobs_failed=0) (op_list_files.failures=0) (object_list_request=0) (op_list_status=0) (multipart_upload_list.failures=0) (object_select_requests=0) (op_xattr_list=0) (op_get_delegation_token=0) (stream_read_vectored_combined_ranges=0) (op_glob_status.failures=0) (stream_write_block_uploads=0) (op_access.failures=0) (delegation_tokens_issued=0) (op_get_file_checksum.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_opened=0) (files_deleted=0) (op_create.failures=0) (files_copied=0) (committer_commits_created=0) (committer_stage_file_upload=0) (object_put_bytes=0) (committer_commits_reverted=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (committer_load_single_pending_file=0) (directories_created=0) (op_delete=0) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (op_createfile=0) (object_bulk_delete_request=0) (stream_read_remote_stream_aborted=0) (op_list_located_status=0) (object_put_request=0) (op_create_non_recursive=0) (op_exists.failures=0) (committer_magic_marker_put=0) (op_is_directory.failures=0) (store_io_request=1) (files_delete_rejected=0) (fake_directories_created=0) (op_mkdirs.failures=0) (audit_span_creation=2) (stream_write_queue_duration.failures=0) (files_copied_bytes=0) (stream_aborted=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((op_list_status.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.min=-1) (action_http_get_request.min=-1) (op_get_delegation_token.min=-1) (committer_commit_job.min=-1) (op_create.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.failures.min=-1) (action_http_head_request.min=6) (object_put_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_commit_job.failures.min=-1) (op_mkdirs.min=-1) (object_delete_request.min=-1) (action_file_opened.min=8) (op_xattr_get_named_map.min=-1) (action_executor_acquired.min=-1) (op_get_file_checksum.failures.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (object_put_request.min=-1) (op_create.failures.min=-1) (action_file_opened.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (store_exists_probe.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_content_summary.min=-1) (op_xattr_list.failures.min=-1) (op_access.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.min=-1) (op_is_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_write_queue_duration.min=-1) (op_delete.min=-1) (op_exists.min=-1) (op_list_files.min=-1) (op_createfile.min=-1) (op_abort.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.min=-1) (op_is_directory.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.failures.min=-1) (op_is_file.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.failures.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((op_get_file_status.max=-1) (op_glob_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_createfile.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.max=-1) (op_is_file.max=-1) (op_delete.max=-1) (op_rename.max=-1) (op_xattr_get_named.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.max=-1) (op_get_file_checksum.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_create.max=-1) (object_multipart_initiated.max=-1) (op_glob_status.max=-1) (op_create.failures.max=-1) (object_put_request.max=-1) (op_list_files.failures.max=-1) (op_is_file.failures.max=-1) (op_is_directory.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_checksum.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_content_summary.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_list.max=-1) (multipart_upload_list.max=-1) (op_exists.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (op_access.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.max=-1) (op_abort.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (store_exists_probe.max=-1) (object_put_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (object_delete_request.failures.max=-1) (object_list_request.max=-1) (action_file_opened.max=8) (op_get_delegation_token.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.max=6) (store_exists_probe.failures.max=-1) (object_continue_list_request.max=-1) (op_createfile.failures.max=-1) (op_list_status.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.failures.max=-1));
means=((object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=6, mean=6.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,256 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:19,256 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,256 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,256 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a816350f-f985-4e5f-8ca8-679638bf3212-00000121 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000121&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=179&ts=1731777619255
2024-11-16 17:20:19,259 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,260 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,260 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a816350f-f985-4e5f-8ca8-679638bf3212-00000121 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000121&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=179&ts=1731777619255
2024-11-16 17:20:19,268 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:19,268 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:19,268 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:19,268 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:19,269 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:19,269 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:19,269 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:19,269 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:19,269 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:19,269 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:19,269 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:19,270 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:19,271 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:19,271 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:19,271 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,271 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] a816350f-f985-4e5f-8ca8-679638bf3212-00000121 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000121&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=181&ts=1731777619255
2024-11-16 17:20:19,279 [s3a-transfer-obs-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:19,279 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:20:19,279 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:19,280 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:19,280 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:19,280 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777619223; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:19,280 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:19,280 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:19,281 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:19,281 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:19,281 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:19,281 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:19,281 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:19,281 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:19,281 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,281 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,281 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:19,282 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,282 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a816350f-f985-4e5f-8ca8-679638bf3212-00000121 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000121&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=45&ts=1731777619255
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,290 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a816350f-f985-4e5f-8ca8-679638bf3212-00000121 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000121/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000121&t0=179&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=45&ts=1731777619255
2024-11-16 17:20:19,298 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:19,298 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:19,298 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:20:19,298 [s3a-transfer-obs-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:20:19,298 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:20:19,299 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:20:19,299 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:19,299 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:19,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:19,316 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 31, active threads = 0, queued tasks = 0, completed tasks = 31], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_request=0) (stream_read_exceptions=0) (stream_aborted=0) (op_xattr_get_named_map=0) (action_http_head_request=70) (op_get_content_summary=0) (op_is_directory.failures=0) (stream_write_block_uploads_committed=0) (op_xattr_get_map=0) (stream_read_operations=3) (object_continue_list_request.failures=0) (committer_jobs_completed=0) (directories_deleted=0) (op_xattr_get_named.failures=0) (stream_read_seek_operations=0) (object_select_requests=0) (op_get_delegation_token=0) (action_http_head_request.failures=0) (action_file_opened=20) (op_createfile=0) (op_is_directory=0) (multipart_upload_aborted=0) (stream_write_block_uploads=25) (op_exists.failures=0) (stream_read_remote_stream_drain=3) (op_access.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (stream_read_bytes_backwards_on_seek=0) (store_io_request=292) (object_list_request=100) (committer_materialize_file=0) (ignored_errors=0) (op_xattr_get_named=0) (object_put_bytes=1638400) (op_get_content_summary.failures=0) (stream_write_exceptions_completing_upload=0) (op_list_status.failures=0) (fake_directories_created=0) (committer_commit_job.failures=0) (stream_read_seek_bytes_discarded=0) (committer_commits_reverted=0) (stream_read_bytes=6663) (object_continue_list_request=0) (stream_write_total_time=0) (stream_read_closed=3) (op_xattr_list.failures=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named_map.failures=0) (op_hflush=0) (op_is_file.failures=0) (files_created=25) (op_list_status=0) (op_hsync=0) (stream_read_seek_backward_operations=0) (op_list_files.failures=0) (op_list_located_status=0) (multipart_upload_started=0) (op_mkdirs.failures=0) (audit_failure=0) (op_exists=0) (op_createfile.failures=0) (object_put_request=50) (stream_read_seek_forward_operations=0) (audit_request_execution=292) (multipart_upload_list.failures=0) (op_copy_from_local_file.failures=0) (op_get_file_status.failures=0) (stream_write_block_uploads_aborted=0) (op_get_file_checksum.failures=0) (committer_tasks_completed=0) (object_bulk_delete_request=50) (committer_commits.failures=0) (multipart_upload_list=0) (committer_commit_job=0) (committer_bytes_committed=0) (object_multipart_initiated=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_policy_changed=21) (multipart_upload_completed=0) (object_multipart_aborted=0) (op_rename=0) (stream_read_close_operations=20) (object_list_request.failures=0) (store_io_throttled=0) (files_delete_rejected=0) (files_copied=0) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=50) (op_get_file_status=1) (op_is_file=0) (stream_read_seek_bytes_skipped=0) (stream_write_queue_duration=0) (committer_magic_files_created=0) (fake_directories_deleted=25) (op_glob_status=0) (stream_read_vectored_operations=16) (stream_read_total_bytes=202671) (op_abort=0) (committer_commits_created=0) (multipart_upload_part_put=0) (object_copy_requests=0) (op_access=0) (delegation_tokens_issued=0) (action_file_opened.failures=0) (committer_materialize_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (store_exists_probe.failures=0) (files_copied_bytes=0) (op_xattr_list=0) (audit_access_check_failure=0) (stream_read_version_mismatches=0) (committer_tasks_failed=0) (object_delete_objects=50) (action_executor_acquired=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_aborted=0) (committer_load_single_pending_file=0) (op_xattr_get_map.failures=0) (op_create_non_recursive=0) (op_copy_from_local_file=0) (committer_jobs_failed=0) (stream_read_opened=3) (op_mkdirs=25) (op_create=25) (committer_commits_completed=0) (op_open=20) (stream_read_remote_stream_aborted.failures=0) (op_delete.failures=0) (stream_read_operations_incomplete=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (object_metadata_request=70) (action_executor_acquired.failures=0) (committer_stage_file_upload.failures=0) (op_delete=25) (op_rename.failures=0) (stream_read_remote_stream_drain.failures=0) (op_openfile=0) (object_put_request.failures=0) (files_deleted=25) (stream_write_total_data=3276800) (committer_magic_marker_put=0) (stream_read_unbuffered=1) (op_glob_status.failures=0) (store_exists_probe=0) (object_put_request_completed=50) (multipart_upload_part_put_bytes=0) (committer_commits_aborted=0) (op_create.failures=0) (committer_stage_file_upload=0) (stream_write_bytes=1638400) (action_http_get_request=22) (committer_magic_marker_put.failures=0) (op_get_file_checksum=0) (delegation_tokens_issued.failures=0) (audit_span_creation=97) (stream_read_vectored_combined_ranges=21) (store_io_retry=0) (object_multipart_initiated.failures=0) (directories_created=25) (stream_read_bytes_discarded_in_abort=0) (stream_write_queue_duration.failures=0) (op_list_files=0) (action_http_get_request.failures=0) (object_delete_request.failures=0) (op_abort.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_fully_operations=1) (committer_bytes_uploaded=0));
gauges=((object_put_request_active=0) (stream_write_block_uploads_pending=25) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_delete_request.min=-1) (op_access.failures.min=-1) (committer_commit_job.min=-1) (object_put_request.failures.min=-1) (op_createfile.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (op_list_files.min=-1) (committer_materialize_file.min=-1) (op_rename.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (op_glob_status.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_exists.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.min=5) (op_create.min=6) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.min=-1) (op_access.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_aborted.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.min=-1) (object_bulk_delete_request.min=6) (committer_stage_file_upload.min=-1) (op_abort.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.min=5) (op_mkdirs.min=22) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.min=38) (op_glob_status.failures.min=-1) (action_http_get_request.min=12) (multipart_upload_list.failures.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.min=-1) (op_list_files.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_exists.min=-1) (op_delete.min=27) (op_createfile.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_file_opened.min=4) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.min=3));
maximums=((action_http_head_request.failures.max=-1) (op_access.failures.max=-1) (committer_magic_marker_put.max=-1) (op_list_files.failures.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_get_delegation_token.failures.max=-1) (action_file_opened.max=15) (op_createfile.failures.max=-1) (op_mkdirs.max=346) (action_file_opened.failures.max=-1) (op_createfile.max=-1) (op_list_status.max=-1) (op_delete.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.max=104) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.max=-1) (object_continue_list_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (object_bulk_delete_request.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_create.max=74) (object_delete_request.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.max=-1) (action_http_get_request.failures.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_bulk_delete_request.max=27) (op_get_file_checksum.failures.max=-1) (op_exists.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.max=-1) (object_list_request.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (object_list_request.max=210) (op_get_file_status.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.failures.max=-1) (op_delete.max=111) (op_xattr_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.max=19) (committer_magic_marker_put.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.max=5) (op_xattr_get_named.max=-1) (op_list_files.max=-1) (op_access.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_stage_file_upload.max=-1) (op_exists.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.max=43) (stream_write_queue_duration.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.max=-1) (committer_materialize_file.max=-1) (multipart_upload_list.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=50, sum=1482, mean=29.6400)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=25, sum=1230, mean=49.2000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=131, mean=6.5500)) (object_list_request.mean=(samples=100, sum=1161, mean=11.6100)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=497, mean=22.5909)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=50, sum=602, mean=12.0400)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=25, sum=1159, mean=46.3600)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=70, sum=396, mean=5.6571)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=25, sum=368, mean=14.7200)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:19,318 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:19,318 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,318 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,318 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,318 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,319 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000122 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000122&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619317
2024-11-16 17:20:19,325 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:19,325 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,325 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,325 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,325 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,326 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000122 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000122&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619317
2024-11-16 17:20:19,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,330 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:19,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:19,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:19,330 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000122 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000122&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619317
2024-11-16 17:20:19,359 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:19,360 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:19,360 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.030s
2024-11-16 17:20:19,360 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:19,360 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,360 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,360 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,360 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,361 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000123 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000123&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619360
2024-11-16 17:20:19,372 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:19,372 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,372 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,373 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5088420899983750082.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:19,373 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5088420899983750082.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (op_abort=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (multipart_upload_completed=0) (op_abort.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_put_request=0) (action_executor_acquired=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5088420899983750082.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,373 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,373 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:19,374 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5088420899983750082.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:19,374 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:19,374 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:19,374 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:19,374 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:19,374 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a816350f-f985-4e5f-8ca8-679638bf3212-00000123 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000123&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=47&ts=1731777619360
2024-11-16 17:20:19,394 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:19,394 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:19,394 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.020s
2024-11-16 17:20:19,394 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5088420899983750082.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:19,395 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5088420899983750082.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,395 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5088420899983750082.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,395 [s3a-transfer-obs-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:19,395 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,396 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (object_put_request=1) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_put_request.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (op_hflush=0) (committer_magic_marker_put=0) (op_hsync=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=20) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_put_request.max=20) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:19,396 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:19,397 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,397 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,398 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:19,398 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000124 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000124&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619397
2024-11-16 17:20:19,407 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:19,407 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:19,407 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,407 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,407 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:19,407 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:19,408 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,408 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,408 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:20:19,408 [s3a-transfer-obs-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,408 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=0) (stream_read_total_bytes=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations=0) (stream_read_vectored_incoming_ranges=2) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_close_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=10));
maximums=((stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=10) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:19,409 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000125 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000125&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619409
2024-11-16 17:20:19,412 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:19,412 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:19,412 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,413 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,413 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:19,413 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:19,413 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,413 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,413 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,413 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:19,413 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [50] a816350f-f985-4e5f-8ca8-679638bf3212-00000125 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000125&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=50&ts=1731777619409
2024-11-16 17:20:19,422 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.009s
2024-11-16 17:20:19,423 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:19,423 [s3a-transfer-obs-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,423 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_operations=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes=150) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_forward_operations=0) (action_file_opened=1) (stream_read_block_read.failures=0) (action_http_get_request=1) (stream_read_block_acquire_read=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_total_bytes=150) (stream_read_vectored_read_bytes_discarded=10) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=10) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=3));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=10) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=10, mean=10.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,424 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:19,425 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,425 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,425 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000126 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000126&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619424
2024-11-16 17:20:19,428 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,428 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,428 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a816350f-f985-4e5f-8ca8-679638bf3212-00000126 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000126&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=182&ts=1731777619424
2024-11-16 17:20:19,435 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:19,435 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:19,435 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:19,435 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:19,435 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:19,436 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:19,436 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:19,436 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:19,436 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:19,436 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:19,436 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:19,436 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:19,437 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:19,437 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:19,437 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,437 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [183] a816350f-f985-4e5f-8ca8-679638bf3212-00000126 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000126&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=183&ts=1731777619424
2024-11-16 17:20:19,445 [s3a-transfer-obs-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:19,445 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:20:19,445 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:19,445 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:19,446 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:19,446 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777619391; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:19,446 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:19,446 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:19,446 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:19,446 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:19,447 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,447 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a816350f-f985-4e5f-8ca8-679638bf3212-00000126 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000126&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=51&ts=1731777619424
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,458 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a816350f-f985-4e5f-8ca8-679638bf3212-00000126 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000126/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000126&t0=182&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=51&ts=1731777619424
2024-11-16 17:20:19,471 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:20:19,471 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:20:19,471 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:20:19,472 [s3a-transfer-obs-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:20:19,472 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:20:19,472 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.036s
2024-11-16 17:20:19,472 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:19,472 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:19,473 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:19,487 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 32, active threads = 0, queued tasks = 0, completed tasks = 32], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_create.failures=0) (committer_commits_created=0) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=3) (op_list_status.failures=0) (stream_write_bytes=1703936) (files_deleted=26) (stream_read_total_bytes=202821) (delegation_tokens_issued=0) (object_put_request_completed=52) (committer_stage_file_upload=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (committer_bytes_committed=0) (committer_tasks_failed=0) (committer_commit_job=0) (stream_read_seek_backward_operations=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (op_get_file_checksum=0) (op_mkdirs=26) (op_xattr_list=0) (object_put_request=52) (committer_commits_reverted=0) (ignored_errors=0) (multipart_upload_abort_under_path_invoked=0) (object_metadata_request=74) (action_file_opened.failures=0) (op_list_files.failures=0) (op_open=22) (stream_read_unbuffered=1) (audit_span_creation=102) (stream_read_bytes_backwards_on_seek=0) (object_bulk_delete_request=52) (op_is_file.failures=0) (op_abort=0) (multipart_upload_aborted=0) (files_copied=0) (object_put_bytes=1703936) (stream_read_seek_operations=0) (committer_commit_job.failures=0) (op_create=26) (op_xattr_get_named=0) (multipart_upload_part_put_bytes=0) (op_abort.failures=0) (directories_deleted=0) (stream_read_remote_stream_drain=3) (multipart_instantiated=0) (op_hflush=0) (op_delete.failures=0) (directories_created=26) (op_get_file_status.failures=0) (op_get_delegation_token.failures=0) (stream_read_bytes=6813) (op_is_directory=0) (object_continue_list_request=0) (committer_jobs_completed=0) (committer_materialize_file.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_copy_from_local_file=0) (op_is_file=0) (stream_read_seek_forward_operations=0) (object_delete_objects=52) (stream_read_seek_policy_changed=23) (object_put_request.failures=0) (committer_materialize_file=0) (stream_write_exceptions_completing_upload=0) (object_delete_request.failures=0) (op_xattr_get_named_map=0) (store_io_throttled=0) (object_continue_list_request.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_aborted=0) (store_io_request=305) (committer_tasks_completed=0) (committer_magic_files_created=0) (committer_load_single_pending_file=0) (object_multipart_initiated.failures=0) (stream_read_fully_operations=1) (stream_read_vectored_operations=18) (op_exists=0) (op_createfile=0) (op_access.failures=0) (files_created=26) (object_select_requests=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (op_get_file_status=1) (object_list_request.failures=0) (op_xattr_get_map=0) (op_delete=26) (object_multipart_aborted=0) (stream_read_version_mismatches=0) (stream_write_queue_duration=0) (op_access=0) (stream_read_vectored_incoming_ranges=54) (action_executor_acquired=0) (action_http_get_request=23) (committer_bytes_uploaded=0) (store_exists_probe.failures=0) (stream_write_block_uploads_aborted=0) (stream_write_total_time=0) (stream_read_close_operations=22) (object_copy_requests=0) (multipart_upload_list.failures=0) (audit_failure=0) (stream_write_queue_duration.failures=0) (stream_read_operations=3) (op_rename.failures=0) (op_list_files=0) (object_multipart_aborted.failures=0) (committer_jobs_failed=0) (op_copy_from_local_file.failures=0) (op_list_status=0) (fake_directories_deleted=26) (op_xattr_get_named_map.failures=0) (op_get_content_summary.failures=0) (op_xattr_get_map.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_exists.failures=0) (multipart_upload_list=0) (op_list_located_status=0) (multipart_upload_started=0) (object_bulk_delete_request.failures=0) (action_http_head_request.failures=0) (op_is_directory.failures=0) (committer_commits.failures=0) (op_rename=0) (fake_directories_created=0) (audit_access_check_failure=0) (stream_read_seek_bytes_discarded=0) (op_openfile=0) (op_mkdirs.failures=0) (store_exists_probe=0) (action_file_opened=22) (op_xattr_list.failures=0) (object_delete_request=0) (stream_read_vectored_read_bytes_discarded=24533) (committer_load_single_pending_file.failures=0) (op_createfile.failures=0) (stream_read_closed=3) (stream_write_total_data=3407872) (stream_read_exceptions=0) (stream_write_block_uploads=26) (op_glob_status.failures=0) (action_http_get_request.failures=0) (files_delete_rejected=0) (store_io_retry=0) (stream_read_remote_stream_aborted=0) (op_create_non_recursive=0) (committer_magic_marker_put.failures=0) (committer_stage_file_upload.failures=0) (committer_commits_aborted=0) (op_xattr_get_named.failures=0) (committer_commits_completed=0) (op_get_delegation_token=0) (stream_write_block_uploads_committed=0) (delegation_tokens_issued.failures=0) (op_hsync=0) (object_list_request=104) (files_copied_bytes=0) (action_http_head_request=74) (action_executor_acquired.failures=0) (audit_request_execution=305) (stream_write_exceptions=0) (op_glob_status=0) (op_get_file_checksum.failures=0) (stream_read_vectored_combined_ranges=23) (op_get_content_summary=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_pending=26) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.min=6) (op_delete.min=27) (op_exists.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_aborted.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (action_http_get_request.min=10) (op_access.failures.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_abort.failures.min=-1) (object_continue_list_request.min=-1) (object_put_request.min=20) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_xattr_list.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_aborted.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (op_rename.failures.min=-1) (action_http_head_request.min=3) (op_xattr_get_named.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_access.min=-1) (op_get_content_summary.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.failures.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_create.min=6) (committer_commit_job.failures.min=-1) (op_get_file_status.min=5) (object_multipart_initiated.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_list_request.min=5) (committer_magic_marker_put.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.min=3) (op_list_files.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named_map.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_map.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (store_exists_probe.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.min=-1) (op_createfile.min=-1) (committer_commit_job.min=-1) (op_list_status.min=-1) (op_glob_status.min=-1) (object_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.min=-1) (op_is_file.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.failures.min=-1) (action_file_opened.failures.min=-1) (op_exists.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.min=-1) (object_delete_request.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.min=22) (op_get_delegation_token.min=-1));
maximums=((op_get_content_summary.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_status.max=-1) (action_executor_acquired.max=-1) (op_access.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_is_file.max=-1) (op_get_content_summary.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.max=346) (object_put_request.max=104) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_bulk_delete_request.max=27) (committer_materialize_file.failures.max=-1) (op_xattr_list.max=-1) (store_exists_probe.failures.max=-1) (delegation_tokens_issued.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.max=5) (op_copy_from_local_file.failures.max=-1) (object_list_request.max=210) (committer_commit_job.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.max=15) (stream_read_remote_stream_drain.max=1) (object_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_directory.max=-1) (op_rename.failures.max=-1) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named_map.max=-1) (action_http_head_request.failures.max=-1) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_delete.max=111) (object_delete_request.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.max=-1) (op_rename.max=-1) (op_abort.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.failures.max=-1) (op_list_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.failures.max=-1) (action_http_get_request.max=43) (op_list_files.max=-1) (op_create.max=74) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.max=19));
means=((op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=104, sum=1194, mean=11.4808)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=52, sum=1531, mean=29.4423)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=74, sum=416, mean=5.6216)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=22, sum=144, mean=6.5455)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=26, sum=381, mean=14.6538)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=52, sum=626, mean=12.0385)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=26, sum=1195, mean=45.9615)) (action_http_get_request.mean=(samples=23, sum=507, mean=22.0435)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=26, sum=1272, mean=48.9231)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:19,488 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:19,489 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,489 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,490 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,490 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,491 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a816350f-f985-4e5f-8ca8-679638bf3212-00000127 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000127&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=184&ts=1731777619488
2024-11-16 17:20:19,501 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:19,501 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,502 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,502 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,503 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,503 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a816350f-f985-4e5f-8ca8-679638bf3212-00000127 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000127&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=184&ts=1731777619488
2024-11-16 17:20:19,509 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,509 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:19,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:19,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:19,510 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a816350f-f985-4e5f-8ca8-679638bf3212-00000127 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000127&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=184&ts=1731777619488
2024-11-16 17:20:19,541 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:19,542 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:19,543 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.034s
2024-11-16 17:20:19,543 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:19,544 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,544 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,545 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,545 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,546 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a816350f-f985-4e5f-8ca8-679638bf3212-00000128 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000128&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=184&ts=1731777619544
2024-11-16 17:20:19,554 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:19,554 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,554 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,555 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3936768306042270879.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:19,556 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3936768306042270879.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (object_put_request=0) (op_hflush=0) (op_abort=0) (object_put_request.failures=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3936768306042270879.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,556 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,556 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:19,556 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3936768306042270879.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:19,556 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:19,557 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:19,557 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:19,557 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:19,557 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a816350f-f985-4e5f-8ca8-679638bf3212-00000128 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000128&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=53&ts=1731777619544
2024-11-16 17:20:19,589 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:19,590 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:19,590 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.033s
2024-11-16 17:20:19,590 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3936768306042270879.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:19,590 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3936768306042270879.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,590 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3936768306042270879.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,591 [s3a-transfer-obs-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:19,591 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,593 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (stream_write_block_uploads=1) (multipart_upload_completed=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (op_hflush=0) (stream_write_total_time=0) (action_executor_acquired=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (object_put_request=1) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (op_abort.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_put_request.min=32) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=32) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=32, mean=32.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:19,593 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:19,598 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,598 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,598 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:19,598 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a816350f-f985-4e5f-8ca8-679638bf3212-00000129 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000129&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=184&ts=1731777619597
2024-11-16 17:20:19,604 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:19,604 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:19,605 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,605 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,605 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:19,605 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:19,605 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,605 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,605 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:19,606 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] a816350f-f985-4e5f-8ca8-679638bf3212-00000129 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000129&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=55&ts=1731777619597
2024-11-16 17:20:19,606 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,607 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_unbuffered=1) (stream_read_remote_stream_aborted=0) (action_file_opened.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_total_bytes=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_exceptions=0) (stream_read_vectored_combined_ranges=1) (stream_read_block_read=0) (stream_read_close_operations=0) (action_executor_acquired.failures=0) (stream_read_closed=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_vectored_operations=1) (stream_read_seek_forward_operations=0) (action_file_opened=1) (action_http_get_request=1) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.min=7) (action_http_get_request.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (action_file_opened.max=7) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,610 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:20:19,624 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:20:19,624 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1055)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:20:19,624 [s3a-transfer-obs-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,633 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,634 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,634 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:19,634 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:19,634 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,634 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,634 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:19,634 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a816350f-f985-4e5f-8ca8-679638bf3212-00000129 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000129&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=63&ts=1731777619597
2024-11-16 17:20:19,635 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:19,663 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.029s
2024-11-16 17:20:19,663 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:19,664 [s3a-transfer-obs-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,664 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes=150) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=2) (stream_read_opened=0) (stream_read_block_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (stream_read_vectored_operations=2) (stream_read_prefetch_operations.failures=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (action_file_opened=1) (stream_read_unbuffered=1) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=2) (stream_read_total_bytes=150) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (action_http_get_request=2) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=4) (action_executor_acquired=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=1));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=19) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=7) (action_executor_acquired.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=29) (action_file_opened.max=7) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=48, mean=24.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,666 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:19,666 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,666 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,666 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a816350f-f985-4e5f-8ca8-679638bf3212-00000130 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000130&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=184&ts=1731777619666
2024-11-16 17:20:19,674 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,674 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,674 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a816350f-f985-4e5f-8ca8-679638bf3212-00000130 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000130&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=184&ts=1731777619666
2024-11-16 17:20:19,688 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:20:19,688 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:19,688 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:19,688 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:19,688 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:19,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:19,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:19,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:19,688 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:19,688 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:19,688 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:19,688 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:19,690 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:19,690 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:19,690 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,691 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [185] a816350f-f985-4e5f-8ca8-679638bf3212-00000130 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000130&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=185&ts=1731777619666
2024-11-16 17:20:19,697 [s3a-transfer-obs-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:19,698 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:20:19,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:19,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:19,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:19,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777619586; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:19,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:19,698 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:19,698 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:19,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:19,699 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:19,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:19,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:19,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:19,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,699 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,700 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:19,700 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,700 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a816350f-f985-4e5f-8ca8-679638bf3212-00000130 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000130&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=65&ts=1731777619666
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.022s
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,721 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a816350f-f985-4e5f-8ca8-679638bf3212-00000130 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000130/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000130&t0=184&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=65&ts=1731777619666
2024-11-16 17:20:19,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:20:19,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:20:19,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:20:19,737 [s3a-transfer-obs-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.038s
2024-11-16 17:20:19,737 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:20:19,737 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.049s
2024-11-16 17:20:19,738 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:19,738 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:19,740 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:19,762 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 33, active threads = 0, queued tasks = 0, completed tasks = 33], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_create_non_recursive=0) (stream_write_total_data=3538944) (committer_jobs_failed=0) (stream_read_fully_operations=1) (stream_write_bytes=1769472) (op_xattr_get_map=0) (op_is_directory.failures=0) (object_bulk_delete_request.failures=0) (stream_write_queue_duration.failures=0) (op_xattr_get_named.failures=0) (action_executor_acquired=0) (action_http_head_request=77) (committer_magic_files_created=0) (object_multipart_aborted.failures=0) (stream_read_unbuffered=2) (multipart_upload_started=0) (op_rename.failures=0) (committer_materialize_file=0) (multipart_upload_part_put_bytes=0) (op_rename=0) (committer_load_single_pending_file=0) (stream_read_vectored_operations=20) (op_list_status=0) (op_get_content_summary=0) (op_delete.failures=0) (stream_read_seek_policy_changed=25) (files_copied_bytes=0) (multipart_upload_aborted=0) (committer_commit_job=0) (audit_access_check_failure=0) (stream_read_total_bytes=202971) (fake_directories_created=0) (action_executor_acquired.failures=0) (directories_created=27) (stream_read_closed=3) (stream_write_block_uploads_aborted=0) (object_copy_requests=0) (multipart_upload_list.failures=0) (store_io_retry=0) (stream_read_seek_backward_operations=0) (stream_write_exceptions=0) (action_file_opened=23) (op_copy_from_local_file=0) (stream_read_bytes_discarded_in_close=196008) (object_bulk_delete_request=54) (audit_failure=0) (stream_read_exceptions=0) (committer_commit_job.failures=0) (committer_jobs_completed=0) (delegation_tokens_issued.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_aborted=0) (stream_read_remote_stream_aborted.failures=0) (op_createfile.failures=0) (object_delete_request.failures=0) (op_mkdirs=27) (stream_read_vectored_read_bytes_discarded=24543) (store_exists_probe.failures=0) (object_list_request=108) (stream_read_vectored_combined_ranges=25) (op_get_delegation_token.failures=0) (stream_read_operations=3) (stream_read_remote_stream_drain.failures=0) (stream_write_exceptions_completing_upload=0) (object_continue_list_request=0) (op_xattr_get_map.failures=0) (op_access=0) (op_is_file.failures=0) (object_multipart_aborted=0) (stream_read_remote_stream_drain=3) (op_glob_status.failures=0) (audit_request_execution=318) (stream_read_seek_operations=0) (object_list_request.failures=0) (op_create=27) (op_get_file_checksum=0) (stream_read_seek_bytes_skipped=0) (object_continue_list_request.failures=0) (op_get_file_checksum.failures=0) (files_delete_rejected=0) (action_http_head_request.failures=0) (action_file_opened.failures=0) (files_deleted=27) (stream_read_close_operations=23) (op_get_file_status=1) (stream_read_operations_incomplete=0) (op_create.failures=0) (committer_tasks_failed=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_read_seek_bytes_discarded=0) (committer_bytes_uploaded=0) (object_put_request.failures=0) (object_delete_objects=54) (object_multipart_initiated=0) (stream_read_bytes_discarded_in_abort=0) (committer_tasks_completed=0) (op_xattr_list.failures=0) (op_list_files.failures=0) (op_list_files=0) (store_io_request=318) (audit_span_creation=106) (op_abort=0) (object_multipart_initiated.failures=0) (op_exists.failures=0) (stream_write_queue_duration=0) (op_abort.failures=0) (stream_aborted=0) (object_put_request_completed=54) (committer_bytes_committed=0) (ignored_errors=0) (committer_materialize_file.failures=0) (op_xattr_list=0) (op_copy_from_local_file.failures=0) (store_exists_probe=0) (op_openfile=0) (committer_commits_completed=0) (object_delete_request=0) (op_delete=27) (directories_deleted=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits.failures=0) (multipart_upload_list=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=3) (action_http_get_request.failures=0) (action_http_get_request=25) (op_list_located_status=0) (op_xattr_get_named=0) (op_is_directory=0) (object_metadata_request=77) (op_mkdirs.failures=0) (op_open=23) (delegation_tokens_issued=0) (op_glob_status=0) (op_xattr_get_named_map=0) (object_put_bytes=1769472) (op_list_status.failures=0) (files_created=27) (files_copied=0) (object_put_request=54) (committer_commits_reverted=0) (committer_stage_file_upload=0) (op_is_file=0) (op_get_delegation_token=0) (committer_load_single_pending_file.failures=0) (fake_directories_deleted=27) (stream_write_block_uploads_committed=0) (op_createfile=0) (op_exists=0) (multipart_instantiated=0) (store_io_throttled=0) (op_get_content_summary.failures=0) (stream_read_version_mismatches=0) (stream_write_block_uploads=27) (multipart_upload_completed=0) (op_hsync=0) (object_select_requests=0) (op_get_file_status.failures=0) (committer_stage_file_upload.failures=0) (op_access.failures=0) (committer_commits_created=0) (stream_read_vectored_incoming_ranges=58) (stream_read_seek_forward_operations=0) (committer_magic_marker_put=0) (op_hflush=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes=6963));
gauges=((object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=27) (stream_write_block_uploads_active=0));
minimums=((store_exists_probe.failures.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (op_is_directory.failures.min=-1) (action_file_opened.min=7) (committer_load_single_pending_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_file.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.min=-1) (op_get_content_summary.min=-1) (op_delete.min=27) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.min=-1) (op_rename.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.min=3) (committer_magic_marker_put.failures.min=-1) (action_http_get_request.failures.min=-1) (op_rename.failures.min=-1) (object_multipart_initiated.min=-1) (action_http_get_request.min=19) (op_exists.failures.min=-1) (op_glob_status.failures.min=-1) (op_glob_status.min=-1) (op_list_files.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.failures.min=-1) (op_exists.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.min=-1) (op_mkdirs.min=22) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.min=6) (committer_commit_job.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.min=-1) (object_list_request.min=5) (op_createfile.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (op_list_status.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.min=5) (stream_read_remote_stream_drain.min=1) (op_mkdirs.failures.min=-1) (op_abort.failures.min=-1) (object_delete_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (multipart_upload_list.failures.min=-1) (object_put_request.failures.min=-1) (op_access.failures.min=-1) (op_create.failures.min=-1) (object_put_request.min=32) (op_xattr_get_named_map.failures.min=-1) (op_createfile.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_list.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.failures.min=-1) (op_create.min=6) (action_file_opened.failures.min=-1) (object_continue_list_request.min=-1));
maximums=((op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.max=-1) (action_file_opened.max=15) (action_http_head_request.max=19) (op_abort.max=-1) (op_is_file.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=111) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.failures.max=-1) (op_is_directory.max=-1) (object_delete_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.failures.max=-1) (object_put_request.max=104) (op_createfile.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.max=-1) (store_exists_probe.max=-1) (object_continue_list_request.max=-1) (op_exists.failures.max=-1) (object_list_request.max=210) (op_get_delegation_token.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_mkdirs.max=346) (delegation_tokens_issued.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (committer_commit_job.max=-1) (op_is_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.max=-1) (action_http_get_request.max=43) (object_multipart_aborted.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.max=1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_glob_status.max=-1) (op_rename.failures.max=-1) (stream_write_queue_duration.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.max=27) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_commit_job.failures.max=-1) (op_create.max=74) (op_list_files.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_status.max=-1) (op_get_file_status.max=5) (op_xattr_list.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_access.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_access.failures.max=-1) (op_xattr_list.max=-1) (action_file_opened.failures.max=-1) (op_create.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=108, sum=1233, mean=11.4167)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=555, mean=22.2000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=54, sum=1594, mean=29.5185)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=27, sum=1245, mean=46.1111)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=151, mean=6.5652)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=54, sum=663, mean=12.2778)) (op_create.mean=(samples=27, sum=392, mean=14.5185)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=27, sum=1327, mean=49.1481)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=77, sum=436, mean=5.6623)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:19,763 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:19,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,763 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,763 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a816350f-f985-4e5f-8ca8-679638bf3212-00000131 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000131&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=186&ts=1731777619762
2024-11-16 17:20:19,772 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:19,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:19,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,772 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a816350f-f985-4e5f-8ca8-679638bf3212-00000131 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000131&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=186&ts=1731777619762
2024-11-16 17:20:19,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:19,776 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:19,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:19,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:19,777 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a816350f-f985-4e5f-8ca8-679638bf3212-00000131 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000131&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=186&ts=1731777619762
2024-11-16 17:20:19,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:19,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:19,808 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.032s
2024-11-16 17:20:19,808 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:19,809 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,809 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,809 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,809 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,809 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a816350f-f985-4e5f-8ca8-679638bf3212-00000132 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000132&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=186&ts=1731777619809
2024-11-16 17:20:19,819 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:19,819 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,819 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,820 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3695727580832627022.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:19,821 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3695727580832627022.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (op_hflush=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (op_abort=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3695727580832627022.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,822 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,822 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:19,822 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3695727580832627022.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:19,822 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:19,822 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:19,822 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:19,823 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a816350f-f985-4e5f-8ca8-679638bf3212-00000132 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000132&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=77&ts=1731777619809
2024-11-16 17:20:19,824 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:19,856 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:19,856 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:19,857 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:20:19,857 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3695727580832627022.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:19,857 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3695727580832627022.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,858 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3695727580832627022.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:19,858 [s3a-transfer-obs-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:19,858 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:19,859 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_hsync=0) (multipart_upload_completed=0) (op_abort.failures=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (op_abort=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (stream_write_total_data=65536) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (object_multipart_aborted=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=34) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=34) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1));
means=((object_put_request.mean=(samples=1, sum=34, mean=34.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:19,860 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:19,860 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:19,860 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:19,862 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:19,862 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:19,864 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:19,865 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:19,865 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:19,865 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:19,865 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:19,865 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='eed5c0a1-66c5-41c2-9424-7ff6c7636acd', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='eed5c0a1-66c5-41c2-9424-7ff6c7636acd', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='eed5c0a1-66c5-41c2-9424-7ff6c7636acd', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:19,866 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a830407]
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a830407]
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:19,867 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:19,868 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:19,870 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:19,870 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:19,871 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:19,872 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000135 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000135/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000135&t0=186&fs=eed5c0a1-66c5-41c2-9424-7ff6c7636acd&t1=186&ts=1731777619871
2024-11-16 17:20:19,872 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:19,872 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:20:19,872 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:19,872 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:19,879 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:19,879 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777619000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:19,883 [s3a-transfer-obs-bucket-unbounded-pool17-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:19,883 [s3a-transfer-obs-bucket-unbounded-pool17-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,883 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:19,883 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:19,883 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:19,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:19,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:19,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:19,889 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:19,891 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,892 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,892 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:19,892 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-1099&id=eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000136&t0=188&fs=eed5c0a1-66c5-41c2-9424-7ff6c7636acd&t1=189&ts=1731777619882
2024-11-16 17:20:19,893 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:20:19,893 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,894 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:19,894 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:19,894 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [190] eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-1099&id=eed5c0a1-66c5-41c2-9424-7ff6c7636acd-00000136&t0=188&fs=eed5c0a1-66c5-41c2-9424-7ff6c7636acd&t1=190&ts=1731777619882
2024-11-16 17:20:19,923 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.029s
2024-11-16 17:20:19,923 [s3a-transfer-obs-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,924 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.032s
2024-11-16 17:20:19,925 [s3a-transfer-obs-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:19,927 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request=2) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_vectored_operations=2) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_vectored_combined_ranges=2) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=4) (action_file_opened.failures=0) (stream_read_total_bytes=2000) (stream_read_operations_incomplete=0) (stream_aborted=0) (stream_read_bytes=2000) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=0) (action_http_get_request.min=29) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=33) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=62, mean=31.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,930 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:19,931 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:19,931 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:19,931 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@7baf8f6[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:20:19,931 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:19,931 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics8-obs-bucket
2024-11-16 17:20:19,932 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:19,932 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a830407] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:19,932 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a830407] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:19,934 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((multipart_upload_list.failures=0) (op_xattr_list=0) (object_list_request=0) (store_exists_probe=0) (committer_magic_files_created=0) (op_get_file_checksum=0) (stream_write_exceptions=0) (op_xattr_list.failures=0) (stream_read_vectored_combined_ranges=2) (object_list_request.failures=0) (op_list_files=0) (stream_write_block_uploads_aborted=0) (multipart_upload_completed=0) (object_put_request_completed=0) (op_abort=0) (object_delete_objects=0) (stream_read_exceptions=0) (op_get_content_summary=0) (stream_read_remote_stream_aborted=0) (op_mkdirs=0) (object_put_bytes=0) (stream_read_remote_stream_drain=0) (committer_materialize_file=0) (op_get_content_summary.failures=0) (stream_read_bytes_discarded_in_close=0) (object_multipart_initiated.failures=0) (audit_failure=0) (op_xattr_get_map=0) (op_mkdirs.failures=0) (store_io_request=3) (op_list_located_status=0) (op_access.failures=0) (op_access=0) (files_copied=0) (stream_read_bytes_discarded_in_abort=0) (committer_commits_aborted=0) (op_rename.failures=0) (files_created=0) (stream_read_seek_forward_operations=0) (committer_magic_marker_put=0) (stream_write_bytes=0) (action_http_get_request=2) (op_create_non_recursive=0) (stream_read_unbuffered=0) (committer_bytes_committed=0) (committer_stage_file_upload=0) (object_bulk_delete_request=0) (multipart_upload_list=0) (delegation_tokens_issued=0) (object_delete_request.failures=0) (committer_magic_marker_put.failures=0) (object_continue_list_request=0) (op_openfile=0) (op_copy_from_local_file.failures=0) (op_get_delegation_token=0) (op_is_directory=0) (stream_read_seek_operations=0) (op_copy_from_local_file=0) (committer_bytes_uploaded=0) (object_continue_list_request.failures=0) (committer_commits_created=0) (action_file_opened=1) (object_multipart_initiated=0) (audit_span_creation=3) (object_bulk_delete_request.failures=0) (committer_tasks_failed=0) (object_multipart_aborted.failures=0) (delegation_tokens_issued.failures=0) (stream_read_closed=0) (op_is_file.failures=0) (op_glob_status.failures=0) (stream_aborted=0) (committer_commits.failures=0) (op_list_files.failures=0) (files_deleted=0) (op_is_file=0) (stream_read_operations_incomplete=0) (op_list_status=0) (op_glob_status=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_backward_operations=0) (op_list_status.failures=0) (store_exists_probe.failures=0) (op_create=0) (stream_read_version_mismatches=0) (files_copied_bytes=0) (op_delete.failures=0) (committer_commits_completed=0) (multipart_upload_started=0) (op_xattr_get_map.failures=0) (op_createfile=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (op_exists.failures=0) (op_xattr_get_named.failures=0) (object_select_requests=0) (stream_write_block_uploads_committed=0) (stream_read_fully_operations=0) (op_rename=0) (multipart_upload_part_put_bytes=0) (op_get_delegation_token.failures=0) (stream_read_vectored_incoming_ranges=4) (committer_stage_file_upload.failures=0) (store_io_throttled=0) (op_createfile.failures=0) (action_http_head_request.failures=0) (stream_read_close_operations=1) (committer_jobs_completed=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=2000) (object_put_request.failures=0) (files_delete_rejected=0) (directories_deleted=0) (op_create.failures=0) (fake_directories_deleted=0) (audit_access_check_failure=0) (object_multipart_aborted=0) (op_xattr_get_named=0) (op_get_file_checksum.failures=0) (stream_read_remote_stream_drain.failures=0) (ignored_errors=0) (committer_tasks_completed=0) (multipart_upload_abort_under_path_invoked=0) (object_delete_request=0) (op_exists=0) (action_http_head_request=1) (op_get_file_status.failures=0) (stream_read_vectored_operations=2) (store_io_retry=0) (committer_commits_reverted=0) (object_put_request=0) (stream_write_total_data=0) (op_abort.failures=0) (op_is_directory.failures=0) (op_get_file_status=1) (committer_load_single_pending_file.failures=0) (audit_request_execution=3) (committer_commit_job.failures=0) (stream_write_total_time=0) (op_open=1) (stream_write_queue_duration.failures=0) (stream_write_queue_duration=0) (committer_commit_job=0) (object_copy_requests=0) (object_metadata_request=1) (op_delete=0) (op_xattr_get_named_map.failures=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_jobs_failed=0) (committer_materialize_file.failures=0) (multipart_upload_aborted=0) (stream_read_bytes=2000) (stream_read_operations=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (fake_directories_created=0) (committer_load_single_pending_file=0) (stream_read_opened=0) (stream_read_seek_policy_changed=1) (op_hflush=0) (op_hsync=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_part_put=0) (stream_read_seek_bytes_skipped=0) (directories_created=0) (multipart_instantiated=0) (op_xattr_get_named_map=0));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_list_status.failures.min=-1) (op_glob_status.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_bulk_delete_request.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (object_delete_request.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (committer_materialize_file.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (op_copy_from_local_file.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (store_exists_probe.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.min=-1) (op_get_delegation_token.failures.min=-1) (op_exists.failures.min=-1) (op_create.min=-1) (action_file_opened.min=0) (op_xattr_get_map.min=-1) (multipart_upload_list.failures.min=-1) (op_access.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_head_request.failures.min=-1) (op_abort.min=-1) (op_is_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_exists.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_files.failures.min=-1) (op_access.failures.min=-1) (object_put_request.failures.min=-1) (op_createfile.min=-1) (object_continue_list_request.min=-1) (op_create.failures.min=-1) (op_delete.failures.min=-1) (op_get_content_summary.min=-1) (op_get_delegation_token.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.min=-1) (object_put_request.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_createfile.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=8) (op_list_status.min=-1) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.min=-1) (action_http_head_request.min=8) (op_xattr_get_named_map.failures.min=-1) (op_xattr_list.min=-1) (action_http_get_request.min=29) (object_multipart_initiated.failures.min=-1) (op_mkdirs.min=-1) (store_exists_probe.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1));
maximums=((op_xattr_get_named_map.failures.max=-1) (op_glob_status.failures.max=-1) (committer_materialize_file.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_delete.failures.max=-1) (op_create.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.max=-1) (object_bulk_delete_request.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_exists.failures.max=-1) (op_is_directory.failures.max=-1) (object_multipart_initiated.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.max=0) (object_put_request.max=-1) (op_list_files.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.failures.max=-1) (action_file_opened.failures.max=-1) (op_abort.failures.max=-1) (op_create.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.max=-1) (object_delete_request.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.max=33) (op_get_delegation_token.max=-1) (op_abort.max=-1) (op_get_file_status.max=8) (op_copy_from_local_file.failures.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (object_list_request.max=-1) (op_delete.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=8) (op_get_file_checksum.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.max=-1) (op_list_status.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (op_xattr_get_map.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.max=-1) (op_access.failures.max=-1) (op_get_content_summary.max=-1) (action_executor_acquired.max=-1) (op_is_file.failures.max=-1) (op_rename.failures.max=-1) (op_is_directory.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_list_files.failures.max=-1));
means=((op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=8, mean=8.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=62, mean=31.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=8, mean=8.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:19,934 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:19,934 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:19,935 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:19,935 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a816350f-f985-4e5f-8ca8-679638bf3212-00000137 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000137&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=186&ts=1731777619934
2024-11-16 17:20:19,941 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:19,941 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,941 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a816350f-f985-4e5f-8ca8-679638bf3212-00000137 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000137&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=186&ts=1731777619934
2024-11-16 17:20:19,948 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:19,949 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:19,949 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:19,949 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:19,949 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:19,949 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:19,949 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:19,949 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:19,949 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:19,949 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:19,949 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:19,950 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:19,951 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:19,951 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:19,952 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:19,952 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [193] a816350f-f985-4e5f-8ca8-679638bf3212-00000137 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000137&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=193&ts=1731777619934
2024-11-16 17:20:19,968 [s3a-transfer-obs-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:20:19,969 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.018s
2024-11-16 17:20:19,969 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:19,969 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:19,969 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:19,970 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777619847; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:19,970 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:19,970 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:19,970 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:19,970 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,971 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a816350f-f985-4e5f-8ca8-679638bf3212-00000137 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000137&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=79&ts=1731777619934
2024-11-16 17:20:19,973 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:19,984 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:20:19,984 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:20:19,984 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:20:19,984 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:19,985 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:19,985 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:19,985 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:19,985 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:19,985 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:19,985 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a816350f-f985-4e5f-8ca8-679638bf3212-00000137 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000137/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000137&t0=186&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=79&ts=1731777619934
2024-11-16 17:20:20,017 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.032s
2024-11-16 17:20:20,018 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.033s
2024-11-16 17:20:20,018 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.034s
2024-11-16 17:20:20,018 [s3a-transfer-obs-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.047s
2024-11-16 17:20:20,018 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.045s
2024-11-16 17:20:20,018 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.069s
2024-11-16 17:20:20,018 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:20,019 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:20,020 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:20,036 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 34, active threads = 0, queued tasks = 0, completed tasks = 34], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_abort_under_path_invoked=0) (committer_tasks_completed=0) (files_copied=0) (op_get_file_checksum.failures=0) (stream_read_seek_bytes_discarded=0) (op_hflush=0) (directories_created=28) (object_delete_request.failures=0) (stream_read_operations=3) (op_xattr_get_map.failures=0) (multipart_upload_part_put_bytes=0) (object_multipart_initiated=0) (op_get_file_status=1) (op_create.failures=0) (op_get_delegation_token=0) (stream_write_exceptions_completing_upload=0) (stream_read_remote_stream_aborted.failures=0) (object_list_request.failures=0) (files_copied_bytes=0) (stream_write_total_time=0) (action_http_get_request.failures=0) (op_get_file_checksum=0) (stream_write_total_data=3670016) (object_list_request=112) (object_put_bytes=1835008) (store_exists_probe=0) (op_create_non_recursive=0) (committer_bytes_uploaded=0) (stream_aborted=0) (object_put_request=56) (op_is_directory=0) (stream_read_remote_stream_aborted=0) (object_delete_objects=56) (stream_read_bytes_discarded_in_abort=0) (store_io_request=328) (op_access=0) (op_hsync=0) (stream_read_version_mismatches=0) (stream_write_block_uploads_aborted=0) (stream_read_exceptions=0) (committer_magic_marker_put.failures=0) (op_is_file.failures=0) (delegation_tokens_issued=0) (committer_commits.failures=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (files_deleted=28) (multipart_instantiated=0) (op_list_files.failures=0) (audit_failure=0) (committer_commit_job.failures=0) (store_io_throttled=0) (stream_read_closed=3) (op_list_files=0) (op_xattr_get_named_map.failures=0) (op_access.failures=0) (object_multipart_aborted=0) (committer_jobs_completed=0) (files_delete_rejected=0) (op_xattr_list.failures=0) (op_list_status=0) (multipart_upload_started=0) (committer_jobs_failed=0) (stream_read_seek_operations=0) (op_xattr_get_map=0) (action_executor_acquired=0) (op_createfile.failures=0) (committer_load_single_pending_file=0) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_seek_bytes_skipped=0) (action_file_opened=23) (op_glob_status.failures=0) (store_io_retry=0) (committer_magic_files_created=0) (committer_commits_reverted=0) (object_multipart_initiated.failures=0) (fake_directories_created=0) (op_mkdirs.failures=0) (op_exists.failures=0) (stream_write_queue_duration.failures=0) (multipart_upload_aborted=0) (action_http_head_request.failures=0) (object_copy_requests=0) (object_select_requests=0) (committer_bytes_committed=0) (op_exists=0) (committer_commits_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_block_uploads=28) (op_get_file_status.failures=0) (action_http_get_request=25) (delegation_tokens_issued.failures=0) (stream_write_block_uploads_committed=0) (object_metadata_request=79) (stream_read_seek_forward_operations=0) (stream_write_queue_duration=0) (op_glob_status=0) (multipart_upload_list.failures=0) (committer_materialize_file=0) (multipart_upload_completed=0) (stream_read_remote_stream_drain=3) (op_list_located_status=0) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=3) (stream_write_exceptions=0) (ignored_errors=0) (fake_directories_deleted=28) (stream_write_bytes=1835008) (object_bulk_delete_request.failures=0) (object_continue_list_request=0) (op_delete.failures=0) (stream_read_seek_backward_operations=0) (op_is_file=0) (op_rename=0) (object_bulk_delete_request=56) (op_xattr_get_named_map=0) (committer_tasks_failed=0) (op_delete=28) (op_openfile=0) (multipart_upload_part_put=0) (object_continue_list_request.failures=0) (object_multipart_aborted.failures=0) (stream_read_seek_policy_changed=25) (stream_read_operations_incomplete=0) (stream_read_total_bytes=202971) (committer_stage_file_upload.failures=0) (audit_span_creation=109) (op_xattr_list=0) (op_get_delegation_token.failures=0) (stream_read_vectored_operations=20) (committer_magic_marker_put=0) (op_create=28) (stream_read_fully_operations=1) (op_rename.failures=0) (multipart_upload_list=0) (op_get_content_summary=0) (op_get_content_summary.failures=0) (stream_read_vectored_combined_ranges=25) (directories_deleted=0) (committer_stage_file_upload=0) (stream_read_vectored_incoming_ranges=58) (stream_read_close_operations=23) (committer_commits_completed=0) (object_put_request_completed=56) (object_delete_request=0) (op_abort=0) (op_open=23) (op_copy_from_local_file=0) (audit_request_execution=328) (op_abort.failures=0) (op_createfile=0) (stream_read_vectored_read_bytes_discarded=24543) (op_copy_from_local_file.failures=0) (op_xattr_get_named=0) (committer_materialize_file.failures=0) (stream_read_bytes=6963) (op_list_status.failures=0) (store_exists_probe.failures=0) (audit_access_check_failure=0) (op_mkdirs=28) (op_xattr_get_named.failures=0) (files_created=28) (stream_read_unbuffered=2) (action_http_head_request=79) (committer_commit_job=0) (committer_load_single_pending_file.failures=0) (committer_commits_created=0) (action_file_opened.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=28) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((stream_write_queue_duration.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (object_list_request.min=5) (op_xattr_get_named.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=7) (op_xattr_get_map.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_mkdirs.failures.min=-1) (op_create.min=6) (op_rename.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_delete.failures.min=-1) (action_file_opened.failures.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.min=27) (stream_read_remote_stream_drain.min=1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_content_summary.min=-1) (op_exists.min=-1) (action_http_head_request.min=3) (store_exists_probe.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.failures.min=-1) (op_abort.min=-1) (op_is_directory.min=-1) (op_get_file_status.failures.min=-1) (store_exists_probe.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=34) (object_delete_request.min=-1) (op_exists.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_get_request.min=19) (op_get_delegation_token.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.failures.min=-1) (object_bulk_delete_request.min=6) (op_rename.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.min=-1) (object_put_request.failures.min=-1) (committer_commit_job.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.min=-1) (op_get_delegation_token.failures.min=-1) (op_createfile.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_mkdirs.min=22) (op_list_files.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_commit_job.failures.min=-1) (op_access.min=-1) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.min=5));
maximums=((op_xattr_get_named.max=-1) (committer_commit_job.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_rename.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_status.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.max=-1) (object_delete_request.max=-1) (multipart_upload_list.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_bulk_delete_request.max=32) (committer_commit_job.max=-1) (op_access.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.max=19) (stream_write_queue_duration.failures.max=-1) (object_delete_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_glob_status.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.max=-1) (op_list_status.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.max=-1) (op_is_file.max=-1) (op_delete.max=111) (action_http_get_request.max=43) (op_copy_from_local_file.max=-1) (op_create.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_magic_marker_put.max=-1) (object_list_request.max=210) (op_create.max=74) (op_list_files.max=-1) (committer_materialize_file.max=-1) (op_mkdirs.max=346) (store_exists_probe.failures.max=-1) (action_file_opened.max=15) (op_createfile.failures.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_aborted.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_file.failures.max=-1) (op_exists.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_drain.max=1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=104) (action_executor_acquired.failures.max=-1) (op_get_file_status.max=5) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_initiated.max=-1));
means=((committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=56, sum=1660, mean=29.6429)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=28, sum=1372, mean=49.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=151, mean=6.5652)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=79, sum=445, mean=5.6329)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=28, sum=403, mean=14.3929)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=56, sum=708, mean=12.6429)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=28, sum=1315, mean=46.9643)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=112, sum=1275, mean=11.3839)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=555, mean=22.2000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:20,037 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:20,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,037 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,037 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a816350f-f985-4e5f-8ca8-679638bf3212-00000138 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000138&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=194&ts=1731777620037
2024-11-16 17:20:20,051 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:20:20,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,052 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a816350f-f985-4e5f-8ca8-679638bf3212-00000138 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000138&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=194&ts=1731777620037
2024-11-16 17:20:20,058 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,059 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:20,059 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:20,059 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:20,059 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a816350f-f985-4e5f-8ca8-679638bf3212-00000138 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000138&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=194&ts=1731777620037
2024-11-16 17:20:20,094 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:20,094 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:20,094 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.035s
2024-11-16 17:20:20,094 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:20,095 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,095 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,095 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,095 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,095 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a816350f-f985-4e5f-8ca8-679638bf3212-00000139 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000139&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=194&ts=1731777620095
2024-11-16 17:20:20,113 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:20:20,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,114 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:20,115 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7096175898119933980.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:20,116 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7096175898119933980.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (multipart_upload_completed=0) (op_abort.failures=0) (object_put_request=0) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7096175898119933980.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,116 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,116 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:20,116 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7096175898119933980.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:20,117 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:20,117 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:20,117 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:20,117 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:20,118 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] a816350f-f985-4e5f-8ca8-679638bf3212-00000139 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000139&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=80&ts=1731777620095
2024-11-16 17:20:20,199 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:20,200 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:20,200 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.083s
2024-11-16 17:20:20,200 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7096175898119933980.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:20,201 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7096175898119933980.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,201 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7096175898119933980.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,202 [s3a-transfer-obs-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:20,202 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,203 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (op_hsync=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (op_abort=0) (object_put_request.failures=0) (stream_write_total_data=65536) (object_put_request=1) (action_executor_acquired=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=82) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((op_abort.failures.max=-1) (object_put_request.max=82) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=82, mean=82.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:20,204 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:20,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for obs-bucket
2024-11-16 17:20:20,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.obs-bucket.
2024-11-16 17:20:20,205 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:20,206 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:20,207 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:20:20,207 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:20:20,207 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:20:20,207 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:20:20,207 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:20:20,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:20:20,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:20:20,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:20:20,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:20:20,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='c3af092e-24ff-4848-8d5e-4dfeca2cb93b', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='c3af092e-24ff-4848-8d5e-4dfeca2cb93b', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='c3af092e-24ff-4848-8d5e-4dfeca2cb93b', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:20:20,215 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://obs-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6340eebe]
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6340eebe]
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:20:20,216 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:20:20,217 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:20:20,217 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:20:20,217 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:20:20,217 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:20:20,218 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:20:20,219 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:20:20,226 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:20:20,226 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:20:20,226 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:20:20,226 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:20:20,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:20,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000142 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000142/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000142&t0=194&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=194&ts=1731777620226
2024-11-16 17:20:20,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:20:20,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:20:20,227 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:20:20,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:20:20,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:20,238 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777620000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:20,240 [s3a-transfer-obs-bucket-unbounded-pool19-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:20,240 [s3a-transfer-obs-bucket-unbounded-pool19-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:20,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:20,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:20:20,242 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,243 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,243 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:20,244 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [197] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143&t0=196&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=197&ts=1731777620240
2024-11-16 17:20:20,251 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:20,252 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,251 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,252 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,252 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:20,252 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [198] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-14435&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143&t0=196&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=198&ts=1731777620240
2024-11-16 17:20:20,253 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,253 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:20,253 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [200] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000143&t0=196&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=200&ts=1731777620240
2024-11-16 17:20:20,271 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:20:20,271 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:20:20,271 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:20:20,272 [s3a-transfer-obs-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,274 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.031s
2024-11-16 17:20:20,274 [s3a-transfer-obs-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,281 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:20:20,281 [s3a-transfer-obs-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,282 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=19));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=31));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=78, mean=26.0000)));

2024-11-16 17:20:20,286 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=1424) (stream_read_vectored_operations=1) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_forward_operations=0) (action_http_get_request=3) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_read_opened=0) (stream_read_vectored_combined_ranges=3) (stream_read_fully_operations=0) (stream_read_vectored_incoming_ranges=5) (stream_read_prefetch_operations.failures=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_aborted=0) (action_executor_acquired=0) (stream_read_total_bytes=1424) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=19) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=0) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=31) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=78, mean=26.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:20,288 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777620000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:20,290 [s3a-transfer-obs-bucket-unbounded-pool19-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:20,292 [s3a-transfer-obs-bucket-unbounded-pool19-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,293 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:20,293 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:20:20,293 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,293 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=10240-65535&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144&t0=203&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=194&ts=1731777620290
2024-11-16 17:20:20,315 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.022s
2024-11-16 17:20:20,316 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:20,316 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:20,317 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:20,317 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:20:20,318 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:20,318 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:20:20,318 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,319 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://obs-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:20:20,320 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:20:20,320 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,320 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-8291&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144&t0=203&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=194&ts=1731777620290
2024-11-16 17:20:20,336 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.019s
2024-11-16 17:20:20,337 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:20,337 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:20,338 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:20,338 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:20,339 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:20:20,339 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:20,339 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:20:20,340 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,340 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=14336-14435&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144&t0=203&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=194&ts=1731777620290
2024-11-16 17:20:20,357 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.019s
2024-11-16 17:20:20,357 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:20,358 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:20:20,358 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:20,359 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:20,359 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:20:20,359 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:20,360 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:20:20,360 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,361 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144&t0=203&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=194&ts=1731777620290
2024-11-16 17:20:20,412 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.054s
2024-11-16 17:20:20,413 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:20,413 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:20,413 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:20,414 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:20:20,414 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:20:20,414 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:20,414 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:20:20,414 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,414 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=c3af092e-24ff-4848-8d5e-4dfeca2cb93b-00000144&t0=203&fs=c3af092e-24ff-4848-8d5e-4dfeca2cb93b&t1=194&ts=1731777620290
2024-11-16 17:20:20,456 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.043s
2024-11-16 17:20:20,456 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:20,456 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:20,457 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=16)
(stream_read_remote_stream_aborted.min=2)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=51)
(stream_read_remote_stream_aborted.max=2)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=148, mean=29.6000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=2, mean=2.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=2, mean=0.6667)));

2024-11-16 17:20:20,457 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:20,457 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:20:20,458 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:20,458 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_exceptions=0) (stream_read_close_operations=1) (stream_read_total_bytes=1424) (stream_aborted=1) (stream_read_prefetch_operations=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=2) (stream_read_bytes_backwards_on_seek=14637) (stream_read_seek_bytes_skipped=44957) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_vectored_combined_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_operations_incomplete=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=5) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_operations=5) (stream_read_block_acquire_read.failures=0) (stream_read_seek_policy_changed=2) (stream_read_closed=4) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_vectored_operations=0) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=2) (action_file_opened.failures=0) (stream_read_remote_stream_drain=4) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes=1424) (stream_read_remote_stream_aborted=1) (stream_read_seek_operations=4) (stream_read_opened=5) (action_http_get_request=5));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=2) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=16) (stream_read_remote_stream_drain.min=0) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=0) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=2) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=51) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=2, mean=2.0000)) (action_http_get_request.mean=(samples=5, sum=148, mean=29.6000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=3, mean=0.7500)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:20,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:20,462 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:20,462 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:20,462 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@372d5565[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:20:20,462 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:20,462 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics9-obs-bucket
2024-11-16 17:20:20,463 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:20,463 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6340eebe] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:20,463 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6340eebe] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:20,465 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((files_created=0) (action_http_head_request=1) (op_xattr_get_map=0) (files_copied_bytes=0) (audit_request_execution=9) (stream_read_exceptions=0) (store_io_retry=0) (delegation_tokens_issued=0) (committer_tasks_failed=0) (stream_read_unbuffered=0) (committer_commits_aborted=0) (op_create.failures=0) (stream_read_seek_bytes_skipped=44957) (object_multipart_aborted.failures=0) (directories_created=0) (multipart_instantiated=0) (object_multipart_initiated=0) (op_list_located_status=0) (multipart_upload_aborted=0) (op_get_file_status.failures=0) (op_mkdirs=0) (stream_write_block_uploads_committed=0) (ignored_errors=0) (committer_bytes_committed=0) (action_http_get_request=8) (stream_read_remote_stream_drain=4) (multipart_upload_completed=0) (object_put_bytes=0) (object_list_request.failures=0) (stream_read_bytes_backwards_on_seek=14637) (committer_load_single_pending_file=0) (op_get_delegation_token.failures=0) (stream_read_vectored_operations=1) (stream_aborted=1) (op_abort=0) (object_delete_request=0) (stream_write_bytes=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_read_operations=5) (object_put_request=0) (op_open=2) (stream_read_remote_stream_aborted=1) (store_io_request=9) (multipart_upload_started=0) (stream_read_close_operations=2) (files_copied=0) (op_xattr_get_map.failures=0) (object_bulk_delete_request=0) (op_get_file_status=1) (multipart_upload_part_put=0) (action_http_head_request.failures=0) (op_is_file=0) (committer_materialize_file=0) (object_list_request=0) (stream_read_seek_operations=4) (op_copy_from_local_file.failures=0) (stream_read_closed=4) (stream_read_opened=5) (committer_commits_completed=0) (multipart_upload_list.failures=0) (store_exists_probe.failures=0) (object_bulk_delete_request.failures=0) (stream_read_bytes_discarded_in_abort=55196) (committer_commits_created=0) (object_delete_objects=0) (op_xattr_get_named_map.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_incoming_ranges=5) (committer_magic_marker_put.failures=0) (stream_read_fully_operations=5) (committer_commits_reverted=0) (action_file_opened.failures=0) (op_delete.failures=0) (action_http_get_request.failures=0) (multipart_upload_list=0) (op_access=0) (delegation_tokens_issued.failures=0) (audit_access_check_failure=0) (committer_commit_job.failures=0) (multipart_upload_part_put_bytes=0) (op_create=0) (op_access.failures=0) (action_executor_acquired.failures=0) (op_get_file_checksum.failures=0) (op_copy_from_local_file=0) (stream_read_seek_backward_operations=2) (stream_write_exceptions_completing_upload=0) (object_put_request_completed=0) (object_continue_list_request.failures=0) (stream_read_version_mismatches=0) (op_mkdirs.failures=0) (op_glob_status=0) (op_xattr_get_named_map=0) (object_delete_request.failures=0) (op_create_non_recursive=0) (action_file_opened=2) (op_xattr_get_named.failures=0) (stream_write_total_data=0) (stream_write_block_uploads_aborted=0) (op_list_status.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_hsync=0) (committer_magic_files_created=0) (stream_read_seek_policy_changed=3) (stream_read_vectored_combined_ranges=3) (op_is_directory=0) (fake_directories_created=0) (committer_commits.failures=0) (committer_stage_file_upload=0) (stream_write_queue_duration.failures=0) (stream_write_block_uploads=0) (op_xattr_list.failures=0) (store_io_throttled=0) (stream_read_remote_stream_aborted.failures=0) (op_exists=0) (committer_commit_job=0) (op_rename.failures=0) (op_openfile=0) (op_is_directory.failures=0) (op_glob_status.failures=0) (stream_read_seek_bytes_discarded=0) (committer_materialize_file.failures=0) (op_get_file_checksum=0) (store_exists_probe=0) (files_delete_rejected=0) (stream_read_seek_forward_operations=2) (op_list_files.failures=0) (action_executor_acquired=0) (object_metadata_request=1) (stream_read_remote_stream_drain.failures=0) (object_multipart_aborted=0) (op_createfile.failures=0) (committer_tasks_completed=0) (committer_bytes_uploaded=0) (committer_jobs_failed=0) (op_exists.failures=0) (op_rename=0) (op_get_content_summary.failures=0) (fake_directories_deleted=0) (op_createfile=0) (op_xattr_list=0) (object_put_request.failures=0) (object_continue_list_request=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_exceptions=0) (op_list_files=0) (stream_read_vectored_read_bytes_discarded=5944) (files_deleted=0) (stream_read_bytes_discarded_in_close=0) (audit_span_creation=4) (committer_jobs_completed=0) (audit_failure=0) (op_list_status=0) (stream_read_total_bytes=2848) (directories_deleted=0) (op_hflush=0) (committer_stage_file_upload.failures=0) (op_get_delegation_token=0) (stream_write_total_time=0) (stream_read_operations_incomplete=0) (op_xattr_get_named=0) (object_select_requests=0) (op_get_content_summary=0) (op_is_file.failures=0) (op_delete=0) (object_copy_requests=0) (stream_read_bytes=2848));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((committer_stage_file_upload.min=-1) (op_create.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.min=11) (op_access.min=-1) (op_rename.min=-1) (object_bulk_delete_request.min=-1) (op_get_delegation_token.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_drain.min=0) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_commit_job.min=-1) (committer_commit_job.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (op_list_files.failures.min=-1) (committer_materialize_file.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (object_list_request.min=-1) (store_exists_probe.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_mkdirs.min=-1) (committer_stage_file_upload.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_content_summary.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_get_request.min=16) (op_list_files.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_put_request.min=-1) (op_is_directory.failures.min=-1) (object_continue_list_request.min=-1) (op_exists.min=-1) (op_abort.failures.min=-1) (op_glob_status.min=-1) (action_http_head_request.failures.min=-1) (action_file_opened.min=0) (op_is_file.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.min=2) (stream_write_queue_duration.min=-1) (op_glob_status.failures.min=-1) (action_http_head_request.min=10) (op_list_status.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (op_rename.failures.min=-1) (op_createfile.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.min=-1) (object_continue_list_request.failures.min=-1) (op_is_directory.min=-1));
maximums=((op_get_file_status.max=11) (op_createfile.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_aborted.max=2) (op_is_directory.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (op_is_file.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_file_status.failures.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.max=-1) (committer_stage_file_upload.failures.max=-1) (op_create.max=-1) (op_xattr_list.failures.max=-1) (op_rename.max=-1) (op_list_files.max=-1) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_named.failures.max=-1) (op_createfile.max=-1) (store_exists_probe.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_stage_file_upload.max=-1) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_glob_status.max=-1) (object_list_request.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_head_request.max=10) (committer_commit_job.failures.max=-1) (store_exists_probe.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.max=-1) (op_list_status.failures.max=-1) (object_delete_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=0) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (committer_materialize_file.max=-1) (op_list_status.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_delete.failures.max=-1) (op_copy_from_local_file.max=-1) (op_access.max=-1) (op_delete.max=-1) (stream_write_queue_duration.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.failures.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.max=51) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=226, mean=28.2500)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=10, mean=10.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=11, mean=11.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=2, mean=2.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=3, mean=0.7500)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:20,465 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:20,466 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,466 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,466 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a816350f-f985-4e5f-8ca8-679638bf3212-00000145 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000145&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=194&ts=1731777620465
2024-11-16 17:20:20,474 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,475 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,475 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a816350f-f985-4e5f-8ca8-679638bf3212-00000145 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000145&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=194&ts=1731777620465
2024-11-16 17:20:20,492 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:20:20,493 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:20,493 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:20,493 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:20,493 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:20,493 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:20,493 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:20,493 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:20,494 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:20,494 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:20,494 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:20,494 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:20,495 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:20,495 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:20,495 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,496 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [205] a816350f-f985-4e5f-8ca8-679638bf3212-00000145 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000145&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=205&ts=1731777620465
2024-11-16 17:20:20,507 [s3a-transfer-obs-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:20,508 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:20:20,508 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:20,508 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:20,508 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:20,508 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777620186; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:20,509 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:20,509 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:20,509 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:20,509 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:20,509 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:20,509 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:20,510 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:20,510 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:20,510 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:20,510 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:20,510 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:20,510 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:20,510 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a816350f-f985-4e5f-8ca8-679638bf3212-00000145 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000145&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=82&ts=1731777620465
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:20,520 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a816350f-f985-4e5f-8ca8-679638bf3212-00000145 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000145/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000145&t0=194&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=82&ts=1731777620465
2024-11-16 17:20:20,532 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:20:20,532 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:20:20,532 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:20:20,532 [s3a-transfer-obs-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:20:20,532 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:20:20,532 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.038s
2024-11-16 17:20:20,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:20,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:20,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:20,554 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 35, active threads = 0, queued tasks = 0, completed tasks = 35], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_queue_duration.failures=0) (stream_write_queue_duration=0) (multipart_upload_list=0) (stream_aborted=0) (op_get_file_status.failures=0) (action_http_head_request=81) (committer_materialize_file=0) (action_http_get_request.failures=0) (op_delete=29) (object_list_request=116) (action_http_get_request=25) (store_io_retry=0) (op_list_status=0) (op_create_non_recursive=0) (op_open=23) (op_is_file=0) (stream_read_remote_stream_aborted=0) (store_io_request=338) (multipart_upload_part_put_bytes=0) (multipart_instantiated=0) (delegation_tokens_issued.failures=0) (multipart_upload_started=0) (op_hsync=0) (stream_read_remote_stream_drain=3) (committer_load_single_pending_file=0) (op_xattr_get_named_map.failures=0) (object_select_requests=0) (stream_write_exceptions_completing_upload=0) (directories_created=29) (committer_jobs_completed=0) (op_access.failures=0) (object_list_request.failures=0) (op_xattr_list=0) (committer_commits_aborted=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_operations=0) (op_list_files=0) (audit_access_check_failure=0) (op_exists.failures=0) (stream_read_total_bytes=202971) (committer_magic_files_created=0) (stream_read_vectored_incoming_ranges=58) (committer_stage_file_upload.failures=0) (stream_write_block_uploads=29) (op_get_content_summary=0) (files_deleted=29) (op_glob_status=0) (op_xattr_get_named_map=0) (op_rename.failures=0) (action_file_opened=23) (stream_read_seek_backward_operations=0) (store_exists_probe.failures=0) (files_delete_rejected=0) (stream_read_vectored_combined_ranges=25) (committer_commit_job=0) (stream_read_close_operations=23) (op_abort=0) (object_multipart_aborted=0) (object_continue_list_request.failures=0) (fake_directories_created=0) (op_is_directory=0) (action_executor_acquired.failures=0) (committer_commit_job.failures=0) (audit_span_creation=112) (op_xattr_get_named=0) (stream_read_opened=3) (files_copied_bytes=0) (op_createfile=0) (stream_read_vectored_read_bytes_discarded=24543) (action_executor_acquired=0) (multipart_upload_completed=0) (op_get_file_checksum.failures=0) (committer_bytes_committed=0) (stream_write_exceptions=0) (committer_tasks_failed=0) (object_put_request_completed=58) (object_put_request=58) (op_xattr_get_map.failures=0) (stream_write_total_data=3801088) (op_list_files.failures=0) (object_copy_requests=0) (op_get_delegation_token=0) (ignored_errors=0) (files_copied=0) (action_file_opened.failures=0) (object_put_bytes=1900544) (committer_commits_created=0) (stream_read_seek_bytes_skipped=0) (op_mkdirs=29) (stream_read_unbuffered=2) (directories_deleted=0) (op_list_status.failures=0) (op_abort.failures=0) (committer_commits_completed=0) (op_createfile.failures=0) (committer_materialize_file.failures=0) (committer_commits.failures=0) (stream_read_seek_policy_changed=25) (committer_load_single_pending_file.failures=0) (object_put_request.failures=0) (op_rename=0) (op_glob_status.failures=0) (store_io_throttled=0) (op_hflush=0) (store_exists_probe=0) (op_xattr_list.failures=0) (object_delete_request.failures=0) (object_multipart_initiated=0) (op_delete.failures=0) (object_multipart_initiated.failures=0) (stream_read_remote_stream_drain.failures=0) (delegation_tokens_issued=0) (op_is_file.failures=0) (stream_read_exceptions=0) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_close=196008) (multipart_upload_abort_under_path_invoked=0) (op_create.failures=0) (stream_read_vectored_operations=20) (audit_failure=0) (op_is_directory.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_get_file_checksum=0) (op_list_located_status=0) (stream_write_total_time=0) (op_get_content_summary.failures=0) (stream_read_operations=3) (stream_read_version_mismatches=0) (op_copy_from_local_file.failures=0) (op_exists=0) (object_metadata_request=81) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_abort=0) (audit_request_execution=338) (stream_write_block_uploads_committed=0) (multipart_upload_list.failures=0) (op_xattr_get_map=0) (object_bulk_delete_request=58) (object_continue_list_request=0) (stream_write_bytes=1900544) (committer_magic_marker_put=0) (object_delete_request=0) (op_access=0) (action_http_head_request.failures=0) (fake_directories_deleted=29) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (op_xattr_get_named.failures=0) (committer_commits_reverted=0) (stream_read_closed=3) (committer_bytes_uploaded=0) (op_create=29) (committer_stage_file_upload=0) (stream_read_seek_bytes_discarded=0) (object_bulk_delete_request.failures=0) (stream_read_bytes=6963) (committer_magic_marker_put.failures=0) (files_created=29) (stream_read_fully_operations=1) (op_openfile=0) (object_delete_objects=58) (object_multipart_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_aborted=0) (op_copy_from_local_file=0) (committer_tasks_completed=0) (op_get_file_status=1) (stream_read_seek_forward_operations=0) (op_mkdirs.failures=0));
gauges=((stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=29) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_xattr_get_map.failures.min=-1) (op_list_status.min=-1) (op_list_files.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_map.min=-1) (multipart_upload_list.failures.min=-1) (op_create.min=6) (stream_write_queue_duration.failures.min=-1) (op_exists.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.failures.min=-1) (object_put_request.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_drain.min=1) (delegation_tokens_issued.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.min=5) (op_get_content_summary.min=-1) (op_get_content_summary.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (op_access.min=-1) (object_delete_request.failures.min=-1) (op_rename.failures.min=-1) (op_rename.min=-1) (action_http_get_request.min=19) (store_exists_probe.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_exists.min=-1) (op_delete.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.min=6) (op_access.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.min=22) (op_abort.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_status.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.min=-1) (committer_commit_job.min=-1) (multipart_upload_list.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_list.min=-1) (action_file_opened.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_continue_list_request.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=82) (op_createfile.failures.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_abort.min=-1) (op_xattr_get_named.min=-1) (op_list_status.failures.min=-1) (object_list_request.min=5) (object_list_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_delete.min=27) (op_glob_status.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.min=7) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_head_request.min=3) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((committer_commit_job.max=-1) (op_xattr_get_named.failures.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.failures.max=-1) (delegation_tokens_issued.max=-1) (object_list_request.max=210) (object_bulk_delete_request.failures.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.max=-1) (op_access.failures.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.failures.max=-1) (multipart_upload_list.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.max=111) (op_xattr_get_named_map.max=-1) (committer_materialize_file.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.failures.max=-1) (op_is_file.failures.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.max=32) (object_multipart_aborted.max=-1) (object_put_request.max=104) (op_glob_status.max=-1) (object_list_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_executor_acquired.max=-1) (op_xattr_list.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (store_exists_probe.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.failures.max=-1) (op_exists.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.max=43) (object_put_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_delegation_token.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.max=19) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.failures.max=-1) (action_file_opened.max=15) (op_mkdirs.max=346) (op_xattr_list.failures.max=-1) (action_http_get_request.failures.max=-1) (op_is_file.max=-1) (object_multipart_initiated.failures.max=-1) (op_rename.failures.max=-1) (store_exists_probe.failures.max=-1) (op_abort.failures.max=-1) (op_create.max=74) (op_copy_from_local_file.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_status.max=5) (op_get_file_checksum.max=-1) (committer_commit_job.failures.max=-1) (object_continue_list_request.max=-1) (op_list_status.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_access.max=-1) (op_abort.max=-1));
means=((committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=29, sum=1430, mean=49.3103)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=29, sum=1355, mean=46.7241)) (op_create.mean=(samples=29, sum=423, mean=14.5862)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=555, mean=22.2000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=151, mean=6.5652)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=58, sum=730, mean=12.5862)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=3, mean=1.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=58, sum=1777, mean=30.6379)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=116, sum=1335, mean=11.5086)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=81, sum=460, mean=5.6790)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:20,554 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:20,554 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,554 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,554 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,554 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,555 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000146 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000146&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620554
2024-11-16 17:20:20,563 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:20,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,564 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000146 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000146&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620554
2024-11-16 17:20:20,567 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,567 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:20,567 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:20,567 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:20,568 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000146 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000146&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620554
2024-11-16 17:20:20,587 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:20,587 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:20,587 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:20:20,587 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:20,587 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,587 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,587 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,587 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,588 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000147 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000147&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620587
2024-11-16 17:20:20,595 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:20,596 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,596 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:20,596 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12562866598124477856.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:20,597 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12562866598124477856.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (op_hflush=0) (action_executor_acquired=0) (object_put_request=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (op_abort.failures=0) (op_abort=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (stream_write_total_data=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12562866598124477856.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,597 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,598 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:20,598 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12562866598124477856.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:20,598 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:20,598 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:20,598 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:20,598 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] a816350f-f985-4e5f-8ca8-679638bf3212-00000147 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000147&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=84&ts=1731777620587
2024-11-16 17:20:20,601 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:20,630 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:20,630 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:20,630 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.032s
2024-11-16 17:20:20,631 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12562866598124477856.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:20,631 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12562866598124477856.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,631 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12562866598124477856.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,631 [s3a-transfer-obs-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:20,631 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,632 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (stream_write_exceptions=0) (stream_write_queue_duration=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_total_time=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (object_put_request=1) (object_multipart_initiated.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=32));
maximums=((object_put_request.max=32) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=32, mean=32.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:20,632 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:20,633 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,633 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,634 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:20,634 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000148 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000148&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620633
2024-11-16 17:20:20,639 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:20,639 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:20,639 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,639 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:20,639 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:20,640 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:20,640 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:20,640 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,640 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,640 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:20,640 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a816350f-f985-4e5f-8ca8-679638bf3212-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000148&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=87&ts=1731777620633
2024-11-16 17:20:20,642 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:20,642 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:20:20,642 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,643 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-65535&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000148&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620633
2024-11-16 17:20:20,666 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.024s
2024-11-16 17:20:20,667 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:20,667 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:20,679 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.038s
2024-11-16 17:20:20,679 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:20,679 [s3a-transfer-obs-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,679 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:20,680 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:20:20,680 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:20:20,680 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7439 bytes
2024-11-16 17:20:20,680 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:20,680 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:20,680 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:20,680 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8745 bytes
2024-11-16 17:20:20,681 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:20:20,681 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:20,682 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_operations=1) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=1) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes_discarded_in_close=65336) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=2) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_read_opened=1) (stream_read_bytes=350) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_closed=1) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_total_bytes=65686) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=24) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=6));
maximums=((stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=6) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=39) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=1));
means=((stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=63, mean=31.5000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:20,683 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:20,683 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,684 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,684 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000149 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000149&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620683
2024-11-16 17:20:20,687 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,687 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,688 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a816350f-f985-4e5f-8ca8-679638bf3212-00000149 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000149&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=206&ts=1731777620683
2024-11-16 17:20:20,695 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:20,695 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:20,696 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:20,696 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:20,697 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:20,697 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:20,697 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:20,698 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:20,698 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:20,698 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:20,699 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:20,699 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:20,700 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:20,700 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:20,700 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,700 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a816350f-f985-4e5f-8ca8-679638bf3212-00000149 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000149&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=207&ts=1731777620683
2024-11-16 17:20:20,706 [s3a-transfer-obs-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:20,707 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:20,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:20,708 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:20,708 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:20,708 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777620627; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:20,709 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:20,709 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:20,709 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:20,710 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:20,710 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:20,710 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:20,710 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:20,710 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:20,710 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:20,710 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:20,710 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:20,710 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:20,711 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a816350f-f985-4e5f-8ca8-679638bf3212-00000149 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000149&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=89&ts=1731777620683
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:20,719 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a816350f-f985-4e5f-8ca8-679638bf3212-00000149 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000149/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000149&t0=206&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=89&ts=1731777620683
2024-11-16 17:20:20,726 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:20,726 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:20,727 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:20:20,727 [s3a-transfer-obs-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:20:20,727 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.017s
2024-11-16 17:20:20,727 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:20:20,727 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:20,727 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:20,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:20,752 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 36, active threads = 0, queued tasks = 0, completed tasks = 36], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_hsync=0) (op_is_file=0) (committer_commits_reverted=0) (stream_read_operations=4) (store_io_request=351) (op_xattr_list=0) (object_continue_list_request=0) (stream_read_unbuffered=2) (ignored_errors=0) (files_deleted=30) (op_glob_status=0) (directories_created=30) (action_executor_acquired.failures=0) (stream_write_block_uploads=30) (action_http_head_request.failures=0) (audit_failure=0) (committer_commit_job=0) (op_copy_from_local_file=0) (stream_read_fully_operations=1) (files_copied=0) (op_is_directory=0) (stream_write_exceptions=0) (multipart_upload_list=0) (store_exists_probe.failures=0) (op_is_file.failures=0) (op_get_file_status=1) (op_xattr_get_named_map.failures=0) (stream_read_close_operations=24) (op_mkdirs.failures=0) (object_multipart_initiated.failures=0) (committer_jobs_completed=0) (delegation_tokens_issued.failures=0) (op_abort=0) (op_is_directory.failures=0) (stream_read_operations_incomplete=0) (action_http_get_request=27) (committer_commits_completed=0) (stream_read_bytes=7313) (stream_read_seek_bytes_skipped=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_backward_operations=0) (fake_directories_deleted=30) (stream_read_total_bytes=268657) (op_createfile.failures=0) (stream_read_vectored_read_bytes_discarded=24553) (op_get_delegation_token.failures=0) (op_create=30) (op_delete.failures=0) (op_get_file_status.failures=0) (op_list_status.failures=0) (object_bulk_delete_request=60) (stream_read_remote_stream_aborted.failures=0) (stream_write_queue_duration=0) (action_file_opened=24) (stream_read_exceptions=0) (audit_access_check_failure=0) (stream_read_remote_stream_drain.failures=0) (delegation_tokens_issued=0) (object_delete_objects=60) (object_put_request=60) (committer_magic_marker_put.failures=0) (object_put_bytes=1966080) (op_list_files.failures=0) (stream_read_closed=4) (action_executor_acquired=0) (stream_read_version_mismatches=0) (store_exists_probe=0) (action_http_get_request.failures=0) (op_create_non_recursive=0) (op_get_delegation_token=0) (object_bulk_delete_request.failures=0) (action_file_opened.failures=0) (op_xattr_list.failures=0) (op_abort.failures=0) (stream_read_seek_policy_changed=26) (multipart_upload_aborted=0) (stream_read_vectored_operations=21) (object_put_request_completed=60) (stream_read_bytes_backwards_on_seek=0) (op_create.failures=0) (object_copy_requests=0) (multipart_instantiated=0) (object_select_requests=0) (committer_tasks_completed=0) (op_get_content_summary.failures=0) (object_delete_request.failures=0) (stream_write_block_uploads_committed=0) (stream_read_vectored_incoming_ranges=60) (stream_aborted=0) (op_list_status=0) (committer_bytes_uploaded=0) (committer_magic_files_created=0) (stream_write_block_uploads_aborted=0) (committer_magic_marker_put=0) (committer_tasks_failed=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named_map=0) (op_get_file_checksum.failures=0) (stream_read_vectored_combined_ranges=26) (stream_read_seek_operations=0) (op_xattr_get_named.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_access=0) (op_delete=30) (committer_materialize_file=0) (op_xattr_get_named=0) (store_io_retry=0) (committer_stage_file_upload.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (directories_deleted=0) (stream_read_opened=4) (object_continue_list_request.failures=0) (action_http_head_request=84) (object_metadata_request=84) (multipart_upload_list.failures=0) (op_list_files=0) (stream_read_remote_stream_drain=4) (stream_read_remote_stream_aborted=0) (audit_span_creation=116) (committer_commits_created=0) (op_list_located_status=0) (files_copied_bytes=0) (object_list_request.failures=0) (stream_read_seek_bytes_discarded=0) (op_mkdirs=30) (stream_read_bytes_discarded_in_abort=0) (stream_write_bytes=1966080) (files_delete_rejected=0) (op_exists.failures=0) (committer_materialize_file.failures=0) (op_exists=0) (op_get_file_checksum=0) (op_open=24) (committer_commits.failures=0) (files_created=30) (op_rename.failures=0) (object_list_request=120) (fake_directories_created=0) (stream_write_queue_duration.failures=0) (object_multipart_aborted=0) (op_get_content_summary=0) (multipart_upload_part_put_bytes=0) (op_hflush=0) (op_access.failures=0) (object_delete_request=0) (stream_write_total_time=0) (stream_write_total_data=3932160) (multipart_upload_started=0) (committer_load_single_pending_file.failures=0) (op_xattr_get_map=0) (audit_request_execution=351) (op_createfile=0) (stream_read_bytes_discarded_in_close=261344) (object_put_request.failures=0) (object_multipart_initiated=0) (committer_jobs_failed=0) (committer_commit_job.failures=0) (committer_stage_file_upload=0) (op_rename=0) (op_openfile=0) (op_copy_from_local_file.failures=0) (committer_bytes_committed=0) (store_io_throttled=0) (committer_commits_aborted=0) (op_xattr_get_map.failures=0) (op_glob_status.failures=0) (committer_load_single_pending_file=0));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=30) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((op_is_file.failures.min=-1) (action_executor_acquired.min=-1) (object_continue_list_request.min=-1) (object_bulk_delete_request.min=6) (op_copy_from_local_file.min=-1) (op_list_files.min=-1) (op_rename.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (op_rename.min=-1) (action_http_head_request.min=3) (store_exists_probe.failures.min=-1) (op_create.min=6) (op_abort.failures.min=-1) (object_list_request.failures.min=-1) (object_delete_request.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.min=5) (action_file_opened.failures.min=-1) (op_get_file_checksum.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.min=-1) (object_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (op_is_directory.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.min=24) (op_xattr_get_named_map.failures.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.min=22) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.min=-1) (multipart_upload_list.failures.min=-1) (action_http_head_request.failures.min=-1) (op_delete.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=5) (op_list_status.min=-1) (op_xattr_list.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.failures.min=-1) (action_http_get_request.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.min=27) (op_list_files.failures.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1) (action_file_opened.min=6) (op_mkdirs.failures.min=-1) (op_is_file.min=-1) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_put_request.min=32));
maximums=((action_http_head_request.failures.max=-1) (op_glob_status.max=-1) (op_exists.failures.max=-1) (object_multipart_aborted.max=-1) (op_is_file.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.max=104) (op_abort.max=-1) (object_continue_list_request.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.max=15) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.failures.max=-1) (op_get_content_summary.max=-1) (op_abort.failures.max=-1) (op_mkdirs.max=346) (object_bulk_delete_request.max=32) (object_multipart_initiated.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_get_request.max=43) (committer_commit_job.failures.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.failures.max=-1) (op_rename.failures.max=-1) (op_access.max=-1) (stream_write_queue_duration.failures.max=-1) (object_put_request.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.max=1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_map.failures.max=-1) (committer_commit_job.max=-1) (op_list_status.max=-1) (committer_load_single_pending_file.max=-1) (op_is_file.max=-1) (object_list_request.max=210) (op_mkdirs.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=19) (action_executor_acquired.failures.max=-1) (committer_materialize_file.max=-1) (op_delete.max=111) (op_get_file_status.max=5) (op_rename.max=-1) (op_xattr_get_named.max=-1) (object_delete_request.max=-1) (op_exists.max=-1) (op_create.max=74));
means=((op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=30, sum=432, mean=14.4000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=120, sum=1365, mean=11.3750)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=30, sum=1463, mean=48.7667)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=60, sum=745, mean=12.4167)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=60, sum=1828, mean=30.4667)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=24, sum=157, mean=6.5417)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=30, sum=1385, mean=46.1667)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=27, sum=618, mean=22.8889)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=84, sum=472, mean=5.6190)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:20,753 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:20,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,755 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,755 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,755 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a816350f-f985-4e5f-8ca8-679638bf3212-00000150 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000150&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=208&ts=1731777620753
2024-11-16 17:20:20,772 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:20:20,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,772 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a816350f-f985-4e5f-8ca8-679638bf3212-00000150 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000150&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=208&ts=1731777620753
2024-11-16 17:20:20,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,776 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:20,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:20,776 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:20,776 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a816350f-f985-4e5f-8ca8-679638bf3212-00000150 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000150&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=208&ts=1731777620753
2024-11-16 17:20:20,788 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:20,788 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:20,788 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:20:20,788 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:20,788 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,788 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,788 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,788 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,788 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a816350f-f985-4e5f-8ca8-679638bf3212-00000151 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000151&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=208&ts=1731777620788
2024-11-16 17:20:20,794 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:20,794 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,794 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:20,794 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5123017501393241693.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:20,795 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5123017501393241693.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5123017501393241693.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,795 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,795 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:20,795 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5123017501393241693.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:20,795 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:20,795 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:20,796 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:20,796 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] a816350f-f985-4e5f-8ca8-679638bf3212-00000151 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000151&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=90&ts=1731777620788
2024-11-16 17:20:20,797 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:20,819 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:20,819 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:20,819 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.024s
2024-11-16 17:20:20,820 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5123017501393241693.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:20,820 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5123017501393241693.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,820 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5123017501393241693.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,820 [s3a-transfer-obs-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:20,820 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,821 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (stream_write_exceptions=0) (op_hflush=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0) (stream_write_block_uploads=1) (stream_write_total_data=65536) (stream_write_queue_duration=0) (object_put_request.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (op_hsync=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=23) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=23) (object_put_request.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=23, mean=23.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:20,821 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:20,822 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,822 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,822 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:20,822 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [209] a816350f-f985-4e5f-8ca8-679638bf3212-00000152 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000152/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000152&t0=209&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=209&ts=1731777620822
2024-11-16 17:20:20,829 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:20,829 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:20,829 [s3a-transfer-obs-bucket-unbounded-pool2-t37] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,829 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:20:20,830 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_policy_changed=1) (stream_read_block_read.failures=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (stream_read_opened=0) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (action_file_opened=1) (action_http_get_request=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain=0) (stream_read_operations=0) (action_file_opened.failures=0) (stream_read_vectored_operations=0) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_bytes=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_total_bytes=0) (stream_read_vectored_combined_ranges=0) (stream_read_close_operations=1) (stream_read_prefetch_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=7) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=7) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:20,834 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:20,834 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,834 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,834 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a816350f-f985-4e5f-8ca8-679638bf3212-00000153 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000153&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=208&ts=1731777620834
2024-11-16 17:20:20,837 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,837 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,837 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a816350f-f985-4e5f-8ca8-679638bf3212-00000153 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000153&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=208&ts=1731777620834
2024-11-16 17:20:20,847 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:20,847 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:20,847 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:20,847 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:20,847 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:20,847 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:20,847 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:20,847 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:20,847 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:20,848 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:20,848 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:20,848 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:20,848 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:20,848 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:20,848 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,848 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [210] a816350f-f985-4e5f-8ca8-679638bf3212-00000153 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000153&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=210&ts=1731777620834
2024-11-16 17:20:20,854 [s3a-transfer-obs-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:20,854 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:20:20,854 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:20,854 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:20,854 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:20,854 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777620816; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:20,854 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:20,855 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:20,855 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:20,855 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:20,855 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:20,856 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a816350f-f985-4e5f-8ca8-679638bf3212-00000153 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000153&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=92&ts=1731777620834
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:20,863 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a816350f-f985-4e5f-8ca8-679638bf3212-00000153 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000153/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000153&t0=208&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=92&ts=1731777620834
2024-11-16 17:20:20,869 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:20:20,869 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:20:20,869 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:20:20,869 [s3a-transfer-obs-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.013s
2024-11-16 17:20:20,869 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:20:20,869 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.022s
2024-11-16 17:20:20,869 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:20,870 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:20,871 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:20,881 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 38, active threads = 0, queued tasks = 0, completed tasks = 38], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits_reverted=0) (op_hflush=0) (stream_read_remote_stream_aborted=0) (committer_commits_created=0) (op_hsync=0) (committer_commits_aborted=0) (stream_read_bytes_discarded_in_close=261344) (stream_read_seek_forward_operations=0) (multipart_upload_aborted=0) (op_is_file.failures=0) (store_io_retry=0) (op_mkdirs=31) (files_created=31) (stream_read_vectored_combined_ranges=26) (committer_stage_file_upload.failures=0) (fake_directories_deleted=31) (op_abort=0) (op_is_directory=0) (op_delete=31) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=24553) (stream_read_seek_operations=0) (op_is_directory.failures=0) (object_multipart_initiated.failures=0) (op_list_located_status=0) (op_open=25) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_select_requests=0) (store_exists_probe.failures=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_abort_under_path_invoked=0) (committer_magic_marker_put=0) (fake_directories_created=0) (committer_jobs_failed=0) (directories_deleted=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_instantiated=0) (op_get_content_summary=0) (op_create.failures=0) (committer_tasks_failed=0) (object_continue_list_request=0) (op_get_delegation_token.failures=0) (op_xattr_get_map.failures=0) (object_bulk_delete_request.failures=0) (stream_read_bytes=7313) (audit_span_creation=120) (op_xattr_get_named=0) (op_delete.failures=0) (op_xattr_get_named.failures=0) (files_delete_rejected=0) (object_put_bytes=2031616) (stream_write_total_time=0) (stream_write_block_uploads_aborted=0) (op_get_content_summary.failures=0) (directories_created=31) (files_copied_bytes=0) (op_get_file_checksum.failures=0) (op_list_files.failures=0) (op_glob_status=0) (action_executor_acquired=0) (action_file_opened.failures=0) (ignored_errors=0) (committer_commit_job=0) (object_continue_list_request.failures=0) (stream_read_total_bytes=268657) (stream_write_bytes=2031616) (multipart_upload_part_put_bytes=0) (op_create=31) (stream_read_version_mismatches=0) (audit_failure=0) (stream_write_queue_duration=0) (op_xattr_get_named_map.failures=0) (committer_magic_files_created=0) (object_copy_requests=0) (object_list_request.failures=0) (object_list_request=124) (object_put_request=62) (committer_commit_job.failures=0) (store_io_throttled=0) (committer_load_single_pending_file=0) (committer_load_single_pending_file.failures=0) (op_get_file_status=1) (files_copied=0) (audit_access_check_failure=0) (stream_read_operations_incomplete=0) (committer_stage_file_upload=0) (op_access=0) (stream_read_operations=4) (object_put_request_completed=62) (op_get_file_checksum=0) (op_is_file=0) (stream_read_fully_operations=1) (stream_write_total_data=4063232) (stream_write_block_uploads=31) (store_exists_probe=0) (op_rename.failures=0) (store_io_request=362) (committer_materialize_file=0) (op_rename=0) (op_create_non_recursive=0) (committer_bytes_committed=0) (object_multipart_aborted.failures=0) (op_access.failures=0) (committer_jobs_completed=0) (committer_magic_marker_put.failures=0) (op_xattr_get_named_map=0) (stream_read_close_operations=25) (action_http_head_request.failures=0) (delegation_tokens_issued.failures=0) (stream_write_queue_duration.failures=0) (stream_aborted=0) (stream_write_exceptions=0) (op_copy_from_local_file.failures=0) (op_xattr_list=0) (object_multipart_initiated=0) (action_http_get_request=27) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_abort=0) (object_bulk_delete_request=62) (audit_request_execution=362) (action_file_opened=25) (files_deleted=31) (stream_read_seek_backward_operations=0) (op_list_files=0) (object_metadata_request=87) (op_glob_status.failures=0) (op_createfile=0) (op_createfile.failures=0) (multipart_upload_list=0) (op_abort.failures=0) (op_exists.failures=0) (stream_read_seek_policy_changed=27) (committer_commits.failures=0) (committer_commits_completed=0) (stream_read_bytes_backwards_on_seek=0) (object_delete_request.failures=0) (stream_read_closed=4) (op_openfile=0) (op_xattr_get_map=0) (op_get_file_status.failures=0) (action_http_head_request=87) (stream_read_vectored_operations=21) (op_exists=0) (stream_read_vectored_incoming_ranges=60) (op_get_delegation_token=0) (stream_read_exceptions=0) (object_delete_request=0) (delegation_tokens_issued=0) (op_copy_from_local_file=0) (op_list_status.failures=0) (object_multipart_aborted=0) (object_delete_objects=62) (committer_bytes_uploaded=0) (op_list_status=0) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_drain=4) (committer_materialize_file.failures=0) (op_mkdirs.failures=0) (multipart_upload_started=0) (object_put_request.failures=0) (op_xattr_list.failures=0) (stream_read_opened=4) (multipart_upload_list.failures=0) (committer_tasks_completed=0) (stream_read_unbuffered=2) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_pending=31));
minimums=((action_http_get_request.failures.min=-1) (object_put_request.min=23) (op_mkdirs.min=22) (op_abort.failures.min=-1) (op_create.min=6) (action_file_opened.min=7) (op_access.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=24) (op_createfile.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.min=-1) (op_get_file_checksum.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.failures.min=-1) (op_rename.failures.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_list.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_copy_from_local_file.min=-1) (object_list_request.failures.min=-1) (op_exists.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.min=-1) (op_get_file_status.min=5) (action_http_head_request.min=3) (op_list_files.failures.min=-1) (object_bulk_delete_request.min=6) (store_exists_probe.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_list_request.min=5) (object_multipart_aborted.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_is_file.min=-1) (op_xattr_get_map.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (action_executor_acquired.min=-1) (op_access.min=-1) (op_delete.min=23) (op_get_delegation_token.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1) (object_delete_request.min=-1) (op_mkdirs.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1));
maximums=((op_create.failures.max=-1) (op_get_file_status.max=5) (op_access.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (op_glob_status.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.max=32) (committer_materialize_file.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_files.max=-1) (object_list_request.max=210) (stream_read_remote_stream_aborted.max=-1) (object_put_request.max=104) (object_put_request.failures.max=-1) (action_file_opened.max=15) (op_xattr_get_map.failures.max=-1) (op_abort.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_exists.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=43) (committer_stage_file_upload.max=-1) (op_is_directory.max=-1) (op_glob_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=1) (delegation_tokens_issued.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_create.max=74) (store_exists_probe.max=-1) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_initiated.max=-1) (op_is_file.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.max=346) (action_http_head_request.failures.max=-1) (object_list_request.failures.max=-1) (op_createfile.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (op_list_status.max=-1) (op_mkdirs.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_access.failures.max=-1) (op_delete.max=111) (object_bulk_delete_request.failures.max=-1) (op_exists.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.max=-1) (action_http_get_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.max=-1) (multipart_upload_list.failures.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_createfile.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_head_request.max=19) (op_list_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_abort.failures.max=-1));
means=((op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=31, sum=1408, mean=45.4194)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=62, sum=1863, mean=30.0484)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=31, sum=439, mean=14.1613)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=27, sum=618, mean=22.8889)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=25, sum=164, mean=6.5600)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=87, sum=486, mean=5.5862)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=62, sum=758, mean=12.2258)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=124, sum=1403, mean=11.3145)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=31, sum=1498, mean=48.3226)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:20,882 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:20,882 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,882 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,882 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,882 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,882 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a816350f-f985-4e5f-8ca8-679638bf3212-00000154 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000154&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=211&ts=1731777620882
2024-11-16 17:20:20,887 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:20,887 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,887 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:20,887 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,887 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,887 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a816350f-f985-4e5f-8ca8-679638bf3212-00000154 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000154&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=211&ts=1731777620882
2024-11-16 17:20:20,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:20,890 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:20,891 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:20,891 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:20,891 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a816350f-f985-4e5f-8ca8-679638bf3212-00000154 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000154&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=211&ts=1731777620882
2024-11-16 17:20:20,910 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:20,910 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:20,911 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:20:20,911 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:20,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,911 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,911 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a816350f-f985-4e5f-8ca8-679638bf3212-00000155 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000155&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=211&ts=1731777620911
2024-11-16 17:20:20,919 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:20,919 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,919 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:20,920 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6251248856050775798.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:20,920 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6251248856050775798.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (object_put_request=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (op_hsync=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (op_abort=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((op_abort.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6251248856050775798.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,920 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,920 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:20,920 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6251248856050775798.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:20,920 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:20,921 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:20,921 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:20,921 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:20,921 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] a816350f-f985-4e5f-8ca8-679638bf3212-00000155 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000155&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=94&ts=1731777620911
2024-11-16 17:20:20,962 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:20,962 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:20,962 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.042s
2024-11-16 17:20:20,962 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6251248856050775798.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:20,962 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6251248856050775798.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,962 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6251248856050775798.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:20,962 [s3a-transfer-obs-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:20,963 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:20,963 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (op_abort=0) (multipart_upload_completed.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=41) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=41) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1));
means=((object_put_request.mean=(samples=1, sum=41, mean=41.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:20,964 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:20,965 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:20,965 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:20,965 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:20,965 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a816350f-f985-4e5f-8ca8-679638bf3212-00000156 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000156&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=211&ts=1731777620965
2024-11-16 17:20:20,972 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:20,973 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:20,973 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,973 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:20:20,973 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:20,973 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:20:20,973 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:20:20,973 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,973 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:20,974 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:20,974 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] a816350f-f985-4e5f-8ca8-679638bf3212-00000156 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-999&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000156&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=96&ts=1731777620965
2024-11-16 17:20:20,984 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:20:20,985 [s3a-transfer-obs-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:20,987 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (stream_read_unbuffered=0) (stream_aborted=0) (action_file_opened=1) (stream_read_opened=0) (stream_read_vectored_operations=1) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read=0) (stream_read_closed=0) (stream_read_vectored_combined_ranges=1) (stream_read_fully_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (stream_read_total_bytes=1000) (stream_read_operations=0) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_vectored_incoming_ranges=10) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_policy_changed=1) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=1000) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (action_http_get_request=1) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=8) (action_http_get_request.min=10) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=10) (action_file_opened.max=8) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:20,988 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:20,988 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:20,988 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:20,988 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a816350f-f985-4e5f-8ca8-679638bf3212-00000157 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000157&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=211&ts=1731777620988
2024-11-16 17:20:20,992 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:20,992 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:20,992 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a816350f-f985-4e5f-8ca8-679638bf3212-00000157 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000157&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=211&ts=1731777620988
2024-11-16 17:20:21,000 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:21,000 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:21,000 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:21,000 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:21,000 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:21,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:21,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:21,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:21,000 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:21,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:21,000 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:21,000 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:21,001 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:21,001 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:21,002 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,002 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a816350f-f985-4e5f-8ca8-679638bf3212-00000157 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000157&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=212&ts=1731777620988
2024-11-16 17:20:21,010 [s3a-transfer-obs-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:21,010 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:20:21,011 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:21,011 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:21,011 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:21,011 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777620952; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:21,011 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:21,011 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:21,011 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:21,011 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:21,011 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:21,013 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:21,013 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:21,013 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:21,013 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,013 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,013 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:21,014 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,014 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] a816350f-f985-4e5f-8ca8-679638bf3212-00000157 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000157&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=97&ts=1731777620988
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,027 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:21,028 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,028 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] a816350f-f985-4e5f-8ca8-679638bf3212-00000157 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000157/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000157&t0=211&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=97&ts=1731777620988
2024-11-16 17:20:21,035 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:21,035 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:21,035 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:20:21,035 [s3a-transfer-obs-bucket-bounded-pool1-t27] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:20:21,035 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:20:21,036 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.036s
2024-11-16 17:20:21,036 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:21,036 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:21,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:21,048 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 39, active threads = 0, queued tasks = 0, completed tasks = 39], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_load_single_pending_file.failures=0) (action_http_head_request=90) (multipart_upload_list=0) (committer_commits_completed=0) (multipart_upload_abort_under_path_invoked=0) (object_multipart_aborted=0) (object_delete_objects=64) (directories_created=32) (action_file_opened.failures=0) (stream_read_unbuffered=2) (object_list_request.failures=0) (op_createfile=0) (stream_read_close_operations=26) (stream_read_operations_incomplete=0) (op_xattr_get_named_map=0) (multipart_upload_part_put=0) (fake_directories_deleted=32) (op_list_status.failures=0) (stream_read_vectored_read_bytes_discarded=24553) (committer_jobs_completed=0) (stream_read_bytes_backwards_on_seek=0) (store_io_request=374) (files_copied_bytes=0) (op_delete=32) (op_is_file=0) (committer_magic_files_created=0) (committer_tasks_completed=0) (stream_read_exceptions=0) (op_list_files.failures=0) (stream_read_remote_stream_drain.failures=0) (op_delete.failures=0) (object_continue_list_request=0) (stream_write_block_uploads_committed=0) (op_get_file_status=1) (stream_write_exceptions=0) (stream_aborted=0) (committer_stage_file_upload.failures=0) (audit_failure=0) (op_rename=0) (multipart_upload_part_put_bytes=0) (object_multipart_aborted.failures=0) (store_io_throttled=0) (stream_read_bytes_discarded_in_close=261344) (object_put_request_completed=64) (op_createfile.failures=0) (action_executor_acquired=0) (files_copied=0) (audit_span_creation=124) (op_access.failures=0) (committer_jobs_failed=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration.failures=0) (op_create=32) (op_xattr_get_named=0) (op_create_non_recursive=0) (action_http_get_request=28) (op_list_files=0) (committer_stage_file_upload=0) (op_hflush=0) (stream_write_block_uploads_aborted=0) (op_xattr_list=0) (op_xattr_get_named_map.failures=0) (stream_read_version_mismatches=0) (op_mkdirs.failures=0) (committer_commits_reverted=0) (multipart_upload_aborted=0) (op_glob_status=0) (object_bulk_delete_request=64) (multipart_upload_list.failures=0) (directories_deleted=0) (committer_commit_job.failures=0) (op_get_delegation_token.failures=0) (object_copy_requests=0) (stream_write_total_time=0) (store_io_retry=0) (op_abort=0) (committer_commits_aborted=0) (object_put_request.failures=0) (object_delete_request=0) (stream_read_vectored_incoming_ranges=70) (op_xattr_get_named.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=28) (op_get_content_summary=0) (op_get_delegation_token=0) (action_http_get_request.failures=0) (stream_read_operations=4) (op_copy_from_local_file=0) (object_metadata_request=90) (stream_read_seek_bytes_discarded=0) (op_list_located_status=0) (committer_magic_marker_put.failures=0) (object_put_request=64) (stream_write_block_uploads=32) (op_is_file.failures=0) (multipart_instantiated=0) (action_executor_acquired.failures=0) (store_exists_probe=0) (op_xattr_list.failures=0) (committer_materialize_file=0) (object_continue_list_request.failures=0) (multipart_upload_completed=0) (op_exists=0) (action_http_head_request.failures=0) (op_create.failures=0) (committer_commits_created=0) (committer_magic_marker_put=0) (audit_access_check_failure=0) (committer_commits.failures=0) (op_is_directory.failures=0) (stream_read_vectored_combined_ranges=27) (op_list_status=0) (op_is_directory=0) (stream_read_closed=4) (stream_read_opened=4) (delegation_tokens_issued=0) (files_deleted=32) (op_glob_status.failures=0) (ignored_errors=0) (action_file_opened=26) (committer_commit_job=0) (stream_read_vectored_operations=22) (stream_read_bytes_discarded_in_abort=0) (object_put_bytes=2097152) (committer_tasks_failed=0) (op_xattr_get_map.failures=0) (delegation_tokens_issued.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_access=0) (stream_read_remote_stream_drain=4) (committer_materialize_file.failures=0) (stream_read_seek_bytes_skipped=0) (committer_load_single_pending_file=0) (object_list_request=128) (op_mkdirs=32) (op_open=26) (store_exists_probe.failures=0) (stream_write_total_data=4194304) (stream_read_seek_operations=0) (multipart_upload_started=0) (object_select_requests=0) (object_multipart_initiated.failures=0) (files_created=32) (op_rename.failures=0) (op_get_content_summary.failures=0) (op_get_file_checksum=0) (op_exists.failures=0) (committer_bytes_committed=0) (stream_read_fully_operations=1) (object_delete_request.failures=0) (stream_read_total_bytes=269657) (files_delete_rejected=0) (committer_bytes_uploaded=0) (op_get_file_checksum.failures=0) (op_copy_from_local_file.failures=0) (object_multipart_initiated=0) (op_xattr_get_map=0) (stream_read_seek_backward_operations=0) (audit_request_execution=374) (op_get_file_status.failures=0) (fake_directories_created=0) (object_bulk_delete_request.failures=0) (op_hsync=0) (stream_read_seek_forward_operations=0) (op_openfile=0) (op_abort.failures=0) (stream_write_queue_duration=0) (stream_read_bytes=8313) (stream_write_bytes=2097152));
gauges=((stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_write_block_uploads_pending=32) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.min=8) (op_copy_from_local_file.min=-1) (op_xattr_get_named.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_content_summary.min=-1) (multipart_upload_list.min=-1) (op_get_content_summary.failures.min=-1) (op_createfile.min=-1) (op_list_status.min=-1) (op_is_directory.failures.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.min=-1) (action_http_head_request.min=3) (committer_stage_file_upload.min=-1) (object_put_request.failures.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (action_http_head_request.failures.min=-1) (op_rename.min=-1) (action_http_get_request.min=10) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_abort.failures.min=-1) (op_rename.failures.min=-1) (op_access.min=-1) (op_access.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.failures.min=-1) (op_createfile.failures.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_bulk_delete_request.min=6) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (store_exists_probe.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.min=6) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.failures.min=-1) (op_delete.min=23) (stream_read_remote_stream_drain.min=1) (op_get_file_status.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_list.failures.min=-1) (op_create.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.min=-1) (committer_magic_marker_put.min=-1) (op_delete.failures.min=-1) (object_put_request.min=41) (action_http_get_request.failures.min=-1) (committer_commit_job.min=-1) (op_get_file_status.min=5) (op_mkdirs.min=22) (op_is_file.min=-1) (op_get_delegation_token.failures.min=-1) (delegation_tokens_issued.min=-1) (object_list_request.min=5) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.failures.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.min=-1) (op_list_files.min=-1));
maximums=((op_createfile.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.max=15) (action_executor_acquired.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.max=32) (action_http_head_request.max=19) (op_is_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_list_files.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.max=-1) (object_delete_request.failures.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.max=-1) (op_is_directory.failures.max=-1) (op_list_status.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_access.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.max=74) (op_rename.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_access.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.max=1) (op_list_files.max=-1) (op_get_content_summary.max=-1) (store_exists_probe.failures.max=-1) (op_glob_status.max=-1) (store_exists_probe.max=-1) (object_list_request.max=210) (op_rename.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.failures.max=-1) (op_create.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.max=346) (object_put_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_delete.max=111) (action_executor_acquired.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.max=-1) (op_get_file_status.max=5) (committer_stage_file_upload.failures.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.max=104) (action_http_get_request.max=43) (op_is_file.max=-1));
means=((committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=128, sum=1432, mean=11.1875)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=64, sum=778, mean=12.1563)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=32, sum=1527, mean=47.7188)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=90, sum=500, mean=5.5556)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=26, sum=172, mean=6.6154)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=64, sum=1923, mean=30.0469)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (action_http_get_request.mean=(samples=28, sum=628, mean=22.4286)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=32, sum=448, mean=14.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=32, sum=1444, mean=45.1250)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:21,048 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:21,048 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,048 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,048 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,048 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,048 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a816350f-f985-4e5f-8ca8-679638bf3212-00000158 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000158&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=213&ts=1731777621048
2024-11-16 17:20:21,054 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:21,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,054 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,055 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a816350f-f985-4e5f-8ca8-679638bf3212-00000158 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000158&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=213&ts=1731777621048
2024-11-16 17:20:21,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,060 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:21,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:21,061 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:21,061 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a816350f-f985-4e5f-8ca8-679638bf3212-00000158 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000158&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=213&ts=1731777621048
2024-11-16 17:20:21,078 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:21,078 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:21,078 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.018s
2024-11-16 17:20:21,079 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:21,079 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,079 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,079 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,079 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,080 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a816350f-f985-4e5f-8ca8-679638bf3212-00000159 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000159&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=213&ts=1731777621079
2024-11-16 17:20:21,087 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:21,087 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,088 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:21,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6581241691871248028.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:21,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6581241691871248028.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (op_abort=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (op_hflush=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (op_abort.failures=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (object_put_request=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6581241691871248028.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,089 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,089 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:21,089 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6581241691871248028.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:21,089 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:21,089 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:21,089 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:21,089 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:21,089 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a816350f-f985-4e5f-8ca8-679638bf3212-00000159 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000159&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=98&ts=1731777621079
2024-11-16 17:20:21,114 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:21,115 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:21,115 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:20:21,115 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6581241691871248028.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:21,115 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6581241691871248028.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,115 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6581241691871248028.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,115 [s3a-transfer-obs-bucket-bounded-pool1-t28] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:21,115 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,116 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (op_hflush=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (stream_write_exceptions=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=25) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=25));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:21,116 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:21,117 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,117 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,117 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:21,117 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a816350f-f985-4e5f-8ca8-679638bf3212-00000160 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/a816350f-f985-4e5f-8ca8-679638bf3212-00000160/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000160&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=213&ts=1731777621117
2024-11-16 17:20:21,121 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:21,121 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777621000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:20:21,122 [s3a-transfer-obs-bucket-unbounded-pool2-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:21,122 [s3a-transfer-obs-bucket-unbounded-pool2-t40] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,122 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:21,123 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:21,123 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:20:21,123 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:21,123 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,123 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,123 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:21,123 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a816350f-f985-4e5f-8ca8-679638bf3212-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000161&t0=214&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=100&ts=1731777621122
2024-11-16 17:20:21,124 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,124 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,124 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:21,124 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] a816350f-f985-4e5f-8ca8-679638bf3212-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-14435&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000161&t0=214&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=102&ts=1731777621122
2024-11-16 17:20:21,127 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,128 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,128 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:21,128 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a816350f-f985-4e5f-8ca8-679638bf3212-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000161&t0=214&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=105&ts=1731777621122
2024-11-16 17:20:21,141 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:20:21,142 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:20:21,142 [s3a-transfer-obs-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,142 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:20:21,142 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:20:21,142 [s3a-transfer-obs-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,145 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:20:21,145 [s3a-transfer-obs-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,147 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_vectored_operations=1) (stream_read_bytes=1424) (stream_read_vectored_incoming_ranges=5) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_exceptions=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_opened=0) (stream_read_total_bytes=1424) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=3) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_block_read.failures=0) (action_file_opened=1) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (action_http_get_request=3) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=17) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=19) (action_file_opened.max=0) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=54, mean=18.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:21,148 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:21,148 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,148 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,148 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a816350f-f985-4e5f-8ca8-679638bf3212-00000162 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000162&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=213&ts=1731777621148
2024-11-16 17:20:21,151 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,151 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,152 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a816350f-f985-4e5f-8ca8-679638bf3212-00000162 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000162&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=213&ts=1731777621148
2024-11-16 17:20:21,159 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:21,159 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:21,159 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:21,159 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:21,159 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:21,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:21,159 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:21,160 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:21,160 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:21,160 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:21,160 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:21,160 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:21,160 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:21,161 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:21,161 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,161 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [215] a816350f-f985-4e5f-8ca8-679638bf3212-00000162 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000162&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=215&ts=1731777621148
2024-11-16 17:20:21,175 [s3a-transfer-obs-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:20:21,175 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.015s
2024-11-16 17:20:21,175 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:21,176 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:21,176 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:21,176 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777621112; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:21,176 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:21,176 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:21,176 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:21,177 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,177 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] a816350f-f985-4e5f-8ca8-679638bf3212-00000162 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000162&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=107&ts=1731777621148
2024-11-16 17:20:21,178 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,185 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:21,186 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,186 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] a816350f-f985-4e5f-8ca8-679638bf3212-00000162 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000162/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000162&t0=213&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=107&ts=1731777621148
2024-11-16 17:20:21,192 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:20:21,192 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:21,193 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:20:21,193 [s3a-transfer-obs-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.016s
2024-11-16 17:20:21,193 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:20:21,193 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.033s
2024-11-16 17:20:21,193 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:21,193 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:21,194 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:21,206 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 41, active threads = 0, queued tasks = 0, completed tasks = 41], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_request=0) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (op_list_files=0) (action_http_head_request=93) (stream_write_bytes=2162688) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_backwards_on_seek=0) (op_copy_from_local_file.failures=0) (store_io_retry=0) (object_put_request=66) (committer_magic_marker_put.failures=0) (op_exists.failures=0) (op_rename=0) (multipart_upload_list.failures=0) (op_xattr_list=0) (stream_write_exceptions=0) (committer_commits_created=0) (directories_deleted=0) (files_delete_rejected=0) (op_is_file.failures=0) (object_metadata_request=93) (action_file_opened=27) (multipart_instantiated=0) (audit_request_execution=388) (fake_directories_deleted=33) (object_bulk_delete_request.failures=0) (stream_read_seek_bytes_discarded=0) (committer_bytes_uploaded=0) (object_list_request=132) (stream_read_remote_stream_aborted=0) (committer_stage_file_upload.failures=0) (stream_write_block_uploads=33) (files_copied_bytes=0) (object_multipart_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=2) (op_xattr_get_named=0) (op_glob_status=0) (stream_read_version_mismatches=0) (multipart_upload_list=0) (object_put_request.failures=0) (object_delete_objects=66) (stream_read_remote_stream_aborted.failures=0) (stream_write_queue_duration.failures=0) (stream_read_fully_operations=1) (op_access.failures=0) (stream_read_total_bytes=271081) (op_is_directory.failures=0) (object_list_request.failures=0) (stream_read_remote_stream_drain=4) (op_delete=33) (op_create=33) (op_xattr_list.failures=0) (committer_stage_file_upload=0) (stream_read_close_operations=27) (multipart_upload_aborted=0) (object_put_bytes=2162688) (op_get_content_summary.failures=0) (stream_read_seek_backward_operations=0) (committer_magic_files_created=0) (audit_span_creation=129) (committer_load_single_pending_file.failures=0) (committer_materialize_file.failures=0) (committer_bytes_committed=0) (ignored_errors=0) (op_xattr_get_map=0) (object_multipart_initiated.failures=0) (op_xattr_get_map.failures=0) (stream_read_vectored_combined_ranges=30) (committer_commit_job=0) (op_is_directory=0) (stream_read_vectored_incoming_ranges=75) (stream_read_bytes_discarded_in_abort=0) (committer_tasks_completed=0) (object_put_request_completed=66) (action_http_get_request=31) (stream_read_vectored_read_bytes_discarded=30497) (stream_write_block_uploads_aborted=0) (op_list_located_status=0) (files_deleted=33) (op_abort=0) (delegation_tokens_issued=0) (op_glob_status.failures=0) (multipart_upload_part_put_bytes=0) (store_exists_probe=0) (store_exists_probe.failures=0) (committer_jobs_completed=0) (committer_commit_job.failures=0) (stream_write_total_time=0) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token.failures=0) (object_select_requests=0) (stream_read_bytes=9737) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (op_create.failures=0) (op_createfile=0) (op_get_file_status=2) (committer_load_single_pending_file=0) (audit_failure=0) (op_exists=0) (op_list_files.failures=0) (committer_tasks_failed=0) (object_continue_list_request=0) (stream_read_opened=4) (multipart_upload_part_put=0) (op_get_file_status.failures=0) (store_io_throttled=0) (stream_read_operations_incomplete=0) (stream_write_queue_duration=0) (action_http_head_request.failures=0) (stream_write_total_data=4325376) (object_copy_requests=0) (object_bulk_delete_request=66) (committer_commits_reverted=0) (audit_access_check_failure=0) (stream_read_seek_policy_changed=29) (op_rename.failures=0) (op_openfile=0) (op_xattr_get_named_map=0) (op_create_non_recursive=0) (stream_read_seek_bytes_skipped=0) (op_hflush=0) (fake_directories_created=0) (op_mkdirs.failures=0) (committer_jobs_failed=0) (op_is_file=0) (delegation_tokens_issued.failures=0) (op_list_status=0) (stream_read_operations=4) (object_multipart_aborted=0) (object_continue_list_request.failures=0) (multipart_upload_completed=0) (directories_created=33) (stream_read_exceptions=0) (files_copied=0) (stream_write_block_uploads_committed=0) (op_list_status.failures=0) (op_xattr_get_named_map.failures=0) (op_copy_from_local_file=0) (op_get_file_checksum.failures=0) (op_xattr_get_named.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (committer_commits_aborted=0) (object_multipart_initiated=0) (op_get_content_summary=0) (op_mkdirs=33) (op_access=0) (stream_read_closed=4) (op_get_delegation_token=0) (multipart_upload_started=0) (op_createfile.failures=0) (committer_commits.failures=0) (action_file_opened.failures=0) (committer_commits_completed=0) (files_created=33) (action_executor_acquired=0) (op_get_file_checksum=0) (stream_read_vectored_operations=23) (stream_aborted=0) (object_delete_request.failures=0) (stream_read_bytes_discarded_in_close=261344) (stream_read_seek_operations=0) (store_io_request=388) (committer_materialize_file=0) (op_open=27) (op_delete.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=33) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0));
minimums=((op_glob_status.failures.min=-1) (object_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=25) (op_rename.failures.min=-1) (op_xattr_get_map.min=-1) (object_list_request.min=5) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (action_http_get_request.min=17) (stream_read_remote_stream_drain.min=1) (multipart_upload_list.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.failures.min=-1) (op_create.min=6) (committer_commit_job.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.failures.min=-1) (op_get_file_status.min=4) (op_is_directory.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_glob_status.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.min=-1) (committer_magic_marker_put.min=-1) (op_list_files.min=-1) (store_exists_probe.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_head_request.min=3) (action_file_opened.failures.min=-1) (op_delete.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_access.min=-1) (op_xattr_get_named.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_bulk_delete_request.min=6) (op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.failures.min=-1) (op_create.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_list.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.min=-1) (op_access.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.min=-1) (object_delete_request.failures.min=-1) (op_get_content_summary.min=-1) (op_delete.min=23) (op_is_file.min=-1) (op_createfile.min=-1) (op_get_file_checksum.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=22) (object_multipart_initiated.failures.min=-1) (op_exists.min=-1) (committer_commit_job.failures.min=-1) (action_file_opened.min=0) (op_get_content_summary.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1));
maximums=((op_xattr_list.max=-1) (op_create.max=74) (op_is_directory.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.max=-1) (action_http_get_request.max=43) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.max=104) (action_file_opened.max=15) (object_delete_request.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.max=-1) (op_rename.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.max=-1) (object_put_request.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_delegation_token.max=-1) (object_list_request.max=210) (op_access.failures.max=-1) (op_get_content_summary.max=-1) (action_executor_acquired.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_status.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (op_is_file.max=-1) (op_get_delegation_token.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_content_summary.failures.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (op_exists.max=-1) (multipart_upload_list.max=-1) (op_access.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_is_directory.max=-1) (stream_write_queue_duration.max=-1) (object_delete_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_status.max=5) (action_http_head_request.max=19) (object_continue_list_request.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_delete.max=111) (op_create.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.max=32) (committer_load_single_pending_file.failures.max=-1) (op_mkdirs.max=346) (object_multipart_initiated.max=-1) (op_exists.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_map.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1));
means=((multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=33, sum=1558, mean=47.2121)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (action_file_opened.mean=(samples=27, sum=172, mean=6.3704)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=33, sum=1478, mean=44.7879)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=33, sum=457, mean=13.8485)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=93, sum=513, mean=5.5161)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=31, sum=682, mean=22.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=66, sum=1965, mean=29.7727)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=66, sum=792, mean=12.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=132, sum=1466, mean=11.1061)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:21,207 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:21,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,207 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,208 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a816350f-f985-4e5f-8ca8-679638bf3212-00000163 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000163&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=216&ts=1731777621207
2024-11-16 17:20:21,214 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:21,214 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,214 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,214 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,214 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,214 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a816350f-f985-4e5f-8ca8-679638bf3212-00000163 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000163&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=216&ts=1731777621207
2024-11-16 17:20:21,217 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,217 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:21,217 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:21,218 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:21,218 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a816350f-f985-4e5f-8ca8-679638bf3212-00000163 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000163&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=216&ts=1731777621207
2024-11-16 17:20:21,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:21,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:21,231 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:20:21,231 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:21,232 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,232 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,232 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,233 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,233 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a816350f-f985-4e5f-8ca8-679638bf3212-00000164 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000164&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=216&ts=1731777621232
2024-11-16 17:20:21,244 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:21,244 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,244 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:21,245 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1928420142224760831.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:21,246 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1928420142224760831.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (multipart_upload_completed=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (op_abort=0) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (object_multipart_initiated=0) (object_put_request=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1928420142224760831.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,246 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,246 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:21,246 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1928420142224760831.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:21,246 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:21,247 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:21,248 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:21,248 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:21,248 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] a816350f-f985-4e5f-8ca8-679638bf3212-00000164 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000164&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=108&ts=1731777621232
2024-11-16 17:20:21,277 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:21,277 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:21,277 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.030s
2024-11-16 17:20:21,277 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1928420142224760831.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:21,278 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1928420142224760831.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,278 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1928420142224760831.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,278 [s3a-transfer-obs-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:21,278 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,280 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_hsync=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (op_abort=0) (object_put_request=1) (op_hflush=0) (stream_write_total_time=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=29) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=29) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=29, mean=29.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:21,281 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:21,286 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,286 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,286 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:21,286 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [217] a816350f-f985-4e5f-8ca8-679638bf3212-00000165 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000165/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000165&t0=217&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=217&ts=1731777621286
2024-11-16 17:20:21,295 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:21,295 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:21,295 [s3a-transfer-obs-bucket-unbounded-pool2-t42] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,295 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:20:21,295 [JUnit-testEOFRanges[Buffer type : array]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,296 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (stream_read_bytes=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_total_bytes=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (stream_read_close_operations=1) (stream_read_block_read=0) (stream_read_seek_backward_operations=0) (action_http_get_request=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_closed=0) (stream_read_vectored_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read=0) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=9) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_file_opened.max=9) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=9, mean=9.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:21,298 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:21,299 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,299 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,300 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a816350f-f985-4e5f-8ca8-679638bf3212-00000166 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000166&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=216&ts=1731777621298
2024-11-16 17:20:21,304 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,305 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,305 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a816350f-f985-4e5f-8ca8-679638bf3212-00000166 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000166&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=216&ts=1731777621298
2024-11-16 17:20:21,316 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:21,317 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:21,317 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:21,317 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:21,317 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:21,317 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:21,317 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:21,317 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:21,318 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:21,318 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:21,318 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:21,318 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:21,319 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:21,319 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:21,320 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,320 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a816350f-f985-4e5f-8ca8-679638bf3212-00000166 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000166&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=218&ts=1731777621298
2024-11-16 17:20:21,332 [s3a-transfer-obs-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:21,333 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:20:21,333 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:21,333 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:21,333 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:21,333 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777621273; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:21,333 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:21,333 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:21,333 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:21,334 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:21,334 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,334 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a816350f-f985-4e5f-8ca8-679638bf3212-00000166 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000166&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=110&ts=1731777621298
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,345 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a816350f-f985-4e5f-8ca8-679638bf3212-00000166 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000166/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000166&t0=216&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=110&ts=1731777621298
2024-11-16 17:20:21,362 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:20:21,363 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:20:21,363 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:20:21,364 [s3a-transfer-obs-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:20:21,364 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.030s
2024-11-16 17:20:21,364 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.046s
2024-11-16 17:20:21,364 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:21,364 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:21,366 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:21,381 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 43, active threads = 0, queued tasks = 0, completed tasks = 43], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_combined_ranges=30) (action_http_get_request.failures=0) (object_put_request_completed=68) (multipart_upload_list=0) (op_xattr_get_map=0) (ignored_errors=0) (stream_read_remote_stream_drain=4) (op_get_file_status=2) (stream_write_block_uploads_committed=0) (object_delete_request=0) (op_list_located_status=0) (stream_read_exceptions=0) (op_exists=0) (op_hflush=0) (stream_write_total_time=0) (stream_read_seek_backward_operations=0) (op_createfile.failures=0) (object_continue_list_request.failures=0) (op_createfile=0) (stream_write_block_uploads=34) (committer_magic_marker_put.failures=0) (op_get_delegation_token=0) (op_is_file=0) (fake_directories_created=0) (stream_read_vectored_operations=23) (committer_commits_completed=0) (op_xattr_get_named_map=0) (committer_jobs_completed=0) (store_io_request=399) (stream_read_bytes=9737) (stream_write_queue_duration=0) (op_create.failures=0) (object_multipart_initiated.failures=0) (op_list_status=0) (object_list_request=136) (op_mkdirs.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_aborted=0) (op_xattr_get_named.failures=0) (op_get_file_checksum.failures=0) (audit_access_check_failure=0) (committer_bytes_committed=0) (op_glob_status.failures=0) (object_delete_request.failures=0) (op_open=28) (store_io_throttled=0) (action_http_head_request.failures=0) (op_copy_from_local_file.failures=0) (multipart_upload_part_put=0) (files_copied=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_created=0) (op_copy_from_local_file=0) (multipart_instantiated=0) (stream_read_vectored_read_bytes_discarded=30497) (stream_write_block_uploads_aborted=0) (stream_read_version_mismatches=0) (object_delete_objects=68) (op_create=34) (stream_write_bytes=2228224) (stream_write_exceptions=0) (op_xattr_list=0) (delegation_tokens_issued.failures=0) (op_mkdirs=34) (op_create_non_recursive=0) (stream_write_exceptions_completing_upload=0) (committer_commits.failures=0) (committer_tasks_failed=0) (stream_write_total_data=4456448) (files_copied_bytes=0) (committer_magic_files_created=0) (stream_aborted=0) (committer_bytes_uploaded=0) (committer_load_single_pending_file.failures=0) (action_executor_acquired=0) (multipart_upload_started=0) (fake_directories_deleted=34) (multipart_upload_part_put_bytes=0) (op_openfile=0) (stream_read_seek_policy_changed=30) (stream_read_vectored_incoming_ranges=75) (object_multipart_initiated=0) (store_exists_probe.failures=0) (stream_read_seek_forward_operations=0) (op_xattr_get_map.failures=0) (stream_read_unbuffered=2) (committer_stage_file_upload.failures=0) (committer_commit_job=0) (op_delete.failures=0) (committer_materialize_file.failures=0) (store_io_retry=0) (committer_magic_marker_put=0) (op_abort=0) (committer_commits_aborted=0) (op_get_content_summary.failures=0) (object_bulk_delete_request.failures=0) (stream_read_total_bytes=271081) (stream_read_remote_stream_aborted=0) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (directories_deleted=0) (object_multipart_aborted=0) (op_list_files.failures=0) (multipart_upload_completed=0) (store_exists_probe=0) (committer_stage_file_upload=0) (action_http_get_request=31) (object_metadata_request=96) (files_delete_rejected=0) (op_exists.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_is_file.failures=0) (committer_tasks_completed=0) (stream_read_operations=4) (op_access=0) (committer_load_single_pending_file=0) (stream_read_seek_operations=0) (op_is_directory.failures=0) (object_put_request.failures=0) (op_hsync=0) (op_get_file_status.failures=0) (object_copy_requests=0) (stream_write_queue_duration.failures=0) (stream_read_bytes_discarded_in_close=261344) (object_list_request.failures=0) (committer_commit_job.failures=0) (op_xattr_get_named=0) (op_is_directory=0) (object_put_request=68) (files_created=34) (action_http_head_request=96) (committer_commits_reverted=0) (op_get_content_summary=0) (delegation_tokens_issued=0) (stream_read_bytes_discarded_in_abort=0) (audit_request_execution=399) (stream_read_seek_bytes_discarded=0) (op_glob_status=0) (object_multipart_aborted.failures=0) (directories_created=34) (stream_read_close_operations=28) (object_put_bytes=2228224) (op_delete=34) (object_select_requests=0) (object_bulk_delete_request=68) (files_deleted=34) (committer_jobs_failed=0) (stream_read_fully_operations=1) (action_file_opened=28) (action_file_opened.failures=0) (committer_materialize_file=0) (op_get_file_checksum=0) (op_rename=0) (op_list_status.failures=0) (audit_span_creation=133) (op_access.failures=0) (audit_failure=0) (op_xattr_list.failures=0) (op_list_files=0) (op_rename.failures=0) (stream_read_opened=4) (op_xattr_get_named_map.failures=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_list.failures=0) (op_abort.failures=0) (stream_read_closed=4));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=34) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((committer_commit_job.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (action_http_get_request.min=17) (op_create.min=6) (committer_load_single_pending_file.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.min=-1) (op_delete.min=23) (multipart_upload_list.failures.min=-1) (op_get_content_summary.min=-1) (op_is_directory.min=-1) (op_mkdirs.failures.min=-1) (object_put_request.min=29) (action_executor_acquired.failures.min=-1) (op_createfile.min=-1) (op_list_status.failures.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_list_files.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.failures.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (op_abort.min=-1) (object_bulk_delete_request.min=6) (committer_magic_marker_put.failures.min=-1) (op_access.min=-1) (object_delete_request.min=-1) (object_list_request.min=5) (op_exists.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_exists.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_commit_job.failures.min=-1) (op_glob_status.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (op_is_file.min=-1) (op_xattr_get_named.min=-1) (store_exists_probe.min=-1) (op_abort.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_stage_file_upload.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.min=4) (action_http_head_request.min=3) (op_mkdirs.min=22) (op_createfile.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=9) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_materialize_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_list.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (store_exists_probe.failures.min=-1));
maximums=((op_is_directory.failures.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.max=-1) (op_xattr_list.max=-1) (object_multipart_aborted.max=-1) (op_create.failures.max=-1) (op_create.max=74) (action_http_get_request.max=43) (op_rename.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_map.failures.max=-1) (object_delete_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.max=111) (op_is_file.max=-1) (op_list_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.max=5) (op_abort.max=-1) (op_createfile.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.max=-1) (op_exists.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.failures.max=-1) (action_file_opened.max=15) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_put_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.failures.max=-1) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.max=-1) (op_rename.failures.max=-1) (op_createfile.failures.max=-1) (op_list_files.max=-1) (committer_materialize_file.max=-1) (delegation_tokens_issued.max=-1) (op_exists.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.max=-1) (action_file_opened.failures.max=-1) (op_mkdirs.failures.max=-1) (object_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_commit_job.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=104) (stream_read_remote_stream_drain.max=1) (object_list_request.max=210) (store_exists_probe.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.max=346) (action_executor_acquired.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.max=32) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.max=19) (committer_load_single_pending_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_list.max=-1));
means=((op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=136, sum=1506, mean=11.0735)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=4, mean=1.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=68, sum=2007, mean=29.5147)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=96, sum=530, mean=5.5208)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=34, sum=1525, mean=44.8529)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=31, sum=682, mean=22.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=34, sum=470, mean=13.8235)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=34, sum=1583, mean=46.5588)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=28, sum=181, mean=6.4643)) (object_bulk_delete_request.mean=(samples=68, sum=820, mean=12.0588)) (op_access.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:21,382 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:21,382 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,382 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,382 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,382 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,382 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000167 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000167&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621381
2024-11-16 17:20:21,388 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:21,388 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,388 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,388 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,388 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,388 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000167 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000167&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621381
2024-11-16 17:20:21,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,391 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:21,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:21,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:21,392 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000167 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000167&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621381
2024-11-16 17:20:21,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:21,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:21,402 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:20:21,402 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:21,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,402 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,402 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000168 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000168&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621402
2024-11-16 17:20:21,407 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:21,407 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,407 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:21,408 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16352349051058569954.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:21,408 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16352349051058569954.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (object_put_request=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1));
maximums=((multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16352349051058569954.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,409 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,409 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:21,409 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16352349051058569954.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:21,409 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:21,409 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:21,409 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:21,409 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:21,409 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] a816350f-f985-4e5f-8ca8-679638bf3212-00000168 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000168&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=112&ts=1731777621402
2024-11-16 17:20:21,431 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:21,431 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:21,431 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.022s
2024-11-16 17:20:21,431 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16352349051058569954.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:21,431 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16352349051058569954.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,431 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16352349051058569954.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,431 [s3a-transfer-obs-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:21,432 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,433 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (op_abort=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (object_put_request.failures=0) (op_abort.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_put_request=1) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (op_hsync=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=22) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=22) (object_multipart_aborted.max=-1));
means=((object_put_request.mean=(samples=1, sum=22, mean=22.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:21,433 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:21,434 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,434 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,434 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:21,434 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000169 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000169&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621434
2024-11-16 17:20:21,438 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:21,438 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:21,438 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,439 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:21,439 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:20:21,439 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,439 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-65535&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000169&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621434
2024-11-16 17:20:21,451 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:20:21,451 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:21,451 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:21,451 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:21,451 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:21,451 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:21,452 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:21,452 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,452 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,452 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:21,452 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a816350f-f985-4e5f-8ca8-679638bf3212-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000169&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=114&ts=1731777621434
2024-11-16 17:20:21,463 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:20:21,463 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:21,463 [s3a-transfer-obs-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,464 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:21,464 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7441 bytes
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8743 bytes
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:20:21,465 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:21,466 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=1) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (stream_read_seek_operations=0) (stream_read_operations_incomplete=0) (action_http_get_request=2) (stream_read_bytes_discarded_in_close=65336) (stream_read_vectored_incoming_ranges=2) (stream_read_close_operations=1) (stream_read_exceptions=0) (stream_read_operations=1) (stream_read_block_acquire_read=0) (stream_read_seek_policy_changed=1) (stream_read_closed=1) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=65686) (action_file_opened.failures=0) (stream_read_vectored_operations=1) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=1) (stream_read_bytes=350) (stream_read_vectored_read_bytes_discarded=10) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_unbuffered=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=2) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=11) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_http_get_request.max=12) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=2) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=23, mean=11.5000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=2, mean=2.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:21,467 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:21,467 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,467 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,467 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000170 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000170&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621467
2024-11-16 17:20:21,471 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,471 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,471 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a816350f-f985-4e5f-8ca8-679638bf3212-00000170 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000170&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=219&ts=1731777621467
2024-11-16 17:20:21,477 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:21,477 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:21,477 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:21,477 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:21,477 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:21,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:21,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:21,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:21,477 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:21,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:21,477 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:21,477 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:21,478 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:21,478 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:21,478 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,478 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [220] a816350f-f985-4e5f-8ca8-679638bf3212-00000170 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000170&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=220&ts=1731777621467
2024-11-16 17:20:21,488 [s3a-transfer-obs-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:21,488 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:20:21,488 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:21,489 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:21,489 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:21,489 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777621428; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:21,489 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:21,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:21,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:21,489 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:21,489 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:21,489 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:21,489 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:21,489 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:21,489 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,490 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,490 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:21,490 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,490 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a816350f-f985-4e5f-8ca8-679638bf3212-00000170 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000170&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=113&ts=1731777621467
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,498 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a816350f-f985-4e5f-8ca8-679638bf3212-00000170 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000170/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000170&t0=219&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=113&ts=1731777621467
2024-11-16 17:20:21,504 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:20:21,504 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:20:21,504 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.006s
2024-11-16 17:20:21,504 [s3a-transfer-obs-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:20:21,504 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:20:21,505 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:20:21,505 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:21,505 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:21,506 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:21,516 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 44, active threads = 0, queued tasks = 0, completed tasks = 44], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (committer_commits_completed=0) (action_file_opened=29) (committer_materialize_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_exists.failures=0) (object_put_bytes=2293760) (committer_jobs_completed=0) (stream_read_vectored_combined_ranges=31) (multipart_upload_part_put_bytes=0) (object_list_request=140) (op_copy_from_local_file.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=5) (object_copy_requests=0) (op_create_non_recursive=0) (action_http_get_request=33) (action_http_get_request.failures=0) (op_list_files=0) (fake_directories_deleted=35) (directories_created=35) (op_get_delegation_token=0) (committer_commits_reverted=0) (stream_read_remote_stream_aborted=0) (op_access.failures=0) (object_put_request.failures=0) (stream_read_unbuffered=2) (stream_write_queue_duration.failures=0) (op_get_file_status.failures=0) (object_delete_request.failures=0) (stream_read_opened=5) (op_abort.failures=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_closed=5) (object_put_request_completed=70) (multipart_instantiated=0) (op_rename.failures=0) (op_get_file_checksum.failures=0) (object_put_request=70) (committer_commits_aborted=0) (store_exists_probe.failures=0) (action_http_head_request.failures=0) (stream_aborted=0) (stream_read_version_mismatches=0) (op_is_directory.failures=0) (op_get_file_checksum=0) (committer_magic_marker_put=0) (stream_read_seek_bytes_discarded=0) (object_multipart_initiated.failures=0) (delegation_tokens_issued=0) (committer_magic_files_created=0) (object_continue_list_request=0) (op_mkdirs.failures=0) (delegation_tokens_issued.failures=0) (stream_read_remote_stream_drain.failures=0) (store_io_retry=0) (object_select_requests=0) (stream_read_operations_incomplete=0) (stream_read_seek_policy_changed=31) (committer_bytes_committed=0) (stream_write_bytes=2293760) (stream_read_fully_operations=1) (fake_directories_created=0) (object_continue_list_request.failures=0) (committer_materialize_file=0) (op_get_content_summary=0) (op_xattr_get_named.failures=0) (audit_request_execution=412) (files_delete_rejected=0) (op_hsync=0) (op_xattr_get_named=0) (audit_failure=0) (object_multipart_aborted=0) (multipart_upload_list.failures=0) (action_http_head_request=99) (committer_tasks_failed=0) (op_list_located_status=0) (op_get_file_status=2) (op_open=29) (op_createfile=0) (multipart_upload_started=0) (committer_load_single_pending_file.failures=0) (op_xattr_list.failures=0) (committer_bytes_uploaded=0) (op_xattr_list=0) (committer_commits_created=0) (committer_commit_job=0) (object_list_request.failures=0) (op_is_file.failures=0) (op_list_status=0) (files_copied_bytes=0) (op_access=0) (op_openfile=0) (audit_span_creation=137) (action_executor_acquired.failures=0) (stream_write_total_data=4587520) (committer_magic_marker_put.failures=0) (op_is_directory=0) (files_created=35) (stream_read_remote_stream_drain=5) (op_createfile.failures=0) (stream_read_seek_backward_operations=0) (files_deleted=35) (op_get_content_summary.failures=0) (stream_read_bytes_discarded_in_close=326680) (stream_read_bytes_discarded_in_abort=0) (stream_write_block_uploads_committed=0) (op_list_files.failures=0) (stream_read_vectored_operations=24) (stream_read_vectored_incoming_ranges=77) (committer_commits.failures=0) (op_rename=0) (stream_write_block_uploads=35) (committer_stage_file_upload=0) (op_hflush=0) (multipart_upload_aborted=0) (ignored_errors=0) (object_multipart_initiated=0) (object_bulk_delete_request.failures=0) (committer_tasks_completed=0) (store_io_throttled=0) (op_xattr_get_map=0) (committer_jobs_failed=0) (op_create.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (op_mkdirs=35) (object_multipart_aborted.failures=0) (op_glob_status=0) (files_copied=0) (multipart_upload_part_put=0) (op_exists=0) (op_delete=35) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_is_file=0) (object_metadata_request=99) (store_io_request=412) (audit_access_check_failure=0) (multipart_upload_completed=0) (op_get_delegation_token.failures=0) (committer_stage_file_upload.failures=0) (op_xattr_get_map.failures=0) (op_create=35) (stream_read_bytes=10087) (stream_read_vectored_read_bytes_discarded=30507) (object_delete_objects=70) (op_xattr_get_named_map.failures=0) (store_exists_probe=0) (stream_read_close_operations=29) (op_copy_from_local_file=0) (committer_load_single_pending_file=0) (object_bulk_delete_request=70) (stream_write_block_uploads_aborted=0) (directories_deleted=0) (op_glob_status.failures=0) (multipart_upload_list=0) (stream_read_total_bytes=336767) (op_delete.failures=0) (object_delete_request=0) (stream_write_total_time=0) (op_list_status.failures=0) (op_abort=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named_map=0) (committer_commit_job.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=35) (object_put_request_active=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((committer_commit_job.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_rename.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_materialize_file.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=20) (op_get_file_checksum.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_head_request.min=3) (op_is_directory.min=-1) (op_xattr_get_named.failures.min=-1) (action_file_opened.min=4) (op_is_file.min=-1) (op_xattr_list.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.min=-1) (op_exists.failures.min=-1) (op_is_directory.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.min=-1) (object_delete_request.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_drain.min=2) (op_delete.min=23) (committer_load_single_pending_file.failures.min=-1) (op_create.min=6) (op_xattr_get_named_map.min=-1) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.failures.min=-1) (op_abort.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_rename.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.min=-1) (action_http_get_request.min=11) (committer_magic_marker_put.failures.min=-1) (action_http_get_request.failures.min=-1) (object_bulk_delete_request.min=6) (op_list_files.failures.min=-1) (object_list_request.min=5) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.failures.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.min=4) (store_exists_probe.min=-1) (object_continue_list_request.min=-1) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_createfile.failures.min=-1) (committer_stage_file_upload.min=-1) (op_access.failures.min=-1) (multipart_upload_list.min=-1) (op_abort.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.min=22) (op_get_content_summary.min=-1) (op_get_content_summary.failures.min=-1) (committer_commit_job.min=-1) (op_is_file.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.failures.min=-1) (op_delete.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_abort.max=-1) (delegation_tokens_issued.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (committer_stage_file_upload.max=-1) (op_rename.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=2) (op_access.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_status.max=5) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (op_delete.max=111) (op_list_files.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.max=210) (op_mkdirs.failures.max=-1) (op_xattr_list.max=-1) (object_put_request.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.failures.max=-1) (op_copy_from_local_file.max=-1) (op_rename.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.failures.max=-1) (action_http_get_request.max=43) (action_file_opened.max=15) (op_mkdirs.max=346) (committer_load_single_pending_file.max=-1) (multipart_upload_list.failures.max=-1) (action_http_head_request.max=19) (op_xattr_get_named_map.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.failures.max=-1) (object_continue_list_request.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_create.failures.max=-1) (op_exists.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_initiated.max=-1) (op_is_file.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_content_summary.max=-1) (op_list_files.failures.max=-1) (multipart_upload_list.max=-1) (delegation_tokens_issued.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.max=32) (op_access.failures.max=-1) (op_create.max=74) (action_file_opened.failures.max=-1) (op_list_status.failures.max=-1) (op_is_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_createfile.failures.max=-1) (op_exists.failures.max=-1) (op_is_directory.max=-1) (op_createfile.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_put_request.max=104) (op_glob_status.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=70, sum=834, mean=11.9143)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=29, sum=185, mean=6.3793)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=99, sum=541, mean=5.4646)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=35, sum=476, mean=13.6000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=35, sum=1553, mean=44.3714)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=33, sum=705, mean=21.3636)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=6, mean=1.2000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=140, sum=1533, mean=10.9500)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=35, sum=1603, mean=45.8000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=70, sum=2039, mean=29.1286)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:21,516 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:21,516 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,517 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,517 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a816350f-f985-4e5f-8ca8-679638bf3212-00000171 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000171&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=221&ts=1731777621516
2024-11-16 17:20:21,522 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:21,522 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,522 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,522 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,522 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,522 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a816350f-f985-4e5f-8ca8-679638bf3212-00000171 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000171&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=221&ts=1731777621516
2024-11-16 17:20:21,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,525 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:21,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:21,525 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:21,525 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a816350f-f985-4e5f-8ca8-679638bf3212-00000171 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000171&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=221&ts=1731777621516
2024-11-16 17:20:21,537 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:21,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:21,538 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:20:21,538 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:21,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,538 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,538 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a816350f-f985-4e5f-8ca8-679638bf3212-00000172 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000172&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=221&ts=1731777621538
2024-11-16 17:20:21,543 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:21,543 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,543 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:21,544 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17406831259640113184.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:21,545 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17406831259640113184.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired.failures=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (object_put_request=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (op_abort=0) (op_abort.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17406831259640113184.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,545 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,545 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:21,545 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17406831259640113184.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:21,545 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:21,545 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:21,545 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:21,545 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:21,546 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a816350f-f985-4e5f-8ca8-679638bf3212-00000172 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000172&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=116&ts=1731777621538
2024-11-16 17:20:21,573 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:21,573 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:21,573 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:20:21,573 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17406831259640113184.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:21,573 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17406831259640113184.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,573 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17406831259640113184.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,574 [s3a-transfer-obs-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:21,574 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,574 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (stream_write_total_time=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_initiated=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_abort.failures=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=28));
maximums=((op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=28));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=28, mean=28.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:21,575 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:21,575 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,575 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,576 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:21,576 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a816350f-f985-4e5f-8ca8-679638bf3212-00000173 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000173&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=221&ts=1731777621575
2024-11-16 17:20:21,579 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:21,580 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:21,580 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,580 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:20:21,580 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:21,580 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:20:21,580 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,580 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,580 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:21,580 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] a816350f-f985-4e5f-8ca8-679638bf3212-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-4200&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000173&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=118&ts=1731777621575
2024-11-16 17:20:21,581 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:20:21,581 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,581 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,581 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:21,581 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] a816350f-f985-4e5f-8ca8-679638bf3212-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=16101-16200&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000173&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=120&ts=1731777621575
2024-11-16 17:20:21,609 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:20:21,610 [s3a-transfer-obs-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,611 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.031s
2024-11-16 17:20:21,612 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:20:21,612 [s3a-transfer-obs-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,613 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_opened=0) (stream_read_total_bytes=300) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=1) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=1) (action_file_opened.failures=0) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened=1) (action_http_get_request=2) (stream_read_remote_stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations=0) (stream_read_vectored_incoming_ranges=3) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=300) (stream_read_vectored_combined_ranges=2) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=5) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=28));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=32) (stream_read_block_read.failures.max=-1) (action_file_opened.max=5) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_http_get_request.mean=(samples=2, sum=60, mean=30.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:21,614 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:21,614 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,614 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,615 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a816350f-f985-4e5f-8ca8-679638bf3212-00000174 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000174&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=221&ts=1731777621614
2024-11-16 17:20:21,619 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,619 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,619 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a816350f-f985-4e5f-8ca8-679638bf3212-00000174 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000174&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=221&ts=1731777621614
2024-11-16 17:20:21,630 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:21,630 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:21,631 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:21,631 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:21,631 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:21,631 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:21,631 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:21,631 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:21,631 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:21,632 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:21,632 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:21,632 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:21,633 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:21,633 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:21,633 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,633 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [222] a816350f-f985-4e5f-8ca8-679638bf3212-00000174 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000174&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=222&ts=1731777621614
2024-11-16 17:20:21,643 [s3a-transfer-obs-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:21,643 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:20:21,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:21,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:21,643 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:21,644 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777621570; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:21,644 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:21,644 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:21,644 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:21,644 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,645 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a816350f-f985-4e5f-8ca8-679638bf3212-00000174 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000174&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=122&ts=1731777621614
2024-11-16 17:20:21,646 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,657 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a816350f-f985-4e5f-8ca8-679638bf3212-00000174 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000174/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000174&t0=221&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=122&ts=1731777621614
2024-11-16 17:20:21,669 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:20:21,669 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:20:21,669 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:20:21,669 [s3a-transfer-obs-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:20:21,669 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:20:21,669 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.038s
2024-11-16 17:20:21,669 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:21,669 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:21,674 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:21,691 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 45, active threads = 0, queued tasks = 0, completed tasks = 45], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_list=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=33) (audit_access_check_failure=0) (committer_commit_job.failures=0) (action_file_opened=30) (op_list_status=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named=0) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (fake_directories_deleted=36) (op_hflush=0) (stream_read_remote_stream_aborted.failures=0) (files_delete_rejected=0) (op_glob_status=0) (action_executor_acquired.failures=0) (object_copy_requests=0) (object_put_request=72) (committer_bytes_committed=0) (committer_magic_marker_put=0) (op_get_content_summary=0) (op_openfile=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_incoming_ranges=80) (committer_load_single_pending_file=0) (stream_write_block_uploads_committed=0) (object_continue_list_request.failures=0) (op_xattr_get_named.failures=0) (files_copied=0) (stream_read_total_bytes=337067) (op_exists.failures=0) (audit_span_creation=141) (op_get_content_summary.failures=0) (object_multipart_aborted.failures=0) (op_is_directory.failures=0) (fake_directories_created=0) (stream_read_fully_operations=1) (op_mkdirs=36) (multipart_upload_abort_under_path_invoked=0) (store_io_retry=0) (committer_stage_file_upload=0) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token=0) (op_glob_status.failures=0) (stream_read_operations=5) (stream_write_bytes=2359296) (object_delete_request=0) (op_is_file.failures=0) (multipart_upload_part_put_bytes=0) (committer_jobs_completed=0) (stream_read_bytes_discarded_in_close=326680) (stream_aborted=0) (stream_read_unbuffered=2) (action_file_opened.failures=0) (action_http_get_request.failures=0) (committer_materialize_file=0) (store_io_throttled=0) (object_bulk_delete_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_block_uploads=36) (stream_read_seek_policy_changed=32) (action_http_head_request.failures=0) (op_list_located_status=0) (stream_write_block_uploads_aborted=0) (files_copied_bytes=0) (files_created=36) (stream_read_opened=5) (stream_read_vectored_operations=25) (object_multipart_initiated.failures=0) (stream_read_operations_incomplete=0) (op_rename=0) (action_http_get_request=35) (op_is_directory=0) (delegation_tokens_issued=0) (committer_tasks_failed=0) (op_mkdirs.failures=0) (multipart_upload_list=0) (multipart_upload_part_put=0) (op_get_file_checksum.failures=0) (audit_request_execution=425) (op_create_non_recursive=0) (op_delete=36) (object_put_bytes=2359296) (committer_commit_job=0) (object_multipart_aborted=0) (op_delete.failures=0) (op_get_file_status.failures=0) (op_get_file_status=2) (object_bulk_delete_request=72) (op_copy_from_local_file.failures=0) (op_get_delegation_token.failures=0) (op_create.failures=0) (stream_write_queue_duration.failures=0) (committer_stage_file_upload.failures=0) (stream_read_closed=5) (object_delete_objects=72) (op_rename.failures=0) (multipart_instantiated=0) (object_put_request_completed=72) (audit_failure=0) (op_exists=0) (stream_write_total_time=0) (stream_read_bytes_discarded_in_abort=0) (committer_commits_reverted=0) (stream_write_queue_duration=0) (op_list_files=0) (stream_read_close_operations=30) (committer_materialize_file.failures=0) (op_createfile.failures=0) (object_delete_request.failures=0) (stream_read_seek_operations=0) (object_metadata_request=102) (op_abort=0) (stream_write_exceptions=0) (stream_read_seek_backward_operations=0) (object_list_request.failures=0) (op_xattr_get_named_map=0) (object_continue_list_request=0) (committer_bytes_uploaded=0) (op_createfile=0) (directories_deleted=0) (stream_read_seek_forward_operations=0) (committer_commits.failures=0) (op_list_files.failures=0) (op_xattr_get_map.failures=0) (action_executor_acquired=0) (committer_jobs_failed=0) (committer_commits_created=0) (multipart_upload_aborted=0) (action_http_head_request=102) (store_exists_probe=0) (object_multipart_initiated=0) (op_access.failures=0) (op_list_status.failures=0) (op_get_file_checksum=0) (op_abort.failures=0) (op_copy_from_local_file=0) (stream_write_total_data=4718592) (directories_created=36) (store_exists_probe.failures=0) (ignored_errors=0) (op_create=36) (stream_read_vectored_read_bytes_discarded=34508) (committer_commits_completed=0) (multipart_upload_started=0) (multipart_upload_list.failures=0) (store_io_request=425) (committer_magic_marker_put.failures=0) (op_access=0) (committer_load_single_pending_file.failures=0) (committer_tasks_completed=0) (op_xattr_get_map=0) (op_is_file=0) (delegation_tokens_issued.failures=0) (op_hsync=0) (committer_commits_aborted=0) (object_put_request.failures=0) (stream_read_bytes=10387) (stream_read_seek_bytes_discarded=0) (object_select_requests=0) (committer_magic_files_created=0) (files_deleted=36) (object_list_request=144) (stream_read_remote_stream_drain=5) (stream_read_seek_bytes_skipped=0) (multipart_upload_completed=0) (op_xattr_list.failures=0) (op_open=30));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=36) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((committer_stage_file_upload.failures.min=-1) (object_put_request.min=28) (op_xattr_list.min=-1) (object_delete_request.min=-1) (action_http_head_request.min=3) (action_http_get_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.min=5) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.failures.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_access.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.failures.min=-1) (op_is_directory.min=-1) (action_file_opened.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.min=-1) (op_get_file_status.min=4) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.min=-1) (op_exists.failures.min=-1) (store_exists_probe.min=-1) (object_bulk_delete_request.min=6) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=5) (op_abort.min=-1) (op_mkdirs.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.min=-1) (op_create.min=6) (committer_materialize_file.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.min=-1) (op_copy_from_local_file.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_files.min=-1) (multipart_upload_list.min=-1) (committer_commit_job.min=-1) (action_http_get_request.min=28) (op_is_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_rename.min=-1) (op_rename.failures.min=-1) (op_mkdirs.min=20) (committer_commit_job.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.min=2) (op_get_content_summary.failures.min=-1) (op_list_status.min=-1) (op_glob_status.min=-1) (op_delete.failures.min=-1) (op_delete.min=23) (op_copy_from_local_file.min=-1) (op_access.failures.min=-1) (action_executor_acquired.min=-1) (op_exists.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_delete_request.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named_map.failures.min=-1));
maximums=((stream_write_queue_duration.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.max=-1) (action_executor_acquired.failures.max=-1) (op_exists.max=-1) (op_xattr_list.failures.max=-1) (op_access.max=-1) (op_is_directory.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.max=-1) (op_rename.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.max=-1) (op_mkdirs.max=346) (op_glob_status.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.max=-1) (op_createfile.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_files.max=-1) (op_abort.failures.max=-1) (op_createfile.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.max=-1) (delegation_tokens_issued.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=15) (op_is_file.failures.max=-1) (action_http_get_request.max=43) (stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_file.max=-1) (committer_materialize_file.max=-1) (op_copy_from_local_file.failures.max=-1) (object_put_request.max=104) (object_continue_list_request.max=-1) (multipart_upload_list.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.max=210) (op_get_file_status.failures.max=-1) (op_get_file_status.max=5) (stream_read_remote_stream_aborted.max=-1) (op_exists.failures.max=-1) (op_create.max=74) (object_delete_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_delete.failures.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.max=32) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_delete.max=111) (op_xattr_get_named_map.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_head_request.max=19) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=2) (op_list_status.failures.max=-1));
means=((multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=36, sum=482, mean=13.3889)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=72, sum=2079, mean=28.8750)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=144, sum=1564, mean=10.8611)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=36, sum=1625, mean=45.1389)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=36, sum=1591, mean=44.1944)) (action_file_opened.mean=(samples=30, sum=190, mean=6.3333)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=35, sum=765, mean=21.8571)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=102, sum=552, mean=5.4118)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=72, sum=857, mean=11.9028)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=6, mean=1.2000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:21,692 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:21,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,693 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,694 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a816350f-f985-4e5f-8ca8-679638bf3212-00000175 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000175&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=223&ts=1731777621691
2024-11-16 17:20:21,700 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:21,700 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,701 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,701 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,702 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,702 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a816350f-f985-4e5f-8ca8-679638bf3212-00000175 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000175&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=223&ts=1731777621691
2024-11-16 17:20:21,707 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,707 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:21,707 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:21,708 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:21,708 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a816350f-f985-4e5f-8ca8-679638bf3212-00000175 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000175&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=223&ts=1731777621691
2024-11-16 17:20:21,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:21,731 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:21,731 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:20:21,731 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:21,731 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,732 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,732 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a816350f-f985-4e5f-8ca8-679638bf3212-00000176 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000176&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=223&ts=1731777621731
2024-11-16 17:20:21,740 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:21,741 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,741 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:21,741 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2470068437696562684.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:21,753 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2470068437696562684.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_put_request=0) (object_multipart_aborted.failures=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_total_data=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (object_put_request.failures=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2470068437696562684.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,753 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,753 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:21,754 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2470068437696562684.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:21,754 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:21,754 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:21,754 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:21,754 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:21,755 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] a816350f-f985-4e5f-8ca8-679638bf3212-00000176 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000176&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=123&ts=1731777621731
2024-11-16 17:20:21,782 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:21,783 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:21,783 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:20:21,783 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2470068437696562684.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:21,783 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2470068437696562684.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,783 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2470068437696562684.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,783 [s3a-transfer-obs-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:21,784 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,784 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (stream_write_total_data=65536) (stream_write_total_time=0) (op_abort.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (op_abort=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=28) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_put_request.max=28) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=28, mean=28.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:21,784 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:21,785 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,785 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,785 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:21,785 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a816350f-f985-4e5f-8ca8-679638bf3212-00000177 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000177/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000177&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=223&ts=1731777621785
2024-11-16 17:20:21,793 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:21,793 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:21,793 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,794 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_block_read=0) (stream_read_version_mismatches=0) (action_executor_acquired.failures=0) (stream_read_unbuffered=0) (stream_read_operations_incomplete=0) (stream_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_opened=0) (stream_read_total_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_fully_operations=0) (action_http_get_request=0) (action_file_opened=1) (stream_read_vectored_incoming_ranges=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (action_file_opened.min=8) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=8) (action_executor_acquired.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:21,794 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:21,794 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,794 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,795 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a816350f-f985-4e5f-8ca8-679638bf3212-00000178 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000178&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=223&ts=1731777621794
2024-11-16 17:20:21,803 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,803 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,803 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a816350f-f985-4e5f-8ca8-679638bf3212-00000178 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000178&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=223&ts=1731777621794
2024-11-16 17:20:21,810 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:21,810 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:21,811 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:21,811 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:21,811 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:21,811 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:21,811 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:21,811 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:21,811 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:21,811 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:21,811 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:21,811 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:21,812 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:21,812 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:21,812 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,812 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a816350f-f985-4e5f-8ca8-679638bf3212-00000178 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000178&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=224&ts=1731777621794
2024-11-16 17:20:21,819 [s3a-transfer-obs-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:21,819 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:21,819 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:21,819 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:21,819 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:21,819 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777621779; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:21,819 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:21,819 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:21,819 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:21,820 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,820 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a816350f-f985-4e5f-8ca8-679638bf3212-00000178 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000178&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=125&ts=1731777621794
2024-11-16 17:20:21,821 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:21,831 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:21,831 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:21,831 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:20:21,831 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:21,831 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:21,831 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:21,831 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:21,832 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:21,832 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:21,832 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a816350f-f985-4e5f-8ca8-679638bf3212-00000178 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000178/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000178&t0=223&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=125&ts=1731777621794
2024-11-16 17:20:21,841 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:21,841 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:20:21,841 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:20:21,842 [s3a-transfer-obs-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:20:21,842 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:20:21,842 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:20:21,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:21,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:21,843 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:21,858 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 46, active threads = 0, queued tasks = 0, completed tasks = 46], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_named_map=0) (op_rename.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_vectored_incoming_ranges=80) (fake_directories_created=0) (stream_read_seek_operations=0) (audit_failure=0) (stream_write_bytes=2424832) (object_list_request.failures=0) (op_delete.failures=0) (object_multipart_aborted=0) (files_copied=0) (stream_aborted=0) (action_http_head_request.failures=0) (op_rename=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads_committed=0) (stream_write_queue_duration=0) (multipart_instantiated=0) (op_xattr_get_map=0) (files_delete_rejected=0) (files_created=37) (multipart_upload_part_put_bytes=0) (object_continue_list_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_total_time=0) (stream_read_vectored_read_bytes_discarded=34508) (stream_write_total_data=4849664) (object_put_bytes=2424832) (object_copy_requests=0) (op_mkdirs.failures=0) (committer_bytes_uploaded=0) (committer_jobs_completed=0) (stream_write_exceptions=0) (op_is_directory.failures=0) (multipart_upload_list=0) (action_http_get_request=35) (stream_read_remote_stream_aborted=0) (object_delete_objects=74) (stream_read_unbuffered=2) (files_copied_bytes=0) (committer_materialize_file.failures=0) (op_get_delegation_token=0) (committer_load_single_pending_file=0) (stream_read_operations_incomplete=0) (directories_deleted=0) (op_xattr_get_map.failures=0) (op_access.failures=0) (multipart_upload_part_put=0) (stream_read_seek_policy_changed=33) (stream_read_remote_stream_drain=5) (op_is_directory=0) (stream_read_vectored_operations=25) (audit_span_creation=145) (multipart_upload_list.failures=0) (object_delete_request=0) (committer_commits_aborted=0) (committer_magic_files_created=0) (directories_created=37) (op_copy_from_local_file.failures=0) (committer_tasks_failed=0) (store_io_retry=0) (op_get_file_checksum.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (op_exists=0) (object_select_requests=0) (store_io_throttled=0) (op_xattr_get_named.failures=0) (op_xattr_list=0) (stream_write_queue_duration.failures=0) (op_list_files=0) (committer_jobs_failed=0) (stream_read_operations=5) (op_abort=0) (committer_commits_completed=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named=0) (stream_read_seek_forward_operations=0) (op_create=37) (object_bulk_delete_request=74) (op_abort.failures=0) (object_bulk_delete_request.failures=0) (committer_magic_marker_put.failures=0) (op_access=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=33) (delegation_tokens_issued=0) (stream_read_bytes=10387) (op_create_non_recursive=0) (stream_read_seek_bytes_discarded=0) (stream_write_exceptions_completing_upload=0) (committer_stage_file_upload.failures=0) (store_io_request=436) (op_get_content_summary.failures=0) (op_get_file_status.failures=0) (object_delete_request.failures=0) (op_get_file_status=2) (op_list_files.failures=0) (stream_read_exceptions=0) (op_createfile=0) (committer_bytes_committed=0) (stream_read_fully_operations=1) (fake_directories_deleted=37) (op_create.failures=0) (op_is_file=0) (object_put_request=74) (stream_read_bytes_discarded_in_abort=0) (op_glob_status=0) (op_list_status.failures=0) (committer_commits.failures=0) (op_list_located_status=0) (op_hflush=0) (multipart_upload_started=0) (stream_read_total_bytes=337067) (files_deleted=37) (object_multipart_initiated=0) (committer_tasks_completed=0) (stream_read_seek_backward_operations=0) (stream_write_block_uploads=37) (delegation_tokens_issued.failures=0) (op_delete=37) (object_list_request=148) (op_createfile.failures=0) (action_http_get_request.failures=0) (op_copy_from_local_file=0) (multipart_upload_aborted=0) (committer_commits_created=0) (multipart_upload_completed=0) (object_continue_list_request=0) (action_file_opened.failures=0) (committer_commit_job=0) (op_exists.failures=0) (op_get_delegation_token.failures=0) (stream_write_block_uploads_aborted=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_read_bytes_discarded_in_close=326680) (object_put_request_completed=74) (op_is_file.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_list.failures=0) (store_exists_probe.failures=0) (stream_read_close_operations=31) (committer_commit_job.failures=0) (stream_read_opened=5) (audit_request_execution=436) (audit_access_check_failure=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_reverted=0) (op_openfile=0) (action_http_head_request=105) (store_exists_probe=0) (op_get_file_checksum=0) (ignored_errors=0) (op_get_content_summary=0) (action_executor_acquired=0) (op_open=31) (op_glob_status.failures=0) (action_file_opened=31) (object_metadata_request=105) (op_mkdirs=37) (committer_stage_file_upload=0) (op_list_status=0) (stream_read_closed=5) (stream_read_version_mismatches=0) (committer_load_single_pending_file.failures=0) (committer_materialize_file=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=37) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0));
minimums=((object_put_request.failures.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_list.failures.min=-1) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_status.failures.min=-1) (op_glob_status.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.min=4) (op_mkdirs.min=20) (object_list_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.min=-1) (action_executor_acquired.min=-1) (op_access.failures.min=-1) (action_http_get_request.min=28) (op_abort.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.min=6) (action_http_head_request.min=3) (store_exists_probe.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.min=5) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_drain.min=2) (multipart_upload_list.failures.min=-1) (object_multipart_initiated.min=-1) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (object_delete_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_commit_job.min=-1) (action_http_get_request.failures.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_exists.failures.min=-1) (op_access.min=-1) (op_createfile.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.min=6) (op_list_files.failures.min=-1) (op_xattr_list.min=-1) (op_delete.min=23) (committer_magic_marker_put.failures.min=-1) (action_file_opened.min=8) (op_is_directory.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_status.min=-1) (op_is_file.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.min=-1) (committer_stage_file_upload.min=-1) (op_glob_status.min=-1) (object_put_request.min=28) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1));
maximums=((op_list_status.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.max=19) (op_access.failures.max=-1) (object_delete_request.max=-1) (object_multipart_initiated.max=-1) (op_createfile.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.failures.max=-1) (op_glob_status.failures.max=-1) (committer_materialize_file.max=-1) (op_create.max=74) (op_xattr_get_named_map.failures.max=-1) (op_rename.max=-1) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_drain.max=2) (op_mkdirs.max=346) (stream_read_remote_stream_drain.failures.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.max=-1) (op_xattr_list.max=-1) (action_file_opened.max=15) (op_get_file_status.max=5) (op_rename.failures.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.max=-1) (object_bulk_delete_request.max=32) (op_xattr_get_named.failures.max=-1) (op_is_directory.max=-1) (op_exists.failures.max=-1) (action_file_opened.failures.max=-1) (op_access.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (multipart_upload_list.max=-1) (op_mkdirs.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.max=-1) (object_list_request.max=210) (op_xattr_get_named_map.max=-1) (op_createfile.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_list.failures.max=-1) (op_delete.max=111) (action_http_get_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_aborted.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.failures.max=-1) (op_get_content_summary.max=-1) (object_put_request.max=104) (op_list_files.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (object_list_request.failures.max=-1) (object_put_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.max=-1) (op_is_directory.failures.max=-1) (op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.max=43) (committer_load_single_pending_file.failures.max=-1) (op_is_file.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_delegation_token.failures.max=-1));
means=((op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=31, sum=198, mean=6.3871)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=37, sum=493, mean=13.3243)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=6, mean=1.2000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=105, sum=574, mean=5.4667)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=148, sum=1593, mean=10.7635)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=74, sum=877, mean=11.8514)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=74, sum=2129, mean=28.7703)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=37, sum=1664, mean=44.9730)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=35, sum=765, mean=21.8571)) (op_delete.mean=(samples=37, sum=1622, mean=43.8378)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:21,859 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:21,859 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,859 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,859 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,859 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,859 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a816350f-f985-4e5f-8ca8-679638bf3212-00000179 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000179&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=225&ts=1731777621859
2024-11-16 17:20:21,866 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:21,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:21,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,866 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a816350f-f985-4e5f-8ca8-679638bf3212-00000179 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000179&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=225&ts=1731777621859
2024-11-16 17:20:21,873 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:21,873 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:21,873 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:21,873 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:21,874 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a816350f-f985-4e5f-8ca8-679638bf3212-00000179 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000179&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=225&ts=1731777621859
2024-11-16 17:20:21,889 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:21,889 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:21,890 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:20:21,890 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:21,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,891 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,891 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,891 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a816350f-f985-4e5f-8ca8-679638bf3212-00000180 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000180&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=225&ts=1731777621890
2024-11-16 17:20:21,903 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:20:21,904 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,904 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:21,905 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6392071673292485215.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:21,906 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6392071673292485215.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (op_hsync=0) (object_put_request=0) (op_abort=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_write_bytes=65536) (op_hflush=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6392071673292485215.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,906 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,906 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:21,906 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6392071673292485215.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:21,907 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:21,907 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:21,907 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:21,907 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] a816350f-f985-4e5f-8ca8-679638bf3212-00000180 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000180&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=127&ts=1731777621890
2024-11-16 17:20:21,909 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:21,943 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:21,943 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:21,943 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.036s
2024-11-16 17:20:21,945 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6392071673292485215.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:21,945 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6392071673292485215.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,945 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6392071673292485215.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:21,945 [s3a-transfer-obs-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:21,945 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:21,946 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (object_put_request=1) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (stream_write_total_time=0) (op_hflush=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (op_abort.failures=0) (object_multipart_aborted=0) (op_abort=0) (stream_write_bytes=65536) (action_executor_acquired=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=36));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=36) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=36, mean=36.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:21,947 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:21,947 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:21,948 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:21,948 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:21,948 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a816350f-f985-4e5f-8ca8-679638bf3212-00000181 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000181&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=225&ts=1731777621947
2024-11-16 17:20:21,953 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:21,953 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:21,953 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,953 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:20:21,953 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:21,953 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:20:21,954 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:20:21,954 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,954 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:21,954 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:21,954 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] a816350f-f985-4e5f-8ca8-679638bf3212-00000181 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=10-1199&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000181&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=128&ts=1731777621947
2024-11-16 17:20:21,972 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:20:21,973 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:20:21,973 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:20:21,973 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:20:21,973 [s3a-transfer-obs-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:21,974 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_exceptions=0) (stream_read_vectored_combined_ranges=1) (stream_read_block_read.failures=0) (stream_read_block_read=0) (stream_read_close_operations=1) (action_http_get_request=1) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=315) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_unbuffered=0) (stream_read_operations=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=315) (stream_read_prefetch_operations.failures=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=6) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=19) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=6) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=19) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_http_get_request.mean=(samples=1, sum=19, mean=19.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:21,976 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:21,976 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:21,976 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:21,976 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a816350f-f985-4e5f-8ca8-679638bf3212-00000182 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000182&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=225&ts=1731777621976
2024-11-16 17:20:21,980 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:21,981 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,981 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a816350f-f985-4e5f-8ca8-679638bf3212-00000182 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000182&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=225&ts=1731777621976
2024-11-16 17:20:21,987 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:21,987 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:21,987 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:21,988 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:21,988 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:21,988 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:21,988 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:21,988 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:21,988 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:21,988 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:21,988 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:21,988 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:21,992 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:21,992 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:21,992 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:21,993 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a816350f-f985-4e5f-8ca8-679638bf3212-00000182 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000182&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=226&ts=1731777621976
2024-11-16 17:20:21,999 [s3a-transfer-obs-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:21,999 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:21,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:21,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:21,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:21,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777621939; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:21,999 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:21,999 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:21,999 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:22,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:22,000 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:22,001 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:22,001 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:22,001 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:22,001 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,001 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,001 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:22,001 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,002 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a816350f-f985-4e5f-8ca8-679638bf3212-00000182 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000182&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=130&ts=1731777621976
2024-11-16 17:20:22,010 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:22,010 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,011 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a816350f-f985-4e5f-8ca8-679638bf3212-00000182 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000182/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000182&t0=225&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=130&ts=1731777621976
2024-11-16 17:20:22,021 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:20:22,021 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:20:22,021 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:20:22,021 [s3a-transfer-obs-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:20:22,021 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:20:22,022 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:20:22,022 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:22,022 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:22,023 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:22,034 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 47, active threads = 0, queued tasks = 0, completed tasks = 47], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_continue_list_request=0) (files_copied_bytes=0) (store_io_throttled=0) (op_mkdirs.failures=0) (op_get_file_checksum.failures=0) (object_multipart_initiated.failures=0) (op_get_file_status=2) (op_exists=0) (store_io_retry=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted.failures=0) (files_created=38) (fake_directories_deleted=38) (op_mkdirs=38) (op_get_delegation_token.failures=0) (object_list_request=152) (stream_read_remote_stream_aborted=0) (stream_write_total_data=4980736) (multipart_upload_started=0) (op_open=32) (op_create_non_recursive=0) (op_get_delegation_token=0) (op_is_file.failures=0) (multipart_upload_list=0) (stream_read_vectored_combined_ranges=34) (action_http_get_request.failures=0) (op_access.failures=0) (directories_deleted=0) (committer_stage_file_upload.failures=0) (object_multipart_aborted=0) (op_createfile.failures=0) (op_list_status.failures=0) (store_exists_probe=0) (op_access=0) (multipart_instantiated=0) (op_abort.failures=0) (object_select_requests=0) (op_hsync=0) (audit_request_execution=448) (stream_read_version_mismatches=0) (committer_commits_created=0) (committer_stage_file_upload=0) (op_get_content_summary=0) (delegation_tokens_issued=0) (object_put_bytes=2490368) (stream_read_operations=5) (multipart_upload_list.failures=0) (op_xattr_get_named=0) (op_glob_status=0) (op_list_files=0) (op_xattr_get_map=0) (object_bulk_delete_request=76) (stream_read_operations_incomplete=0) (op_xattr_get_map.failures=0) (op_create.failures=0) (op_get_file_status.failures=0) (store_io_request=448) (op_is_directory=0) (committer_commits.failures=0) (op_delete=38) (op_get_content_summary.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (op_rename=0) (object_delete_objects=76) (object_put_request_completed=76) (stream_read_seek_bytes_skipped=0) (stream_read_close_operations=32) (op_xattr_list=0) (multipart_upload_part_put=0) (files_deleted=38) (stream_write_exceptions=0) (stream_read_unbuffered=2) (op_xattr_get_named_map=0) (op_is_file=0) (object_copy_requests=0) (stream_read_exceptions=0) (op_rename.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (committer_commits_aborted=0) (op_get_file_checksum=0) (committer_jobs_failed=0) (committer_tasks_failed=0) (op_create=38) (committer_commit_job=0) (committer_jobs_completed=0) (ignored_errors=0) (op_list_located_status=0) (stream_write_block_uploads=38) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_operations=26) (op_hflush=0) (object_metadata_request=108) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=34) (multipart_upload_aborted=0) (directories_created=38) (object_list_request.failures=0) (op_exists.failures=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=1) (stream_read_closed=5) (stream_read_opened=5) (stream_write_queue_duration=0) (action_file_opened=32) (stream_read_bytes_discarded_in_abort=0) (committer_commits_completed=0) (op_xattr_list.failures=0) (op_is_directory.failures=0) (stream_read_vectored_read_bytes_discarded=35383) (action_executor_acquired=0) (files_copied=0) (committer_magic_files_created=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_backward_operations=0) (committer_magic_marker_put=0) (committer_materialize_file.failures=0) (stream_read_bytes=10702) (store_exists_probe.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_write_bytes=2490368) (stream_read_vectored_incoming_ranges=84) (audit_span_creation=149) (object_continue_list_request.failures=0) (delegation_tokens_issued.failures=0) (op_glob_status.failures=0) (stream_aborted=0) (op_xattr_get_named.failures=0) (committer_bytes_committed=0) (multipart_upload_abort_under_path_invoked=0) (committer_load_single_pending_file.failures=0) (action_http_head_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=326680) (op_createfile=0) (committer_tasks_completed=0) (stream_write_total_time=0) (audit_access_check_failure=0) (files_delete_rejected=0) (stream_write_block_uploads_aborted=0) (committer_bytes_uploaded=0) (object_put_request=76) (object_multipart_initiated=0) (multipart_upload_completed=0) (action_file_opened.failures=0) (object_delete_request.failures=0) (committer_commit_job.failures=0) (op_delete.failures=0) (stream_read_remote_stream_drain=5) (op_list_status=0) (fake_directories_created=0) (op_openfile=0) (action_http_head_request=108) (audit_failure=0) (op_xattr_get_named_map.failures=0) (op_copy_from_local_file.failures=0) (committer_commits_reverted=0) (action_http_get_request=36) (op_copy_from_local_file=0) (multipart_upload_part_put_bytes=0) (committer_load_single_pending_file=0) (op_list_files.failures=0) (committer_materialize_file=0) (op_abort=0) (stream_read_total_bytes=337382) (stream_write_queue_duration.failures=0) (object_bulk_delete_request.failures=0) (object_delete_request=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=38) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0));
minimums=((multipart_upload_list.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_checksum.min=-1) (op_create.min=6) (action_executor_acquired.min=-1) (op_get_delegation_token.min=-1) (op_is_file.min=-1) (object_put_request.min=36) (op_glob_status.min=-1) (op_get_content_summary.failures.min=-1) (store_exists_probe.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.min=4) (op_delete.min=23) (op_xattr_list.min=-1) (action_http_get_request.min=19) (action_http_head_request.min=3) (object_bulk_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_list_files.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_exists.min=-1) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.min=6) (op_mkdirs.failures.min=-1) (op_access.min=-1) (op_is_directory.min=-1) (op_rename.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.failures.min=-1) (object_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (op_abort.failures.min=-1) (op_delete.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.failures.min=-1) (op_list_status.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_list_request.min=5) (op_xattr_get_named.failures.min=-1) (committer_commit_job.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_exists.failures.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_createfile.failures.min=-1) (op_rename.min=-1) (store_exists_probe.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_content_summary.min=-1) (object_multipart_initiated.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.min=6) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_drain.min=2) (op_mkdirs.min=20) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_createfile.min=-1));
maximums=((stream_write_queue_duration.failures.max=-1) (op_abort.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_file.failures.max=-1) (op_access.max=-1) (op_glob_status.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_rename.max=-1) (op_get_delegation_token.max=-1) (op_delete.max=111) (op_get_file_checksum.max=-1) (op_mkdirs.max=346) (object_continue_list_request.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_drain.max=2) (object_multipart_aborted.max=-1) (op_exists.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_magic_marker_put.max=-1) (object_list_request.max=210) (op_get_content_summary.max=-1) (action_http_head_request.max=19) (action_executor_acquired.max=-1) (op_xattr_get_named.failures.max=-1) (op_access.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.max=5) (op_xattr_list.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.max=15) (op_copy_from_local_file.max=-1) (object_put_request.failures.max=-1) (op_delete.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_files.max=-1) (object_delete_request.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named_map.max=-1) (committer_materialize_file.failures.max=-1) (op_create.max=74) (object_continue_list_request.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_stage_file_upload.max=-1) (object_bulk_delete_request.max=32) (op_createfile.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_commit_job.max=-1) (op_get_content_summary.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_files.failures.max=-1) (object_put_request.max=104) (op_exists.failures.max=-1) (op_get_file_status.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.max=-1) (action_http_get_request.max=43) (op_abort.max=-1) (op_xattr_get_map.failures.max=-1));
means=((op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=32, sum=204, mean=6.3750)) (op_create.mean=(samples=38, sum=508, mean=13.3684)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=6, mean=1.2000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=108, sum=590, mean=5.4630)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=76, sum=895, mean=11.7763)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=38, sum=1656, mean=43.5789)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=76, sum=2180, mean=28.6842)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=36, sum=784, mean=21.7778)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=38, sum=1695, mean=44.6053)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (object_list_request.mean=(samples=152, sum=1625, mean=10.6908)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:22,034 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:22,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,035 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,035 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,035 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a816350f-f985-4e5f-8ca8-679638bf3212-00000183 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000183&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=227&ts=1731777622034
2024-11-16 17:20:22,041 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:22,041 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,041 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,041 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,041 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,041 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a816350f-f985-4e5f-8ca8-679638bf3212-00000183 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000183&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=227&ts=1731777622034
2024-11-16 17:20:22,044 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,044 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:22,045 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:22,045 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:22,045 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a816350f-f985-4e5f-8ca8-679638bf3212-00000183 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000183&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=227&ts=1731777622034
2024-11-16 17:20:22,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:22,055 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:22,055 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:20:22,055 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:22,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,056 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,056 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a816350f-f985-4e5f-8ca8-679638bf3212-00000184 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000184&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=227&ts=1731777622055
2024-11-16 17:20:22,060 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:20:22,061 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,061 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:22,061 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18149512542404558938.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:22,062 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18149512542404558938.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (object_multipart_initiated=0) (op_abort=0) (stream_write_block_uploads=0) (op_hflush=0) (object_put_request=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (op_hsync=0) (stream_write_total_data=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18149512542404558938.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,062 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,062 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:22,062 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18149512542404558938.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:22,063 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:22,063 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:22,063 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:22,063 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] a816350f-f985-4e5f-8ca8-679638bf3212-00000184 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000184&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=132&ts=1731777622055
2024-11-16 17:20:22,064 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:22,087 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:22,087 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:22,087 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.024s
2024-11-16 17:20:22,087 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18149512542404558938.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:22,087 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18149512542404558938.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,087 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18149512542404558938.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,087 [s3a-transfer-obs-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:22,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (op_abort=0) (op_hsync=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (object_put_request=1) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=24) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=24) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=24, mean=24.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:22,089 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:22,089 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,089 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,089 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:22,090 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a816350f-f985-4e5f-8ca8-679638bf3212-00000185 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000185&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=227&ts=1731777622089
2024-11-16 17:20:22,093 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:22,093 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:22,093 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,094 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:20:22,094 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:22,094 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:20:22,094 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:20:22,094 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,094 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,094 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:22,094 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] a816350f-f985-4e5f-8ca8-679638bf3212-00000185 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-7998&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000185&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=133&ts=1731777622089
2024-11-16 17:20:22,105 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:20:22,105 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:20:22,105 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:20:22,106 [s3a-transfer-obs-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,107 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_read_bytes_discarded=7699) (action_executor_acquired.failures=0) (stream_read_block_read.failures=0) (stream_aborted=0) (action_http_get_request.failures=0) (stream_read_vectored_incoming_ranges=3) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_unbuffered=0) (stream_read_opened=0) (stream_read_prefetch_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=300) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_operations=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_read=0) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=1) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (action_http_get_request=1) (stream_read_bytes_discarded_in_close=0) (action_file_opened=1) (stream_read_total_bytes=300));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=11) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=11) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:22,108 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:22,108 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,109 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,109 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a816350f-f985-4e5f-8ca8-679638bf3212-00000186 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000186&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=227&ts=1731777622108
2024-11-16 17:20:22,115 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,115 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,116 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a816350f-f985-4e5f-8ca8-679638bf3212-00000186 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000186&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=227&ts=1731777622108
2024-11-16 17:20:22,125 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:22,126 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:22,126 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:22,126 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:22,126 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:22,126 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:22,126 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:22,126 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:22,126 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:22,126 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:22,126 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:22,126 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:22,129 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:22,129 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:22,130 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,130 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a816350f-f985-4e5f-8ca8-679638bf3212-00000186 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000186&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=228&ts=1731777622108
2024-11-16 17:20:22,136 [s3a-transfer-obs-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:22,136 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:22,136 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:22,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:22,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:22,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777622084; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:22,138 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:22,138 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:22,139 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:22,139 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:22,139 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:22,139 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:22,140 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:22,140 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:22,140 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,140 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,140 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:22,140 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,140 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a816350f-f985-4e5f-8ca8-679638bf3212-00000186 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000186&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=135&ts=1731777622108
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.006s
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.006s
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,146 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:22,147 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,147 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a816350f-f985-4e5f-8ca8-679638bf3212-00000186 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000186/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000186&t0=227&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=135&ts=1731777622108
2024-11-16 17:20:22,153 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:20:22,153 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:22,153 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:20:22,153 [s3a-transfer-obs-bucket-bounded-pool1-t50] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.014s
2024-11-16 17:20:22,154 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:20:22,154 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:20:22,154 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:22,154 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:22,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:22,167 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 48, active threads = 0, queued tasks = 0, completed tasks = 48], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_bulk_delete_request=78) (action_executor_acquired.failures=0) (op_glob_status=0) (op_list_files=0) (committer_stage_file_upload.failures=0) (object_copy_requests=0) (multipart_upload_list.failures=0) (committer_bytes_committed=0) (fake_directories_deleted=39) (stream_read_exceptions=0) (op_copy_from_local_file.failures=0) (op_openfile=0) (stream_read_remote_stream_drain.failures=0) (op_abort=0) (op_create=39) (stream_read_bytes_discarded_in_abort=0) (object_multipart_aborted=0) (audit_span_creation=153) (committer_jobs_failed=0) (stream_write_queue_duration.failures=0) (op_list_status.failures=0) (audit_failure=0) (committer_commits_reverted=0) (audit_access_check_failure=0) (op_access.failures=0) (multipart_upload_completed=0) (stream_read_closed=5) (stream_read_close_operations=33) (stream_read_operations_incomplete=0) (committer_bytes_uploaded=0) (op_rename=0) (op_list_status=0) (stream_read_seek_backward_operations=0) (object_delete_request.failures=0) (object_multipart_aborted.failures=0) (op_exists=0) (stream_write_block_uploads_aborted=0) (stream_read_opened=5) (store_io_request=460) (op_open=33) (op_get_file_status.failures=0) (stream_write_queue_duration=0) (committer_commit_job=0) (op_xattr_get_map=0) (op_is_directory.failures=0) (multipart_upload_part_put_bytes=0) (action_file_opened=33) (audit_request_execution=460) (op_list_located_status=0) (stream_read_remote_stream_drain=5) (stream_read_vectored_operations=27) (action_http_head_request=111) (stream_read_remote_stream_aborted.failures=0) (op_get_content_summary.failures=0) (stream_write_bytes=2555904) (object_bulk_delete_request.failures=0) (object_list_request.failures=0) (op_xattr_get_named.failures=0) (delegation_tokens_issued.failures=0) (multipart_upload_abort_under_path_invoked=0) (files_deleted=39) (stream_read_bytes_backwards_on_seek=0) (committer_commits.failures=0) (op_get_content_summary=0) (directories_created=39) (committer_materialize_file.failures=0) (op_createfile.failures=0) (op_delete.failures=0) (stream_read_vectored_combined_ranges=35) (committer_materialize_file=0) (files_delete_rejected=0) (op_is_file=0) (op_xattr_list.failures=0) (op_is_directory=0) (committer_tasks_failed=0) (op_xattr_get_named_map.failures=0) (op_xattr_list=0) (action_file_opened.failures=0) (op_glob_status.failures=0) (op_rename.failures=0) (stream_read_total_bytes=337682) (object_put_request=78) (op_list_files.failures=0) (files_copied=0) (committer_tasks_completed=0) (committer_commits_created=0) (stream_read_version_mismatches=0) (op_xattr_get_map.failures=0) (object_put_request.failures=0) (stream_read_fully_operations=1) (stream_read_seek_forward_operations=0) (op_mkdirs=39) (object_continue_list_request.failures=0) (object_put_request_completed=78) (committer_magic_files_created=0) (stream_write_block_uploads=39) (committer_magic_marker_put.failures=0) (store_io_throttled=0) (stream_write_exceptions=0) (op_is_file.failures=0) (op_access=0) (op_create_non_recursive=0) (files_created=39) (stream_read_operations=5) (fake_directories_created=0) (object_multipart_initiated.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_close=326680) (store_exists_probe=0) (stream_write_total_data=5111808) (delegation_tokens_issued=0) (action_http_head_request.failures=0) (committer_load_single_pending_file.failures=0) (committer_commits_completed=0) (committer_commits_aborted=0) (object_put_bytes=2555904) (object_list_request=156) (stream_read_bytes=11002) (op_copy_from_local_file=0) (multipart_upload_started=0) (op_mkdirs.failures=0) (op_delete=39) (stream_read_vectored_incoming_ranges=87) (op_xattr_get_named_map=0) (object_metadata_request=111) (object_continue_list_request=0) (object_delete_request=0) (committer_magic_marker_put=0) (store_exists_probe.failures=0) (op_exists.failures=0) (action_executor_acquired=0) (object_delete_objects=78) (multipart_instantiated=0) (action_http_get_request=37) (store_io_retry=0) (stream_read_seek_bytes_discarded=0) (object_select_requests=0) (op_get_delegation_token=0) (committer_jobs_completed=0) (stream_read_seek_policy_changed=35) (op_get_file_checksum=0) (multipart_upload_list=0) (op_createfile=0) (ignored_errors=0) (stream_write_block_uploads_committed=0) (op_get_file_checksum.failures=0) (op_create.failures=0) (stream_read_vectored_read_bytes_discarded=43082) (op_hsync=0) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (op_get_delegation_token.failures=0) (op_get_file_status=2) (committer_load_single_pending_file=0) (committer_commit_job.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_named=0) (stream_read_unbuffered=2) (op_abort.failures=0) (directories_deleted=0) (stream_aborted=0) (multipart_upload_aborted=0) (stream_write_exceptions_completing_upload=0) (files_copied_bytes=0) (committer_stage_file_upload=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=39) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (op_mkdirs.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (action_executor_acquired.min=-1) (op_list_files.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.min=-1) (delegation_tokens_issued.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.min=20) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.min=3) (object_list_request.min=4) (op_get_delegation_token.min=-1) (op_abort.min=-1) (object_delete_request.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (object_put_request.failures.min=-1) (op_delete.failures.min=-1) (op_is_file.min=-1) (op_get_content_summary.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (action_file_opened.min=4) (committer_load_single_pending_file.failures.min=-1) (op_list_status.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_checksum.failures.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.min=6) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_drain.min=2) (object_put_request.min=24) (object_continue_list_request.min=-1) (op_delete.min=23) (op_access.min=-1) (op_is_directory.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (op_create.min=5) (committer_materialize_file.min=-1) (action_http_get_request.min=11) (stream_read_remote_stream_drain.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_create.failures.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_exists.min=-1) (op_get_file_status.min=4) (op_exists.failures.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.failures.min=-1) (op_list_status.failures.min=-1));
maximums=((op_is_file.max=-1) (op_is_directory.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.max=210) (object_multipart_aborted.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (op_create.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (store_exists_probe.max=-1) (committer_commit_job.failures.max=-1) (op_delete.max=111) (op_get_content_summary.failures.max=-1) (op_delete.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.max=-1) (object_put_request.max=104) (object_multipart_aborted.max=-1) (op_access.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.failures.max=-1) (op_is_file.failures.max=-1) (op_exists.failures.max=-1) (op_mkdirs.max=346) (op_xattr_get_map.max=-1) (op_get_file_status.max=5) (committer_materialize_file.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.failures.max=-1) (object_put_request.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_abort.max=-1) (action_http_get_request.max=43) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.failures.max=-1) (op_exists.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.max=19) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_delete_request.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.max=2) (op_list_status.failures.max=-1) (multipart_upload_list.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.max=-1) (object_bulk_delete_request.failures.max=-1) (action_file_opened.max=15) (committer_magic_marker_put.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=32) (op_get_file_status.failures.max=-1) (action_http_get_request.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.max=74) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (op_copy_from_local_file.max=-1) (committer_load_single_pending_file.max=-1) (action_file_opened.failures.max=-1) (op_list_files.max=-1) (op_get_content_summary.max=-1) (committer_commit_job.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_glob_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=6, mean=1.2000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=39, sum=1684, mean=43.1795)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=78, sum=907, mean=11.6282)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=78, sum=2214, mean=28.3846)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=156, sum=1650, mean=10.5769)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=37, sum=795, mean=21.4865)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=33, sum=208, mean=6.3030)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=39, sum=513, mean=13.1538)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=111, sum=603, mean=5.4324)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=39, sum=1716, mean=44.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:22,167 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:22,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,168 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,168 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,168 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a816350f-f985-4e5f-8ca8-679638bf3212-00000187 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000187&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=229&ts=1731777622167
2024-11-16 17:20:22,178 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:20:22,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,179 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,179 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a816350f-f985-4e5f-8ca8-679638bf3212-00000187 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000187&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=229&ts=1731777622167
2024-11-16 17:20:22,181 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,182 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:22,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:22,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:22,182 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a816350f-f985-4e5f-8ca8-679638bf3212-00000187 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000187&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=229&ts=1731777622167
2024-11-16 17:20:22,191 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:22,192 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:22,192 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:20:22,192 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:22,193 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,193 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,193 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,193 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,194 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a816350f-f985-4e5f-8ca8-679638bf3212-00000188 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000188&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=229&ts=1731777622192
2024-11-16 17:20:22,201 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:22,202 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,202 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:22,202 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15164788871266509668.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:22,203 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15164788871266509668.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (object_put_request=0) (stream_write_total_time=0) (op_abort=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (stream_write_block_uploads=0) (op_hsync=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15164788871266509668.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,203 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,203 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:22,203 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15164788871266509668.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:22,203 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:22,203 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:22,203 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:22,204 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:22,204 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] a816350f-f985-4e5f-8ca8-679638bf3212-00000188 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000188&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=134&ts=1731777622192
2024-11-16 17:20:22,229 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:22,229 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:22,229 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:20:22,230 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15164788871266509668.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:22,230 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15164788871266509668.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,230 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15164788871266509668.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,230 [s3a-transfer-obs-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:22,230 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,231 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (op_hsync=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (object_put_request=1) (object_multipart_initiated=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=25));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=25) (multipart_upload_part_put.max=-1));
means=((object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:22,231 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:22,232 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,232 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,232 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:22,232 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a816350f-f985-4e5f-8ca8-679638bf3212-00000189 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000189&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=229&ts=1731777622232
2024-11-16 17:20:22,236 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:22,236 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:22,236 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,236 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:22,236 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:22,237 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:20:22,237 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,237 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,237 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:22,237 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] a816350f-f985-4e5f-8ca8-679638bf3212-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=1947-2046&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000189&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=142&ts=1731777622232
2024-11-16 17:20:22,238 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,238 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,238 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:22,238 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] a816350f-f985-4e5f-8ca8-679638bf3212-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=8192-14435&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000189&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=144&ts=1731777622232
2024-11-16 17:20:22,239 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:20:22,239 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,240 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,240 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:22,240 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] a816350f-f985-4e5f-8ca8-679638bf3212-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=40960-41983&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000189&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=145&ts=1731777622232
2024-11-16 17:20:22,251 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:20:22,251 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:20:22,251 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:20:22,252 [s3a-transfer-obs-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,255 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:20:22,256 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:20:22,257 [s3a-transfer-obs-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,257 [s3a-transfer-obs-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,258 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_closed=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=5) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_total_bytes=1424) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (action_executor_acquired.failures=0) (action_file_opened=1) (stream_read_bytes=1424) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (action_http_get_request=3) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_close_operations=1) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_combined_ranges=3) (stream_read_unbuffered=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=13) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=18) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=4) (stream_read_block_read.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.mean=(samples=3, sum=48, mean=16.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:22,262 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:22,262 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,262 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,262 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a816350f-f985-4e5f-8ca8-679638bf3212-00000190 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000190&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=229&ts=1731777622261
2024-11-16 17:20:22,265 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,265 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,265 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a816350f-f985-4e5f-8ca8-679638bf3212-00000190 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000190&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=229&ts=1731777622261
2024-11-16 17:20:22,274 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:22,275 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:22,275 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:22,275 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:22,275 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:22,276 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:22,276 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:22,276 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:22,277 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:22,277 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:22,277 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:22,278 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:22,278 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:22,278 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:22,278 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,279 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [235] a816350f-f985-4e5f-8ca8-679638bf3212-00000190 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000190&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=235&ts=1731777622261
2024-11-16 17:20:22,283 [s3a-transfer-obs-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:22,284 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:20:22,284 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:22,284 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:22,284 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:22,284 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777622223; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:22,284 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:22,284 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:22,285 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:22,285 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:22,286 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,286 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a816350f-f985-4e5f-8ca8-679638bf3212-00000190 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000190&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=147&ts=1731777622261
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,295 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a816350f-f985-4e5f-8ca8-679638bf3212-00000190 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000190/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000190&t0=229&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=147&ts=1731777622261
2024-11-16 17:20:22,304 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:22,304 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:22,304 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:20:22,304 [s3a-transfer-obs-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.018s
2024-11-16 17:20:22,304 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:20:22,304 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:20:22,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:22,304 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:22,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:22,323 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 49, active threads = 0, queued tasks = 0, completed tasks = 49], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_exists.failures=0) (stream_read_fully_operations=1) (object_bulk_delete_request=80) (action_executor_acquired.failures=0) (committer_commits_aborted=0) (stream_read_bytes_discarded_in_close=326680) (committer_commits_created=0) (stream_write_exceptions=0) (stream_read_unbuffered=2) (stream_read_vectored_read_bytes_discarded=49026) (stream_read_seek_backward_operations=0) (object_bulk_delete_request.failures=0) (stream_write_block_uploads_aborted=0) (object_multipart_aborted=0) (op_access=0) (stream_read_operations_incomplete=0) (op_hflush=0) (stream_write_bytes=2621440) (stream_read_version_mismatches=0) (op_mkdirs.failures=0) (committer_commits_completed=0) (stream_write_block_uploads=40) (files_created=40) (object_delete_request=0) (ignored_errors=0) (op_xattr_get_named_map=0) (op_is_directory=0) (stream_read_seek_policy_changed=36) (op_list_status.failures=0) (stream_write_block_uploads_committed=0) (stream_read_total_bytes=339106) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_map=0) (directories_created=40) (op_hsync=0) (op_is_directory.failures=0) (op_create.failures=0) (files_deleted=40) (multipart_upload_part_put_bytes=0) (store_exists_probe=0) (op_delete=40) (op_exists=0) (stream_read_remote_stream_aborted=0) (committer_materialize_file=0) (action_http_get_request=40) (multipart_upload_aborted=0) (stream_read_seek_bytes_discarded=0) (object_delete_request.failures=0) (delegation_tokens_issued=0) (audit_access_check_failure=0) (committer_bytes_uploaded=0) (op_glob_status=0) (op_open=34) (multipart_upload_completed=0) (object_multipart_initiated=0) (object_copy_requests=0) (fake_directories_created=0) (op_xattr_get_named=0) (object_select_requests=0) (committer_jobs_failed=0) (stream_write_queue_duration=0) (stream_read_bytes=12426) (committer_magic_marker_put=0) (committer_commit_job=0) (multipart_instantiated=0) (object_put_request=80) (op_rename.failures=0) (op_createfile.failures=0) (multipart_upload_part_put=0) (files_delete_rejected=0) (stream_read_bytes_backwards_on_seek=0) (store_io_throttled=0) (directories_deleted=0) (op_glob_status.failures=0) (stream_read_vectored_incoming_ranges=92) (action_file_opened=34) (op_openfile=0) (store_io_request=474) (committer_load_single_pending_file.failures=0) (op_create=40) (committer_load_single_pending_file=0) (op_is_file=0) (stream_read_vectored_combined_ranges=38) (delegation_tokens_issued.failures=0) (action_http_get_request.failures=0) (op_delete.failures=0) (files_copied_bytes=0) (object_put_request.failures=0) (op_list_located_status=0) (stream_write_queue_duration.failures=0) (committer_commits_reverted=0) (audit_failure=0) (op_xattr_get_named_map.failures=0) (store_exists_probe.failures=0) (op_get_file_checksum.failures=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_drain=5) (op_createfile=0) (op_get_content_summary.failures=0) (committer_bytes_committed=0) (multipart_upload_list=0) (op_access.failures=0) (op_xattr_get_map.failures=0) (op_mkdirs=40) (committer_commit_job.failures=0) (op_abort.failures=0) (object_continue_list_request=0) (object_metadata_request=114) (action_http_head_request=114) (committer_magic_files_created=0) (stream_write_exceptions_completing_upload=0) (op_get_file_checksum=0) (stream_read_operations=5) (fake_directories_deleted=40) (action_file_opened.failures=0) (op_get_file_status=2) (stream_read_remote_stream_drain.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_closed=5) (stream_write_total_data=5242880) (multipart_upload_started=0) (stream_read_close_operations=34) (op_list_files=0) (stream_read_exceptions=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=28) (op_copy_from_local_file=0) (stream_read_seek_operations=0) (object_continue_list_request.failures=0) (object_put_request_completed=80) (object_list_request=160) (op_list_status=0) (committer_tasks_completed=0) (committer_jobs_completed=0) (object_list_request.failures=0) (store_io_retry=0) (op_get_content_summary=0) (object_delete_objects=80) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload=0) (op_xattr_list=0) (stream_read_seek_forward_operations=0) (op_is_file.failures=0) (committer_materialize_file.failures=0) (audit_span_creation=157) (op_copy_from_local_file.failures=0) (stream_write_total_time=0) (op_xattr_get_named.failures=0) (op_rename=0) (object_multipart_aborted.failures=0) (committer_tasks_failed=0) (action_http_head_request.failures=0) (op_abort=0) (committer_stage_file_upload.failures=0) (op_xattr_list.failures=0) (committer_magic_marker_put.failures=0) (op_get_delegation_token=0) (action_executor_acquired=0) (op_create_non_recursive=0) (committer_commits.failures=0) (files_copied=0) (multipart_upload_list.failures=0) (audit_request_execution=474) (op_list_files.failures=0) (op_get_file_status.failures=0) (stream_read_opened=5) (object_put_bytes=2621440) (stream_aborted=0));
gauges=((stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=40));
minimums=((object_continue_list_request.failures.min=-1) (op_access.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.failures.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=20) (object_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.min=-1) (op_rename.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.min=-1) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.min=6) (op_list_files.min=-1) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_status.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.min=23) (op_get_file_status.min=4) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.min=2) (op_is_directory.failures.min=-1) (op_createfile.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.min=2) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.min=13) (op_get_file_checksum.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.failures.min=-1) (object_list_request.min=4) (store_exists_probe.failures.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.min=4) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.min=-1) (op_exists.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_delete_request.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.min=-1) (store_exists_probe.min=-1) (action_file_opened.failures.min=-1) (op_is_file.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (op_create.min=5) (op_glob_status.failures.min=-1) (object_put_request.min=25) (op_rename.failures.min=-1) (op_xattr_list.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (action_http_head_request.failures.min=-1) (op_is_directory.min=-1) (op_get_content_summary.min=-1));
maximums=((store_exists_probe.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.max=43) (object_delete_request.max=-1) (committer_commit_job.max=-1) (object_bulk_delete_request.failures.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named_map.max=-1) (action_file_opened.max=15) (op_access.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (object_delete_request.failures.max=-1) (action_http_head_request.max=19) (op_rename.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_continue_list_request.max=-1) (committer_stage_file_upload.max=-1) (op_createfile.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_list_request.max=210) (op_is_file.failures.max=-1) (op_delete.max=111) (op_get_file_checksum.max=-1) (op_exists.failures.max=-1) (object_multipart_aborted.max=-1) (committer_commit_job.failures.max=-1) (op_list_status.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_status.max=5) (op_list_status.failures.max=-1) (object_bulk_delete_request.max=32) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.max=-1) (op_is_directory.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.max=104) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_drain.max=2) (op_mkdirs.max=346) (object_multipart_aborted.failures.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.failures.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.max=-1) (multipart_upload_list.max=-1) (op_create.max=74) (op_xattr_get_named_map.failures.max=-1) (action_http_get_request.failures.max=-1) (op_is_file.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.max=-1) (op_access.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_write_queue_duration.max=-1) (op_exists.max=-1));
means=((object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=160, sum=1681, mean=10.5063)) (action_http_head_request.mean=(samples=114, sum=612, mean=5.3684)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=40, sum=1712, mean=42.8000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=34, sum=212, mean=6.2353)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=40, sum=523, mean=13.0750)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=80, sum=2248, mean=28.1000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=80, sum=925, mean=11.5625)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=40, sum=843, mean=21.0750)) (stream_read_remote_stream_drain.mean=(samples=5, sum=6, mean=1.2000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=40, sum=1741, mean=43.5250)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:22,324 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:22,324 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,324 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,324 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,325 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,325 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000191 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000191&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622324
2024-11-16 17:20:22,337 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:20:22,337 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,338 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,338 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,338 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,338 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000191 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000191&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622324
2024-11-16 17:20:22,343 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,343 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:22,344 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:22,344 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:22,344 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000191 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000191&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622324
2024-11-16 17:20:22,356 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:22,356 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:22,356 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:20:22,356 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:22,357 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,357 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,357 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,357 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,357 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000192 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000192&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622357
2024-11-16 17:20:22,363 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:22,363 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,363 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:22,364 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1181154758243116602.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:22,365 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1181154758243116602.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (op_hflush=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (op_hsync=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (stream_write_total_time=0) (op_abort=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1));
maximums=((op_abort.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1181154758243116602.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,365 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,365 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:22,365 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1181154758243116602.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:22,365 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:22,366 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:22,366 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:22,366 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:22,366 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] a816350f-f985-4e5f-8ca8-679638bf3212-00000192 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000192&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=149&ts=1731777622357
2024-11-16 17:20:22,399 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:22,399 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:22,399 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.033s
2024-11-16 17:20:22,399 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1181154758243116602.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:22,399 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1181154758243116602.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,399 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1181154758243116602.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,399 [s3a-transfer-obs-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:22,400 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,401 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_time=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (object_put_request=1) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (op_abort.failures=0) (stream_write_bytes=65536) (op_hsync=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (stream_write_queue_duration=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=33) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=33) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=33, mean=33.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:22,401 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:22,402 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,402 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,402 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:22,402 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000193 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000193&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622402
2024-11-16 17:20:22,411 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:22,412 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:22,412 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,412 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:20:22,412 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:20:22,412 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:20:22,412 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,412 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,412 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:20:22,412 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a816350f-f985-4e5f-8ca8-679638bf3212-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-199&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000193&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=152&ts=1731777622402
2024-11-16 17:20:22,412 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:20:22,413 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://obs-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:20:22,414 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,414 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=100-65535&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000193&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622402
2024-11-16 17:20:22,433 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.021s
2024-11-16 17:20:22,433 [s3a-transfer-obs-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,434 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.022s
2024-11-16 17:20:22,434 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:20:22,434 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:20:22,435 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:20:22,435 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7537 bytes
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8647 bytes
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:20:22,436 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:20:22,437 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_closed=1) (stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (stream_read_total_bytes=65536) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes=200) (stream_read_seek_forward_operations=0) (stream_read_block_read=0) (action_http_get_request=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=1) (stream_read_fully_operations=1) (action_file_opened=1) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_incoming_ranges=1) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_operations=1) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_opened=1) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=10) (action_http_get_request.min=20) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=21) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=10) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=1));
means=((action_http_get_request.mean=(samples=2, sum=41, mean=20.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)));

2024-11-16 17:20:22,440 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:22,440 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,440 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,440 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000194 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000194&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622440
2024-11-16 17:20:22,444 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,444 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,445 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a816350f-f985-4e5f-8ca8-679638bf3212-00000194 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000194&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=236&ts=1731777622440
2024-11-16 17:20:22,463 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:20:22,466 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:22,466 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:22,466 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:22,466 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:22,466 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:22,467 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:22,467 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:22,467 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:22,468 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:22,468 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:22,468 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:22,470 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:22,470 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:22,470 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,470 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [237] a816350f-f985-4e5f-8ca8-679638bf3212-00000194 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000194&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=237&ts=1731777622440
2024-11-16 17:20:22,476 [s3a-transfer-obs-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:22,477 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:22,477 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:22,477 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:22,477 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:22,477 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777622394; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:22,477 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:22,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:22,477 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:22,478 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,478 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] a816350f-f985-4e5f-8ca8-679638bf3212-00000194 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000194&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=155&ts=1731777622440
2024-11-16 17:20:22,479 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,486 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] a816350f-f985-4e5f-8ca8-679638bf3212-00000194 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000194/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000194&t0=236&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=155&ts=1731777622440
2024-11-16 17:20:22,492 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:20:22,493 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:22,493 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:20:22,493 [s3a-transfer-obs-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:20:22,493 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:20:22,493 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.026s
2024-11-16 17:20:22,493 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:22,493 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:22,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:22,508 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 50, active threads = 0, queued tasks = 0, completed tasks = 50], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_bulk_delete_request=82) (op_list_status.failures=0) (op_abort=0) (op_list_status=0) (directories_created=41) (committer_stage_file_upload.failures=0) (directories_deleted=0) (stream_write_queue_duration=0) (audit_access_check_failure=0) (files_deleted=41) (multipart_upload_aborted=0) (stream_read_fully_operations=2) (committer_commits.failures=0) (action_http_head_request.failures=0) (op_hflush=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads_committed=0) (op_get_file_status=2) (stream_read_seek_backward_operations=0) (object_continue_list_request=0) (op_is_file.failures=0) (files_delete_rejected=0) (store_exists_probe.failures=0) (op_xattr_list.failures=0) (audit_request_execution=487) (committer_load_single_pending_file=0) (fake_directories_deleted=41) (object_bulk_delete_request.failures=0) (object_put_bytes=2686976) (stream_write_total_time=0) (stream_read_vectored_operations=29) (files_copied=0) (stream_write_block_uploads=41) (stream_read_opened=6) (object_put_request.failures=0) (stream_write_queue_duration.failures=0) (committer_jobs_completed=0) (op_create.failures=0) (multipart_instantiated=0) (object_multipart_aborted=0) (store_io_retry=0) (committer_commits_completed=0) (object_delete_objects=82) (committer_magic_marker_put=0) (stream_read_unbuffered=2) (committer_commits_reverted=0) (object_multipart_initiated.failures=0) (audit_failure=0) (op_exists.failures=0) (committer_magic_marker_put.failures=0) (stream_read_closed=6) (object_put_request_completed=82) (stream_read_remote_stream_aborted.failures=0) (op_glob_status.failures=0) (multipart_upload_list=0) (op_get_file_status.failures=0) (object_copy_requests=0) (committer_commits_created=0) (op_list_files=0) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=39) (op_xattr_get_map=0) (action_executor_acquired.failures=0) (ignored_errors=0) (stream_write_exceptions_completing_upload=0) (op_create=41) (object_select_requests=0) (stream_read_operations_incomplete=0) (op_list_located_status=0) (store_io_request=487) (stream_read_seek_forward_operations=0) (op_delete=41) (committer_stage_file_upload=0) (op_access=0) (op_create_non_recursive=0) (object_put_request=82) (op_open=35) (files_copied_bytes=0) (op_list_files.failures=0) (stream_read_close_operations=35) (stream_read_vectored_incoming_ranges=93) (op_is_directory=0) (op_abort.failures=0) (op_is_file=0) (op_glob_status=0) (op_copy_from_local_file.failures=0) (action_file_opened.failures=0) (committer_jobs_failed=0) (multipart_upload_list.failures=0) (multipart_upload_part_put_bytes=0) (delegation_tokens_issued=0) (op_xattr_get_map.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_operations=6) (action_http_head_request=117) (stream_read_total_bytes=404642) (op_xattr_get_named_map=0) (fake_directories_created=0) (stream_read_vectored_read_bytes_discarded=49026) (op_createfile.failures=0) (stream_read_bytes_discarded_in_close=392016) (op_get_file_checksum.failures=0) (stream_read_remote_stream_drain=6) (delegation_tokens_issued.failures=0) (multipart_upload_abort_under_path_invoked=0) (object_metadata_request=117) (action_http_get_request=42) (object_delete_request.failures=0) (committer_magic_files_created=0) (op_is_directory.failures=0) (op_get_content_summary.failures=0) (stream_read_seek_bytes_discarded=0) (object_delete_request=0) (op_xattr_get_named.failures=0) (op_get_file_checksum=0) (store_exists_probe=0) (op_rename.failures=0) (op_rename=0) (op_delete.failures=0) (files_created=41) (stream_write_bytes=2686976) (committer_commits_aborted=0) (object_continue_list_request.failures=0) (stream_read_seek_bytes_skipped=0) (stream_write_total_data=5373952) (op_mkdirs.failures=0) (stream_read_seek_operations=0) (audit_span_creation=161) (stream_read_bytes_backwards_on_seek=0) (committer_tasks_completed=0) (stream_write_exceptions=0) (object_list_request=164) (multipart_upload_started=0) (op_get_delegation_token.failures=0) (op_createfile=0) (object_multipart_initiated=0) (committer_bytes_uploaded=0) (op_xattr_get_named=0) (op_xattr_list=0) (stream_read_remote_stream_aborted=0) (op_mkdirs=41) (stream_read_bytes=12626) (op_openfile=0) (multipart_upload_completed=0) (op_hsync=0) (stream_read_seek_policy_changed=37) (op_get_content_summary=0) (committer_commit_job.failures=0) (op_access.failures=0) (object_list_request.failures=0) (committer_materialize_file.failures=0) (stream_read_exceptions=0) (op_xattr_get_named_map.failures=0) (action_http_get_request.failures=0) (action_file_opened=35) (committer_bytes_committed=0) (object_multipart_aborted.failures=0) (committer_materialize_file=0) (multipart_upload_part_put=0) (op_copy_from_local_file=0) (op_get_delegation_token=0) (committer_tasks_failed=0) (committer_commit_job=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (op_exists=0) (store_io_throttled=0) (committer_load_single_pending_file.failures=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=41));
minimums=((action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (committer_stage_file_upload.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_http_head_request.min=2) (object_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.min=20) (committer_materialize_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_access.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.min=-1) (committer_stage_file_upload.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_delete_request.min=-1) (committer_materialize_file.min=-1) (op_delete.min=23) (op_list_files.failures.min=-1) (object_put_request.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_directory.min=-1) (op_createfile.failures.min=-1) (op_create.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.min=-1) (op_abort.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.min=4) (op_xattr_get_named_map.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named.min=-1) (op_rename.failures.min=-1) (op_xattr_list.failures.min=-1) (object_put_request.min=33) (op_rename.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.min=-1) (object_list_request.min=4) (action_file_opened.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.min=10) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.min=6) (object_multipart_aborted.failures.min=-1) (op_createfile.min=-1) (op_delete.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1) (stream_write_queue_duration.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.min=20) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.min=-1) (op_access.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (committer_commit_job.min=-1) (op_exists.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.min=-1) (op_create.min=5) (op_list_files.min=-1) (object_multipart_aborted.min=-1) (op_is_file.min=-1));
maximums=((op_abort.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.failures.max=-1) (action_file_opened.max=15) (op_is_directory.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (op_xattr_list.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.max=32) (object_put_request.max=104) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.max=74) (op_is_file.max=-1) (op_createfile.max=-1) (op_mkdirs.max=346) (action_file_opened.failures.max=-1) (op_is_directory.max=-1) (op_list_status.failures.max=-1) (action_executor_acquired.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=210) (op_get_content_summary.max=-1) (object_multipart_aborted.failures.max=-1) (store_exists_probe.max=-1) (committer_commit_job.max=-1) (op_rename.max=-1) (op_copy_from_local_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_status.failures.max=-1) (op_list_status.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (action_http_head_request.max=19) (action_http_get_request.max=43) (stream_read_remote_stream_drain.max=2) (op_rename.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.max=-1) (committer_materialize_file.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.max=-1) (op_delete.max=111) (object_delete_request.failures.max=-1) (op_list_files.failures.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.max=5) (object_multipart_initiated.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_copy_from_local_file.max=-1) (op_exists.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=884, mean=21.0476)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=82, sum=939, mean=11.4512)) (op_mkdirs.mean=(samples=41, sum=1773, mean=43.2439)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=41, sum=530, mean=12.9268)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=82, sum=2293, mean=27.9634)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=35, sum=222, mean=6.3429)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=164, sum=1724, mean=10.5122)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=41, sum=1739, mean=42.4146)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=117, sum=630, mean=5.3846)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=7, mean=1.1667)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:22,509 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:22,509 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,510 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,510 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a816350f-f985-4e5f-8ca8-679638bf3212-00000195 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000195&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=238&ts=1731777622509
2024-11-16 17:20:22,516 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:22,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,517 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,517 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a816350f-f985-4e5f-8ca8-679638bf3212-00000195 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000195&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=238&ts=1731777622509
2024-11-16 17:20:22,520 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,521 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:22,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:22,521 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:22,521 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a816350f-f985-4e5f-8ca8-679638bf3212-00000195 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000195&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=238&ts=1731777622509
2024-11-16 17:20:22,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:22,539 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:22,539 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.018s
2024-11-16 17:20:22,539 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:22,539 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,539 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,539 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,539 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,539 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a816350f-f985-4e5f-8ca8-679638bf3212-00000196 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000196&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=238&ts=1731777622539
2024-11-16 17:20:22,548 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:22,549 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,549 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:22,549 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17122499386138047682.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:22,550 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17122499386138047682.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (stream_write_total_time=0) (op_abort=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (object_put_request.failures=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (op_hflush=0) (multipart_upload_part_put=0) (op_hsync=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (object_put_request=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17122499386138047682.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,550 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,550 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:22,550 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17122499386138047682.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:22,550 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:22,550 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:22,550 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:22,550 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:22,550 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a816350f-f985-4e5f-8ca8-679638bf3212-00000196 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000196&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=158&ts=1731777622539
2024-11-16 17:20:22,570 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:22,570 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:22,571 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.021s
2024-11-16 17:20:22,571 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17122499386138047682.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:22,571 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17122499386138047682.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,571 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17122499386138047682.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,571 [s3a-transfer-obs-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:22,571 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,572 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (op_abort=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (op_hflush=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (object_multipart_aborted=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (stream_write_total_time=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=20) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=20) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=20, mean=20.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:22,572 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:22,573 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,573 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,574 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:22,574 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [239] a816350f-f985-4e5f-8ca8-679638bf3212-00000197 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000197/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000197&t0=239&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=239&ts=1731777622573
2024-11-16 17:20:22,577 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:22,577 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:22,577 [s3a-transfer-obs-bucket-unbounded-pool2-t51] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,577 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:20:22,578 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_forward_operations=0) (action_http_get_request=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=0) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_close_operations=1) (stream_read_vectored_incoming_ranges=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_opened=0) (stream_read_bytes=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=4) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:22,580 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:22,580 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,580 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,580 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a816350f-f985-4e5f-8ca8-679638bf3212-00000198 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000198&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=238&ts=1731777622579
2024-11-16 17:20:22,584 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,584 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,584 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a816350f-f985-4e5f-8ca8-679638bf3212-00000198 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000198&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=238&ts=1731777622579
2024-11-16 17:20:22,595 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:20:22,596 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:22,596 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:22,596 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:22,596 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:22,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:22,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:22,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:22,596 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:22,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:22,596 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:22,596 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:22,597 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:22,597 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:22,597 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,598 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [240] a816350f-f985-4e5f-8ca8-679638bf3212-00000198 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000198&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=240&ts=1731777622579
2024-11-16 17:20:22,604 [s3a-transfer-obs-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:22,604 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:22,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:22,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:22,604 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:22,605 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777622568; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:22,605 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:22,605 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:22,605 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:22,605 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:22,605 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:22,605 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:22,606 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:22,606 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:22,606 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,606 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,606 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:22,606 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,606 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] a816350f-f985-4e5f-8ca8-679638bf3212-00000198 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000198&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=160&ts=1731777622579
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,615 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] a816350f-f985-4e5f-8ca8-679638bf3212-00000198 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000198/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000198&t0=238&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=160&ts=1731777622579
2024-11-16 17:20:22,624 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:20:22,624 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:20:22,625 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:20:22,625 [s3a-transfer-obs-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:20:22,625 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:20:22,625 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:20:22,625 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:22,625 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:22,626 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:22,643 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 52, active threads = 0, queued tasks = 0, completed tasks = 52], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_bytes_uploaded=0) (directories_created=42) (committer_stage_file_upload.failures=0) (stream_read_closed=6) (op_open=36) (committer_tasks_failed=0) (multipart_upload_aborted=0) (committer_commits_created=0) (op_xattr_list.failures=0) (committer_magic_marker_put=0) (op_get_file_status.failures=0) (op_xattr_get_named.failures=0) (fake_directories_created=0) (op_xattr_get_map=0) (object_multipart_initiated.failures=0) (stream_read_operations=6) (stream_read_operations_incomplete=0) (stream_read_unbuffered=2) (op_xattr_get_named_map.failures=0) (delegation_tokens_issued=0) (stream_write_block_uploads_committed=0) (op_create=42) (action_http_head_request.failures=0) (stream_write_bytes=2752512) (op_createfile=0) (op_hflush=0) (stream_read_seek_forward_operations=0) (store_io_throttled=0) (action_file_opened=36) (stream_read_vectored_incoming_ranges=93) (action_http_head_request=120) (action_file_opened.failures=0) (op_get_file_checksum.failures=0) (delegation_tokens_issued.failures=0) (stream_write_exceptions=0) (op_is_file=0) (committer_commits.failures=0) (op_xattr_get_map.failures=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (stream_read_vectored_operations=29) (object_list_request=168) (directories_deleted=0) (stream_read_remote_stream_aborted.failures=0) (committer_magic_marker_put.failures=0) (multipart_instantiated=0) (action_executor_acquired.failures=0) (fake_directories_deleted=42) (multipart_upload_completed=0) (stream_read_seek_policy_changed=38) (object_multipart_aborted.failures=0) (op_list_files.failures=0) (stream_write_total_time=0) (stream_write_block_uploads=42) (op_delete.failures=0) (committer_magic_files_created=0) (op_abort=0) (committer_commits_aborted=0) (stream_write_queue_duration.failures=0) (op_rename.failures=0) (op_glob_status=0) (stream_read_bytes_discarded_in_abort=0) (op_get_file_status=2) (object_bulk_delete_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (ignored_errors=0) (op_get_delegation_token.failures=0) (committer_commit_job=0) (op_exists=0) (op_is_file.failures=0) (files_created=42) (object_put_request_completed=84) (stream_read_bytes_backwards_on_seek=0) (op_delete=42) (stream_read_remote_stream_drain.failures=0) (stream_write_total_data=5505024) (op_glob_status.failures=0) (stream_read_seek_backward_operations=0) (object_list_request.failures=0) (stream_read_bytes_discarded_in_close=392016) (object_put_bytes=2752512) (files_deleted=42) (op_get_file_checksum=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (op_access=0) (op_create.failures=0) (committer_commit_job.failures=0) (stream_read_opened=6) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=6) (multipart_upload_part_put_bytes=0) (op_exists.failures=0) (committer_bytes_committed=0) (object_continue_list_request.failures=0) (stream_read_bytes=12626) (stream_read_total_bytes=404642) (stream_write_queue_duration=0) (files_copied=0) (stream_read_vectored_combined_ranges=39) (op_copy_from_local_file=0) (op_list_located_status=0) (op_create_non_recursive=0) (stream_read_fully_operations=2) (committer_load_single_pending_file.failures=0) (committer_stage_file_upload=0) (audit_failure=0) (audit_request_execution=498) (op_openfile=0) (object_select_requests=0) (object_delete_request.failures=0) (audit_access_check_failure=0) (op_hsync=0) (op_createfile.failures=0) (op_abort.failures=0) (op_xattr_get_named=0) (op_list_files=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map=0) (multipart_upload_started=0) (op_mkdirs=42) (store_io_retry=0) (stream_read_seek_bytes_skipped=0) (op_copy_from_local_file.failures=0) (stream_read_seek_operations=0) (store_io_request=498) (op_get_delegation_token=0) (action_http_get_request=42) (object_metadata_request=120) (op_list_status=0) (object_multipart_aborted=0) (stream_aborted=0) (op_is_directory.failures=0) (multipart_upload_list=0) (op_access.failures=0) (object_delete_request=0) (op_xattr_list=0) (audit_span_creation=165) (object_put_request=84) (committer_materialize_file=0) (op_rename=0) (files_delete_rejected=0) (object_copy_requests=0) (files_copied_bytes=0) (op_list_status.failures=0) (stream_read_close_operations=36) (op_get_content_summary=0) (store_exists_probe=0) (multipart_upload_list.failures=0) (committer_jobs_completed=0) (stream_read_remote_stream_aborted=0) (op_get_content_summary.failures=0) (store_exists_probe.failures=0) (committer_jobs_failed=0) (stream_read_exceptions=0) (object_delete_objects=84) (object_continue_list_request=0) (committer_commits_reverted=0) (stream_read_vectored_read_bytes_discarded=49026) (object_bulk_delete_request=84) (op_mkdirs.failures=0) (stream_write_block_uploads_aborted=0) (committer_commits_completed=0) (committer_tasks_completed=0) (op_is_directory=0) (committer_materialize_file.failures=0) (stream_read_version_mismatches=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=42));
minimums=((op_get_delegation_token.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.min=20) (committer_commit_job.min=-1) (action_file_opened.min=4) (op_list_files.min=-1) (delegation_tokens_issued.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.failures.min=-1) (op_create.min=5) (action_file_opened.failures.min=-1) (op_xattr_get_map.min=-1) (op_rename.min=-1) (multipart_upload_list.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.min=2) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named.min=-1) (op_delete.failures.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.min=-1) (action_http_get_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_bulk_delete_request.min=6) (committer_commit_job.failures.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_status.min=4) (multipart_upload_list.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_delete.min=23) (object_multipart_initiated.failures.min=-1) (op_is_directory.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.failures.min=-1) (op_list_status.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.failures.min=-1) (object_list_request.min=4) (op_get_content_summary.min=-1) (op_is_file.min=-1) (op_rename.failures.min=-1) (action_http_get_request.min=20) (op_access.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=20) (object_delete_request.min=-1) (object_put_request.failures.min=-1) (op_access.failures.min=-1));
maximums=((op_get_file_checksum.max=-1) (op_mkdirs.max=346) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.max=5) (op_xattr_list.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=15) (op_is_file.max=-1) (committer_load_single_pending_file.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (op_delete.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.max=2) (store_exists_probe.max=-1) (op_createfile.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.max=-1) (op_create.max=74) (op_is_directory.max=-1) (op_is_directory.failures.max=-1) (object_list_request.failures.max=-1) (object_put_request.max=104) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.max=-1) (object_list_request.max=210) (op_xattr_list.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named.max=-1) (committer_materialize_file.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.failures.max=-1) (op_list_files.max=-1) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.max=-1) (op_rename.max=-1) (multipart_upload_list.failures.max=-1) (op_create.failures.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.failures.max=-1) (op_access.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_delete_request.failures.max=-1) (op_rename.failures.max=-1) (action_http_get_request.max=43) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.max=-1) (object_bulk_delete_request.max=32) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (committer_commit_job.max=-1) (op_abort.max=-1) (object_continue_list_request.max=-1) (object_put_request.failures.max=-1) (op_list_status.max=-1) (op_delete.max=111) (op_exists.max=-1) (op_glob_status.failures.max=-1) (action_http_head_request.max=19) (op_access.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=84, sum=957, mean=11.3929)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=168, sum=1757, mean=10.4583)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=120, sum=640, mean=5.3333)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=42, sum=540, mean=12.8571)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=42, sum=1803, mean=42.9286)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=36, sum=226, mean=6.2778)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=884, mean=21.0476)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=84, sum=2330, mean=27.7381)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=7, mean=1.1667)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=42, sum=1768, mean=42.0952)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:22,643 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:22,643 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,643 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,644 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,644 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a816350f-f985-4e5f-8ca8-679638bf3212-00000199 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000199&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=241&ts=1731777622643
2024-11-16 17:20:22,651 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:22,651 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,652 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,652 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a816350f-f985-4e5f-8ca8-679638bf3212-00000199 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000199&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=241&ts=1731777622643
2024-11-16 17:20:22,659 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,659 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:22,659 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:22,659 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:22,659 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a816350f-f985-4e5f-8ca8-679638bf3212-00000199 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000199&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=241&ts=1731777622643
2024-11-16 17:20:22,675 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:22,675 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:22,675 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:20:22,675 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:22,676 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,676 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,676 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,676 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,676 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a816350f-f985-4e5f-8ca8-679638bf3212-00000200 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000200&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=241&ts=1731777622676
2024-11-16 17:20:22,681 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:22,681 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,681 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:22,682 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-579233511741892912.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:22,683 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-579233511741892912.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (op_hflush=0) (stream_write_total_data=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_put_request=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (object_put_request.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1));
maximums=((multipart_upload_completed.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-579233511741892912.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,683 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,683 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:22,683 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-579233511741892912.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:22,683 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:22,683 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:22,683 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:22,683 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:22,684 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a816350f-f985-4e5f-8ca8-679638bf3212-00000200 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000200&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=163&ts=1731777622676
2024-11-16 17:20:22,720 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:22,720 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:22,720 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.037s
2024-11-16 17:20:22,720 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-579233511741892912.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:22,720 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-579233511741892912.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,720 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-579233511741892912.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,720 [s3a-transfer-obs-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:22,720 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,721 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_put_request=1) (object_put_request.failures=0) (stream_write_block_uploads=1) (op_abort.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_abort=0) (op_hsync=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=37) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=37) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=37, mean=37.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:22,721 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:22,723 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,723 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,723 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:22,724 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] a816350f-f985-4e5f-8ca8-679638bf3212-00000201 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000201/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000201&t0=242&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=242&ts=1731777622723
2024-11-16 17:20:22,728 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:22,728 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:22,728 [s3a-transfer-obs-bucket-unbounded-pool2-t53] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,728 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:20:22,729 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request.failures=0) (stream_read_close_operations=1) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_block_read=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_version_mismatches=0) (stream_read_total_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_combined_ranges=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=0) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_closed=0) (stream_read_vectored_operations=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=0) (stream_read_opened=0) (stream_read_operations_incomplete=0) (action_http_get_request=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=5) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=5) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:22,730 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:22,730 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,730 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,730 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a816350f-f985-4e5f-8ca8-679638bf3212-00000202 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000202&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=241&ts=1731777622730
2024-11-16 17:20:22,732 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,733 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,733 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a816350f-f985-4e5f-8ca8-679638bf3212-00000202 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000202&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=241&ts=1731777622730
2024-11-16 17:20:22,742 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:22,742 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:22,749 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:22,749 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:22,749 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:22,749 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:22,749 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:22,750 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:22,750 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:22,750 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:22,750 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:22,750 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:22,752 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:22,753 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:22,753 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,753 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a816350f-f985-4e5f-8ca8-679638bf3212-00000202 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000202&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=243&ts=1731777622730
2024-11-16 17:20:22,762 [s3a-transfer-obs-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:22,763 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:20:22,763 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:22,763 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:22,763 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:22,763 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777622715; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:22,764 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:22,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:22,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:22,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:22,764 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,765 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] a816350f-f985-4e5f-8ca8-679638bf3212-00000202 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000202&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=164&ts=1731777622730
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,775 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] a816350f-f985-4e5f-8ca8-679638bf3212-00000202 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000202/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000202&t0=241&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=164&ts=1731777622730
2024-11-16 17:20:22,798 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:20:22,798 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:20:22,798 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.023s
2024-11-16 17:20:22,798 [s3a-transfer-obs-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:20:22,799 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.035s
2024-11-16 17:20:22,799 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.049s
2024-11-16 17:20:22,799 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:22,800 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:22,801 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:22,812 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 54, active threads = 0, queued tasks = 0, completed tasks = 54], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_combined_ranges=39) (stream_read_bytes_backwards_on_seek=0) (op_glob_status.failures=0) (op_xattr_list=0) (stream_read_fully_operations=2) (fake_directories_deleted=43) (op_openfile=0) (audit_access_check_failure=0) (stream_read_vectored_read_bytes_discarded=49026) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_xattr_get_map.failures=0) (op_mkdirs=43) (op_xattr_get_named_map=0) (op_abort=0) (files_delete_rejected=0) (multipart_upload_started=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (object_put_bytes=2818048) (ignored_errors=0) (op_mkdirs.failures=0) (op_exists=0) (committer_magic_marker_put.failures=0) (op_create.failures=0) (object_multipart_initiated.failures=0) (op_list_files.failures=0) (committer_materialize_file.failures=0) (files_copied=0) (stream_read_bytes=12626) (audit_request_execution=509) (op_xattr_get_map=0) (op_copy_from_local_file.failures=0) (committer_stage_file_upload.failures=0) (object_delete_objects=86) (stream_read_opened=6) (stream_read_seek_forward_operations=0) (stream_write_total_time=0) (object_copy_requests=0) (op_get_file_checksum.failures=0) (multipart_upload_list.failures=0) (stream_read_close_operations=37) (store_io_request=509) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_list.failures=0) (object_bulk_delete_request=86) (directories_created=43) (committer_load_single_pending_file.failures=0) (op_abort.failures=0) (op_xattr_get_named=0) (object_list_request=172) (op_create=43) (op_is_file.failures=0) (op_copy_from_local_file=0) (store_exists_probe=0) (op_createfile.failures=0) (object_select_requests=0) (store_io_throttled=0) (op_glob_status=0) (op_is_directory.failures=0) (object_continue_list_request=0) (object_multipart_aborted=0) (object_metadata_request=123) (committer_tasks_completed=0) (object_list_request.failures=0) (stream_read_exceptions=0) (store_io_retry=0) (object_continue_list_request.failures=0) (committer_materialize_file=0) (op_rename.failures=0) (stream_write_block_uploads=43) (delegation_tokens_issued=0) (stream_write_total_data=5636096) (object_delete_request.failures=0) (committer_jobs_failed=0) (files_deleted=43) (store_exists_probe.failures=0) (stream_read_bytes_discarded_in_close=392016) (stream_read_remote_stream_drain=6) (op_rename=0) (multipart_upload_abort_under_path_invoked=0) (op_delete.failures=0) (stream_write_block_uploads_committed=0) (action_executor_acquired=0) (op_list_status=0) (directories_deleted=0) (stream_read_seek_operations=0) (delegation_tokens_issued.failures=0) (stream_read_closed=6) (object_put_request=86) (fake_directories_created=0) (files_copied_bytes=0) (audit_span_creation=169) (committer_bytes_committed=0) (stream_read_unbuffered=2) (committer_stage_file_upload=0) (action_file_opened.failures=0) (op_access.failures=0) (committer_commits_reverted=0) (committer_commit_job=0) (op_list_files=0) (stream_write_queue_duration=0) (stream_write_bytes=2818048) (committer_tasks_failed=0) (op_is_file=0) (op_list_located_status=0) (multipart_upload_completed=0) (stream_read_vectored_operations=29) (op_xattr_get_named.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (audit_failure=0) (stream_read_total_bytes=404642) (committer_magic_files_created=0) (op_get_file_checksum=0) (committer_commits_created=0) (op_get_delegation_token=0) (stream_write_exceptions=0) (op_hflush=0) (committer_commits.failures=0) (op_create_non_recursive=0) (object_put_request.failures=0) (op_open=37) (stream_read_version_mismatches=0) (committer_jobs_completed=0) (object_multipart_aborted.failures=0) (op_get_content_summary=0) (op_get_file_status=2) (action_http_head_request=123) (op_list_status.failures=0) (committer_commits_completed=0) (op_delete=43) (committer_bytes_uploaded=0) (op_createfile=0) (stream_read_vectored_incoming_ranges=93) (stream_read_operations_incomplete=0) (committer_commits_aborted=0) (multipart_instantiated=0) (stream_read_seek_policy_changed=39) (op_get_delegation_token.failures=0) (stream_read_operations=6) (op_hsync=0) (stream_write_queue_duration.failures=0) (op_get_file_status.failures=0) (op_get_content_summary.failures=0) (op_is_directory=0) (action_http_get_request=42) (op_exists.failures=0) (stream_read_remote_stream_aborted=0) (multipart_upload_list=0) (op_access=0) (multipart_upload_part_put_bytes=0) (object_bulk_delete_request.failures=0) (action_file_opened=37) (object_put_request_completed=86) (committer_commit_job.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (multipart_upload_aborted=0) (object_delete_request=0) (committer_load_single_pending_file=0) (stream_read_seek_bytes_discarded=0) (stream_write_block_uploads_aborted=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named_map.failures=0) (action_http_head_request.failures=0) (stream_read_seek_bytes_skipped=0) (files_created=43));
gauges=((object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=43) (client_side_encryption_enabled=0));
minimums=((committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (op_get_delegation_token.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.failures.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.min=-1) (op_is_directory.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.min=-1) (op_exists.min=-1) (op_create.failures.min=-1) (op_glob_status.failures.min=-1) (multipart_upload_list.min=-1) (object_delete_request.min=-1) (committer_commit_job.min=-1) (committer_materialize_file.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_status.min=4) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_files.failures.min=-1) (op_rename.min=-1) (op_is_file.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.min=4) (action_http_get_request.min=20) (op_rename.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_files.min=-1) (op_get_file_checksum.min=-1) (object_continue_list_request.failures.min=-1) (op_create.min=5) (object_multipart_aborted.failures.min=-1) (op_access.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_initiated.min=-1) (op_delete.min=23) (committer_stage_file_upload.min=-1) (op_mkdirs.min=20) (op_createfile.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.failures.min=-1) (object_put_request.min=37) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.min=2) (store_exists_probe.failures.min=-1) (op_access.failures.min=-1) (op_delete.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_list.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_status.min=-1) (op_is_directory.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.min=-1) (object_bulk_delete_request.min=6) (object_delete_request.failures.min=-1) (op_list_status.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (op_list_files.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_drain.max=2) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_map.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=210) (object_list_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.failures.max=-1) (op_is_file.max=-1) (stream_write_queue_duration.max=-1) (action_http_get_request.max=43) (committer_commit_job.failures.max=-1) (op_glob_status.max=-1) (object_bulk_delete_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_delete.max=111) (stream_write_queue_duration.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_head_request.max=19) (op_get_file_checksum.failures.max=-1) (object_put_request.max=104) (object_multipart_aborted.max=-1) (op_xattr_list.max=-1) (committer_commit_job.max=-1) (op_rename.failures.max=-1) (op_abort.failures.max=-1) (op_mkdirs.max=346) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_exists.max=-1) (action_executor_acquired.failures.max=-1) (op_list_status.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.failures.max=-1) (action_file_opened.max=15) (committer_load_single_pending_file.failures.max=-1) (op_create.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_access.failures.max=-1) (committer_materialize_file.max=-1) (op_access.max=-1) (op_createfile.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_content_summary.max=-1) (op_get_file_status.max=5) (committer_magic_marker_put.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_create.max=74) (delegation_tokens_issued.max=-1) (op_rename.max=-1) (multipart_upload_list.max=-1) (op_abort.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_list.failures.max=-1) (op_createfile.failures.max=-1) (object_delete_request.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.max=-1) (multipart_upload_list.failures.max=-1) (op_exists.failures.max=-1) (object_bulk_delete_request.max=32) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.failures.max=-1));
means=((object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=43, sum=1835, mean=42.6744)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=884, mean=21.0476)) (object_put_request.mean=(samples=86, sum=2383, mean=27.7093)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=86, sum=990, mean=11.5116)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=7, mean=1.1667)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=123, sum=654, mean=5.3171)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=43, sum=1819, mean=42.3023)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=172, sum=1787, mean=10.3895)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=43, sum=546, mean=12.6977)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=37, sum=231, mean=6.2432)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:22,813 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:22,813 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,813 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,813 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,813 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,813 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a816350f-f985-4e5f-8ca8-679638bf3212-00000203 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000203&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=244&ts=1731777622813
2024-11-16 17:20:22,820 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:22,820 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,820 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,820 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,820 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,820 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a816350f-f985-4e5f-8ca8-679638bf3212-00000203 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000203&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=244&ts=1731777622813
2024-11-16 17:20:22,822 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,823 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:22,823 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:22,823 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:22,823 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a816350f-f985-4e5f-8ca8-679638bf3212-00000203 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000203&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=244&ts=1731777622813
2024-11-16 17:20:22,837 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:22,837 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:22,837 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:20:22,837 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:22,837 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,837 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,837 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,837 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,838 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a816350f-f985-4e5f-8ca8-679638bf3212-00000204 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000204&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=244&ts=1731777622837
2024-11-16 17:20:22,842 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:22,842 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,843 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:22,843 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15893986981431226282.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:22,843 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15893986981431226282.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_bytes=65536) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (op_abort=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (object_put_request=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15893986981431226282.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,843 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,844 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:22,844 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15893986981431226282.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:22,844 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:22,844 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:22,844 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:22,844 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:22,844 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a816350f-f985-4e5f-8ca8-679638bf3212-00000204 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000204&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=166&ts=1731777622837
2024-11-16 17:20:22,871 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:22,871 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:22,871 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.027s
2024-11-16 17:20:22,871 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15893986981431226282.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:22,871 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15893986981431226282.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,871 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-15893986981431226282.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,871 [s3a-transfer-obs-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:22,871 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,872 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (op_hsync=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (op_abort=0) (op_hflush=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=27) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=27) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:22,872 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:22,872 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,873 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,873 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:22,873 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a816350f-f985-4e5f-8ca8-679638bf3212-00000205 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000205&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=244&ts=1731777622872
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:22,876 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,876 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:22,876 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,876 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:22,877 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a816350f-f985-4e5f-8ca8-679638bf3212-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000205&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=169&ts=1731777622872
2024-11-16 17:20:22,877 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:20:22,877 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:20:22,877 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,878 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:22,878 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:22,878 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] a816350f-f985-4e5f-8ca8-679638bf3212-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=0-159&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000205&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=173&ts=1731777622872
2024-11-16 17:20:22,897 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:20:22,897 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:22,897 [s3a-transfer-obs-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,898 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:20:22,899 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:20:22,899 [s3a-transfer-obs-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:22,900 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_forward_operations=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes=300) (action_http_get_request=2) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (stream_read_prefetch_operations=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=2) (stream_read_seek_policy_changed=1) (action_executor_acquired=0) (stream_read_opened=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (stream_aborted=0) (stream_read_operations=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=2) (stream_read_vectored_read_bytes_discarded=20) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_total_bytes=300) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=4));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=21) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=4) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=21) (action_file_opened.max=4) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=42, mean=21.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:22,901 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:22,901 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,901 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,901 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a816350f-f985-4e5f-8ca8-679638bf3212-00000206 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000206&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=244&ts=1731777622901
2024-11-16 17:20:22,905 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,905 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,905 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a816350f-f985-4e5f-8ca8-679638bf3212-00000206 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000206&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=244&ts=1731777622901
2024-11-16 17:20:22,911 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:22,911 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:22,911 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:22,911 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:22,911 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:22,911 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:22,911 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:22,911 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:22,912 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:22,912 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:22,912 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:22,912 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:22,912 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:22,912 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:22,912 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,912 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] a816350f-f985-4e5f-8ca8-679638bf3212-00000206 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000206&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=245&ts=1731777622901
2024-11-16 17:20:22,917 [s3a-transfer-obs-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:22,917 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:20:22,917 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:22,917 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:22,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:22,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777622865; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:22,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:22,918 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:22,918 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:22,918 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:22,918 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:22,918 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:22,918 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:22,918 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:22,918 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,918 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,918 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:22,919 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,919 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a816350f-f985-4e5f-8ca8-679638bf3212-00000206 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000206&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=31&ts=1731777622901
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:22,926 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a816350f-f985-4e5f-8ca8-679638bf3212-00000206 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000206/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000206&t0=244&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=31&ts=1731777622901
2024-11-16 17:20:22,936 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:20:22,936 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:20:22,936 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:20:22,936 [s3a-transfer-obs-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.018s
2024-11-16 17:20:22,936 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:20:22,936 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:20:22,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:22,936 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:22,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:22,952 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 55, active threads = 0, queued tasks = 0, completed tasks = 55], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_named.failures=0) (committer_magic_files_created=0) (committer_bytes_uploaded=0) (ignored_errors=0) (op_create.failures=0) (op_createfile.failures=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired=0) (op_open=38) (op_get_file_status.failures=0) (op_get_file_checksum.failures=0) (committer_tasks_completed=0) (op_xattr_list.failures=0) (op_xattr_get_named_map.failures=0) (committer_load_single_pending_file=0) (object_put_request_completed=88) (op_mkdirs.failures=0) (stream_read_unbuffered=2) (op_exists=0) (op_list_located_status=0) (action_http_get_request=44) (op_get_file_status=2) (committer_stage_file_upload.failures=0) (files_deleted=44) (multipart_upload_list=0) (stream_write_exceptions=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=41) (stream_read_bytes_discarded_in_abort=0) (op_abort.failures=0) (stream_write_total_data=5767168) (stream_read_closed=6) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=6) (object_continue_list_request.failures=0) (committer_stage_file_upload=0) (action_http_head_request.failures=0) (op_list_status=0) (files_delete_rejected=0) (op_abort=0) (fake_directories_deleted=44) (object_put_request=88) (op_mkdirs=44) (object_multipart_aborted=0) (committer_commits.failures=0) (op_list_status.failures=0) (op_delete.failures=0) (op_copy_from_local_file.failures=0) (op_glob_status=0) (op_get_delegation_token.failures=0) (stream_read_vectored_operations=31) (object_multipart_initiated.failures=0) (op_copy_from_local_file=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired.failures=0) (multipart_upload_started=0) (stream_read_fully_operations=2) (object_bulk_delete_request.failures=0) (object_copy_requests=0) (op_exists.failures=0) (op_hflush=0) (committer_tasks_failed=0) (op_get_file_checksum=0) (op_get_delegation_token=0) (audit_span_creation=173) (stream_read_opened=6) (stream_read_bytes_backwards_on_seek=0) (stream_write_queue_duration.failures=0) (object_bulk_delete_request=88) (object_multipart_initiated=0) (stream_read_bytes_discarded_in_close=392016) (stream_read_remote_stream_aborted.failures=0) (op_create=44) (stream_write_block_uploads_committed=0) (stream_read_close_operations=38) (op_is_file=0) (op_xattr_get_map.failures=0) (stream_read_vectored_incoming_ranges=97) (audit_access_check_failure=0) (op_get_content_summary.failures=0) (stream_read_version_mismatches=0) (object_put_bytes=2883584) (multipart_upload_list.failures=0) (committer_materialize_file=0) (multipart_upload_aborted=0) (committer_bytes_committed=0) (committer_commits_completed=0) (audit_request_execution=522) (op_createfile=0) (committer_commit_job=0) (op_list_files.failures=0) (op_hsync=0) (op_access.failures=0) (store_exists_probe=0) (multipart_instantiated=0) (committer_commits_created=0) (op_xattr_get_named_map=0) (stream_write_queue_duration=0) (action_http_head_request=126) (op_rename.failures=0) (stream_read_seek_policy_changed=40) (object_select_requests=0) (action_file_opened.failures=0) (committer_magic_marker_put.failures=0) (object_delete_objects=88) (stream_read_seek_backward_operations=0) (op_xattr_list=0) (store_io_retry=0) (op_get_content_summary=0) (multipart_upload_part_put=0) (committer_load_single_pending_file.failures=0) (object_list_request.failures=0) (op_openfile=0) (op_is_directory=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_discarded=0) (object_metadata_request=126) (op_xattr_get_named=0) (stream_write_bytes=2883584) (directories_created=44) (stream_read_operations_incomplete=0) (store_io_throttled=0) (object_delete_request.failures=0) (committer_commit_job.failures=0) (committer_magic_marker_put=0) (op_xattr_get_map=0) (stream_read_seek_operations=0) (stream_write_total_time=0) (fake_directories_created=0) (stream_read_total_bytes=404942) (delegation_tokens_issued.failures=0) (op_create_non_recursive=0) (stream_read_exceptions=0) (op_is_directory.failures=0) (multipart_upload_part_put_bytes=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (object_continue_list_request=0) (stream_read_bytes=12926) (multipart_upload_completed=0) (op_access=0) (action_http_get_request.failures=0) (files_copied=0) (op_list_files=0) (committer_jobs_completed=0) (stream_read_vectored_read_bytes_discarded=49046) (stream_read_operations=6) (directories_deleted=0) (delegation_tokens_issued=0) (committer_commits_aborted=0) (stream_write_block_uploads_aborted=0) (stream_write_block_uploads=44) (op_rename=0) (files_copied_bytes=0) (stream_read_seek_forward_operations=0) (store_io_request=522) (object_list_request=176) (op_delete=44) (audit_failure=0) (files_created=44) (object_delete_request=0) (committer_commits_reverted=0) (committer_materialize_file.failures=0) (op_is_file.failures=0) (op_glob_status.failures=0) (committer_jobs_failed=0) (object_put_request.failures=0) (store_exists_probe.failures=0) (action_file_opened=38));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=44) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((committer_commit_job.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.min=27) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named_map.failures.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_bulk_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_createfile.min=-1) (op_delete.min=23) (committer_load_single_pending_file.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_file_status.min=4) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_abort.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.min=-1) (committer_magic_marker_put.min=-1) (action_http_head_request.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=21) (op_rename.failures.min=-1) (object_delete_request.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_access.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_mkdirs.min=20) (op_is_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_glob_status.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_write_queue_duration.min=-1) (object_put_request.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_access.min=-1) (op_get_delegation_token.min=-1) (object_list_request.min=4) (op_list_files.failures.min=-1) (op_xattr_list.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=4) (op_is_file.min=-1) (object_bulk_delete_request.min=6) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.failures.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_materialize_file.min=-1) (op_create.min=5) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (op_exists.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.min=2) (object_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((op_is_file.max=-1) (object_list_request.failures.max=-1) (op_mkdirs.max=346) (op_get_delegation_token.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (op_list_status.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_aborted.max=-1) (action_http_head_request.max=19) (op_delete.max=111) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (op_get_file_status.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.max=32) (object_list_request.max=210) (op_xattr_get_named.failures.max=-1) (op_glob_status.failures.max=-1) (op_create.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_access.max=-1) (op_glob_status.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_rename.max=-1) (action_file_opened.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (op_create.max=74) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.max=5) (object_delete_request.max=-1) (op_exists.max=-1) (op_get_file_checksum.max=-1) (committer_commit_job.failures.max=-1) (store_exists_probe.max=-1) (committer_materialize_file.max=-1) (op_rename.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=2) (committer_load_single_pending_file.max=-1) (action_http_get_request.max=43) (committer_magic_marker_put.max=-1) (delegation_tokens_issued.failures.max=-1) (action_file_opened.max=15) (op_is_directory.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.failures.max=-1) (op_list_files.max=-1) (object_continue_list_request.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_content_summary.max=-1) (op_createfile.failures.max=-1) (object_put_request.failures.max=-1) (op_access.failures.max=-1) (object_put_request.max=104) (op_xattr_get_map.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.max=-1) (committer_commit_job.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.max=-1) (op_createfile.max=-1) (action_executor_acquired.max=-1) (committer_stage_file_upload.max=-1) (op_is_file.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=44, sum=1859, mean=42.2500)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=38, sum=235, mean=6.1842)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=7, mean=1.1667)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=176, sum=1809, mean=10.2784)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=44, sum=552, mean=12.5455)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=926, mean=21.0455)) (action_http_head_request.mean=(samples=126, sum=663, mean=5.2619)) (object_bulk_delete_request.mean=(samples=88, sum=1007, mean=11.4432)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=44, sum=1844, mean=41.9091)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=88, sum=2424, mean=27.5455)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:22,952 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:22,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,953 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,953 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a816350f-f985-4e5f-8ca8-679638bf3212-00000207 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000207&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=246&ts=1731777622952
2024-11-16 17:20:22,959 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:22,959 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,959 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:22,959 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:22,959 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:22,960 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a816350f-f985-4e5f-8ca8-679638bf3212-00000207 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000207&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=246&ts=1731777622952
2024-11-16 17:20:22,962 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:22,963 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:22,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:22,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:22,963 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a816350f-f985-4e5f-8ca8-679638bf3212-00000207 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000207&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=246&ts=1731777622952
2024-11-16 17:20:22,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:22,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:22,976 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:20:22,976 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:22,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:22,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,977 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:22,977 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:22,977 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a816350f-f985-4e5f-8ca8-679638bf3212-00000208 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000208&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=246&ts=1731777622976
2024-11-16 17:20:22,982 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:20:22,982 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:22,982 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:22,982 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13667691084324931089.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:22,983 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13667691084324931089.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (op_abort=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13667691084324931089.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:22,983 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:22,983 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:22,983 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13667691084324931089.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:22,984 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:22,984 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:22,984 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:22,984 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:22,984 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a816350f-f985-4e5f-8ca8-679638bf3212-00000208 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000208&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=36&ts=1731777622976
2024-11-16 17:20:23,007 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:23,007 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:23,007 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:20:23,007 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13667691084324931089.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:23,007 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13667691084324931089.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:23,008 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13667691084324931089.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:23,008 [s3a-transfer-obs-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:23,008 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:23,009 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_block_uploads=1) (op_hflush=0) (stream_write_bytes=65536) (op_abort.failures=0) (op_hsync=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_put_request=1) (multipart_upload_completed.failures=0) (op_abort=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=23) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=23) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=23, mean=23.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:23,009 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:23,010 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:23,010 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:23,010 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:23,010 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [247] a816350f-f985-4e5f-8ca8-679638bf3212-00000209 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000209/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000209&t0=247&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=247&ts=1731777623010
2024-11-16 17:20:23,014 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:23,014 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:23,014 [s3a-transfer-obs-bucket-unbounded-pool2-t56] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:23,014 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:20:23,015 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=0) (stream_read_vectored_combined_ranges=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_fully_operations=0) (stream_read_exceptions=0) (stream_read_closed=0) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_operations=0) (action_file_opened=1) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=1) (stream_read_vectored_incoming_ranges=0) (stream_read_unbuffered=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (action_http_get_request=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_total_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_block_acquire_read=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=4) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=4) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:23,017 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:23,017 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:23,017 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:23,017 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a816350f-f985-4e5f-8ca8-679638bf3212-00000210 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000210&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=246&ts=1731777623017
2024-11-16 17:20:23,024 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:23,025 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:23,025 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a816350f-f985-4e5f-8ca8-679638bf3212-00000210 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000210&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=246&ts=1731777623017
2024-11-16 17:20:23,031 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:23,032 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:23,032 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:23,032 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:23,032 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:23,032 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:23,032 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:23,033 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:23,033 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:23,033 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:23,033 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:23,034 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:23,038 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:23,038 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:23,039 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:23,039 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [248] a816350f-f985-4e5f-8ca8-679638bf3212-00000210 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000210&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=248&ts=1731777623017
2024-11-16 17:20:23,048 [s3a-transfer-obs-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:20:23,048 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:20:23,048 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:23,048 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:23,048 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:23,048 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777623004; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:23,048 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:23,048 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:23,048 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:23,049 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:23,049 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:23,049 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a816350f-f985-4e5f-8ca8-679638bf3212-00000210 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000210&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=38&ts=1731777623017
2024-11-16 17:20:23,060 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:20:23,060 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:23,061 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a816350f-f985-4e5f-8ca8-679638bf3212-00000210 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000210/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000210&t0=246&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=38&ts=1731777623017
2024-11-16 17:20:23,079 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:20:23,079 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:20:23,079 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:20:23,079 [s3a-transfer-obs-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:20:23,079 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.030s
2024-11-16 17:20:23,079 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.046s
2024-11-16 17:20:23,079 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:23,079 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:23,083 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:20:23,099 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://obs-bucket implemented by S3AFileSystem{uri=s3a://obs-bucket, workingDir=s3a://obs-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@26ed0504, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a816350f-f985-4e5f-8ca8-679638bf3212', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@10a6f59c[Running, pool size = 57, active threads = 0, queued tasks = 0, completed tasks = 57], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_list.failures=0) (op_create_non_recursive=0) (audit_failure=0) (op_is_file.failures=0) (stream_read_seek_bytes_skipped=0) (op_createfile=0) (stream_read_bytes_discarded_in_abort=0) (files_deleted=45) (op_access.failures=0) (op_rename.failures=0) (object_multipart_aborted=0) (op_is_directory.failures=0) (action_file_opened.failures=0) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_aborted=0) (committer_commits_reverted=0) (stream_read_seek_backward_operations=0) (committer_magic_marker_put=0) (stream_read_seek_policy_changed=41) (stream_write_total_data=5898240) (op_exists.failures=0) (stream_read_seek_operations=0) (files_copied_bytes=0) (stream_read_vectored_operations=31) (stream_write_block_uploads_aborted=0) (committer_bytes_committed=0) (op_list_status.failures=0) (op_exists=0) (stream_write_block_uploads_committed=0) (stream_write_bytes=2949120) (object_list_request=180) (committer_stage_file_upload.failures=0) (op_get_file_checksum.failures=0) (op_glob_status=0) (op_get_delegation_token.failures=0) (store_exists_probe=0) (op_xattr_list=0) (object_put_request=90) (op_list_files.failures=0) (op_xattr_get_named.failures=0) (stream_read_total_bytes=404942) (committer_jobs_failed=0) (op_delete.failures=0) (files_copied=0) (multipart_upload_started=0) (op_xattr_get_map=0) (action_file_opened=39) (object_multipart_initiated=0) (stream_read_remote_stream_aborted=0) (files_created=45) (stream_read_bytes_backwards_on_seek=0) (object_select_requests=0) (committer_stage_file_upload=0) (stream_read_close_operations=39) (object_delete_request.failures=0) (action_http_head_request=129) (op_copy_from_local_file=0) (committer_commits_created=0) (committer_tasks_failed=0) (object_put_request_completed=90) (op_is_file=0) (stream_read_vectored_combined_ranges=41) (stream_write_queue_duration.failures=0) (audit_request_execution=533) (op_mkdirs=45) (op_xattr_get_named_map.failures=0) (committer_tasks_completed=0) (op_is_directory=0) (op_delete=45) (committer_bytes_uploaded=0) (action_http_get_request.failures=0) (multipart_upload_part_put=0) (op_hflush=0) (committer_load_single_pending_file.failures=0) (op_get_content_summary.failures=0) (op_create=45) (multipart_upload_part_put_bytes=0) (op_glob_status.failures=0) (op_get_delegation_token=0) (committer_magic_files_created=0) (op_get_file_status.failures=0) (stream_read_closed=6) (multipart_instantiated=0) (stream_read_unbuffered=2) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file.failures=0) (stream_read_operations=6) (directories_created=45) (store_io_retry=0) (fake_directories_deleted=45) (store_io_throttled=0) (committer_jobs_completed=0) (op_xattr_get_named=0) (committer_materialize_file.failures=0) (multipart_upload_aborted=0) (op_xattr_get_named_map=0) (stream_write_exceptions_completing_upload=0) (action_http_get_request=44) (committer_commits.failures=0) (audit_access_check_failure=0) (stream_read_fully_operations=2) (stream_read_opened=6) (op_list_files=0) (op_abort.failures=0) (committer_commits_aborted=0) (op_access=0) (stream_write_total_time=0) (op_create.failures=0) (action_executor_acquired=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_list.failures=0) (stream_read_bytes_discarded_in_close=392016) (op_list_status=0) (op_get_file_status=2) (stream_write_queue_duration=0) (stream_read_remote_stream_aborted.failures=0) (delegation_tokens_issued.failures=0) (committer_commit_job.failures=0) (store_exists_probe.failures=0) (stream_write_exceptions=0) (committer_load_single_pending_file=0) (object_continue_list_request.failures=0) (object_multipart_aborted.failures=0) (object_bulk_delete_request=90) (files_delete_rejected=0) (op_get_content_summary=0) (audit_span_creation=177) (store_io_request=533) (object_put_bytes=2949120) (object_bulk_delete_request.failures=0) (object_continue_list_request=0) (op_get_file_checksum=0) (op_rename=0) (committer_commits_completed=0) (object_put_request.failures=0) (stream_read_remote_stream_drain.failures=0) (op_createfile.failures=0) (object_list_request.failures=0) (action_executor_acquired.failures=0) (fake_directories_created=0) (directories_deleted=0) (op_mkdirs.failures=0) (object_metadata_request=129) (op_abort=0) (op_list_located_status=0) (stream_read_seek_forward_operations=0) (object_delete_request=0) (delegation_tokens_issued=0) (stream_read_vectored_incoming_ranges=97) (stream_read_remote_stream_drain=6) (op_open=39) (stream_read_exceptions=0) (op_xattr_get_map.failures=0) (ignored_errors=0) (action_http_head_request.failures=0) (multipart_upload_list=0) (stream_read_bytes=12926) (object_copy_requests=0) (committer_materialize_file=0) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=49046) (multipart_upload_completed=0) (stream_read_version_mismatches=0) (committer_magic_marker_put.failures=0) (committer_commit_job=0) (op_openfile=0) (stream_write_block_uploads=45) (object_delete_objects=90));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=45) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0));
minimums=((op_mkdirs.min=20) (action_executor_acquired.failures.min=-1) (object_list_request.min=4) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.failures.min=-1) (object_delete_request.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_magic_marker_put.failures.min=-1) (object_delete_request.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.min=-1) (op_glob_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_list.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.min=23) (op_copy_from_local_file.failures.min=-1) (op_rename.min=-1) (multipart_upload_list.failures.min=-1) (op_glob_status.min=-1) (op_create.failures.min=-1) (op_list_status.min=-1) (op_create.min=5) (object_continue_list_request.failures.min=-1) (op_get_file_status.min=4) (object_multipart_initiated.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.min=-1) (op_rename.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=21) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.min=2) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_directory.min=-1) (op_get_content_summary.min=-1) (object_put_request.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_exists.min=-1) (store_exists_probe.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.min=6) (object_multipart_initiated.failures.min=-1) (op_access.min=-1) (op_list_files.failures.min=-1) (op_abort.min=-1) (op_is_file.failures.min=-1) (action_file_opened.min=4) (object_continue_list_request.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=23) (op_get_file_status.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_drain.min=1) (op_copy_from_local_file.min=-1) (committer_materialize_file.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_delegation_token.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named_map.min=-1));
maximums=((store_exists_probe.max=-1) (multipart_upload_list.failures.max=-1) (op_list_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_put_request.max=104) (op_abort.failures.max=-1) (op_is_directory.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (multipart_upload_list.max=-1) (op_is_directory.failures.max=-1) (op_get_file_checksum.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.max=32) (op_access.max=-1) (object_continue_list_request.max=-1) (op_is_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (op_delete.max=111) (delegation_tokens_issued.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (op_get_delegation_token.failures.max=-1) (op_createfile.max=-1) (action_http_head_request.max=19) (op_get_file_status.max=5) (op_get_content_summary.failures.max=-1) (op_xattr_list.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.max=74) (op_abort.max=-1) (committer_commit_job.failures.max=-1) (op_access.failures.max=-1) (action_file_opened.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.max=15) (object_delete_request.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_exists.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.max=43) (op_get_content_summary.max=-1) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (action_executor_acquired.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (action_http_head_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_delegation_token.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=2) (op_mkdirs.max=346) (op_rename.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (object_list_request.max=210));
means=((stream_read_remote_stream_drain.mean=(samples=6, sum=7, mean=1.1667)) (action_http_get_request.mean=(samples=44, sum=926, mean=21.0455)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=90, sum=1036, mean=11.5111)) (op_mkdirs.mean=(samples=45, sum=1883, mean=41.8444)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=90, sum=2460, mean=27.3333)) (object_list_request.mean=(samples=180, sum=1835, mean=10.1944)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=39, sum=239, mean=6.1282)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=45, sum=1891, mean=42.0222)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=129, sum=677, mean=5.2481)) (op_create.mean=(samples=45, sum=559, mean=12.4222)));
}}, ClientSideEncryption=false}
2024-11-16 17:20:23,100 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://obs-bucket/test
2024-11-16 17:20:23,100 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:23,100 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:23,101 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:23,101 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:23,101 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a816350f-f985-4e5f-8ca8-679638bf3212-00000211 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000211&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=249&ts=1731777623100
2024-11-16 17:20:23,108 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:20:23,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:23,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:20:23,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:23,109 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:23,109 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a816350f-f985-4e5f-8ca8-679638bf3212-00000211 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000211&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=249&ts=1731777623100
2024-11-16 17:20:23,112 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test
2024-11-16 17:20:23,113 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:20:23,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:20:23,113 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:20:23,113 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a816350f-f985-4e5f-8ca8-679638bf3212-00000211 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a816350f-f985-4e5f-8ca8-679638bf3212-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000211&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=249&ts=1731777623100
2024-11-16 17:20:23,133 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:20:23,134 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:20:23,134 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.021s
2024-11-16 17:20:23,134 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:20:23,134 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:23,135 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:23,135 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:23,135 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:23,135 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a816350f-f985-4e5f-8ca8-679638bf3212-00000212 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000212&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=249&ts=1731777623134
2024-11-16 17:20:23,143 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:20:23,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:23,143 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:20:23,144 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7556632476413113318.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:20:23,145 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=obs-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7556632476413113318.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (op_hsync=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (op_abort=0) (object_put_request.failures=0) (stream_write_bytes=65536) (op_hflush=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7556632476413113318.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:20:23,145 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:23,145 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:20:23,145 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7556632476413113318.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:20:23,146 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:20:23,146 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:20:23,146 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:20:23,146 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a816350f-f985-4e5f-8ca8-679638bf3212-00000212 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a816350f-f985-4e5f-8ca8-679638bf3212-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000212&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=41&ts=1731777623134
2024-11-16 17:20:23,147 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:20:23,175 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:20:23,176 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:20:23,176 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.030s
2024-11-16 17:20:23,176 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7556632476413113318.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:20:23,176 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7556632476413113318.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:23,176 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7556632476413113318.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:20:23,176 [s3a-transfer-obs-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:20:23,176 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=obs-bucket}
2024-11-16 17:20:23,177 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (op_hsync=0) (object_put_request=1) (multipart_upload_completed.failures=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (stream_write_block_uploads=1) (op_abort=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=29));
maximums=((action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=29) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=29, mean=29.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:20:23,177 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:20:23,178 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:20:23,178 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test/vectored_file.txt
2024-11-16 17:20:23,178 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:20:23,179 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a816350f-f985-4e5f-8ca8-679638bf3212-00000213 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000213&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=249&ts=1731777623178
2024-11-16 17:20:23,182 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:20:23,182 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://obs-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:20:23,183 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://obs-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:23,183 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:20:23,183 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:20:23,183 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:20:23,183 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:23,183 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:20:23,183 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:20:23,183 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a816350f-f985-4e5f-8ca8-679638bf3212-00000213 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/a816350f-f985-4e5f-8ca8-679638bf3212-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&rg=500-899&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000213&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=43&ts=1731777623178
2024-11-16 17:20:23,184 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://obs-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:20:23,198 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:20:23,198 [s3a-transfer-obs-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://obs-bucket/test/vectored_file.txt 
2024-11-16 17:20:23,199 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=0) (stream_read_total_bytes=400) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=400) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_block_read=0) (stream_read_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_close_operations=1) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=3) (action_http_get_request=1) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (stream_read_opened=0) (stream_read_seek_backward_operations=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted=0) (action_file_opened.failures=0) (stream_read_exceptions=0) (stream_aborted=0) (action_executor_acquired.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=15) (stream_read_block_read.failures.min=-1) (action_file_opened.min=4) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=15) (action_file_opened.max=4) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=15, mean=15.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:20:23,200 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://obs-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:20:23,200 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://obs-bucket/test
2024-11-16 17:20:23,200 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:20:23,200 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a816350f-f985-4e5f-8ca8-679638bf3212-00000214 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000214&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=249&ts=1731777623200
2024-11-16 17:20:23,203 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:20:23,204 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:23,204 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a816350f-f985-4e5f-8ca8-679638bf3212-00000214 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000214&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=249&ts=1731777623200
2024-11-16 17:20:23,209 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:23,209 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:20:23,209 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:20:23,209 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:20:23,209 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:20:23,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://obs-bucket/test - recursive true
2024-11-16 17:20:23,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:20:23,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://obs-bucket/test
2024-11-16 17:20:23,210 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:20:23,210 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:20:23,210 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://obs-bucket/test, true)
2024-11-16 17:20:23,210 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:20:23,212 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:20:23,212 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List obs-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:20:23,212 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:20:23,212 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] a816350f-f985-4e5f-8ca8-679638bf3212-00000214 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000214&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=250&ts=1731777623200
2024-11-16 17:20:23,218 [s3a-transfer-obs-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:20:23,219 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:20:23,219 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test: test/ size=0
2024-11-16 17:20:23,219 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:20:23,219 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://obs-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:20:23,219 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://obs-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731777623170; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:20:23,219 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:20:23,219 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:20:23,219 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:20:23,220 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:23,220 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a816350f-f985-4e5f-8ca8-679638bf3212-00000214 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000214&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=44&ts=1731777623200
2024-11-16 17:20:23,222 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:20:23,227 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:23,227 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:23,227 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:20:23,227 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:20:23,227 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:20:23,228 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:20:23,228 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:20:23,228 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:20:23,228 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:20:23,228 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a816350f-f985-4e5f-8ca8-679638bf3212-00000214 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a816350f-f985-4e5f-8ca8-679638bf3212-00000214/?op=op_delete&p1=s3a://obs-bucket/test&pr=runner&ps=0d76c474-a746-4dbd-a86a-3b589a97ae48&ks=1&id=a816350f-f985-4e5f-8ca8-679638bf3212-00000214&t0=249&fs=a816350f-f985-4e5f-8ca8-679638bf3212&t1=44&ts=1731777623200
2024-11-16 17:20:23,235 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:20:23,235 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:20:23,235 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:20:23,235 [s3a-transfer-obs-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:20:23,236 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.014s
2024-11-16 17:20:23,237 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:20:23,237 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://obs-bucket/test" completed; deleted 2 objects
2024-11-16 17:20:23,237 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:20:23,252 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://obs-bucket is closed
2024-11-16 17:20:23,257 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:20:23,260 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:23,260 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@10a6f59c[Shutting down, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 58]. Waiting max 30 SECONDS
2024-11-16 17:20:23,261 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:20:23,261 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics1-obs-bucket
2024-11-16 17:20:23,268 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(733)) - Shutting down metrics publisher
2024-11-16 17:20:23,269 [shutdown-hook-0] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:20:23,269 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:23,269 [shutdown-hook-0] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@22f72ff0] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:20:23,270 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((multipart_instantiated=0) (object_put_request_completed=92) (op_exists.failures=0) (action_file_opened=40) (op_openfile=0) (op_xattr_list.failures=0) (op_rename=0) (op_get_file_checksum=0) (action_http_head_request=132) (op_list_files=0) (op_create.failures=0) (store_exists_probe.failures=0) (stream_read_closed=6) (stream_read_exceptions=0) (stream_write_block_uploads=46) (committer_commits_reverted=0) (files_delete_rejected=0) (stream_read_operations_incomplete=0) (op_xattr_get_map.failures=0) (store_exists_probe=0) (action_http_get_request.failures=0) (committer_commits_created=0) (audit_failure=0) (committer_commit_job.failures=0) (op_xattr_get_named_map=0) (action_http_get_request=45) (object_put_request.failures=0) (committer_commits.failures=0) (stream_read_vectored_incoming_ranges=100) (store_io_retry=0) (op_glob_status=0) (op_get_delegation_token.failures=0) (op_list_located_status=0) (op_list_files.failures=0) (committer_materialize_file=0) (stream_read_vectored_operations=32) (committer_commits_aborted=0) (committer_bytes_uploaded=0) (object_multipart_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (multipart_upload_list=0) (stream_read_seek_policy_changed=42) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (object_list_request.failures=0) (op_xattr_get_named=0) (op_get_content_summary.failures=0) (stream_aborted=0) (files_copied_bytes=0) (stream_read_seek_forward_operations=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (object_delete_objects=92) (committer_bytes_committed=0) (directories_created=46) (audit_span_creation=181) (action_executor_acquired=0) (object_delete_request.failures=0) (op_createfile=0) (stream_read_bytes_discarded_in_abort=0) (op_hflush=0) (stream_read_operations=6) (action_http_head_request.failures=0) (committer_load_single_pending_file=0) (op_get_file_checksum.failures=0) (op_copy_from_local_file.failures=0) (multipart_upload_started=0) (op_xattr_list=0) (delegation_tokens_issued=0) (stream_read_opened=6) (op_xattr_get_named_map.failures=0) (stream_read_version_mismatches=0) (op_access.failures=0) (op_xattr_get_named.failures=0) (object_put_bytes=3014656) (object_continue_list_request=0) (committer_stage_file_upload=0) (stream_write_bytes=3014656) (object_list_request=184) (op_xattr_get_map=0) (stream_read_vectored_combined_ranges=42) (stream_write_queue_duration=0) (committer_tasks_completed=0) (op_copy_from_local_file=0) (op_is_directory.failures=0) (files_copied=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_close=392016) (object_metadata_request=132) (multipart_upload_part_put_bytes=0) (op_mkdirs.failures=0) (op_hsync=0) (audit_access_check_failure=0) (object_bulk_delete_request.failures=0) (committer_magic_marker_put.failures=0) (op_create=46) (op_glob_status.failures=0) (op_abort.failures=0) (object_select_requests=0) (op_exists=0) (action_file_opened.failures=0) (files_deleted=46) (stream_read_bytes_backwards_on_seek=0) (object_delete_request=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_fully_operations=2) (delegation_tokens_issued.failures=0) (stream_write_exceptions=0) (fake_directories_created=0) (stream_read_total_bytes=405342) (stream_read_vectored_read_bytes_discarded=49046) (stream_read_seek_bytes_skipped=0) (stream_write_queue_duration.failures=0) (committer_materialize_file.failures=0) (op_get_file_status.failures=0) (object_copy_requests=0) (object_bulk_delete_request=92) (multipart_upload_aborted=0) (op_get_delegation_token=0) (committer_magic_files_created=0) (stream_read_unbuffered=2) (multipart_upload_completed=0) (committer_tasks_failed=0) (audit_request_execution=545) (op_get_file_status=2) (op_delete.failures=0) (stream_read_remote_stream_drain=6) (ignored_errors=0) (op_get_content_summary=0) (op_mkdirs=46) (stream_write_block_uploads_committed=0) (object_multipart_aborted=0) (multipart_upload_list.failures=0) (op_createfile.failures=0) (op_create_non_recursive=0) (op_abort=0) (op_rename.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_total_data=6029312) (stream_write_total_time=0) (op_open=40) (stream_read_bytes=13326) (committer_commit_job=0) (stream_read_seek_backward_operations=0) (store_io_request=545) (stream_read_remote_stream_aborted.failures=0) (op_access=0) (directories_deleted=0) (fake_directories_deleted=46) (committer_jobs_completed=0) (object_put_request=92) (object_continue_list_request.failures=0) (op_list_status=0) (files_created=46) (stream_read_remote_stream_aborted=0) (op_is_file=0) (op_is_file.failures=0) (committer_commits_completed=0) (op_delete=46) (store_io_throttled=0) (object_multipart_initiated=0) (committer_stage_file_upload.failures=0) (op_list_status.failures=0) (stream_write_block_uploads_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_bytes_discarded=0) (op_is_directory=0) (stream_read_close_operations=40));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=46) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.failures.min=-1) (op_list_files.failures.min=-1) (op_list_status.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_file.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_checksum.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.min=20) (op_access.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_rename.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_exists.failures.min=-1) (action_file_opened.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (multipart_upload_list.min=-1) (op_list_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.min=-1) (op_glob_status.failures.min=-1) (op_is_file.failures.min=-1) (object_bulk_delete_request.min=6) (committer_magic_marker_put.min=-1) (op_rename.failures.min=-1) (op_mkdirs.failures.min=-1) (op_delete.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_put_request.min=29) (op_delete.min=23) (op_xattr_get_named.min=-1) (op_abort.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_createfile.min=-1) (op_list_files.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_content_summary.min=-1) (op_xattr_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_materialize_file.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_status.min=4) (committer_stage_file_upload.min=-1) (op_create.min=5) (op_access.failures.min=-1) (action_file_opened.min=4) (object_multipart_initiated.failures.min=-1) (op_exists.min=-1) (action_http_head_request.min=2) (action_http_get_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_delete_request.failures.min=-1) (action_http_get_request.min=15) (store_exists_probe.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_map.min=-1) (op_abort.failures.min=-1) (op_create.failures.min=-1) (object_list_request.min=4));
maximums=((object_list_request.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_drain.max=2) (stream_write_queue_duration.max=-1) (op_list_status.max=-1) (committer_materialize_file.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_delegation_token.max=-1) (op_create.failures.max=-1) (op_createfile.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.max=19) (op_glob_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_delete.max=111) (stream_read_remote_stream_drain.failures.max=-1) (op_mkdirs.max=346) (object_continue_list_request.max=-1) (op_abort.max=-1) (object_list_request.max=210) (op_get_content_summary.max=-1) (committer_materialize_file.failures.max=-1) (op_create.max=74) (op_access.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=104) (committer_commit_job.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.failures.max=-1) (op_exists.max=-1) (multipart_upload_list.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (action_http_get_request.max=43) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.max=5) (op_glob_status.max=-1) (op_list_status.failures.max=-1) (op_is_file.max=-1) (store_exists_probe.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.max=32) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_map.max=-1) (op_createfile.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_rename.max=-1) (object_delete_request.failures.max=-1) (op_list_files.max=-1) (action_file_opened.max=15) (op_get_delegation_token.failures.max=-1) (object_put_request.failures.max=-1));
means=((multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=92, sum=1050, mean=11.4130)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=184, sum=1861, mean=10.1141)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=132, sum=687, mean=5.2045)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=46, sum=569, mean=12.3696)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=46, sum=1917, mean=41.6739)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=45, sum=941, mean=20.9111)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=40, sum=243, mean=6.0750)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=46, sum=1919, mean=41.7174)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=92, sum=2509, mean=27.2717)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=7, mean=1.1667)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)));

