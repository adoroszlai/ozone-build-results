2024-11-16 17:38:02,568 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:02,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:02,960 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:02,977 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:02,981 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:03,062 [setup] WARN  impl.MetricsConfig (MetricsConfig.java:loadFirst(136)) - Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
2024-11-16 17:38:03,192 [setup] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:getMetricsSystem(250)) - Metrics system inited org.apache.hadoop.metrics2.impl.MetricsSystemImpl@59611c3c
2024-11-16 17:38:03,201 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:03,201 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:03,204 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:03,204 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:03,204 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:03,204 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:03,205 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:03,208 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:03,209 [setup] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:03,214 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:03,221 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:03,221 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:03,222 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:03,222 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:03,222 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:03,234 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:03,234 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:03,234 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:03,235 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:03,424 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402]
2024-11-16 17:38:03,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402]
2024-11-16 17:38:03,437 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:03,595 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:03,596 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:03,596 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:03,597 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:03,597 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:03,601 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:03,603 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:03,690 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:03,693 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:03,717 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:03,719 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:03,888 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:03,897 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:03,900 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:03,901 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:03,907 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:03,907 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:03,911 [setup] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:03,911 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:03,912 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:03,913 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:03,914 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:38:03,915 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:03,915 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:03,916 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:03,917 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:38:03,918 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:38:03,953 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402], delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_aborted=0) (object_multipart_initiated.failures=0) (op_delete=0) (stream_read_close_operations=0) (store_io_retry=0) (op_list_files.failures=0) (committer_tasks_failed=0) (action_http_get_request=0) (committer_stage_file_upload.failures=0) (object_select_requests=0) (committer_jobs_failed=0) (op_hflush=0) (op_get_delegation_token.failures=0) (store_exists_probe.failures=0) (op_is_file.failures=0) (op_access.failures=0) (object_delete_request=0) (fake_directories_deleted=0) (stream_read_opened=0) (op_get_content_summary=0) (object_multipart_aborted=0) (op_rename=0) (op_is_directory.failures=0) (delegation_tokens_issued=0) (stream_write_bytes=0) (object_bulk_delete_request.failures=0) (action_file_opened.failures=0) (op_xattr_get_map=0) (committer_materialize_file=0) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0) (committer_magic_files_created=0) (audit_span_creation=1) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (object_put_request_completed=0) (op_create=0) (committer_commits_created=0) (op_createfile.failures=0) (op_xattr_get_map.failures=0) (stream_read_closed=0) (files_deleted=0) (committer_bytes_committed=0) (op_delete.failures=0) (op_mkdirs=0) (committer_commits_aborted=0) (audit_request_execution=0) (stream_write_queue_duration.failures=0) (stream_write_total_data=0) (object_continue_list_request=0) (op_create_non_recursive=0) (stream_read_seek_operations=0) (stream_write_exceptions=0) (directories_deleted=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes=0) (op_list_files=0) (stream_read_vectored_incoming_ranges=0) (stream_write_queue_duration=0) (stream_read_vectored_read_bytes_discarded=0) (op_glob_status.failures=0) (committer_commits_reverted=0) (files_delete_rejected=0) (committer_load_single_pending_file.failures=0) (object_multipart_aborted.failures=0) (committer_materialize_file.failures=0) (object_metadata_request=0) (op_is_file=0) (action_executor_acquired=0) (action_http_get_request.failures=0) (object_continue_list_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=0) (op_mkdirs.failures=0) (audit_access_check_failure=0) (object_put_request=0) (stream_read_exceptions=0) (multipart_upload_aborted=0) (multipart_upload_completed=0) (delegation_tokens_issued.failures=0) (action_file_opened=0) (op_hsync=0) (op_get_content_summary.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (op_copy_from_local_file.failures=0) (op_copy_from_local_file=0) (multipart_upload_part_put_bytes=0) (object_list_request=0) (audit_failure=0) (op_xattr_get_named=0) (action_executor_acquired.failures=0) (object_put_bytes=0) (stream_read_remote_stream_aborted=0) (op_xattr_list=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (committer_magic_marker_put=0) (stream_read_version_mismatches=0) (committer_commit_job.failures=0) (fake_directories_created=0) (directories_created=0) (files_created=0) (op_abort.failures=0) (committer_commits.failures=0) (op_abort=0) (multipart_upload_part_put=0) (action_http_head_request=0) (object_list_request.failures=0) (stream_read_seek_backward_operations=0) (op_rename.failures=0) (committer_commits_completed=0) (op_get_file_status=0) (op_access=0) (committer_magic_marker_put.failures=0) (stream_read_seek_policy_changed=0) (stream_read_remote_stream_drain.failures=0) (files_copied_bytes=0) (stream_read_vectored_operations=0) (multipart_upload_list.failures=0) (committer_commit_job=0) (op_createfile=0) (store_io_request=0) (committer_stage_file_upload=0) (committer_load_single_pending_file=0) (committer_jobs_completed=0) (stream_read_vectored_combined_ranges=0) (op_exists.failures=0) (op_list_status.failures=0) (op_get_file_checksum=0) (op_get_delegation_token=0) (object_copy_requests=0) (committer_tasks_completed=0) (store_exists_probe=0) (op_glob_status=0) (stream_write_block_uploads=0) (multipart_upload_list=0) (op_exists=0) (object_delete_objects=0) (store_io_throttled=0) (ignored_errors=0) (op_list_status=0) (multipart_instantiated=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_operations_incomplete=0) (multipart_upload_started=0) (op_get_file_checksum.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_write_block_uploads_aborted=0) (op_xattr_list.failures=0) (op_openfile=0) (files_copied=0) (stream_write_block_uploads_committed=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named_map.failures=0) (op_get_file_status.failures=0) (op_list_located_status=0) (op_is_directory=0) (stream_write_total_time=0) (action_http_head_request.failures=0) (object_delete_request.failures=0) (object_bulk_delete_request=0) (op_xattr_get_named.failures=0) (op_create.failures=0) (stream_read_total_bytes=0) (op_open=0) (committer_bytes_uploaded=0) (op_xattr_get_named_map=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0));
minimums=((committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (object_put_request.failures.min=-1) (op_rename.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_map.min=-1) (multipart_upload_list.min=-1) (op_glob_status.min=-1) (op_create.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (store_exists_probe.min=-1) (op_is_directory.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.min=-1) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.failures.min=-1) (object_put_request.min=-1) (op_access.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.failures.min=-1) (object_list_request.min=-1) (op_mkdirs.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.min=-1) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.failures.min=-1) (op_rename.min=-1) (object_delete_request.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.min=-1) (multipart_upload_list.failures.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.min=-1) (op_glob_status.failures.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (op_create.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_head_request.min=-1) (action_file_opened.min=-1) (op_exists.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (op_delete.min=-1) (stream_write_queue_duration.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.failures.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.min=-1) (op_delete.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named_map.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.min=-1) (op_get_file_checksum.failures.min=-1));
maximums=((op_get_delegation_token.failures.max=-1) (object_put_request.max=-1) (committer_load_single_pending_file.max=-1) (object_list_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.max=-1) (committer_stage_file_upload.failures.max=-1) (op_rename.max=-1) (op_is_directory.max=-1) (op_delete.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_is_directory.failures.max=-1) (object_multipart_initiated.max=-1) (action_file_opened.failures.max=-1) (op_create.max=-1) (op_glob_status.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_delete_request.max=-1) (action_file_opened.max=-1) (op_list_files.failures.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.max=-1) (delegation_tokens_issued.failures.max=-1) (op_exists.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.max=-1) (op_exists.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.failures.max=-1) (op_is_file.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_mkdirs.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_map.max=-1) (object_multipart_aborted.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_bulk_delete_request.max=-1) (op_xattr_list.max=-1) (stream_write_queue_duration.failures.max=-1) (store_exists_probe.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_status.max=-1) (op_xattr_get_named.max=-1) (op_access.max=-1) (multipart_upload_list.max=-1) (op_get_content_summary.failures.max=-1) (op_mkdirs.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.failures.max=-1) (op_delete.max=-1) (object_list_request.max=-1) (op_get_delegation_token.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:03,964 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:03,965 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:03,965 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:03,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:03,968 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:03,971 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=16&ts=1731778683962
2024-11-16 17:38:03,984 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:04,007 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.023s
2024-11-16 17:38:04,008 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:04,008 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:04,204 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.236s
2024-11-16 17:38:04,205 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:04,205 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:04,205 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:04,208 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:04,209 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=16&ts=1731778683962
2024-11-16 17:38:04,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:04,227 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:04,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:04,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:04,231 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000005&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=16&ts=1731778683962
2024-11-16 17:38:04,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:04,332 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:04,334 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.107s
2024-11-16 17:38:04,334 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:04,342 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:04,343 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:04,344 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:04,345 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:04,347 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000006 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000006&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=16&ts=1731778684341
2024-11-16 17:38:04,361 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:38:04,361 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:04,367 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:04,393 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4567736152350420422.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:04,397 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4567736152350420422.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (object_put_request=0) (object_multipart_aborted.failures=0) (op_abort=0) (op_abort.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (op_hflush=0) (object_multipart_aborted=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4567736152350420422.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:04,398 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:04,398 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:04,398 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4567736152350420422.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:04,407 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:04,409 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:04,410 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:04,410 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:04,411 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000006 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000006&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=31&ts=1731778684341
2024-11-16 17:38:04,501 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:04,502 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:04,502 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.093s
2024-11-16 17:38:04,503 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4567736152350420422.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:04,504 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4567736152350420422.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:04,504 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4567736152350420422.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:04,505 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:04,509 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:04,521 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (action_executor_acquired=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (op_abort=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (object_put_request=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=84) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=84) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=84, mean=84.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:04,523 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:04,524 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:04,524 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:04,538 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:04,540 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:04,545 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:04,548 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:04,548 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:04,548 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:04,548 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:04,549 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:04,552 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:04,552 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:04,553 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:04,553 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:04,554 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='d1422933-9d9b-49a7-b6b5-ac3fc320bc2b', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:04,554 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='d1422933-9d9b-49a7-b6b5-ac3fc320bc2b', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:04,554 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='d1422933-9d9b-49a7-b6b5-ac3fc320bc2b', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:04,555 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:04,555 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:04,556 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:04,557 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:04,558 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:04,558 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:04,558 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@495af362]
2024-11-16 17:38:04,559 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@495af362]
2024-11-16 17:38:04,559 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:04,559 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:04,560 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:04,560 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:04,560 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:04,561 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:04,561 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:04,561 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:04,561 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:04,561 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:04,561 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:04,562 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:04,564 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:04,564 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:04,564 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:04,564 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:04,565 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:04,565 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:04,565 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:04,565 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:04,565 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:04,565 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:04,566 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:38:04,566 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:04,566 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:04,566 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:04,566 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:38:04,566 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:38:04,574 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:04,575 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:04,576 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:04,576 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] d1422933-9d9b-49a7-b6b5-ac3fc320bc2b-00000009 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/d1422933-9d9b-49a7-b6b5-ac3fc320bc2b-00000009/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=d1422933-9d9b-49a7-b6b5-ac3fc320bc2b-00000009&t0=16&fs=d1422933-9d9b-49a7-b6b5-ac3fc320bc2b&t1=16&ts=1731778684573
2024-11-16 17:38:04,577 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:04,577 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:38:04,578 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:04,578 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:04,584 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:04,587 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:04,590 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:04,636 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_read_close_operations=1) (stream_read_seek_forward_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=0) (stream_read_vectored_incoming_ranges=0) (stream_read_opened=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_total_bytes=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_policy_changed=1) (stream_aborted=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=0) (action_file_opened=1) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_fully_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=12) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=12) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=12, mean=12.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:04,642 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:04,645 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:04,645 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:04,645 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@5fb034be[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:38:04,645 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:04,645 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics2-leg-bucket
2024-11-16 17:38:04,646 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:04,646 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@495af362] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:04,647 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@495af362] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:04,657 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_xattr_list=0) (stream_read_seek_operations=0) (action_file_opened=1) (object_put_bytes=0) (op_createfile.failures=0) (delegation_tokens_issued=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (committer_commits_completed=0) (committer_tasks_failed=0) (committer_commits_reverted=0) (op_abort.failures=0) (stream_read_remote_stream_drain.failures=0) (op_exists.failures=0) (op_get_file_checksum=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named=0) (action_file_opened.failures=0) (stream_write_block_uploads=0) (committer_stage_file_upload=0) (op_xattr_get_named.failures=0) (committer_commit_job=0) (action_http_head_request=1) (stream_write_bytes=0) (directories_deleted=0) (stream_read_vectored_combined_ranges=0) (op_xattr_get_named_map.failures=0) (committer_load_single_pending_file.failures=0) (multipart_instantiated=0) (committer_tasks_completed=0) (object_list_request=0) (action_executor_acquired.failures=0) (stream_read_closed=0) (op_list_files=0) (files_delete_rejected=0) (op_is_directory=0) (op_list_status.failures=0) (object_metadata_request=1) (op_open=1) (stream_aborted=0) (delegation_tokens_issued.failures=0) (committer_bytes_uploaded=0) (committer_load_single_pending_file=0) (op_xattr_get_map=0) (fake_directories_created=0) (op_xattr_get_map.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_delete_objects=0) (committer_commits_aborted=0) (op_get_file_status=0) (op_openfile=0) (stream_read_vectored_read_bytes_discarded=0) (object_bulk_delete_request.failures=0) (store_io_request=1) (committer_bytes_committed=0) (stream_read_vectored_operations=0) (object_list_request.failures=0) (files_copied_bytes=0) (multipart_upload_completed=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map=0) (committer_magic_files_created=0) (stream_read_seek_policy_changed=1) (audit_access_check_failure=0) (op_get_file_status.failures=0) (op_access.failures=0) (op_list_status=0) (object_continue_list_request.failures=0) (multipart_upload_list=0) (op_delete=0) (stream_read_vectored_incoming_ranges=0) (op_get_content_summary=0) (multipart_upload_aborted=0) (stream_read_bytes=0) (op_list_files.failures=0) (committer_materialize_file.failures=0) (object_continue_list_request=0) (stream_write_exceptions_completing_upload=0) (audit_request_execution=1) (op_is_directory.failures=0) (stream_read_seek_forward_operations=0) (object_bulk_delete_request=0) (object_put_request=0) (op_is_file=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (committer_magic_marker_put=0) (audit_failure=0) (stream_read_seek_backward_operations=0) (committer_commit_job.failures=0) (committer_commits.failures=0) (op_get_delegation_token.failures=0) (op_rename.failures=0) (multipart_upload_started=0) (op_create_non_recursive=0) (stream_read_close_operations=1) (stream_write_block_uploads_aborted=0) (object_delete_request=0) (op_abort=0) (action_http_head_request.failures=0) (op_is_file.failures=0) (op_exists=0) (object_put_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (op_access=0) (object_copy_requests=0) (stream_read_exceptions=0) (op_get_file_checksum.failures=0) (multipart_upload_list.failures=0) (stream_read_fully_operations=0) (op_get_content_summary.failures=0) (stream_write_total_time=0) (op_xattr_list.failures=0) (committer_magic_marker_put.failures=0) (committer_stage_file_upload.failures=0) (committer_commits_created=0) (op_createfile=0) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token=0) (audit_span_creation=2) (multipart_upload_abort_under_path_invoked=0) (ignored_errors=0) (stream_read_operations=0) (multipart_upload_part_put=0) (op_copy_from_local_file.failures=0) (store_io_throttled=0) (stream_write_total_data=0) (op_copy_from_local_file=0) (fake_directories_deleted=0) (store_exists_probe.failures=0) (object_multipart_initiated=0) (action_http_get_request=0) (stream_write_block_uploads_committed=0) (committer_materialize_file=0) (action_executor_acquired=0) (stream_read_remote_stream_drain=0) (op_create.failures=0) (store_io_retry=0) (op_mkdirs.failures=0) (committer_jobs_failed=0) (op_glob_status=0) (object_delete_request.failures=0) (store_exists_probe=0) (op_rename=0) (stream_write_queue_duration=0) (object_select_requests=0) (stream_read_unbuffered=0) (object_put_request_completed=0) (stream_read_bytes_discarded_in_close=0) (committer_jobs_completed=0) (object_multipart_initiated.failures=0) (stream_read_opened=0) (stream_read_total_bytes=0) (files_deleted=0) (op_hflush=0) (stream_write_queue_duration.failures=0) (directories_created=0) (op_create=0) (op_hsync=0) (files_copied=0) (op_glob_status.failures=0) (files_created=0) (op_mkdirs=0) (op_delete.failures=0) (op_list_located_status=0) (object_multipart_aborted=0) (stream_read_operations_incomplete=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((multipart_upload_list.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=-1) (op_list_files.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_map.min=-1) (op_rename.min=-1) (object_list_request.min=-1) (op_createfile.min=-1) (action_file_opened.failures.min=-1) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.failures.min=-1) (op_delete.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.failures.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_abort.min=-1) (op_get_content_summary.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_status.min=-1) (op_delete.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_get_request.min=-1) (op_glob_status.min=-1) (committer_commit_job.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_mkdirs.failures.min=-1) (op_access.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.min=-1) (committer_commit_job.min=-1) (object_put_request.min=-1) (op_access.failures.min=-1) (op_list_status.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.failures.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_delete_request.min=-1) (op_exists.min=-1) (object_multipart_initiated.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.min=8) (store_exists_probe.min=-1) (op_xattr_list.min=-1) (op_glob_status.failures.min=-1) (op_is_file.failures.min=-1) (stream_write_queue_duration.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.min=12) (op_get_delegation_token.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_directory.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1));
maximums=((op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.max=-1) (object_put_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.failures.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.max=-1) (op_create.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_map.max=-1) (object_continue_list_request.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.max=-1) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.max=-1) (object_bulk_delete_request.max=-1) (op_access.failures.max=-1) (op_copy_from_local_file.max=-1) (op_access.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_glob_status.failures.max=-1) (op_delete.max=-1) (action_file_opened.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_directory.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.max=-1) (action_http_get_request.max=-1) (op_abort.max=-1) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.max=-1) (action_http_head_request.failures.max=-1) (op_exists.failures.max=-1) (op_is_directory.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_aborted.max=-1) (op_rename.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.max=12) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.max=-1) (stream_write_queue_duration.failures.max=-1) (op_createfile.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.max=-1) (action_http_head_request.max=8) (op_copy_from_local_file.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (object_list_request.max=-1));
means=((op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=12, mean=12.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=8, mean=8.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:04,659 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:04,659 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:04,660 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:04,660 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=16&ts=1731778684658
2024-11-16 17:38:04,666 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:04,666 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:04,667 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=16&ts=1731778684658
2024-11-16 17:38:04,678 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:04,678 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:04,679 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:04,679 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:04,679 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:04,680 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:04,680 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:04,680 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:04,680 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:04,680 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:04,681 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:04,681 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:04,683 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:04,684 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:04,685 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:04,685 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [35] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=35&ts=1731778684658
2024-11-16 17:38:04,697 [s3a-transfer-leg-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:04,697 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:38:04,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:04,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:04,699 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:04,699 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778684483; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:04,700 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:04,703 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:04,705 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:04,706 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:04,707 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:04,708 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:04,708 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:04,709 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:04,709 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:04,710 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:04,710 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:04,710 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:04,713 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=36&ts=1731778684658
2024-11-16 17:38:04,736 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.026s
2024-11-16 17:38:04,736 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.027s
2024-11-16 17:38:04,736 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.027s
2024-11-16 17:38:04,737 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:04,737 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:04,737 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:04,738 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:04,738 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:04,738 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:04,738 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000010&t0=16&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=36&ts=1731778684658
2024-11-16 17:38:04,750 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:04,751 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:04,751 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:38:04,751 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.044s
2024-11-16 17:38:04,751 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.044s
2024-11-16 17:38:04,751 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.071s
2024-11-16 17:38:04,751 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:04,752 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:04,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:04,788 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_get_request.failures=0) (stream_read_unbuffered=0) (op_delete=1) (multipart_upload_aborted=0) (op_exists.failures=0) (audit_request_execution=10) (op_xattr_list.failures=0) (op_mkdirs=1) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (committer_commits.failures=0) (object_bulk_delete_request.failures=0) (stream_read_exceptions=0) (object_multipart_aborted=0) (op_mkdirs.failures=0) (object_delete_request.failures=0) (op_openfile=0) (action_file_opened.failures=0) (op_create=1) (stream_read_seek_policy_changed=0) (op_createfile.failures=0) (committer_magic_files_created=0) (op_exists=0) (op_hflush=0) (stream_read_fully_operations=0) (stream_write_total_time=0) (stream_read_total_bytes=0) (committer_bytes_uploaded=0) (committer_load_single_pending_file=0) (committer_commit_job.failures=0) (op_list_status.failures=0) (stream_read_remote_stream_aborted=0) (stream_write_total_data=131072) (files_delete_rejected=0) (object_bulk_delete_request=2) (stream_read_remote_stream_drain.failures=0) (committer_load_single_pending_file.failures=0) (op_get_file_status.failures=0) (op_delete.failures=0) (stream_read_operations=0) (op_get_file_status=0) (op_create.failures=0) (files_copied_bytes=0) (stream_read_close_operations=0) (action_executor_acquired=0) (audit_access_check_failure=0) (stream_write_block_uploads=1) (committer_commit_job=0) (delegation_tokens_issued=0) (op_hsync=0) (ignored_errors=0) (committer_magic_marker_put.failures=0) (object_list_request=4) (stream_read_remote_stream_aborted.failures=0) (op_glob_status=0) (stream_aborted=0) (op_glob_status.failures=0) (store_exists_probe=0) (stream_read_version_mismatches=0) (object_select_requests=0) (stream_read_bytes_discarded_in_abort=0) (delegation_tokens_issued.failures=0) (action_http_get_request=0) (op_xattr_list=0) (stream_read_seek_bytes_skipped=0) (committer_jobs_failed=0) (op_access=0) (object_copy_requests=0) (op_abort.failures=0) (op_createfile=0) (stream_read_seek_forward_operations=0) (op_open=0) (multipart_upload_completed=0) (stream_write_block_uploads_aborted=0) (action_file_opened=0) (multipart_upload_list=0) (stream_read_bytes=0) (op_list_status=0) (op_xattr_get_named_map.failures=0) (op_get_delegation_token=0) (object_delete_objects=2) (action_http_head_request=2) (op_xattr_get_map=0) (multipart_upload_list.failures=0) (committer_jobs_completed=0) (stream_read_closed=0) (audit_failure=0) (op_get_content_summary.failures=0) (committer_commits_aborted=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named_map=0) (object_list_request.failures=0) (op_list_located_status=0) (op_get_delegation_token.failures=0) (object_multipart_initiated.failures=0) (committer_stage_file_upload.failures=0) (committer_bytes_committed=0) (op_copy_from_local_file=0) (stream_read_vectored_combined_ranges=0) (object_put_request_completed=2) (object_put_request.failures=0) (multipart_upload_part_put_bytes=0) (op_get_file_checksum=0) (object_continue_list_request=0) (files_created=1) (stream_read_vectored_read_bytes_discarded=0) (op_abort=0) (committer_commits_reverted=0) (stream_write_block_uploads_committed=0) (committer_commits_created=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (op_create_non_recursive=0) (op_copy_from_local_file.failures=0) (op_rename=0) (store_io_retry=0) (op_is_file.failures=0) (object_metadata_request=2) (stream_read_bytes_discarded_in_close=0) (object_multipart_aborted.failures=0) (op_xattr_get_named=0) (store_exists_probe.failures=0) (store_io_throttled=0) (audit_span_creation=4) (store_io_request=10) (stream_read_opened=0) (object_multipart_initiated=0) (committer_stage_file_upload=0) (committer_magic_marker_put=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_abort_under_path_invoked=0) (op_is_directory.failures=0) (stream_read_seek_operations=0) (stream_write_queue_duration.failures=0) (op_is_directory=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_backward_operations=0) (directories_deleted=0) (multipart_upload_started=0) (op_xattr_get_map.failures=0) (stream_write_exceptions=0) (fake_directories_deleted=1) (op_xattr_get_named.failures=0) (committer_commits_completed=0) (op_list_files=0) (op_get_content_summary=0) (stream_read_vectored_operations=0) (object_continue_list_request.failures=0) (fake_directories_created=0) (multipart_instantiated=0) (committer_materialize_file.failures=0) (committer_materialize_file=0) (multipart_upload_part_put=0) (stream_read_operations_incomplete=0) (op_get_file_checksum.failures=0) (op_is_file=0) (object_delete_request=0) (action_http_head_request.failures=0) (files_copied=0) (stream_write_bytes=65536) (object_put_request=2) (op_list_files.failures=0) (op_rename.failures=0) (op_access.failures=0) (object_put_bytes=65536) (files_deleted=1) (committer_tasks_completed=0) (committer_tasks_failed=0) (directories_created=1));
gauges=((stream_read_active_prefetch_operations=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=1) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.min=12) (op_xattr_get_named_map.min=-1) (op_abort.failures.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_write_queue_duration.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_drain.min=-1) (op_list_files.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_delegation_token.failures.min=-1) (op_create.failures.min=-1) (op_get_file_status.min=-1) (op_mkdirs.min=372) (op_createfile.failures.min=-1) (op_get_file_status.failures.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_files.min=-1) (action_http_get_request.min=-1) (op_get_delegation_token.min=-1) (op_is_file.min=-1) (op_create.min=53) (op_delete.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.min=-1) (op_delete.min=72) (op_get_file_checksum.min=-1) (op_rename.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.min=11) (object_multipart_initiated.min=-1) (op_is_directory.failures.min=-1) (object_put_request.min=84) (op_rename.failures.min=-1) (op_xattr_list.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_status.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.min=-1) (object_continue_list_request.failures.min=-1) (object_continue_list_request.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (op_xattr_get_map.failures.min=-1) (op_exists.min=-1) (op_list_status.failures.min=-1) (op_is_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=6) (op_glob_status.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=-1) (op_get_content_summary.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_commit_job.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.failures.max=-1) (op_is_directory.max=-1) (action_http_get_request.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_magic_marker_put.max=-1) (object_continue_list_request.max=-1) (op_list_status.failures.max=-1) (op_rename.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.max=23) (op_xattr_get_named_map.failures.max=-1) (object_list_request.max=233) (action_http_head_request.failures.max=-1) (op_delete.max=72) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.max=-1) (op_exists.max=-1) (op_get_delegation_token.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.failures.max=-1) (op_is_file.max=-1) (object_put_request.max=101) (op_copy_from_local_file.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_files.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.max=15) (store_exists_probe.failures.max=-1) (object_put_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_drain.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.max=-1) (op_abort.failures.max=-1) (op_createfile.max=-1) (op_abort.max=-1) (op_glob_status.failures.max=-1) (op_mkdirs.max=372) (action_file_opened.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_access.failures.max=-1) (op_get_file_status.max=-1) (op_create.max=53) (op_access.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.max=-1) (op_is_file.failures.max=-1) (object_multipart_aborted.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=1, sum=72, mean=72.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=1, sum=53, mean=53.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=2, sum=35, mean=17.5000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=2, sum=21, mean=10.5000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=2, sum=185, mean=92.5000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=4, sum=270, mean=67.5000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=1, sum=372, mean=372.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:04,790 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:04,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:04,790 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:04,791 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:04,791 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:04,791 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=37&ts=1731778684789
2024-11-16 17:38:04,810 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:38:04,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:04,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:04,812 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:04,812 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:04,813 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=37&ts=1731778684789
2024-11-16 17:38:04,822 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:04,823 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:04,823 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:04,824 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:04,825 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000011&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=37&ts=1731778684789
2024-11-16 17:38:04,847 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:04,848 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:04,848 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.025s
2024-11-16 17:38:04,848 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:04,850 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:04,850 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:04,850 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:04,850 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:04,851 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000012 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000012&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=37&ts=1731778684849
2024-11-16 17:38:04,860 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:04,860 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:04,861 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:04,864 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9767064807086656849.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:04,868 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9767064807086656849.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (stream_write_block_uploads=0) (op_hflush=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_bytes=65536) (object_put_request=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (op_abort=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9767064807086656849.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:04,868 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:04,868 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:04,869 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9767064807086656849.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:04,870 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:04,870 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:04,870 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:04,870 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:04,871 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000012 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000012&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=38&ts=1731778684849
2024-11-16 17:38:04,919 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:04,919 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:04,919 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.049s
2024-11-16 17:38:04,919 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9767064807086656849.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:04,919 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9767064807086656849.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:04,919 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9767064807086656849.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:04,920 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:04,921 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:04,924 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (multipart_upload_completed=0) (op_abort=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (op_hflush=0) (stream_write_block_uploads=1) (object_put_request=1) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=47));
maximums=((op_abort.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=47) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=47, mean=47.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:04,924 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:04,926 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:04,926 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:04,931 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:04,932 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:04,936 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:04,937 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:04,938 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:04,938 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:04,939 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:04,939 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:04,939 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:04,940 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:04,940 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:04,941 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:04,942 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='84e99388-c670-42ed-9347-ec9fdecab02d', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:04,942 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='84e99388-c670-42ed-9347-ec9fdecab02d', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:04,942 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='84e99388-c670-42ed-9347-ec9fdecab02d', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:04,943 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:04,943 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:04,944 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:04,944 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:04,945 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:04,945 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:04,946 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7c030a9d]
2024-11-16 17:38:04,946 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7c030a9d]
2024-11-16 17:38:04,946 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:04,947 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:04,947 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:04,948 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:04,948 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:04,949 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:04,949 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:04,949 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:04,950 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:04,950 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:04,951 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:04,951 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:04,953 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:04,954 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:04,955 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:04,955 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:04,955 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:04,956 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:04,956 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:04,956 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:04,957 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:04,957 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:04,958 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:38:04,958 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:04,958 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:04,959 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:04,959 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:38:04,960 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:38:04,961 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:04,962 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:04,963 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:04,963 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 84e99388-c670-42ed-9347-ec9fdecab02d-00000015 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/84e99388-c670-42ed-9347-ec9fdecab02d-00000015/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=84e99388-c670-42ed-9347-ec9fdecab02d-00000015&t0=37&fs=84e99388-c670-42ed-9347-ec9fdecab02d&t1=37&ts=1731778684961
2024-11-16 17:38:04,964 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:04,965 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:38:04,965 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:04,966 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:04,972 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:04,972 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:04,972 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:04,974 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted=0) (stream_read_closed=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_block_read=0) (stream_read_close_operations=1) (action_http_get_request=0) (action_http_get_request.failures=0) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (stream_read_operations=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=0) (stream_read_bytes=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_read_bytes_discarded=0) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_read_total_bytes=0) (stream_read_vectored_combined_ranges=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=11) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=11) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (action_http_get_request.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:04,977 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:04,977 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:04,978 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:04,978 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@226b5dc6[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:38:04,978 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:04,978 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics3-leg-bucket
2024-11-16 17:38:04,979 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:04,979 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7c030a9d] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:04,979 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7c030a9d] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:04,983 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_operations_incomplete=0) (object_put_request_completed=0) (action_file_opened=1) (op_is_directory=0) (op_abort=0) (object_continue_list_request.failures=0) (op_list_files=0) (multipart_upload_list=0) (op_get_file_checksum.failures=0) (stream_read_fully_operations=0) (op_access.failures=0) (files_created=0) (stream_aborted=0) (stream_write_total_data=0) (multipart_upload_part_put_bytes=0) (op_create=0) (op_createfile.failures=0) (stream_read_vectored_incoming_ranges=0) (multipart_upload_list.failures=0) (stream_read_vectored_operations=0) (fake_directories_deleted=0) (op_delete=0) (stream_read_seek_policy_changed=1) (stream_read_operations=0) (object_put_request=0) (committer_materialize_file.failures=0) (op_list_status=0) (object_bulk_delete_request.failures=0) (stream_write_queue_duration=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_unbuffered=0) (object_delete_objects=0) (op_exists=0) (object_continue_list_request=0) (op_hsync=0) (op_is_file=0) (op_rename.failures=0) (op_list_status.failures=0) (stream_read_close_operations=1) (committer_load_single_pending_file.failures=0) (op_hflush=0) (op_access=0) (op_copy_from_local_file=0) (action_file_opened.failures=0) (object_multipart_initiated=0) (files_copied_bytes=0) (committer_jobs_completed=0) (committer_stage_file_upload.failures=0) (op_get_file_status=0) (stream_read_seek_operations=0) (op_get_file_checksum=0) (object_delete_request=0) (stream_read_bytes=0) (op_xattr_get_named_map=0) (stream_write_block_uploads_aborted=0) (stream_write_queue_duration.failures=0) (op_glob_status.failures=0) (store_io_request=1) (audit_failure=0) (multipart_upload_part_put=0) (multipart_instantiated=0) (delegation_tokens_issued.failures=0) (op_get_content_summary.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (committer_commits_aborted=0) (files_copied=0) (stream_read_version_mismatches=0) (op_rename=0) (multipart_upload_completed=0) (stream_read_vectored_combined_ranges=0) (stream_read_opened=0) (committer_bytes_committed=0) (stream_write_total_time=0) (op_xattr_get_map=0) (store_exists_probe.failures=0) (stream_write_block_uploads=0) (op_get_content_summary=0) (multipart_upload_aborted=0) (object_put_request.failures=0) (op_get_delegation_token.failures=0) (committer_magic_files_created=0) (op_get_file_status.failures=0) (stream_read_remote_stream_aborted.failures=0) (directories_deleted=0) (action_http_head_request.failures=0) (stream_read_remote_stream_drain=0) (action_executor_acquired=0) (op_xattr_get_named_map.failures=0) (op_list_files.failures=0) (object_multipart_initiated.failures=0) (action_http_get_request.failures=0) (op_create.failures=0) (object_bulk_delete_request=0) (stream_read_seek_forward_operations=0) (op_exists.failures=0) (op_list_located_status=0) (committer_commits_completed=0) (stream_write_bytes=0) (op_abort.failures=0) (stream_write_block_uploads_committed=0) (object_copy_requests=0) (committer_materialize_file=0) (committer_jobs_failed=0) (files_delete_rejected=0) (store_io_retry=0) (committer_commit_job=0) (object_multipart_aborted=0) (committer_commits_reverted=0) (op_delete.failures=0) (op_create_non_recursive=0) (stream_read_remote_stream_aborted=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_discarded=0) (stream_write_exceptions=0) (committer_load_single_pending_file=0) (action_executor_acquired.failures=0) (op_xattr_get_map.failures=0) (object_put_bytes=0) (audit_access_check_failure=0) (op_is_directory.failures=0) (store_io_throttled=0) (op_createfile=0) (stream_read_remote_stream_drain.failures=0) (stream_write_exceptions_completing_upload=0) (op_openfile=0) (ignored_errors=0) (store_exists_probe=0) (committer_magic_marker_put.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_list.failures=0) (op_xattr_get_named=0) (committer_tasks_failed=0) (op_glob_status=0) (object_multipart_aborted.failures=0) (multipart_upload_started=0) (committer_magic_marker_put=0) (object_list_request=0) (directories_created=0) (action_http_get_request=0) (stream_read_total_bytes=0) (committer_commit_job.failures=0) (stream_read_exceptions=0) (object_metadata_request=1) (object_list_request.failures=0) (files_deleted=0) (op_xattr_get_named.failures=0) (op_open=1) (op_mkdirs=0) (object_delete_request.failures=0) (delegation_tokens_issued=0) (audit_span_creation=2) (audit_request_execution=1) (object_select_requests=0) (stream_read_bytes_backwards_on_seek=0) (fake_directories_created=0) (stream_read_closed=0) (op_get_delegation_token=0) (op_is_file.failures=0) (committer_tasks_completed=0) (committer_commits_created=0) (op_mkdirs.failures=0) (committer_bytes_uploaded=0) (action_http_head_request=1) (op_copy_from_local_file.failures=0) (committer_stage_file_upload=0) (committer_commits.failures=0) (op_xattr_list=0));
gauges=((client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_active=0));
minimums=((action_http_head_request.min=9) (stream_read_remote_stream_drain.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_exists.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (op_abort.failures.min=-1) (op_list_status.min=-1) (action_http_head_request.failures.min=-1) (op_rename.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_commit_job.min=-1) (action_http_get_request.min=-1) (op_is_file.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.min=-1) (op_list_status.failures.min=-1) (object_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_file_opened.min=11) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_files.min=-1) (action_executor_acquired.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_is_directory.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_createfile.failures.min=-1) (object_put_request.min=-1) (op_xattr_get_map.min=-1) (op_is_file.min=-1) (object_continue_list_request.min=-1) (op_mkdirs.min=-1) (committer_stage_file_upload.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.min=-1) (op_create.min=-1) (object_list_request.min=-1) (action_http_get_request.failures.min=-1) (op_createfile.min=-1) (op_get_content_summary.min=-1) (op_get_file_status.min=-1) (op_xattr_list.failures.min=-1) (op_delete.min=-1) (op_get_file_checksum.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_list.min=-1) (committer_commit_job.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.min=-1) (op_access.min=-1) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.failures.min=-1));
maximums=((op_delete.max=-1) (action_http_get_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_access.max=-1) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_file.failures.max=-1) (committer_stage_file_upload.max=-1) (store_exists_probe.max=-1) (committer_load_single_pending_file.max=-1) (op_is_file.max=-1) (action_file_opened.max=11) (object_put_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.max=9) (op_list_status.failures.max=-1) (op_create.failures.max=-1) (object_put_request.max=-1) (op_access.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_commit_job.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.max=-1) (op_rename.max=-1) (op_createfile.max=-1) (op_get_file_status.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.failures.max=-1) (op_xattr_list.max=-1) (object_list_request.failures.max=-1) (op_get_file_checksum.max=-1) (action_executor_acquired.failures.max=-1) (op_mkdirs.max=-1) (object_list_request.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_exists.max=-1) (op_glob_status.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_delete_request.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_continue_list_request.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (op_create.max=-1));
means=((multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=9, mean=9.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:04,984 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:04,984 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:04,984 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:04,984 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=37&ts=1731778684983
2024-11-16 17:38:04,989 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:04,989 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:04,990 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=37&ts=1731778684983
2024-11-16 17:38:05,001 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:05,001 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:05,001 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:05,002 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:05,002 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:05,002 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:05,002 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:05,003 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:05,003 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:05,003 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:05,003 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:05,003 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:05,009 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:05,010 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:05,011 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,011 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [40] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=40&ts=1731778684983
2024-11-16 17:38:05,022 [s3a-transfer-leg-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:05,022 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:38:05,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:05,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:05,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:05,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778684912; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:05,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:05,024 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:05,024 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:05,025 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:05,025 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:05,026 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:05,026 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:05,026 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:05,026 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:05,026 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:05,026 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:05,026 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:05,027 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=41&ts=1731778684983
2024-11-16 17:38:05,040 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:05,040 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:38:05,041 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:38:05,041 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:05,041 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:05,041 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:05,041 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:05,041 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:05,041 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:05,042 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000016&t0=37&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=41&ts=1731778684983
2024-11-16 17:38:05,066 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.025s
2024-11-16 17:38:05,066 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.025s
2024-11-16 17:38:05,066 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.025s
2024-11-16 17:38:05,066 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.040s
2024-11-16 17:38:05,066 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.041s
2024-11-16 17:38:05,067 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.064s
2024-11-16 17:38:05,067 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:05,067 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:05,073 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:05,091 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request=8) (stream_read_bytes_discarded_in_abort=0) (op_xattr_list=0) (op_copy_from_local_file.failures=0) (op_createfile.failures=0) (ignored_errors=0) (stream_read_version_mismatches=0) (op_list_files.failures=0) (op_list_status=0) (object_delete_request.failures=0) (committer_tasks_completed=0) (op_get_file_status=0) (files_delete_rejected=0) (stream_read_vectored_combined_ranges=0) (op_exists.failures=0) (stream_read_seek_backward_operations=0) (op_open=0) (op_xattr_list.failures=0) (committer_tasks_failed=0) (op_is_file.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=0) (op_rename.failures=0) (action_file_opened.failures=0) (op_rename=0) (op_xattr_get_named=0) (object_bulk_delete_request.failures=0) (object_multipart_aborted.failures=0) (op_openfile=0) (stream_read_vectored_incoming_ranges=0) (op_mkdirs.failures=0) (stream_read_operations=0) (op_access=0) (multipart_upload_abort_under_path_invoked=0) (committer_magic_marker_put.failures=0) (object_select_requests=0) (fake_directories_created=0) (object_put_bytes=131072) (committer_materialize_file=0) (object_bulk_delete_request=4) (stream_read_fully_operations=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_policy_changed=0) (stream_write_queue_duration.failures=0) (object_metadata_request=4) (object_multipart_initiated.failures=0) (audit_request_execution=20) (action_http_get_request.failures=0) (multipart_upload_list.failures=0) (object_continue_list_request=0) (op_xattr_get_named_map=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_write_total_data=262144) (files_created=2) (directories_deleted=0) (store_io_request=20) (op_xattr_get_map.failures=0) (op_delete.failures=0) (op_glob_status=0) (action_http_head_request=4) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=0) (op_create_non_recursive=0) (op_hsync=0) (committer_stage_file_upload.failures=0) (committer_magic_marker_put=0) (multipart_instantiated=0) (object_delete_request=0) (op_glob_status.failures=0) (committer_commit_job.failures=0) (op_access.failures=0) (op_list_status.failures=0) (op_xattr_get_named.failures=0) (object_put_request_completed=4) (store_exists_probe.failures=0) (multipart_upload_started=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads=2) (files_copied_bytes=0) (stream_write_bytes=131072) (stream_read_vectored_read_bytes_discarded=0) (stream_read_opened=0) (committer_commits_completed=0) (stream_aborted=0) (multipart_upload_aborted=0) (store_exists_probe=0) (op_mkdirs=2) (op_is_directory.failures=0) (committer_commits_reverted=0) (op_abort.failures=0) (directories_created=2) (committer_materialize_file.failures=0) (committer_load_single_pending_file=0) (audit_access_check_failure=0) (multipart_upload_list=0) (stream_read_closed=0) (action_http_get_request=0) (op_is_directory=0) (stream_read_seek_operations=0) (object_put_request.failures=0) (committer_commit_job=0) (committer_load_single_pending_file.failures=0) (object_list_request.failures=0) (object_delete_objects=4) (stream_read_exceptions=0) (op_get_file_status.failures=0) (committer_stage_file_upload=0) (committer_commits.failures=0) (op_xattr_get_named_map.failures=0) (audit_span_creation=7) (delegation_tokens_issued.failures=0) (action_executor_acquired=0) (committer_bytes_committed=0) (committer_jobs_completed=0) (object_multipart_initiated=0) (store_io_retry=0) (multipart_upload_part_put=0) (op_get_file_checksum.failures=0) (object_copy_requests=0) (op_list_located_status=0) (op_get_delegation_token=0) (op_get_content_summary.failures=0) (stream_read_operations_incomplete=0) (op_is_file=0) (multipart_upload_part_put_bytes=0) (stream_read_total_bytes=0) (object_put_request=4) (stream_write_block_uploads_committed=0) (files_copied=0) (op_createfile=0) (stream_read_vectored_operations=0) (stream_read_seek_forward_operations=0) (committer_bytes_uploaded=0) (store_io_throttled=0) (action_file_opened=0) (op_get_file_checksum=0) (delegation_tokens_issued=0) (stream_write_total_time=0) (object_multipart_aborted=0) (op_abort=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_completed=0) (committer_commits_aborted=0) (op_list_files=0) (stream_write_block_uploads_aborted=0) (files_deleted=2) (op_hflush=0) (committer_magic_files_created=0) (stream_read_bytes=0) (stream_read_unbuffered=0) (op_copy_from_local_file=0) (op_get_delegation_token.failures=0) (fake_directories_deleted=2) (action_http_head_request.failures=0) (op_create=2) (stream_write_queue_duration=0) (op_delete=2) (op_create.failures=0) (audit_failure=0) (committer_commits_created=0) (op_xattr_get_map=0) (stream_read_seek_bytes_skipped=0) (object_continue_list_request.failures=0) (op_exists=0) (action_executor_acquired.failures=0) (op_get_content_summary=0) (committer_jobs_failed=0));
gauges=((stream_write_block_uploads_pending=2) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0));
minimums=((store_exists_probe.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1) (op_get_delegation_token.min=-1) (op_createfile.min=-1) (op_abort.failures.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (object_bulk_delete_request.min=12) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=65) (op_xattr_get_named_map.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_head_request.min=5) (op_xattr_list.failures.min=-1) (op_is_directory.min=-1) (op_create.failures.min=-1) (op_createfile.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_create.min=16) (object_multipart_aborted.failures.min=-1) (op_list_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (op_get_file_status.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_list.min=-1) (delegation_tokens_issued.failures.min=-1) (op_rename.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_list_request.min=10) (op_xattr_get_map.min=-1) (op_exists.min=-1) (op_abort.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.min=-1) (op_is_file.min=-1) (object_delete_request.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_status.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_access.min=-1) (object_list_request.failures.min=-1) (op_delete.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.failures.min=-1) (op_mkdirs.min=59) (object_put_request.min=47) (action_http_get_request.failures.min=-1) (action_http_get_request.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.failures.min=-1) (op_get_content_summary.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_checksum.failures.min=-1));
maximums=((op_xattr_get_map.max=-1) (committer_stage_file_upload.max=-1) (object_continue_list_request.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_file_opened.max=-1) (committer_commit_job.max=-1) (op_is_directory.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.failures.max=-1) (action_http_get_request.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (object_list_request.max=233) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_list.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.failures.max=-1) (op_mkdirs.failures.max=-1) (op_access.failures.max=-1) (op_get_file_status.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.max=15) (op_rename.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_access.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=25) (action_http_head_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_createfile.max=-1) (op_exists.max=-1) (op_delete.failures.max=-1) (op_create.max=53) (stream_read_remote_stream_drain.max=-1) (op_is_file.max=-1) (object_delete_request.max=-1) (op_is_file.failures.max=-1) (op_list_files.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.failures.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_mkdirs.max=372) (object_put_request.max=101) (op_xattr_get_named.max=-1) (op_xattr_get_named.failures.max=-1) (op_delete.max=72) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.max=-1) (op_glob_status.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (op_get_file_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_abort.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (op_list_files.failures.max=-1));
means=((stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=2, sum=431, mean=215.5000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=2, sum=137, mean=68.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=4, sum=36, mean=9.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=4, sum=255, mean=63.7500)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=4, sum=74, mean=18.5000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=8, sum=320, mean=40.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=2, sum=69, mean=34.5000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:05,091 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:05,092 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:05,092 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,093 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,093 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,093 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685091
2024-11-16 17:38:05,101 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:05,101 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:05,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:05,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:05,102 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685091
2024-11-16 17:38:05,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:05,107 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:05,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:05,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:05,108 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000017&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685091
2024-11-16 17:38:05,130 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:05,130 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:05,130 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:38:05,130 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:05,131 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:05,131 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,131 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,131 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,131 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000018 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000018&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685131
2024-11-16 17:38:05,142 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:05,142 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,143 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:05,143 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582643616034061646.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:05,145 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582643616034061646.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (op_abort.failures=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_data=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582643616034061646.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:05,145 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:05,145 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:05,146 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582643616034061646.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:05,146 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:05,146 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:05,147 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:05,147 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:05,147 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000018 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000018&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=43&ts=1731778685131
2024-11-16 17:38:05,202 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:05,202 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:05,202 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.056s
2024-11-16 17:38:05,203 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582643616034061646.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:05,203 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582643616034061646.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:05,203 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2582643616034061646.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:05,203 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:05,205 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:05,208 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (object_multipart_initiated=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (multipart_upload_completed=0) (op_hflush=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (op_hsync=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0) (stream_write_block_uploads=1) (object_put_request=1) (committer_magic_marker_put=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=53) (multipart_upload_completed.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=53) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=53, mean=53.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:05,208 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:05,210 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:05,210 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,210 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:05,211 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000019 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000019/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000019&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685210
2024-11-16 17:38:05,236 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:05,236 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:05,237 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:05,237 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,242 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:05,242 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:05,244 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,244 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,250 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:38:05,265 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,260 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_operations=1) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_closed=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (stream_aborted=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (action_http_get_request=0) (stream_read_vectored_incoming_ranges=2) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_operations=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (stream_read_total_bytes=0) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=26) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=26) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=26, mean=26.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:05,275 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:05,275 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,275 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:05,276 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000020 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000020&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685275
2024-11-16 17:38:05,287 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:05,287 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:05,287 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:05,287 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,287 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:05,288 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:05,297 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,298 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,304 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:05,304 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:05,305 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000020 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000020&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=45&ts=1731778685275
2024-11-16 17:38:05,353 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.049s
2024-11-16 17:38:05,355 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:05,356 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,357 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=0) (stream_read_bytes=150) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=2) (action_file_opened.failures=0) (stream_read_operations=0) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read=0) (action_http_get_request=1) (stream_read_vectored_operations=1) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_read_closed=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=150) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=50) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=12));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=50) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=12) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=12, mean=12.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=50, mean=50.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:05,361 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:05,361 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,361 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:05,361 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685361
2024-11-16 17:38:05,370 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,370 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,370 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=42&ts=1731778685361
2024-11-16 17:38:05,384 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:38:05,385 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:05,385 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:05,385 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:05,385 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:05,386 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:05,386 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:05,386 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:05,387 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:05,387 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:05,387 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:05,387 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:05,397 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:05,397 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:05,398 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,400 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [46] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=46&ts=1731778685361
2024-11-16 17:38:05,418 [s3a-transfer-leg-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.020s
2024-11-16 17:38:05,419 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.022s
2024-11-16 17:38:05,420 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:05,421 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:05,421 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:05,421 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778685188; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:05,421 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:05,422 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:05,422 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:05,423 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:05,423 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:05,424 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:05,425 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:05,425 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:05,425 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:05,425 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:05,425 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:05,425 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:05,425 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=47&ts=1731778685361
2024-11-16 17:38:05,442 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:38:05,443 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:38:05,443 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:38:05,443 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:05,443 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:05,443 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:05,444 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:05,444 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:05,444 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:05,444 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000021&t0=42&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=47&ts=1731778685361
2024-11-16 17:38:05,457 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:05,458 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:38:05,458 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:38:05,459 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.035s
2024-11-16 17:38:05,459 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.036s
2024-11-16 17:38:05,460 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.074s
2024-11-16 17:38:05,460 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:05,460 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:05,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:05,494 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_combined_ranges=2) (directories_created=3) (stream_write_total_time=0) (object_continue_list_request=0) (op_list_located_status=0) (committer_stage_file_upload.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_write_exceptions=0) (action_http_get_request.failures=0) (files_created=3) (object_put_bytes=196608) (op_get_file_status.failures=0) (committer_magic_marker_put=0) (op_get_file_status=0) (op_abort.failures=0) (stream_read_total_bytes=150) (op_get_delegation_token.failures=0) (committer_stage_file_upload=0) (stream_write_block_uploads=3) (op_create.failures=0) (op_xattr_get_map.failures=0) (stream_write_queue_duration=0) (stream_read_operations=0) (audit_request_execution=33) (stream_read_opened=0) (op_is_file.failures=0) (stream_read_seek_operations=0) (object_select_requests=0) (op_xattr_get_map=0) (committer_commits.failures=0) (op_delete=3) (op_access=0) (op_exists=0) (committer_commits_completed=0) (stream_read_closed=0) (delegation_tokens_issued=0) (stream_read_remote_stream_aborted=0) (stream_write_bytes=196608) (stream_write_queue_duration.failures=0) (committer_bytes_committed=0) (op_xattr_get_named_map.failures=0) (object_delete_request.failures=0) (op_rename.failures=0) (stream_read_remote_stream_drain=0) (action_executor_acquired=0) (delegation_tokens_issued.failures=0) (object_delete_request=0) (multipart_instantiated=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named_map=0) (op_is_directory.failures=0) (committer_jobs_failed=0) (committer_load_single_pending_file=0) (multipart_upload_part_put_bytes=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (object_multipart_aborted=0) (multipart_upload_aborted=0) (stream_read_unbuffered=0) (op_createfile=0) (committer_magic_files_created=0) (committer_tasks_completed=0) (object_bulk_delete_request=6) (object_delete_objects=6) (committer_commit_job=0) (stream_read_seek_policy_changed=2) (op_open=2) (op_delete.failures=0) (op_get_file_checksum.failures=0) (directories_deleted=0) (committer_commits_reverted=0) (store_exists_probe.failures=0) (action_file_opened=2) (committer_materialize_file.failures=0) (object_put_request_completed=6) (op_xattr_get_named=0) (committer_bytes_uploaded=0) (op_copy_from_local_file=0) (op_get_content_summary.failures=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads_aborted=0) (op_create=3) (stream_read_seek_bytes_skipped=0) (op_is_file=0) (stream_read_remote_stream_aborted.failures=0) (files_copied=0) (op_list_files=0) (stream_read_close_operations=2) (multipart_upload_list.failures=0) (op_get_content_summary=0) (multipart_upload_abort_under_path_invoked=0) (object_multipart_aborted.failures=0) (committer_jobs_completed=0) (object_list_request.failures=0) (committer_commits_created=0) (stream_read_bytes_backwards_on_seek=0) (committer_load_single_pending_file.failures=0) (store_exists_probe=0) (op_access.failures=0) (stream_read_fully_operations=0) (op_get_file_checksum=0) (fake_directories_deleted=3) (object_bulk_delete_request.failures=0) (object_multipart_initiated=0) (ignored_errors=0) (op_hsync=0) (files_deleted=3) (committer_materialize_file=0) (audit_span_creation=12) (store_io_request=33) (stream_write_exceptions_completing_upload=0) (object_put_request=6) (op_create_non_recursive=0) (object_put_request.failures=0) (action_http_head_request.failures=0) (op_copy_from_local_file.failures=0) (op_abort=0) (action_http_get_request=1) (stream_write_block_uploads_committed=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list=0) (multipart_upload_started=0) (object_copy_requests=0) (op_hflush=0) (committer_commit_job.failures=0) (audit_failure=0) (object_list_request=12) (stream_read_bytes_discarded_in_close=0) (op_list_status.failures=0) (stream_aborted=0) (store_io_retry=0) (op_glob_status.failures=0) (stream_read_exceptions=0) (op_get_delegation_token=0) (stream_read_version_mismatches=0) (op_mkdirs.failures=0) (committer_tasks_failed=0) (files_delete_rejected=0) (committer_commits_aborted=0) (stream_read_remote_stream_drain.failures=0) (op_list_files.failures=0) (action_http_head_request=8) (op_glob_status=0) (op_openfile=0) (audit_access_check_failure=0) (files_copied_bytes=0) (stream_read_bytes=150) (op_createfile.failures=0) (object_metadata_request=8) (stream_read_vectored_incoming_ranges=4) (object_continue_list_request.failures=0) (op_mkdirs=3) (fake_directories_created=0) (op_rename=0) (action_file_opened.failures=0) (stream_write_total_data=393216) (op_xattr_list.failures=0) (op_list_status=0) (stream_read_vectored_operations=2) (store_io_throttled=0) (op_is_directory=0) (committer_magic_marker_put.failures=0) (stream_read_seek_backward_operations=0) (op_xattr_get_named.failures=0) (multipart_upload_part_put=0) (op_exists.failures=0) (multipart_upload_list=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=3) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_access.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.min=39) (committer_commit_job.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (op_is_file.min=-1) (object_continue_list_request.min=-1) (op_create.min=12) (op_get_content_summary.min=-1) (object_delete_request.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.min=12) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_list_request.min=8) (op_is_directory.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named.min=-1) (op_access.min=-1) (op_delete.min=65) (op_abort.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.min=-1) (action_http_head_request.min=5) (object_multipart_aborted.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.min=50) (committer_stage_file_upload.min=-1) (action_http_get_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_head_request.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.min=-1) (object_put_request.min=53) (op_is_file.failures.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.min=-1) (action_file_opened.min=12) (op_xattr_list.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (committer_materialize_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_status.failures.min=-1) (op_list_files.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_rename.failures.min=-1));
maximums=((object_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.max=-1) (op_createfile.max=-1) (action_http_head_request.max=26) (op_exists.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_get_request.max=50) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.max=-1) (op_list_files.failures.max=-1) (op_delete.max=74) (op_create.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_status.failures.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.max=-1) (op_glob_status.failures.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.max=26) (op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (op_is_directory.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_map.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_status.max=-1) (op_list_status.failures.max=-1) (op_create.max=53) (multipart_upload_list.failures.max=-1) (op_xattr_get_named.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (stream_write_queue_duration.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.max=101) (object_multipart_initiated.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=233) (op_mkdirs.max=372) (committer_materialize_file.failures.max=-1) (op_xattr_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.max=25) (op_access.max=-1) (op_access.failures.max=-1) (store_exists_probe.max=-1) (committer_commit_job.max=-1) (object_bulk_delete_request.failures.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=3, sum=470, mean=156.6667)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=6, sum=104, mean=17.3333)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=38, mean=19.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=3, sum=211, mean=70.3333)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=12, sum=371, mean=30.9167)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=3, sum=81, mean=27.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=6, sum=330, mean=55.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=50, mean=50.0000)) (action_http_head_request.mean=(samples=8, sum=87, mean=10.8750)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:05,495 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:05,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:05,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,495 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,495 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,496 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=48&ts=1731778685494
2024-11-16 17:38:05,507 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:05,507 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:05,507 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:05,508 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,508 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:05,508 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=48&ts=1731778685494
2024-11-16 17:38:05,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:05,514 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:05,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:05,515 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:05,515 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000022&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=48&ts=1731778685494
2024-11-16 17:38:05,561 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:05,562 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:05,562 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.048s
2024-11-16 17:38:05,562 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:05,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:05,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,563 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,563 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000023 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000023&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=48&ts=1731778685562
2024-11-16 17:38:05,579 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:38:05,579 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,579 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:05,580 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1927635617457174633.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:05,581 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1927635617457174633.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort=0) (op_abort.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (op_hsync=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1927635617457174633.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:05,581 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:05,581 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:05,582 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1927635617457174633.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:05,582 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:05,582 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:05,585 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:05,585 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:05,586 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000023 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000023&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=49&ts=1731778685562
2024-11-16 17:38:05,663 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:05,664 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:05,664 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.082s
2024-11-16 17:38:05,669 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1927635617457174633.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:05,669 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1927635617457174633.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:05,670 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1927635617457174633.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:05,670 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:05,670 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:05,672 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (op_hsync=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_put_request=1) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=1) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=75) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_put_request.max=75) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=75, mean=75.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:05,673 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:05,674 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:05,674 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,674 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:05,674 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000024 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000024&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=48&ts=1731778685674
2024-11-16 17:38:05,686 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:05,687 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:05,687 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:05,688 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,688 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:05,689 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:05,691 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,693 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,694 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:38:05,694 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,709 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=1) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_bytes=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_opened=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_read_bytes_discarded=0) (action_http_get_request=0) (stream_read_vectored_incoming_ranges=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_closed=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_combined_ranges=1) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_fully_operations=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=0) (stream_read_close_operations=0) (stream_read_seek_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=13) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=13) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=13, mean=13.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:05,715 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:38:05,716 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,722 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,722 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:05,723 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:05,730 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:05,731 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,732 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:05,732 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:05,733 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000024 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000024&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=51&ts=1731778685674
2024-11-16 17:38:05,765 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.032s
2024-11-16 17:38:05,765 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:05,766 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:05,767 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_vectored_incoming_ranges=4) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=2) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=0) (stream_read_unbuffered=1) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=2) (stream_read_remote_stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=10) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=150) (stream_read_close_operations=1) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=2) (action_http_get_request=1) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_bytes=150) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=1) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=13) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=33) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=33) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=13));
means=((action_http_get_request.mean=(samples=1, sum=33, mean=33.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=13, mean=13.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:05,771 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:05,771 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,771 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:05,771 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=48&ts=1731778685770
2024-11-16 17:38:05,783 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,784 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,784 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=48&ts=1731778685770
2024-11-16 17:38:05,795 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:05,796 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:05,797 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:05,797 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:05,798 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:05,798 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:05,798 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:05,799 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:05,799 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:05,799 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:05,800 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:05,800 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:05,800 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:05,801 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:05,801 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,802 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [52] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=52&ts=1731778685770
2024-11-16 17:38:05,829 [s3a-transfer-leg-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.028s
2024-11-16 17:38:05,842 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.042s
2024-11-16 17:38:05,845 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:05,846 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:05,846 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:05,846 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778685640; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:05,846 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:05,846 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:05,846 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:05,850 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:05,856 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:05,856 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:05,857 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:05,857 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:05,857 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:05,857 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:05,857 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:05,857 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:05,859 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=53&ts=1731778685770
2024-11-16 17:38:05,885 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.028s
2024-11-16 17:38:05,885 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.028s
2024-11-16 17:38:05,885 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.028s
2024-11-16 17:38:05,885 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:05,885 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:05,886 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:05,886 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:05,886 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:05,886 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:05,886 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000025&t0=48&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=53&ts=1731778685770
2024-11-16 17:38:05,905 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:38:05,905 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:38:05,906 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.021s
2024-11-16 17:38:05,906 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.050s
2024-11-16 17:38:05,907 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.051s
2024-11-16 17:38:05,909 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.110s
2024-11-16 17:38:05,909 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:05,910 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:05,921 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:05,955 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_delete_request=0) (committer_commit_job.failures=0) (stream_read_bytes=300) (action_executor_acquired.failures=0) (op_delete=4) (op_xattr_list.failures=0) (object_multipart_aborted=0) (committer_bytes_uploaded=0) (op_openfile=0) (op_xattr_list=0) (stream_write_exceptions=0) (fake_directories_created=0) (op_copy_from_local_file.failures=0) (audit_access_check_failure=0) (op_list_files=0) (committer_tasks_failed=0) (op_list_located_status=0) (op_hsync=0) (stream_read_seek_policy_changed=4) (stream_read_bytes_discarded_in_abort=0) (fake_directories_deleted=4) (op_xattr_get_named_map.failures=0) (op_glob_status=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=8) (files_delete_rejected=0) (stream_read_vectored_operations=4) (op_list_files.failures=0) (object_delete_objects=8) (audit_failure=0) (stream_read_operations=0) (action_http_get_request.failures=0) (action_http_head_request=11) (stream_write_total_time=0) (multipart_upload_list.failures=0) (stream_write_block_uploads_aborted=0) (op_hflush=0) (op_xattr_get_named_map=0) (files_copied_bytes=0) (stream_read_seek_forward_operations=0) (op_copy_from_local_file=0) (op_is_file=0) (multipart_instantiated=0) (multipart_upload_aborted=0) (op_get_content_summary.failures=0) (stream_write_block_uploads_committed=0) (stream_read_unbuffered=1) (stream_write_total_data=524288) (stream_read_remote_stream_aborted=0) (committer_jobs_failed=0) (action_executor_acquired=0) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token=0) (stream_read_remote_stream_drain=0) (object_put_request.failures=0) (files_deleted=4) (committer_magic_marker_put.failures=0) (op_get_content_summary=0) (stream_read_version_mismatches=0) (delegation_tokens_issued.failures=0) (store_exists_probe.failures=0) (op_exists=0) (committer_materialize_file.failures=0) (committer_load_single_pending_file=0) (op_glob_status.failures=0) (object_multipart_initiated=0) (object_copy_requests=0) (object_multipart_aborted.failures=0) (committer_commit_job=0) (stream_read_seek_operations=0) (op_list_status.failures=0) (op_access=0) (committer_commits_created=0) (object_bulk_delete_request.failures=0) (op_create_non_recursive=0) (op_create=4) (directories_deleted=0) (object_put_request_completed=8) (committer_bytes_committed=0) (op_access.failures=0) (op_is_directory.failures=0) (stream_read_operations_incomplete=0) (files_created=4) (multipart_upload_completed=0) (op_mkdirs.failures=0) (op_delete.failures=0) (committer_magic_files_created=0) (action_http_head_request.failures=0) (stream_aborted=0) (op_list_status=0) (ignored_errors=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_map=0) (stream_read_seek_bytes_discarded=0) (stream_write_bytes=262144) (stream_read_bytes_discarded_in_close=0) (op_xattr_get_named=0) (stream_read_total_bytes=300) (action_file_opened=3) (stream_read_fully_operations=0) (action_http_get_request=2) (store_io_throttled=0) (op_abort=0) (stream_write_block_uploads=4) (committer_commits_reverted=0) (op_createfile.failures=0) (op_xattr_get_named.failures=0) (audit_request_execution=45) (op_is_directory=0) (stream_read_exceptions=0) (object_select_requests=0) (op_createfile=0) (op_open=3) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (op_create.failures=0) (committer_stage_file_upload=0) (stream_read_seek_backward_operations=0) (store_io_retry=0) (stream_read_opened=0) (committer_load_single_pending_file.failures=0) (multipart_upload_list=0) (object_bulk_delete_request=8) (store_io_request=45) (op_get_delegation_token.failures=0) (op_abort.failures=0) (stream_read_vectored_read_bytes_discarded=20) (multipart_upload_part_put_bytes=0) (committer_commits_aborted=0) (committer_magic_marker_put=0) (stream_write_queue_duration.failures=0) (stream_read_close_operations=3) (audit_span_creation=16) (object_list_request.failures=0) (op_get_file_status.failures=0) (delegation_tokens_issued=0) (object_put_bytes=262144) (files_copied=0) (committer_materialize_file=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_map.failures=0) (stream_write_exceptions_completing_upload=0) (op_get_file_checksum.failures=0) (op_get_file_status=0) (object_continue_list_request.failures=0) (op_rename.failures=0) (op_is_file.failures=0) (op_exists.failures=0) (object_delete_request.failures=0) (stream_write_queue_duration=0) (stream_read_vectored_combined_ranges=4) (op_get_file_checksum=0) (object_multipart_initiated.failures=0) (multipart_upload_started=0) (committer_tasks_completed=0) (committer_stage_file_upload.failures=0) (committer_commits_completed=0) (op_mkdirs=4) (store_exists_probe=0) (multipart_upload_part_put=0) (object_metadata_request=11) (object_put_request=8) (committer_jobs_completed=0) (directories_created=4) (committer_commits.failures=0) (object_continue_list_request=0) (object_list_request=16) (op_rename=0));
gauges=((stream_write_block_uploads_pending=4) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((op_xattr_list.min=-1) (object_multipart_aborted.failures.min=-1) (op_delete.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.min=-1) (object_bulk_delete_request.min=12) (op_xattr_get_named_map.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.min=8) (op_xattr_get_map.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.failures.min=-1) (action_http_get_request.min=33) (op_exists.failures.min=-1) (action_http_head_request.min=5) (op_get_delegation_token.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_initiated.failures.min=-1) (op_exists.min=-1) (op_glob_status.failures.min=-1) (object_multipart_initiated.min=-1) (action_file_opened.failures.min=-1) (op_list_status.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.min=-1) (committer_materialize_file.min=-1) (committer_magic_marker_put.min=-1) (op_delete.min=65) (object_delete_request.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.min=-1) (op_abort.min=-1) (op_get_content_summary.min=-1) (committer_commit_job.min=-1) (action_file_opened.min=13) (committer_stage_file_upload.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_head_request.failures.min=-1) (op_create.min=12) (op_list_files.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (object_delete_request.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_mkdirs.min=39) (op_rename.min=-1) (op_list_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.failures.min=-1) (op_access.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.min=75) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.min=-1) (op_copy_from_local_file.min=-1) (op_is_directory.min=-1) (op_createfile.failures.min=-1));
maximums=((action_http_get_request.max=50) (op_exists.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_status.failures.max=-1) (op_is_file.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_drain.max=-1) (committer_materialize_file.failures.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=101) (object_put_request.failures.max=-1) (committer_materialize_file.max=-1) (op_exists.failures.max=-1) (action_file_opened.max=26) (multipart_upload_list.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.max=112) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (op_createfile.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.max=-1) (op_get_delegation_token.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.failures.max=-1) (op_list_files.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.max=-1) (action_http_head_request.failures.max=-1) (object_list_request.max=233) (op_access.max=-1) (op_glob_status.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.max=-1) (stream_write_queue_duration.max=-1) (op_abort.max=-1) (object_bulk_delete_request.max=27) (op_xattr_get_named_map.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.max=-1) (op_list_files.max=-1) (op_rename.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.max=-1) (op_abort.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=53) (op_mkdirs.max=372) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (store_exists_probe.failures.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.max=-1) (op_create.failures.max=-1) (op_access.failures.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (committer_magic_marker_put.max=-1) (action_file_opened.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_head_request.max=26) (committer_commit_job.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=4, sum=323, mean=80.7500)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=51, mean=17.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=16, sum=438, mean=27.3750)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=83, mean=41.5000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=8, sum=451, mean=56.3750)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=11, sum=117, mean=10.6364)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=4, sum=98, mean=24.5000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=8, sum=150, mean=18.7500)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=4, sum=537, mean=134.2500)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:05,956 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:05,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:05,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,956 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,956 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=54&ts=1731778685955
2024-11-16 17:38:05,967 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:05,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:05,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:05,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:05,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:05,968 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=54&ts=1731778685955
2024-11-16 17:38:05,972 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:05,972 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:05,972 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:05,973 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:05,973 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000026&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=54&ts=1731778685955
2024-11-16 17:38:05,994 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:05,995 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:05,995 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:38:05,996 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:05,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:05,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:05,997 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:05,998 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:05,998 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000027 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000027&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=54&ts=1731778685996
2024-11-16 17:38:06,014 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:38:06,015 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,016 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:06,017 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7025721324266740299.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:06,018 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7025721324266740299.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (op_abort=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (op_hsync=0) (stream_write_exceptions=0) (object_put_request.failures=0) (object_put_request=0) (object_multipart_aborted=0) (op_hflush=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7025721324266740299.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,018 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:06,019 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:06,019 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7025721324266740299.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:06,020 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:06,020 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:06,021 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:06,021 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:06,025 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000027 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000027&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=55&ts=1731778685996
2024-11-16 17:38:06,086 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:06,086 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:06,087 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.067s
2024-11-16 17:38:06,087 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7025721324266740299.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:06,087 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7025721324266740299.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,087 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7025721324266740299.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,087 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:06,089 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:06,091 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (op_hflush=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (op_hsync=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (stream_write_exceptions=0) (object_multipart_initiated=0) (object_put_request.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=63) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=63));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=63, mean=63.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:06,091 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:06,091 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:06,091 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:06,094 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:06,094 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:06,101 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:06,102 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:06,102 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:06,103 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:06,103 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:06,104 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:06,104 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:06,104 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:06,105 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:06,105 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:06,106 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='bf306c36-4a41-4d78-96cf-ced7b4be66c8', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:06,107 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='bf306c36-4a41-4d78-96cf-ced7b4be66c8', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:06,111 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='bf306c36-4a41-4d78-96cf-ced7b4be66c8', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:06,112 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:06,112 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:06,113 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:06,113 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:06,114 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:06,114 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:06,115 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@334586ab]
2024-11-16 17:38:06,115 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@334586ab]
2024-11-16 17:38:06,116 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:06,116 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:06,116 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:06,121 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:06,122 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:06,122 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:06,123 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:06,123 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:06,124 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:06,124 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:06,124 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:06,125 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:06,128 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:06,128 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:06,129 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:06,134 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:06,134 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:06,134 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:06,135 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:06,135 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:06,135 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:06,136 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:06,136 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:38:06,137 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:06,137 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:06,137 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:06,138 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:38:06,138 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:38:06,140 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:06,140 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,140 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:06,141 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000030 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000030/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000030&t0=54&fs=bf306c36-4a41-4d78-96cf-ced7b4be66c8&t1=54&ts=1731778686139
2024-11-16 17:38:06,146 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:06,146 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:38:06,147 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:06,147 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:06,164 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:06,167 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778686000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:06,178 [s3a-transfer-leg-bucket-unbounded-pool9-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:06,181 [s3a-transfer-leg-bucket-unbounded-pool9-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,184 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:06,184 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:06,185 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:06,185 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:06,186 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:06,186 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:06,186 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:06,187 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,187 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,188 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:06,188 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [58] bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-1099&id=bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000031&t0=57&fs=bf306c36-4a41-4d78-96cf-ced7b4be66c8&t1=58&ts=1731778686177
2024-11-16 17:38:06,190 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:06,190 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,191 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,191 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:06,192 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [59] bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-1099&id=bf306c36-4a41-4d78-96cf-ced7b4be66c8-00000031&t0=57&fs=bf306c36-4a41-4d78-96cf-ced7b4be66c8&t1=59&ts=1731778686177
2024-11-16 17:38:06,249 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.058s
2024-11-16 17:38:06,249 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.061s
2024-11-16 17:38:06,250 [s3a-transfer-leg-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,250 [s3a-transfer-leg-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,258 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (action_file_opened.failures=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes=2000) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_remote_stream_aborted=0) (stream_read_operations=0) (stream_read_fully_operations=0) (action_http_get_request=2) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_aborted=0) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_exceptions=0) (stream_read_vectored_operations=2) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=2000) (stream_read_seek_forward_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=4) (stream_read_unbuffered=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_opened=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_combined_ranges=2) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=0) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=58) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=62) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=0) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=120, mean=60.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:06,262 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:06,264 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:06,265 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:06,265 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@18b6b397[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:38:06,265 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:06,266 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics4-leg-bucket
2024-11-16 17:38:06,266 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:06,267 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@334586ab] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:06,267 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@334586ab] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:06,270 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_remote_stream_aborted.failures=0) (committer_materialize_file.failures=0) (object_put_request=0) (committer_commit_job=0) (committer_stage_file_upload.failures=0) (stream_read_version_mismatches=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (op_create.failures=0) (op_xattr_get_named_map=0) (op_create=0) (files_delete_rejected=0) (stream_read_closed=0) (object_bulk_delete_request=0) (committer_load_single_pending_file=0) (op_hsync=0) (directories_deleted=0) (committer_commits.failures=0) (op_is_directory.failures=0) (op_get_delegation_token.failures=0) (op_list_files=0) (multipart_upload_aborted=0) (stream_read_operations_incomplete=0) (fake_directories_created=0) (op_list_status.failures=0) (object_multipart_aborted.failures=0) (store_exists_probe=0) (store_io_request=3) (stream_write_exceptions_completing_upload=0) (op_open=1) (stream_read_seek_bytes_skipped=0) (op_createfile.failures=0) (files_copied_bytes=0) (stream_write_queue_duration=0) (op_xattr_get_map=0) (op_mkdirs=0) (object_list_request.failures=0) (object_multipart_initiated.failures=0) (committer_stage_file_upload=0) (action_http_head_request=1) (stream_aborted=0) (stream_write_bytes=0) (stream_read_exceptions=0) (object_metadata_request=1) (committer_commits_completed=0) (audit_span_creation=3) (op_glob_status.failures=0) (delegation_tokens_issued.failures=0) (object_select_requests=0) (stream_write_block_uploads_committed=0) (object_continue_list_request.failures=0) (stream_read_seek_backward_operations=0) (op_copy_from_local_file.failures=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_list=0) (committer_commits_created=0) (op_is_file=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_operations=2) (delegation_tokens_issued=0) (op_is_directory=0) (multipart_upload_started=0) (op_abort=0) (stream_read_unbuffered=0) (committer_materialize_file=0) (op_rename.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_list=0) (op_exists=0) (files_created=0) (op_is_file.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_read_remote_stream_drain=0) (action_http_get_request=2) (object_put_request.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (op_xattr_get_named=0) (multipart_upload_part_put_bytes=0) (stream_read_operations=0) (committer_tasks_failed=0) (op_exists.failures=0) (multipart_instantiated=0) (object_delete_request=0) (directories_created=0) (op_xattr_list.failures=0) (op_list_located_status=0) (op_mkdirs.failures=0) (op_delete.failures=0) (stream_write_total_data=0) (object_put_request_completed=0) (op_get_delegation_token=0) (object_list_request=0) (action_http_get_request.failures=0) (op_access.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (committer_bytes_committed=0) (audit_access_check_failure=0) (committer_jobs_completed=0) (store_io_throttled=0) (files_deleted=0) (multipart_upload_completed=0) (stream_read_vectored_incoming_ranges=4) (multipart_upload_list.failures=0) (stream_read_remote_stream_aborted=0) (op_get_file_checksum.failures=0) (op_rename=0) (stream_write_queue_duration.failures=0) (stream_write_block_uploads_aborted=0) (object_delete_objects=0) (committer_magic_files_created=0) (action_file_opened=1) (op_hflush=0) (stream_read_bytes_discarded_in_close=0) (object_copy_requests=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_backwards_on_seek=0) (committer_tasks_completed=0) (op_get_file_status=1) (stream_read_seek_forward_operations=0) (op_create_non_recursive=0) (stream_read_bytes=2000) (op_get_content_summary=0) (op_list_files.failures=0) (op_xattr_get_named.failures=0) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=0) (ignored_errors=0) (stream_read_seek_operations=0) (op_openfile=0) (op_copy_from_local_file=0) (object_put_bytes=0) (committer_commit_job.failures=0) (op_get_file_checksum=0) (object_delete_request.failures=0) (object_multipart_aborted=0) (committer_jobs_failed=0) (stream_read_seek_policy_changed=1) (op_createfile=0) (committer_bytes_uploaded=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_map.failures=0) (op_list_status=0) (audit_request_execution=3) (stream_read_fully_operations=0) (op_delete=0) (action_http_head_request.failures=0) (files_copied=0) (committer_commits_aborted=0) (op_glob_status=0) (op_xattr_get_named_map.failures=0) (op_get_file_status.failures=0) (stream_read_total_bytes=2000) (op_access=0) (store_io_retry=0) (committer_commits_reverted=0) (stream_read_opened=0) (stream_read_vectored_combined_ranges=2) (committer_load_single_pending_file.failures=0) (audit_failure=0) (store_exists_probe.failures=0) (committer_magic_marker_put.failures=0) (fake_directories_deleted=0) (op_get_content_summary.failures=0) (object_continue_list_request=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((op_create.failures.min=-1) (op_get_file_status.min=25) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_abort.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.failures.min=-1) (op_glob_status.min=-1) (object_delete_request.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named.failures.min=-1) (op_exists.min=-1) (multipart_upload_list.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.failures.min=-1) (committer_materialize_file.min=-1) (op_access.min=-1) (action_http_head_request.min=24) (delegation_tokens_issued.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.failures.min=-1) (store_exists_probe.min=-1) (op_get_content_summary.min=-1) (op_is_directory.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.min=-1) (op_createfile.failures.min=-1) (op_abort.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_drain.min=-1) (op_list_status.min=-1) (op_create.min=-1) (op_rename.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_get_request.min=58) (action_http_head_request.failures.min=-1) (action_file_opened.min=0) (op_exists.failures.min=-1) (op_list_files.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.min=-1) (action_file_opened.failures.min=-1) (object_put_request.failures.min=-1) (op_is_file.min=-1) (op_list_status.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.min=-1) (op_glob_status.failures.min=-1) (object_put_request.min=-1) (object_bulk_delete_request.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (op_delete.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.max=-1) (committer_commit_job.max=-1) (op_is_file.failures.max=-1) (object_put_request.max=-1) (op_rename.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.failures.max=-1) (op_access.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.max=-1) (object_list_request.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.max=-1) (object_list_request.failures.max=-1) (op_exists.failures.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.max=-1) (op_get_content_summary.max=-1) (action_file_opened.max=0) (object_continue_list_request.max=-1) (action_http_get_request.max=62) (object_delete_request.failures.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.max=-1) (op_copy_from_local_file.failures.max=-1) (op_copy_from_local_file.max=-1) (op_create.max=-1) (store_exists_probe.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_http_head_request.max=24) (op_create.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_delete.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_files.failures.max=-1) (op_abort.failures.max=-1) (op_glob_status.failures.max=-1) (committer_materialize_file.max=-1) (op_abort.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.failures.max=-1) (op_mkdirs.max=-1) (action_file_opened.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_directory.failures.max=-1) (op_is_file.max=-1) (action_executor_acquired.max=-1) (op_get_file_status.max=25) (op_xattr_list.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (op_exists.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_list_status.max=-1) (op_is_directory.max=-1) (object_put_request.failures.max=-1));
means=((op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=120, mean=60.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=24, mean=24.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=25, mean=25.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:06,272 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:06,272 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:06,273 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:06,273 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=54&ts=1731778686271
2024-11-16 17:38:06,280 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:06,280 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,281 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=54&ts=1731778686271
2024-11-16 17:38:06,298 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:38:06,298 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:06,298 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:06,298 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:06,298 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:06,298 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:06,298 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:06,298 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:06,298 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:06,298 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:06,299 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:06,299 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:06,305 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:06,305 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:06,306 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,307 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [62] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=62&ts=1731778686271
2024-11-16 17:38:06,319 [s3a-transfer-leg-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:06,319 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:38:06,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:06,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:06,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:06,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778686078; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:06,320 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:06,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:06,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:06,320 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:06,321 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:06,321 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:06,321 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:06,321 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:06,321 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:06,321 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:06,321 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:06,321 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:06,322 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=63&ts=1731778686271
2024-11-16 17:38:06,338 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:38:06,339 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:38:06,339 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:38:06,339 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:06,339 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:06,340 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:06,340 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:06,340 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:06,341 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:06,341 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000032&t0=54&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=63&ts=1731778686271
2024-11-16 17:38:06,351 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:06,351 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:06,352 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:38:06,352 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.031s
2024-11-16 17:38:06,352 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.031s
2024-11-16 17:38:06,353 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.055s
2024-11-16 17:38:06,353 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:06,353 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:06,354 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:06,372 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 5, active threads = 0, queued tasks = 0, completed tasks = 5], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_aborted.failures=0) (stream_read_unbuffered=1) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=4) (stream_write_exceptions=0) (op_is_file.failures=0) (object_select_requests=0) (op_mkdirs.failures=0) (object_continue_list_request=0) (op_list_status.failures=0) (action_executor_acquired.failures=0) (op_list_status=0) (committer_jobs_completed=0) (op_openfile=0) (object_multipart_initiated.failures=0) (object_continue_list_request.failures=0) (object_list_request=20) (object_delete_request.failures=0) (multipart_instantiated=0) (op_rename=0) (committer_magic_marker_put.failures=0) (op_access.failures=0) (op_list_files.failures=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_list_files=0) (op_exists.failures=0) (stream_write_exceptions_completing_upload=0) (op_list_located_status=0) (multipart_upload_list.failures=0) (op_mkdirs=5) (stream_write_total_data=655360) (op_is_file=0) (op_xattr_get_map.failures=0) (op_glob_status=0) (op_get_delegation_token=0) (op_xattr_get_named=0) (stream_read_bytes_backwards_on_seek=0) (committer_stage_file_upload=0) (stream_write_total_time=0) (stream_read_version_mismatches=0) (committer_commit_job.failures=0) (audit_failure=0) (op_get_delegation_token.failures=0) (object_bulk_delete_request=10) (op_abort.failures=0) (files_copied=0) (stream_write_bytes=327680) (stream_read_closed=0) (op_xattr_get_named_map=0) (op_is_directory=0) (object_put_request.failures=0) (audit_request_execution=55) (stream_read_seek_backward_operations=0) (stream_read_bytes=300) (committer_magic_marker_put=0) (delegation_tokens_issued=0) (stream_write_queue_duration.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (op_xattr_get_named_map.failures=0) (committer_jobs_failed=0) (object_delete_request=0) (committer_materialize_file=0) (object_put_bytes=327680) (committer_commits_reverted=0) (stream_read_remote_stream_aborted.failures=0) (op_copy_from_local_file.failures=0) (store_exists_probe=0) (directories_deleted=0) (op_create.failures=0) (stream_read_close_operations=3) (action_http_head_request=13) (stream_read_seek_bytes_skipped=0) (op_delete=5) (stream_aborted=0) (op_xattr_get_named.failures=0) (stream_read_total_bytes=300) (op_get_file_checksum=0) (op_xattr_list=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (op_delete.failures=0) (stream_write_block_uploads=5) (stream_read_seek_policy_changed=4) (committer_load_single_pending_file.failures=0) (stream_read_vectored_operations=4) (multipart_upload_aborted=0) (committer_commits_aborted=0) (committer_bytes_committed=0) (op_is_directory.failures=0) (action_executor_acquired=0) (stream_read_fully_operations=0) (op_xattr_get_map=0) (delegation_tokens_issued.failures=0) (op_create_non_recursive=0) (committer_bytes_uploaded=0) (multipart_upload_part_put=0) (store_exists_probe.failures=0) (audit_span_creation=19) (multipart_upload_abort_under_path_invoked=0) (object_copy_requests=0) (object_multipart_aborted=0) (op_get_content_summary=0) (op_xattr_list.failures=0) (op_open=3) (committer_commits_completed=0) (action_file_opened=3) (committer_commits.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_incoming_ranges=8) (multipart_upload_part_put_bytes=0) (op_get_file_status.failures=0) (files_created=5) (object_list_request.failures=0) (directories_created=5) (store_io_retry=0) (op_get_file_status=0) (op_createfile=0) (stream_read_remote_stream_drain.failures=0) (store_io_throttled=0) (ignored_errors=0) (object_multipart_initiated=0) (stream_write_block_uploads_committed=0) (action_http_get_request=2) (audit_access_check_failure=0) (committer_materialize_file.failures=0) (committer_commit_job=0) (object_bulk_delete_request.failures=0) (stream_read_opened=0) (stream_read_seek_operations=0) (op_glob_status.failures=0) (files_copied_bytes=0) (committer_commits_created=0) (fake_directories_created=0) (files_deleted=5) (committer_tasks_failed=0) (op_get_content_summary.failures=0) (op_get_file_checksum.failures=0) (object_put_request_completed=10) (stream_read_exceptions=0) (object_delete_objects=10) (fake_directories_deleted=5) (stream_read_vectored_read_bytes_discarded=20) (multipart_upload_list=0) (committer_load_single_pending_file=0) (multipart_upload_started=0) (object_put_request=10) (action_http_head_request.failures=0) (op_hflush=0) (stream_read_seek_bytes_discarded=0) (op_hsync=0) (committer_magic_files_created=0) (op_access=0) (object_metadata_request=13) (committer_tasks_completed=0) (op_rename.failures=0) (stream_read_operations=0) (stream_write_block_uploads_aborted=0) (op_copy_from_local_file=0) (store_io_request=55) (files_delete_rejected=0) (committer_stage_file_upload.failures=0) (op_create=5) (op_createfile.failures=0) (stream_read_remote_stream_aborted=0) (op_exists=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=5) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (object_put_bytes_pending=0));
minimums=((action_http_get_request.failures.min=-1) (op_get_file_status.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.failures.min=-1) (op_is_directory.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_rename.failures.min=-1) (op_is_file.failures.min=-1) (object_put_request.failures.min=-1) (op_get_content_summary.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.min=-1) (op_delete.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.min=-1) (object_bulk_delete_request.min=10) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.min=-1) (op_delete.min=55) (op_abort.failures.min=-1) (object_list_request.min=8) (action_file_opened.min=13) (op_exists.failures.min=-1) (op_create.min=12) (stream_write_queue_duration.min=-1) (object_put_request.min=63) (object_multipart_aborted.min=-1) (op_createfile.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_head_request.min=4) (committer_materialize_file.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.failures.min=-1) (op_mkdirs.min=39) (action_http_get_request.min=33) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.min=-1) (op_get_file_checksum.min=-1) (op_mkdirs.failures.min=-1) (op_create.failures.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_glob_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_status.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (op_glob_status.min=-1) (op_access.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_rename.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.min=-1) (committer_load_single_pending_file.min=-1) (committer_load_single_pending_file.failures.min=-1));
maximums=((op_access.failures.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_mkdirs.failures.max=-1) (op_glob_status.max=-1) (op_get_content_summary.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_status.max=-1) (object_put_request.max=101) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.max=26) (op_list_status.max=-1) (op_rename.failures.max=-1) (op_glob_status.failures.max=-1) (op_exists.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.max=372) (object_multipart_aborted.max=-1) (op_is_file.max=-1) (op_delete.max=112) (op_get_content_summary.max=-1) (committer_stage_file_upload.max=-1) (op_create.failures.max=-1) (committer_commit_job.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_checksum.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (op_createfile.max=-1) (op_xattr_get_named.max=-1) (op_list_status.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.max=-1) (object_continue_list_request.failures.max=-1) (action_http_get_request.max=50) (action_file_opened.max=26) (committer_commit_job.max=-1) (object_put_request.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (object_delete_request.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=27) (stream_read_remote_stream_aborted.max=-1) (stream_write_queue_duration.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_list_request.max=233) (op_is_directory.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_list.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.max=-1) (store_exists_probe.max=-1) (op_create.max=53) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.max=-1));
means=((op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=5, sum=119, mean=23.8000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=83, mean=41.5000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=51, mean=17.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=10, sum=535, mean=53.5000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=5, sum=577, mean=115.4000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=13, sum=128, mean=9.8462)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=20, sum=495, mean=24.7500)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=10, sum=177, mean=17.7000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=5, sum=378, mean=75.6000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:06,374 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:06,374 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:06,375 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:06,375 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:06,376 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,376 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=64&ts=1731778686374
2024-11-16 17:38:06,385 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:06,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:06,386 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:06,387 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:06,387 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:06,388 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=64&ts=1731778686374
2024-11-16 17:38:06,397 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:06,397 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:06,398 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:06,398 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:06,399 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000033&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=64&ts=1731778686374
2024-11-16 17:38:06,420 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:06,420 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:06,421 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:38:06,421 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:06,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:06,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:06,424 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,424 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000034 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000034&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=64&ts=1731778686422
2024-11-16 17:38:06,436 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:06,437 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,438 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:06,439 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2132022465298209920.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:06,440 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2132022465298209920.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_block_uploads=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (op_hflush=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (object_put_request=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1));
maximums=((object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2132022465298209920.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,441 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:06,441 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:06,442 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2132022465298209920.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:06,443 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:06,443 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:06,444 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:06,444 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:06,445 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000034 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000034&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=65&ts=1731778686422
2024-11-16 17:38:06,487 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:06,488 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:06,488 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.045s
2024-11-16 17:38:06,489 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2132022465298209920.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:06,489 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2132022465298209920.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,489 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2132022465298209920.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,490 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:06,490 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:06,494 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (op_hsync=0) (op_abort.failures=0) (committer_magic_marker_put=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (object_put_request=1) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (op_hflush=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=43) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=43) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=43, mean=43.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:06,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:06,495 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:06,495 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:06,497 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:06,497 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:06,499 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:06,499 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:06,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:06,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:06,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:06,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:06,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:06,513 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:06,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:06,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:06,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='1b56e129-5a88-41ec-9170-e330fc8f7667', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:06,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='1b56e129-5a88-41ec-9170-e330fc8f7667', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:06,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='1b56e129-5a88-41ec-9170-e330fc8f7667', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:06,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:06,514 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:06,516 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:06,516 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:06,517 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7ac7aef2]
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7ac7aef2]
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:06,518 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:06,519 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:06,519 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:06,519 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:06,519 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:06,519 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:06,519 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:06,519 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:06,521 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:06,522 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:06,522 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:38:06,522 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:06,522 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:06,522 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:06,522 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:38:06,522 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:38:06,523 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:06,523 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,523 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:06,523 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000037 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/1b56e129-5a88-41ec-9170-e330fc8f7667-00000037/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000037&t0=64&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=64&ts=1731778686522
2024-11-16 17:38:06,524 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:06,524 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:38:06,524 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:06,524 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:06,530 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:06,530 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778686000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:06,532 [s3a-transfer-leg-bucket-unbounded-pool11-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:06,532 [s3a-transfer-leg-bucket-unbounded-pool11-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,533 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:06,533 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:06,533 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:38:06,535 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,535 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,535 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:06,535 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,537 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,537 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:06,538 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [69] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-14435&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000038&t0=67&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=69&ts=1731778686532
2024-11-16 17:38:06,536 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:06,539 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [68] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000038&t0=67&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=68&ts=1731778686532
2024-11-16 17:38:06,539 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,544 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,544 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:06,544 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [70] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000038&t0=67&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=70&ts=1731778686532
2024-11-16 17:38:06,559 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:38:06,559 [s3a-transfer-leg-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,560 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.024s
2024-11-16 17:38:06,561 [s3a-transfer-leg-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,586 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.049s
2024-11-16 17:38:06,586 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:38:06,586 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:38:06,587 [s3a-transfer-leg-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,590 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=15));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=49));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=88, mean=29.3333)));

2024-11-16 17:38:06,590 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=1424) (action_http_get_request=3) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_operations=1) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=1) (stream_read_seek_forward_operations=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_operations=0) (stream_read_block_read=0) (action_executor_acquired=0) (action_file_opened.failures=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (stream_read_seek_bytes_skipped=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=5) (stream_read_bytes=1424) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=3) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_opened=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_closed=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=15) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=49) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=0));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=88, mean=29.3333)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:06,592 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778686000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:06,594 [s3a-transfer-leg-bucket-unbounded-pool11-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:06,594 [s3a-transfer-leg-bucket-unbounded-pool11-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,598 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:06,599 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:38:06,599 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,599 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=10240-65535&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000039&t0=74&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=64&ts=1731778686594
2024-11-16 17:38:06,624 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.026s
2024-11-16 17:38:06,626 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:06,626 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:06,626 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:06,627 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:38:06,627 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:06,628 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:38:06,628 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,629 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://leg-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:38:06,629 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:38:06,629 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,630 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-8291&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000039&t0=74&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=64&ts=1731778686594
2024-11-16 17:38:06,647 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.021s
2024-11-16 17:38:06,647 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:06,647 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:06,647 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:06,647 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:06,647 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:38:06,647 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:06,648 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:38:06,648 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,648 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=14336-14435&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000039&t0=74&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=64&ts=1731778686594
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.019s
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:38:06,667 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,668 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000039&t0=74&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=64&ts=1731778686594
2024-11-16 17:38:06,692 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.025s
2024-11-16 17:38:06,692 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:06,692 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:06,693 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:06,693 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:06,693 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:38:06,693 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:06,693 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:38:06,693 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,693 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 1b56e129-5a88-41ec-9170-e330fc8f7667-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/1b56e129-5a88-41ec-9170-e330fc8f7667-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=1b56e129-5a88-41ec-9170-e330fc8f7667-00000039&t0=74&fs=1b56e129-5a88-41ec-9170-e330fc8f7667&t1=64&ts=1731778686594
2024-11-16 17:38:06,703 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:38:06,703 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:06,703 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:06,706 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=10)
(stream_read_remote_stream_aborted.min=1)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=25)
(stream_read_remote_stream_aborted.max=1)
(stream_read_remote_stream_drain.max=0));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=95, mean=19.0000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=0, mean=0.0000)));

2024-11-16 17:38:06,706 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:06,706 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:38:06,706 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:06,707 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_fully_operations=5) (action_file_opened=1) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=44957) (stream_read_opened=5) (action_executor_acquired.failures=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=1) (stream_read_vectored_operations=0) (stream_read_seek_operations=4) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=4) (stream_read_total_bytes=1424) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_aborted=1) (stream_read_block_read.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_close_operations=1) (action_http_get_request=5) (stream_read_block_read=0) (stream_read_seek_policy_changed=2) (stream_read_version_mismatches=0) (stream_read_bytes=1424) (stream_read_exceptions=0) (stream_read_operations=5) (stream_read_seek_forward_operations=2) (stream_read_closed=4) (stream_read_operations_incomplete=0) (stream_read_bytes_backwards_on_seek=14637) (stream_read_seek_backward_operations=2) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_gauge_input_policy=1) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=1) (stream_read_remote_stream_drain.min=0) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=10) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=0) (stream_read_block_read.min=-1));
maximums=((action_file_opened.max=0) (action_executor_acquired.max=-1) (action_http_get_request.max=25) (stream_read_remote_stream_aborted.max=1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=0) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=95, mean=19.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:06,708 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:06,711 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:06,712 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:06,712 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@40896533[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:38:06,712 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:06,712 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics5-leg-bucket
2024-11-16 17:38:06,712 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:06,712 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7ac7aef2] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:06,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@7ac7aef2] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:06,714 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((committer_commits_reverted=0) (committer_commits_created=0) (op_get_file_status.failures=0) (op_mkdirs.failures=0) (committer_commit_job.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_completed=0) (action_http_get_request=8) (object_list_request=0) (action_file_opened=2) (committer_materialize_file=0) (op_list_status.failures=0) (object_delete_request=0) (stream_read_bytes=2848) (object_multipart_initiated.failures=0) (committer_bytes_committed=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=44957) (stream_read_seek_policy_changed=3) (stream_write_bytes=0) (op_exists=0) (committer_materialize_file.failures=0) (stream_read_unbuffered=0) (audit_failure=0) (op_get_content_summary=0) (action_http_head_request.failures=0) (stream_read_total_bytes=2848) (object_multipart_initiated=0) (op_list_status=0) (object_delete_objects=0) (stream_read_remote_stream_aborted.failures=0) (op_openfile=0) (stream_read_remote_stream_aborted=1) (op_delete.failures=0) (op_access.failures=0) (op_delete=0) (audit_access_check_failure=0) (files_copied_bytes=0) (op_get_file_status=1) (store_io_request=9) (op_get_content_summary.failures=0) (op_xattr_get_map=0) (delegation_tokens_issued.failures=0) (op_create=0) (op_glob_status.failures=0) (stream_read_close_operations=2) (stream_read_fully_operations=5) (stream_write_queue_duration=0) (files_deleted=0) (committer_commit_job=0) (committer_tasks_failed=0) (multipart_upload_list.failures=0) (directories_created=0) (directories_deleted=0) (committer_commits_aborted=0) (committer_magic_files_created=0) (object_put_bytes=0) (stream_write_block_uploads_committed=0) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file.failures=0) (committer_jobs_completed=0) (multipart_upload_abort_under_path_invoked=0) (committer_stage_file_upload.failures=0) (object_list_request.failures=0) (audit_span_creation=4) (stream_read_vectored_read_bytes_discarded=5944) (op_create.failures=0) (op_list_files.failures=0) (op_hsync=0) (op_open=2) (stream_read_remote_stream_drain=4) (committer_load_single_pending_file=0) (op_xattr_get_named_map.failures=0) (op_xattr_list=0) (committer_jobs_failed=0) (stream_write_total_time=0) (op_create_non_recursive=0) (op_xattr_get_named.failures=0) (op_rename=0) (delegation_tokens_issued=0) (op_list_located_status=0) (stream_read_exceptions=0) (object_select_requests=0) (stream_read_vectored_combined_ranges=3) (object_bulk_delete_request=0) (multipart_upload_aborted=0) (store_exists_probe.failures=0) (object_copy_requests=0) (store_io_throttled=0) (committer_magic_marker_put=0) (stream_write_queue_duration.failures=0) (op_hflush=0) (op_get_delegation_token.failures=0) (op_glob_status=0) (stream_read_opened=5) (op_mkdirs=0) (files_copied=0) (stream_read_bytes_discarded_in_abort=55196) (op_exists.failures=0) (object_put_request.failures=0) (op_createfile=0) (store_io_retry=0) (stream_write_exceptions_completing_upload=0) (op_get_file_checksum=0) (committer_bytes_uploaded=0) (op_rename.failures=0) (stream_read_seek_forward_operations=2) (stream_read_vectored_incoming_ranges=5) (committer_commits_completed=0) (stream_read_bytes_backwards_on_seek=14637) (stream_write_block_uploads=0) (files_delete_rejected=0) (stream_read_seek_operations=4) (op_xattr_get_map.failures=0) (files_created=0) (op_is_file.failures=0) (op_abort.failures=0) (stream_read_operations=5) (op_is_directory=0) (stream_read_bytes_discarded_in_close=0) (op_access=0) (committer_tasks_completed=0) (action_http_get_request.failures=0) (op_get_file_checksum.failures=0) (fake_directories_created=0) (object_metadata_request=1) (stream_read_version_mismatches=0) (action_executor_acquired=0) (multipart_upload_part_put_bytes=0) (stream_write_total_data=0) (object_put_request=0) (multipart_instantiated=0) (op_abort=0) (object_multipart_aborted=0) (object_delete_request.failures=0) (op_is_file=0) (audit_request_execution=9) (stream_read_seek_bytes_discarded=0) (multipart_upload_part_put=0) (store_exists_probe=0) (stream_aborted=1) (op_xattr_get_named_map=0) (committer_commits.failures=0) (object_continue_list_request=0) (fake_directories_deleted=0) (action_executor_acquired.failures=0) (op_list_files=0) (stream_read_remote_stream_drain.failures=0) (object_put_request_completed=0) (stream_read_closed=4) (multipart_upload_list=0) (object_multipart_aborted.failures=0) (op_copy_from_local_file=0) (committer_stage_file_upload=0) (stream_write_exceptions=0) (object_continue_list_request.failures=0) (stream_read_seek_backward_operations=2) (op_xattr_get_named=0) (ignored_errors=0) (action_http_head_request=1) (committer_magic_marker_put.failures=0) (stream_read_vectored_operations=1) (stream_write_block_uploads_aborted=0) (op_xattr_list.failures=0) (op_createfile.failures=0) (op_is_directory.failures=0) (op_get_delegation_token=0) (multipart_upload_started=0) (action_file_opened.failures=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0));
minimums=((committer_stage_file_upload.failures.min=-1) (op_delete.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_map.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (op_glob_status.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.failures.min=-1) (op_create.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=10) (op_xattr_get_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (op_createfile.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_head_request.min=7) (multipart_upload_list.min=-1) (op_copy_from_local_file.failures.min=-1) (object_list_request.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_list.min=-1) (stream_read_remote_stream_drain.min=0) (op_createfile.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.failures.min=-1) (op_is_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_access.min=-1) (stream_read_remote_stream_aborted.min=1) (stream_write_queue_duration.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.min=-1) (store_exists_probe.failures.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.min=7) (action_executor_acquired.failures.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.failures.min=-1) (op_rename.failures.min=-1) (op_mkdirs.min=-1) (op_get_file_status.failures.min=-1) (committer_materialize_file.min=-1) (op_list_files.failures.min=-1) (object_delete_request.failures.min=-1) (action_file_opened.min=0) (op_rename.min=-1) (op_abort.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.failures.min=-1) (op_get_content_summary.min=-1) (op_create.min=-1) (op_glob_status.min=-1) (committer_commit_job.min=-1) (committer_materialize_file.failures.min=-1));
maximums=((delegation_tokens_issued.max=-1) (stream_read_remote_stream_aborted.max=1) (op_get_delegation_token.max=-1) (action_executor_acquired.max=-1) (op_exists.max=-1) (op_delete.max=-1) (op_list_files.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_status.max=7) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (op_access.max=-1) (committer_stage_file_upload.max=-1) (op_rename.failures.max=-1) (op_list_status.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_list.max=-1) (op_rename.max=-1) (op_abort.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (op_list_files.max=-1) (op_createfile.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.max=0) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (action_http_get_request.max=49) (op_copy_from_local_file.max=-1) (object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.max=0) (op_mkdirs.failures.max=-1) (op_delete.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.max=-1) (op_access.failures.max=-1) (op_abort.max=-1) (op_list_status.max=-1) (action_file_opened.failures.max=-1) (op_create.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.failures.max=-1) (object_list_request.max=-1) (op_get_content_summary.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (op_exists.failures.max=-1) (object_put_request.max=-1) (action_http_head_request.max=7) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1));
means=((multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=7, mean=7.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.mean=(samples=8, sum=183, mean=22.8750)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:06,715 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:06,715 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:06,716 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:06,716 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=64&ts=1731778686715
2024-11-16 17:38:06,721 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:06,722 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,722 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=64&ts=1731778686715
2024-11-16 17:38:06,732 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:06,732 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:06,732 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:06,732 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:06,732 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:06,732 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:06,732 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:06,732 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:06,732 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:06,732 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:06,733 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:06,733 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:06,733 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:06,733 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:06,734 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,734 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [76] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=76&ts=1731778686715
2024-11-16 17:38:06,742 [s3a-transfer-leg-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:06,742 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:38:06,742 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:06,742 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:06,742 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:06,743 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778686479; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:06,743 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:06,743 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:06,743 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:06,743 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:06,744 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:06,746 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:06,746 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:06,746 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:06,746 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:06,747 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:06,747 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:06,747 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:06,747 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=77&ts=1731778686715
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:06,762 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000040&t0=64&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=77&ts=1731778686715
2024-11-16 17:38:06,775 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:06,775 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:06,776 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:38:06,776 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:38:06,776 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.032s
2024-11-16 17:38:06,776 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.044s
2024-11-16 17:38:06,776 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:06,776 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:06,779 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:06,795 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 6, active threads = 0, queued tasks = 0, completed tasks = 6], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_abort_under_path_invoked=0) (object_copy_requests=0) (files_delete_rejected=0) (object_metadata_request=15) (op_get_content_summary=0) (audit_failure=0) (committer_commits_completed=0) (committer_commit_job=0) (files_created=6) (object_multipart_aborted=0) (committer_magic_marker_put=0) (directories_deleted=0) (committer_commits_aborted=0) (committer_commits.failures=0) (action_executor_acquired=0) (op_xattr_get_map=0) (stream_read_total_bytes=300) (stream_read_version_mismatches=0) (files_copied_bytes=0) (delegation_tokens_issued=0) (action_executor_acquired.failures=0) (audit_request_execution=65) (op_access.failures=0) (stream_read_close_operations=3) (committer_tasks_completed=0) (store_io_throttled=0) (committer_jobs_completed=0) (stream_write_total_time=0) (op_xattr_get_named_map=0) (op_create_non_recursive=0) (op_is_directory.failures=0) (op_xattr_get_named=0) (op_get_file_status=0) (store_exists_probe=0) (stream_write_queue_duration=0) (object_select_requests=0) (object_list_request.failures=0) (op_get_file_checksum.failures=0) (committer_bytes_committed=0) (op_get_delegation_token=0) (committer_materialize_file.failures=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (op_rename=0) (committer_tasks_failed=0) (store_exists_probe.failures=0) (op_delete=6) (op_xattr_list.failures=0) (committer_materialize_file=0) (object_multipart_initiated=0) (op_create=6) (stream_read_bytes_backwards_on_seek=0) (action_http_head_request=15) (stream_read_opened=0) (op_exists=0) (stream_read_unbuffered=1) (stream_read_vectored_combined_ranges=4) (committer_stage_file_upload=0) (stream_write_block_uploads_aborted=0) (action_file_opened=3) (object_continue_list_request.failures=0) (op_rename.failures=0) (multipart_upload_aborted=0) (op_copy_from_local_file=0) (delegation_tokens_issued.failures=0) (object_put_request=12) (committer_commits_reverted=0) (committer_bytes_uploaded=0) (files_deleted=6) (stream_write_queue_duration.failures=0) (stream_write_exceptions=0) (op_is_file=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_bytes_discarded=0) (object_list_request=24) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (files_copied=0) (object_multipart_initiated.failures=0) (op_is_file.failures=0) (multipart_upload_part_put=0) (op_list_located_status=0) (stream_read_remote_stream_aborted=0) (ignored_errors=0) (op_mkdirs.failures=0) (stream_write_bytes=393216) (committer_magic_marker_put.failures=0) (stream_read_seek_policy_changed=4) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain=0) (op_get_delegation_token.failures=0) (op_xattr_get_named_map.failures=0) (op_list_files.failures=0) (stream_read_vectored_incoming_ranges=8) (fake_directories_deleted=6) (op_get_content_summary.failures=0) (object_bulk_delete_request=12) (op_xattr_list=0) (stream_read_fully_operations=0) (object_put_bytes=393216) (committer_commit_job.failures=0) (op_list_status=0) (op_is_directory=0) (object_put_request_completed=12) (action_http_head_request.failures=0) (stream_write_block_uploads_committed=0) (op_exists.failures=0) (action_http_get_request=2) (multipart_upload_list=0) (op_get_file_status.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=20) (store_io_request=65) (audit_span_creation=22) (op_copy_from_local_file.failures=0) (action_file_opened.failures=0) (fake_directories_created=0) (committer_stage_file_upload.failures=0) (multipart_upload_list.failures=0) (object_delete_objects=12) (multipart_upload_part_put_bytes=0) (op_mkdirs=6) (op_list_status.failures=0) (stream_write_total_data=786432) (store_io_retry=0) (op_glob_status=0) (stream_write_exceptions_completing_upload=0) (op_delete.failures=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (op_openfile=0) (op_get_file_checksum=0) (stream_write_block_uploads=6) (multipart_upload_completed=0) (audit_access_check_failure=0) (op_createfile.failures=0) (op_xattr_get_named.failures=0) (multipart_upload_started=0) (object_delete_request=0) (stream_read_operations=0) (multipart_instantiated=0) (op_createfile=0) (object_delete_request.failures=0) (object_bulk_delete_request.failures=0) (committer_magic_files_created=0) (stream_read_seek_operations=0) (op_hflush=0) (action_http_get_request.failures=0) (directories_created=6) (op_list_files=0) (stream_read_bytes=300) (op_abort=0) (committer_jobs_failed=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_created=0) (op_abort.failures=0) (op_open=3) (stream_read_closed=0) (op_access=0) (object_multipart_aborted.failures=0) (object_continue_list_request=0) (op_create.failures=0) (stream_read_vectored_operations=4) (object_put_request.failures=0) (op_xattr_get_map.failures=0) (committer_load_single_pending_file=0) (op_glob_status.failures=0) (op_hsync=0));
gauges=((stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=6) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0));
minimums=((object_bulk_delete_request.failures.min=-1) (op_rename.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (action_file_opened.min=13) (committer_materialize_file.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.min=8) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (op_exists.min=-1) (op_create.min=12) (op_glob_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.min=4) (object_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_is_directory.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_get_request.min=33) (stream_write_queue_duration.failures.min=-1) (action_executor_acquired.min=-1) (op_access.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.min=-1) (object_put_request.min=43) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=10) (op_get_file_checksum.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_list_status.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.min=-1) (op_create.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.min=-1) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.failures.min=-1) (op_mkdirs.min=39) (op_abort.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.failures.min=-1) (op_access.min=-1) (op_delete.min=44) (op_list_files.min=-1) (op_delete.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_list.failures.min=-1));
maximums=((op_xattr_list.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_status.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_map.max=-1) (object_list_request.failures.max=-1) (op_get_content_summary.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_status.failures.max=-1) (object_delete_request.failures.max=-1) (op_delete.max=112) (delegation_tokens_issued.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.max=27) (op_create.max=53) (action_http_get_request.failures.max=-1) (object_list_request.max=233) (committer_stage_file_upload.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.max=26) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_access.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_map.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1) (op_is_directory.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named.max=-1) (op_delete.failures.max=-1) (op_access.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.max=-1) (op_createfile.max=-1) (object_multipart_initiated.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (op_exists.failures.max=-1) (object_put_request.failures.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (op_get_file_checksum.failures.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.max=372) (op_create.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.failures.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_head_request.max=26) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=50) (object_put_request.max=101) (action_file_opened.failures.max=-1));
means=((op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=51, mean=17.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=24, sum=533, mean=22.2083)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=12, sum=204, mean=17.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=6, sum=136, mean=22.6667)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=6, sum=625, mean=104.1667)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=6, sum=422, mean=70.3333)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=83, mean=41.5000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=12, sum=599, mean=49.9167)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=15, sum=142, mean=9.4667)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:06,796 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:06,796 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:06,796 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:06,796 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:06,796 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,796 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686796
2024-11-16 17:38:06,807 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:06,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:06,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:06,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:06,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:06,808 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686796
2024-11-16 17:38:06,813 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:06,814 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:06,814 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:06,814 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:06,815 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000041&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686796
2024-11-16 17:38:06,846 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:06,847 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:06,847 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.033s
2024-11-16 17:38:06,847 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:06,848 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:06,848 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,848 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:06,848 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,848 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000042 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000042&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686847
2024-11-16 17:38:06,858 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:06,859 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,860 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:06,860 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5984931410649298036.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:06,861 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5984931410649298036.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (action_executor_acquired=0) (stream_write_total_data=0) (op_abort=0) (object_put_request.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (op_hflush=0) (object_multipart_initiated.failures=0) (object_put_request=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5984931410649298036.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,862 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:06,862 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:06,863 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5984931410649298036.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:06,863 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:06,863 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:06,864 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:06,864 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:06,864 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000042 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000042&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=79&ts=1731778686847
2024-11-16 17:38:06,909 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:06,909 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:06,909 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.046s
2024-11-16 17:38:06,910 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5984931410649298036.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:06,910 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5984931410649298036.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,910 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5984931410649298036.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:06,910 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:06,910 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:06,911 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (multipart_upload_completed=0) (op_hsync=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (op_hflush=0) (object_multipart_aborted=0) (object_put_request=1) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=45) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=45) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=45, mean=45.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:06,911 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:06,912 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:06,912 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:06,912 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:06,912 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686912
2024-11-16 17:38:06,917 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:06,918 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:06,918 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,918 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:06,919 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:06,919 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:06,922 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:06,922 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,922 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,922 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:06,923 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=80&ts=1731778686912
2024-11-16 17:38:06,922 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:06,924 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:38:06,925 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:06,925 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-65535&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000043&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686912
2024-11-16 17:38:06,937 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:38:06,937 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:06,938 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:06,951 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.029s
2024-11-16 17:38:06,952 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:06,952 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:06,956 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:06,956 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:38:06,956 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:38:06,957 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7438 bytes
2024-11-16 17:38:06,957 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:06,958 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:06,958 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:06,958 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8746 bytes
2024-11-16 17:38:06,959 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:38:06,959 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:06,961 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (stream_read_block_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=1) (stream_read_close_operations=1) (stream_read_closed=1) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_total_bytes=65686) (stream_read_operations_incomplete=0) (stream_read_bytes=350) (action_http_get_request=2) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=1) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes_discarded_in_close=65336) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=1) (stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=2) (stream_read_opened=1) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0) (stream_read_operations=1) (stream_read_block_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=15) (stream_read_remote_stream_drain.min=4) (action_file_opened.min=6) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=26) (action_file_opened.max=6) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=4) (action_file_opened.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=41, mean=20.5000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:06,963 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:06,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:06,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:06,965 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686963
2024-11-16 17:38:06,976 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:06,976 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:06,977 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=78&ts=1731778686963
2024-11-16 17:38:06,987 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:06,991 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:06,991 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:06,991 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:06,992 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:06,992 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:06,995 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:06,996 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:06,996 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:06,996 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:06,997 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:06,997 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:06,998 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:06,999 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:07,001 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,002 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [81] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=81&ts=1731778686963
2024-11-16 17:38:07,012 [s3a-transfer-leg-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:07,012 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:38:07,012 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:07,012 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:07,013 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:07,013 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778686894; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:07,013 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:07,013 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:07,013 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:07,014 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:07,014 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:07,017 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:07,017 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:07,018 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:07,018 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,018 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,018 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:07,018 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,018 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=82&ts=1731778686963
2024-11-16 17:38:07,040 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.022s
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.023s
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,041 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000044&t0=78&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=82&ts=1731778686963
2024-11-16 17:38:07,052 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:07,052 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:07,052 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:38:07,052 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.035s
2024-11-16 17:38:07,052 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:38:07,053 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.057s
2024-11-16 17:38:07,053 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:07,053 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:07,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:07,072 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 7], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_named_map=0) (op_glob_status.failures=0) (committer_stage_file_upload.failures=0) (object_multipart_aborted.failures=0) (committer_jobs_failed=0) (op_is_directory=0) (committer_materialize_file.failures=0) (committer_tasks_completed=0) (multipart_upload_part_put_bytes=0) (action_http_get_request.failures=0) (object_bulk_delete_request.failures=0) (object_continue_list_request=0) (action_http_head_request.failures=0) (op_delete=7) (stream_write_block_uploads_aborted=0) (audit_access_check_failure=0) (committer_commits_reverted=0) (op_rename.failures=0) (op_copy_from_local_file=0) (object_multipart_initiated=0) (object_delete_request=0) (multipart_upload_list=0) (multipart_upload_started=0) (op_list_files=0) (stream_write_exceptions_completing_upload=0) (op_mkdirs.failures=0) (stream_write_block_uploads_committed=0) (committer_magic_files_created=0) (multipart_upload_part_put=0) (op_access=0) (op_xattr_get_named.failures=0) (committer_bytes_committed=0) (stream_write_exceptions=0) (store_io_request=78) (stream_read_bytes=650) (op_get_file_status=0) (stream_write_total_time=0) (op_get_content_summary.failures=0) (committer_commits_created=0) (object_copy_requests=0) (op_create=7) (stream_read_seek_operations=0) (stream_read_seek_backward_operations=0) (committer_materialize_file=0) (stream_write_bytes=458752) (op_xattr_get_named=0) (files_delete_rejected=0) (committer_magic_marker_put=0) (stream_read_seek_policy_changed=5) (op_list_status.failures=0) (delegation_tokens_issued=0) (files_deleted=7) (committer_bytes_uploaded=0) (op_hsync=0) (store_io_throttled=0) (committer_commits_aborted=0) (op_is_file.failures=0) (committer_tasks_failed=0) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_multipart_initiated.failures=0) (stream_read_seek_bytes_skipped=0) (object_multipart_aborted=0) (stream_read_operations=1) (op_createfile.failures=0) (store_exists_probe=0) (op_glob_status=0) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_queue_duration.failures=0) (op_xattr_list=0) (action_http_head_request=18) (multipart_upload_aborted=0) (multipart_upload_completed=0) (committer_load_single_pending_file.failures=0) (committer_jobs_completed=0) (op_get_file_status.failures=0) (object_continue_list_request.failures=0) (stream_read_remote_stream_drain.failures=0) (op_is_file=0) (stream_read_vectored_operations=5) (op_xattr_get_map.failures=0) (stream_read_close_operations=4) (object_put_request.failures=0) (object_bulk_delete_request=14) (stream_read_exceptions=0) (store_io_retry=0) (object_delete_request.failures=0) (store_exists_probe.failures=0) (stream_read_closed=1) (committer_commit_job.failures=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (fake_directories_deleted=7) (op_get_content_summary=0) (op_get_file_checksum=0) (audit_request_execution=78) (directories_created=7) (stream_read_vectored_incoming_ranges=10) (op_delete.failures=0) (object_put_request=14) (object_select_requests=0) (stream_read_operations_incomplete=0) (committer_magic_marker_put.failures=0) (op_xattr_list.failures=0) (stream_read_remote_stream_drain=1) (stream_read_version_mismatches=0) (op_abort.failures=0) (op_access.failures=0) (op_list_located_status=0) (op_hflush=0) (stream_write_total_data=917504) (object_put_bytes=458752) (multipart_upload_list.failures=0) (op_get_delegation_token=0) (object_put_request_completed=14) (stream_read_bytes_discarded_in_abort=0) (op_list_files.failures=0) (fake_directories_created=0) (object_delete_objects=14) (files_copied_bytes=0) (op_create_non_recursive=0) (stream_read_unbuffered=1) (op_get_delegation_token.failures=0) (committer_commits.failures=0) (op_open=4) (multipart_upload_abort_under_path_invoked=0) (action_file_opened.failures=0) (op_xattr_get_map=0) (op_rename=0) (stream_write_block_uploads=7) (stream_read_remote_stream_aborted=0) (op_is_directory.failures=0) (multipart_instantiated=0) (object_list_request.failures=0) (ignored_errors=0) (object_list_request=28) (stream_read_total_bytes=65986) (op_openfile=0) (op_exists.failures=0) (stream_read_opened=1) (audit_failure=0) (delegation_tokens_issued.failures=0) (action_http_get_request=4) (stream_read_vectored_read_bytes_discarded=30) (op_createfile=0) (stream_write_queue_duration=0) (committer_load_single_pending_file=0) (stream_read_fully_operations=0) (action_file_opened=4) (directories_deleted=0) (audit_span_creation=26) (stream_read_vectored_combined_ranges=5) (op_exists=0) (op_create.failures=0) (files_copied=0) (stream_read_bytes_discarded_in_close=65336) (op_mkdirs=7) (committer_commits_completed=0) (stream_aborted=0) (object_metadata_request=18) (committer_commit_job=0) (files_created=7) (committer_stage_file_upload=0) (op_list_status=0) (op_get_file_checksum.failures=0) (op_copy_from_local_file.failures=0) (op_abort=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=7) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_access.min=-1) (store_exists_probe.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.min=-1) (multipart_upload_list.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.min=-1) (object_list_request.min=8) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_directory.failures.min=-1) (op_is_file.min=-1) (op_list_status.min=-1) (op_createfile.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_mkdirs.failures.min=-1) (object_put_request.min=45) (object_bulk_delete_request.min=10) (op_list_status.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_rename.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_head_request.min=4) (object_delete_request.min=-1) (op_xattr_get_named_map.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.min=-1) (op_create.min=12) (op_list_files.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_drain.min=4) (op_delete.min=44) (op_exists.failures.min=-1) (committer_commit_job.min=-1) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_list.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.failures.min=-1) (action_http_get_request.min=15) (op_get_delegation_token.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_status.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.min=-1) (action_file_opened.min=6) (op_get_delegation_token.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_mkdirs.min=39) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (op_copy_from_local_file.min=-1));
maximums=((action_executor_acquired.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (object_delete_request.max=-1) (op_get_delegation_token.failures.max=-1) (committer_stage_file_upload.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_list_request.max=233) (op_is_directory.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_createfile.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_files.failures.max=-1) (op_list_status.failures.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.failures.max=-1) (op_rename.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.max=112) (object_list_request.failures.max=-1) (op_get_file_status.max=-1) (op_createfile.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_content_summary.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_xattr_get_named.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.max=-1) (op_xattr_list.max=-1) (action_file_opened.failures.max=-1) (op_abort.max=-1) (op_exists.failures.max=-1) (op_delete.failures.max=-1) (action_file_opened.max=26) (action_http_get_request.max=50) (committer_commit_job.max=-1) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_checksum.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.failures.max=-1) (op_mkdirs.max=372) (op_is_file.max=-1) (op_create.failures.max=-1) (op_access.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=101) (op_get_content_summary.failures.max=-1) (op_create.max=53) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_head_request.max=26) (op_copy_from_local_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.max=-1) (object_bulk_delete_request.max=27) (op_xattr_get_named_map.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1) (op_list_files.max=-1) (op_exists.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_is_directory.failures.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=28, sum=575, mean=20.5357)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=18, sum=164, mean=9.1111)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=4, sum=57, mean=14.2500)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=7, sum=148, mean=21.1429)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=124, mean=31.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=4, mean=4.0000)) (object_put_request.mean=(samples=14, sum=675, mean=48.2143)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=14, sum=237, mean=16.9286)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=7, sum=483, mean=69.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=7, sum=676, mean=96.5714)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:07,073 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:07,073 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,073 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,074 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,074 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,074 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=83&ts=1731778687073
2024-11-16 17:38:07,081 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:07,081 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,082 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,082 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,083 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,083 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=83&ts=1731778687073
2024-11-16 17:38:07,087 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,087 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:07,088 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:07,088 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:07,089 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000045&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=83&ts=1731778687073
2024-11-16 17:38:07,104 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:07,105 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:07,105 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.018s
2024-11-16 17:38:07,106 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:07,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,111 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,111 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,112 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000046 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000046&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=83&ts=1731778687106
2024-11-16 17:38:07,119 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:07,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,121 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:07,122 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9906975560801514843.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:07,123 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9906975560801514843.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (op_abort=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9906975560801514843.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,123 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,123 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:07,123 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9906975560801514843.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:07,123 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:07,123 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:07,124 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:07,124 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:07,124 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000046 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000046&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=84&ts=1731778687106
2024-11-16 17:38:07,168 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:07,169 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:07,169 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.046s
2024-11-16 17:38:07,170 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9906975560801514843.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:07,170 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9906975560801514843.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,170 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9906975560801514843.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,171 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:07,171 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,172 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (action_executor_acquired=0) (stream_write_total_data=65536) (stream_write_bytes=65536) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (op_abort=0) (op_abort.failures=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_aborted=0) (op_hsync=0) (object_put_request=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=44));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_put_request.max=44) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=44, mean=44.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:07,172 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:07,174 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,174 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,174 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:07,174 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [85] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000047 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000047/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000047&t0=85&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=85&ts=1731778687174
2024-11-16 17:38:07,180 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:07,180 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:07,180 [s3a-transfer-leg-bucket-unbounded-pool2-t8] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,181 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:38:07,182 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_read_vectored_operations=0) (stream_read_block_read=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_combined_ranges=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (action_http_get_request=0) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=0) (stream_read_version_mismatches=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes=0) (stream_read_seek_forward_operations=0) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=6) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=6) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:07,184 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:07,184 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,184 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,184 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=83&ts=1731778687184
2024-11-16 17:38:07,188 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,188 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,188 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=83&ts=1731778687184
2024-11-16 17:38:07,197 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:07,197 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:07,197 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:07,197 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:07,197 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:07,197 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:07,198 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:07,198 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:07,198 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:07,198 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:07,198 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:07,198 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:07,198 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:07,198 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:07,199 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,199 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [86] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=86&ts=1731778687184
2024-11-16 17:38:07,214 [s3a-transfer-leg-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:38:07,214 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.016s
2024-11-16 17:38:07,214 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:07,214 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:07,214 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:07,215 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778687164; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:07,215 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:07,215 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:07,215 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:07,215 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:07,217 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:07,218 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:07,218 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:07,219 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:07,219 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,219 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,220 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:07,220 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,221 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=87&ts=1731778687184
2024-11-16 17:38:07,247 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.027s
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.029s
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.029s
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,248 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000048&t0=83&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=87&ts=1731778687184
2024-11-16 17:38:07,258 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:07,258 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:07,258 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:38:07,258 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.040s
2024-11-16 17:38:07,258 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.041s
2024-11-16 17:38:07,259 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.061s
2024-11-16 17:38:07,259 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:07,259 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:07,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:07,277 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_aborted.failures=0) (stream_write_total_time=0) (stream_read_remote_stream_aborted=0) (op_xattr_get_map=0) (object_delete_request.failures=0) (op_xattr_get_map.failures=0) (op_get_delegation_token.failures=0) (action_http_head_request=21) (stream_read_seek_bytes_discarded=0) (committer_commits_aborted=0) (committer_commit_job=0) (stream_read_opened=1) (object_bulk_delete_request.failures=0) (stream_write_block_uploads_aborted=0) (delegation_tokens_issued.failures=0) (directories_deleted=0) (op_abort.failures=0) (multipart_upload_aborted=0) (op_is_directory.failures=0) (object_multipart_initiated=0) (op_list_status.failures=0) (stream_read_operations=1) (multipart_upload_list.failures=0) (op_get_content_summary.failures=0) (ignored_errors=0) (stream_read_bytes=650) (op_get_file_checksum=0) (stream_write_block_uploads_committed=0) (committer_bytes_committed=0) (committer_materialize_file.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_list_status=0) (stream_write_block_uploads=8) (op_exists.failures=0) (op_xattr_get_named=0) (committer_magic_files_created=0) (stream_write_bytes=524288) (directories_created=8) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=10) (op_openfile=0) (op_open=5) (stream_read_seek_forward_operations=0) (op_rename.failures=0) (store_io_throttled=0) (committer_stage_file_upload=0) (files_created=8) (audit_access_check_failure=0) (committer_materialize_file=0) (stream_read_vectored_operations=5) (stream_write_exceptions=0) (delegation_tokens_issued=0) (files_copied=0) (stream_read_close_operations=5) (store_io_request=89) (committer_stage_file_upload.failures=0) (committer_load_single_pending_file=0) (object_continue_list_request.failures=0) (object_put_bytes=524288) (op_xattr_get_named_map.failures=0) (op_createfile=0) (committer_load_single_pending_file.failures=0) (committer_jobs_completed=0) (multipart_upload_part_put_bytes=0) (stream_read_operations_incomplete=0) (action_executor_acquired.failures=0) (multipart_upload_list=0) (op_xattr_list.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_list_files=0) (object_delete_objects=16) (op_xattr_list=0) (op_get_delegation_token=0) (op_mkdirs.failures=0) (object_list_request=32) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (committer_jobs_failed=0) (op_copy_from_local_file.failures=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (action_file_opened=5) (committer_commit_job.failures=0) (op_delete=8) (audit_request_execution=89) (object_put_request=16) (stream_write_exceptions_completing_upload=0) (op_get_content_summary=0) (store_exists_probe=0) (action_http_head_request.failures=0) (object_continue_list_request=0) (stream_read_bytes_discarded_in_close=65336) (committer_commits_completed=0) (object_put_request.failures=0) (op_xattr_get_named.failures=0) (op_copy_from_local_file=0) (files_delete_rejected=0) (op_get_file_status=0) (object_bulk_delete_request=16) (stream_write_queue_duration.failures=0) (committer_commits.failures=0) (store_io_retry=0) (op_get_file_status.failures=0) (op_createfile.failures=0) (op_create.failures=0) (fake_directories_created=0) (stream_read_vectored_read_bytes_discarded=30) (committer_tasks_failed=0) (store_exists_probe.failures=0) (stream_read_total_bytes=65986) (action_http_get_request=4) (committer_bytes_uploaded=0) (op_rename=0) (op_mkdirs=8) (op_create_non_recursive=0) (multipart_upload_abort_under_path_invoked=0) (object_select_requests=0) (committer_magic_marker_put=0) (op_access.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (multipart_instantiated=0) (multipart_upload_part_put=0) (op_xattr_get_named_map=0) (fake_directories_deleted=8) (files_deleted=8) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=1) (op_create=8) (op_get_file_checksum.failures=0) (committer_commits_reverted=0) (audit_span_creation=30) (stream_read_remote_stream_drain=1) (op_glob_status.failures=0) (committer_commits_created=0) (op_hsync=0) (op_is_file=0) (stream_aborted=0) (stream_write_total_data=1048576) (files_copied_bytes=0) (stream_read_version_mismatches=0) (audit_failure=0) (object_list_request.failures=0) (op_list_located_status=0) (object_put_request_completed=16) (op_glob_status=0) (op_exists=0) (op_is_directory=0) (committer_tasks_completed=0) (stream_read_seek_policy_changed=6) (stream_read_seek_operations=0) (op_delete.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (op_is_file.failures=0) (stream_read_exceptions=0) (object_multipart_aborted=0) (stream_read_vectored_combined_ranges=5) (object_delete_request=0) (committer_magic_marker_put.failures=0) (multipart_upload_started=0) (object_metadata_request=21) (op_abort=0) (action_http_get_request.failures=0) (op_list_files.failures=0) (stream_read_closed=1) (op_access=0) (object_multipart_aborted.failures=0) (object_copy_requests=0));
gauges=((object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=8) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_get_file_status.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_status.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_checksum.min=-1) (object_put_request.min=44) (op_rename.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.min=-1) (op_is_directory.failures.min=-1) (object_multipart_initiated.min=-1) (op_access.failures.min=-1) (object_delete_request.min=-1) (store_exists_probe.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_abort.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_bulk_delete_request.min=10) (action_file_opened.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.min=4) (op_rename.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.failures.min=-1) (object_multipart_aborted.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_continue_list_request.min=-1) (action_http_head_request.min=4) (object_put_request.failures.min=-1) (op_create.min=12) (op_list_files.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (store_exists_probe.min=-1) (object_list_request.failures.min=-1) (op_access.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_list.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_createfile.min=-1) (op_is_directory.min=-1) (op_exists.min=-1) (op_list_files.failures.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.min=-1) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (op_glob_status.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_map.failures.min=-1) (multipart_upload_list.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (op_abort.failures.min=-1) (object_list_request.min=7) (op_mkdirs.min=33) (op_delete.min=44) (action_http_get_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_delegation_token.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_content_summary.min=-1) (action_file_opened.min=6) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_status.min=-1) (action_http_get_request.min=15));
maximums=((action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.failures.max=-1) (op_abort.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.failures.max=-1) (op_create.failures.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.max=-1) (op_mkdirs.max=372) (op_list_files.max=-1) (op_copy_from_local_file.max=-1) (action_executor_acquired.failures.max=-1) (op_exists.failures.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_status.max=-1) (object_multipart_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.max=53) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_map.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (op_delete.max=112) (op_get_delegation_token.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_file.failures.max=-1) (op_createfile.max=-1) (store_exists_probe.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_commit_job.max=-1) (stream_write_queue_duration.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.max=50) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.max=26) (object_list_request.failures.max=-1) (op_xattr_list.max=-1) (object_list_request.max=233) (object_multipart_initiated.max=-1) (object_continue_list_request.max=-1) (op_access.max=-1) (op_access.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.max=101) (op_get_file_status.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.failures.max=-1) (multipart_upload_list.max=-1) (object_continue_list_request.failures.max=-1) (op_glob_status.max=-1) (op_mkdirs.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.max=26) (op_exists.max=-1) (stream_read_remote_stream_drain.max=4) (committer_stage_file_upload.failures.max=-1) (object_bulk_delete_request.max=27) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_status.max=-1) (object_delete_request.max=-1) (op_rename.max=-1));
means=((op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=8, sum=709, mean=88.6250)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=16, sum=274, mean=17.1250)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=21, sum=178, mean=8.4762)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=32, sum=613, mean=19.1563)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=124, mean=31.0000)) (op_create.mean=(samples=8, sum=163, mean=20.3750)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=4, mean=4.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=5, sum=63, mean=12.6000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=16, sum=734, mean=45.8750)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=8, sum=545, mean=68.1250)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:07,278 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:07,279 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,279 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,280 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,280 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,280 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=88&ts=1731778687278
2024-11-16 17:38:07,292 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:07,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,294 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,294 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,295 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,295 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=88&ts=1731778687278
2024-11-16 17:38:07,301 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,301 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:07,301 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:07,301 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:07,301 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000049&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=88&ts=1731778687278
2024-11-16 17:38:07,338 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:07,338 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:07,338 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.037s
2024-11-16 17:38:07,338 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:07,339 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,339 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,339 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,339 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,339 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000050 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000050&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=88&ts=1731778687339
2024-11-16 17:38:07,352 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:07,352 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,352 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:07,353 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12023904342840823929.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:07,354 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12023904342840823929.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_queue_duration=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_hsync=0) (object_put_request=0) (object_put_request.failures=0) (stream_write_exceptions=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (op_abort=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12023904342840823929.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,354 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,354 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:07,354 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12023904342840823929.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:07,356 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:07,356 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:07,357 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:07,358 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:07,358 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000050 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000050&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=89&ts=1731778687339
2024-11-16 17:38:07,416 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:07,417 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:07,417 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.061s
2024-11-16 17:38:07,418 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12023904342840823929.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:07,418 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12023904342840823929.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,418 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12023904342840823929.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,418 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:07,419 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,420 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_hsync=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (stream_write_total_time=0) (op_abort.failures=0) (multipart_upload_completed=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (object_put_request=1) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=58) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1));
maximums=((op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=58) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=58, mean=58.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:07,420 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:07,421 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,421 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,421 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:07,421 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000051 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000051&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=88&ts=1731778687421
2024-11-16 17:38:07,425 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:07,426 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:07,426 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,426 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:38:07,426 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:07,426 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:38:07,427 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:38:07,427 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,427 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,427 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:07,427 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000051 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-999&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000051&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=90&ts=1731778687421
2024-11-16 17:38:07,445 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:38:07,446 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,447 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (stream_read_fully_operations=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_vectored_incoming_ranges=10) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=1000) (stream_read_block_acquire_read.failures=0) (stream_read_block_read=0) (stream_read_prefetch_operations.failures=0) (stream_read_exceptions=0) (stream_read_seek_operations=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (stream_read_opened=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_forward_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=1) (stream_read_version_mismatches=0) (stream_read_total_bytes=1000) (action_http_get_request=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=5) (action_http_get_request.min=19) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=5) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=19) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=19, mean=19.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:07,449 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:07,449 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,449 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,449 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=88&ts=1731778687449
2024-11-16 17:38:07,453 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,453 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,454 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=88&ts=1731778687449
2024-11-16 17:38:07,460 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:07,461 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:07,461 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:07,461 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:07,462 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:07,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:07,462 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:07,463 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:07,463 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:07,463 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:07,464 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:07,464 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:07,464 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:07,465 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:07,465 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,465 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [91] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=91&ts=1731778687449
2024-11-16 17:38:07,471 [s3a-transfer-leg-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:07,471 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:07,471 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:07,471 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:07,471 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:07,471 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778687410; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:07,471 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:07,471 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:07,471 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:07,472 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:07,472 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:07,472 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:07,472 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:07,472 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:07,472 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,472 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,473 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:07,473 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,473 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=92&ts=1731778687449
2024-11-16 17:38:07,481 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:38:07,481 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,482 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000052&t0=88&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=92&ts=1731778687449
2024-11-16 17:38:07,491 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:07,491 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:07,491 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:38:07,491 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:38:07,491 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:38:07,491 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:38:07,491 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:07,491 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:07,493 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:07,504 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 10, active threads = 0, queued tasks = 0, completed tasks = 10], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_exists=0) (audit_access_check_failure=0) (op_create_non_recursive=0) (committer_load_single_pending_file=0) (committer_magic_files_created=0) (store_exists_probe=0) (fake_directories_deleted=9) (committer_commits_aborted=0) (files_deleted=9) (committer_commit_job=0) (action_http_get_request=5) (stream_write_total_data=1179648) (multipart_upload_part_put=0) (committer_commit_job.failures=0) (op_is_directory.failures=0) (committer_jobs_failed=0) (committer_tasks_failed=0) (op_open=6) (op_get_content_summary.failures=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (op_list_files=0) (committer_commits_reverted=0) (op_delete.failures=0) (object_put_request_completed=18) (object_copy_requests=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_bytes=589824) (files_delete_rejected=0) (stream_read_bytes=1650) (stream_write_block_uploads_aborted=0) (files_copied=0) (multipart_upload_started=0) (stream_read_vectored_combined_ranges=6) (op_mkdirs.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_named.failures=0) (stream_write_total_time=0) (stream_read_version_mismatches=0) (op_createfile.failures=0) (action_executor_acquired=0) (object_put_request=18) (op_abort=0) (op_access.failures=0) (stream_read_closed=1) (op_hflush=0) (committer_commits_created=0) (stream_read_remote_stream_drain=1) (stream_read_unbuffered=1) (multipart_upload_part_put_bytes=0) (op_copy_from_local_file=0) (stream_read_seek_policy_changed=7) (object_multipart_initiated=0) (object_metadata_request=24) (op_list_located_status=0) (object_put_bytes=589824) (op_get_content_summary=0) (stream_read_operations=1) (action_file_opened=6) (committer_jobs_completed=0) (committer_bytes_committed=0) (object_list_request=36) (op_get_file_checksum=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_map.failures=0) (object_continue_list_request.failures=0) (object_bulk_delete_request.failures=0) (object_select_requests=0) (committer_stage_file_upload=0) (op_get_delegation_token.failures=0) (stream_aborted=0) (multipart_upload_completed=0) (committer_commits_completed=0) (stream_read_seek_bytes_discarded=0) (stream_write_queue_duration=0) (stream_read_vectored_incoming_ranges=20) (op_xattr_list=0) (op_hsync=0) (stream_read_opened=1) (directories_created=9) (op_rename.failures=0) (files_copied_bytes=0) (committer_stage_file_upload.failures=0) (object_delete_objects=18) (op_list_status.failures=0) (op_glob_status=0) (object_delete_request=0) (committer_tasks_completed=0) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (op_exists.failures=0) (op_xattr_get_named=0) (op_create=9) (op_mkdirs=9) (op_create.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_list.failures=0) (stream_read_close_operations=6) (ignored_errors=0) (multipart_upload_list=0) (committer_magic_marker_put=0) (committer_materialize_file=0) (delegation_tokens_issued=0) (stream_read_seek_backward_operations=0) (committer_magic_marker_put.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_operations=6) (action_executor_acquired.failures=0) (object_continue_list_request=0) (op_openfile=0) (object_list_request.failures=0) (fake_directories_created=0) (stream_write_block_uploads=9) (op_xattr_get_map=0) (op_xattr_get_named_map.failures=0) (op_createfile=0) (object_bulk_delete_request=18) (op_access=0) (multipart_upload_aborted=0) (stream_read_operations_incomplete=0) (op_copy_from_local_file.failures=0) (action_http_head_request.failures=0) (committer_commits.failures=0) (stream_read_exceptions=0) (op_abort.failures=0) (audit_request_execution=101) (op_rename=0) (committer_bytes_uploaded=0) (stream_read_bytes_discarded_in_close=65336) (multipart_instantiated=0) (store_io_throttled=0) (op_get_delegation_token=0) (op_is_directory=0) (stream_read_seek_operations=0) (op_xattr_get_named_map=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (directories_deleted=0) (stream_read_remote_stream_drain.failures=0) (stream_write_queue_duration.failures=0) (stream_write_exceptions=0) (stream_read_bytes_discarded_in_abort=0) (files_created=9) (op_is_file=0) (op_delete=9) (op_get_file_status=0) (stream_read_total_bytes=66986) (store_io_retry=0) (op_xattr_list.failures=0) (delegation_tokens_issued.failures=0) (op_list_files.failures=0) (object_multipart_aborted=0) (stream_read_vectored_read_bytes_discarded=30) (op_get_file_checksum.failures=0) (object_put_request.failures=0) (audit_failure=0) (stream_read_remote_stream_aborted.failures=0) (op_list_status=0) (action_http_head_request=24) (audit_span_creation=34) (store_io_request=101) (stream_write_exceptions_completing_upload=0) (object_delete_request.failures=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe.failures=0) (op_glob_status.failures=0) (stream_read_remote_stream_aborted=0) (stream_write_block_uploads_committed=0) (op_is_file.failures=0));
gauges=((stream_write_block_uploads_pending=9) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0));
minimums=((op_rename.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_abort.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_rename.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_map.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_delegation_token.failures.min=-1) (delegation_tokens_issued.min=-1) (op_is_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_delegation_token.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (action_http_head_request.min=4) (store_exists_probe.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.min=8) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1) (op_create.min=12) (op_abort.min=-1) (committer_stage_file_upload.min=-1) (op_list_files.min=-1) (op_list_status.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=5) (op_is_directory.failures.min=-1) (object_delete_request.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=4) (op_get_content_summary.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_list.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=58) (op_glob_status.min=-1) (object_bulk_delete_request.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_map.min=-1) (stream_write_queue_duration.min=-1) (op_mkdirs.min=33) (action_http_get_request.min=19) (object_delete_request.failures.min=-1) (object_continue_list_request.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_initiated.min=-1) (object_list_request.min=5) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_createfile.failures.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (op_access.min=-1) (op_create.failures.min=-1) (op_createfile.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.min=-1) (op_delete.min=29) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.max=-1) (op_exists.failures.max=-1) (object_put_request.max=101) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.max=-1) (op_access.max=-1) (op_abort.max=-1) (op_delete.failures.max=-1) (committer_materialize_file.max=-1) (object_list_request.max=233) (op_is_file.failures.max=-1) (action_http_head_request.max=26) (op_exists.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_commit_job.max=-1) (action_http_head_request.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.max=-1) (committer_stage_file_upload.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.max=26) (store_exists_probe.max=-1) (op_mkdirs.failures.max=-1) (op_access.failures.max=-1) (op_create.failures.max=-1) (object_put_request.failures.max=-1) (op_create.max=53) (op_mkdirs.max=372) (object_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_get_request.max=50) (op_is_directory.failures.max=-1) (op_xattr_list.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_file_status.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.max=112) (op_createfile.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_directory.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.max=27) (object_multipart_initiated.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.failures.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_delegation_token.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_files.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_is_file.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=9, sum=177, mean=19.6667)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=18, sum=829, mean=46.0556)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=9, sum=574, mean=63.7778)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=18, sum=291, mean=16.1667)) (stream_read_remote_stream_drain.mean=(samples=1, sum=4, mean=4.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=9, sum=770, mean=85.5556)) (action_http_get_request.mean=(samples=5, sum=143, mean=28.6000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=36, sum=649, mean=18.0278)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=24, sum=192, mean=8.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=6, sum=68, mean=11.3333)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:07,504 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:07,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,504 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,504 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,504 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=93&ts=1731778687504
2024-11-16 17:38:07,510 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:07,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,510 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,511 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,511 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=93&ts=1731778687504
2024-11-16 17:38:07,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,514 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:07,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:07,514 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:07,514 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000053&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=93&ts=1731778687504
2024-11-16 17:38:07,536 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:07,536 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:07,536 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.022s
2024-11-16 17:38:07,537 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:07,537 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,537 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,537 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,537 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,537 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000054 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000054&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=93&ts=1731778687537
2024-11-16 17:38:07,553 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:38:07,553 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,553 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:07,554 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12287600234276960968.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:07,554 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12287600234276960968.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (stream_write_total_data=0) (op_abort.failures=0) (stream_write_exceptions=0) (object_put_request.failures=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (op_abort=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12287600234276960968.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,555 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,555 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:07,555 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12287600234276960968.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:07,555 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:07,555 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:07,555 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:07,555 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:07,556 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000054 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000054&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=94&ts=1731778687537
2024-11-16 17:38:07,587 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:07,587 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:07,587 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.032s
2024-11-16 17:38:07,588 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12287600234276960968.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:07,588 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12287600234276960968.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,588 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12287600234276960968.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,588 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:07,588 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,590 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted=0) (multipart_upload_completed=0) (op_abort=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=32) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_put_request.max=32) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=32, mean=32.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:07,590 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:07,591 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,591 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,592 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:07,592 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000055 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000055/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000055&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=93&ts=1731778687591
2024-11-16 17:38:07,596 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:07,596 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778687000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:07,598 [s3a-transfer-leg-bucket-unbounded-pool2-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:07,598 [s3a-transfer-leg-bucket-unbounded-pool2-t11] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,598 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:07,599 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:07,599 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:38:07,599 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,600 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,600 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:07,600 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056&t0=95&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=96&ts=1731778687598
2024-11-16 17:38:07,601 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:07,601 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,602 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,602 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:07,602 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056&t0=95&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=98&ts=1731778687598
2024-11-16 17:38:07,601 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,605 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,606 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:07,606 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-14435&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000056&t0=95&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=97&ts=1731778687598
2024-11-16 17:38:07,621 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:38:07,621 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,623 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.023s
2024-11-16 17:38:07,624 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,624 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:38:07,624 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:38:07,624 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:38:07,625 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:07,628 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_fully_operations=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=1424) (stream_read_opened=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request=3) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_operations=0) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_total_bytes=1424) (stream_read_remote_stream_drain=0) (stream_read_block_read=0) (stream_read_vectored_combined_ranges=3) (stream_read_seek_backward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=5) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (stream_read_vectored_operations=1) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.min=0) (action_http_get_request.min=18) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=23) (action_file_opened.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=60, mean=20.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)));

2024-11-16 17:38:07,633 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:07,633 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,633 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,634 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=93&ts=1731778687633
2024-11-16 17:38:07,640 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,640 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,640 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=93&ts=1731778687633
2024-11-16 17:38:07,648 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:07,648 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:07,648 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:07,649 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:07,649 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:07,649 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:07,649 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:07,649 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:07,649 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:07,649 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:07,650 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:07,650 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:07,651 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:07,651 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:07,651 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,652 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [99] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=99&ts=1731778687633
2024-11-16 17:38:07,662 [s3a-transfer-leg-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:07,663 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:38:07,663 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:07,664 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:07,664 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:07,664 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778687582; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:07,665 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:07,665 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:07,666 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:07,666 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:07,674 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:07,674 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:07,675 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:07,675 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:07,676 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,676 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,677 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:07,677 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,678 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=100&ts=1731778687633
2024-11-16 17:38:07,692 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:38:07,693 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:38:07,693 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:38:07,693 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:07,694 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:07,694 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,694 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,694 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:07,694 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,694 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000057&t0=93&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=100&ts=1731778687633
2024-11-16 17:38:07,706 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:07,706 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:07,706 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:38:07,706 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.032s
2024-11-16 17:38:07,707 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.033s
2024-11-16 17:38:07,707 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.058s
2024-11-16 17:38:07,707 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:07,707 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:07,709 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:07,723 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_operations=7) (committer_magic_files_created=0) (files_delete_rejected=0) (object_select_requests=0) (op_copy_from_local_file=0) (committer_magic_marker_put=0) (object_metadata_request=27) (stream_write_total_data=1310720) (action_http_head_request=27) (committer_commit_job.failures=0) (object_continue_list_request.failures=0) (store_exists_probe.failures=0) (object_delete_request=0) (store_io_throttled=0) (op_hsync=0) (op_xattr_get_named=0) (stream_read_bytes=3074) (directories_deleted=0) (op_list_files=0) (stream_read_total_bytes=68410) (op_create.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads_aborted=0) (op_createfile=0) (committer_magic_marker_put.failures=0) (stream_read_seek_policy_changed=8) (object_put_request=20) (committer_tasks_failed=0) (committer_stage_file_upload=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (op_list_status.failures=0) (op_glob_status.failures=0) (object_multipart_aborted=0) (stream_read_fully_operations=0) (op_xattr_get_map.failures=0) (stream_read_seek_forward_operations=0) (op_get_file_checksum=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_started=0) (committer_commits_reverted=0) (committer_bytes_uploaded=0) (op_get_file_status.failures=0) (store_io_request=115) (stream_read_vectored_incoming_ranges=25) (op_get_content_summary.failures=0) (multipart_upload_abort_under_path_invoked=0) (ignored_errors=0) (object_put_request.failures=0) (object_copy_requests=0) (multipart_instantiated=0) (op_get_delegation_token=0) (action_executor_acquired=0) (op_open=7) (object_put_request_completed=20) (op_exists.failures=0) (op_glob_status=0) (action_http_head_request.failures=0) (op_create=10) (object_delete_objects=20) (op_xattr_get_named_map.failures=0) (stream_read_exceptions=0) (op_xattr_get_map=0) (committer_commits_aborted=0) (stream_read_remote_stream_aborted=0) (committer_bytes_committed=0) (stream_read_operations=1) (op_access.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=7) (op_access=0) (op_abort.failures=0) (op_is_directory.failures=0) (committer_jobs_failed=0) (action_file_opened.failures=0) (committer_commit_job=0) (op_delete.failures=0) (stream_write_total_time=0) (committer_jobs_completed=0) (object_continue_list_request=0) (object_multipart_initiated.failures=0) (multipart_upload_list=0) (fake_directories_deleted=10) (stream_read_operations_incomplete=0) (multipart_upload_completed=0) (op_get_delegation_token.failures=0) (object_bulk_delete_request.failures=0) (op_get_file_status=1) (store_exists_probe=0) (multipart_upload_part_put_bytes=0) (stream_read_vectored_combined_ranges=9) (op_exists=0) (stream_read_unbuffered=1) (audit_request_execution=115) (multipart_upload_list.failures=0) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (op_xattr_list=0) (op_createfile.failures=0) (op_is_file.failures=0) (delegation_tokens_issued=0) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_close=65336) (files_copied_bytes=0) (stream_write_exceptions=0) (action_http_get_request.failures=0) (action_file_opened=7) (op_list_located_status=0) (object_bulk_delete_request=20) (committer_commits.failures=0) (stream_read_remote_stream_drain=1) (stream_write_block_uploads=10) (stream_read_seek_backward_operations=0) (op_create_non_recursive=0) (op_mkdirs=10) (multipart_upload_part_put=0) (stream_write_block_uploads_committed=0) (audit_span_creation=39) (committer_commits_created=0) (stream_read_closed=1) (op_rename=0) (stream_read_seek_bytes_discarded=0) (directories_created=10) (object_multipart_aborted.failures=0) (op_rename.failures=0) (op_xattr_get_named.failures=0) (op_list_status=0) (stream_read_vectored_read_bytes_discarded=5974) (audit_failure=0) (fake_directories_created=0) (committer_materialize_file=0) (committer_stage_file_upload.failures=0) (committer_load_single_pending_file.failures=0) (action_http_get_request=8) (store_io_retry=0) (op_is_directory=0) (committer_commits_completed=0) (object_delete_request.failures=0) (op_mkdirs.failures=0) (files_copied=0) (committer_materialize_file.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_abort=0) (object_put_bytes=655360) (audit_access_check_failure=0) (delegation_tokens_issued.failures=0) (op_list_files.failures=0) (stream_write_queue_duration=0) (stream_read_seek_operations=0) (op_get_file_checksum.failures=0) (op_delete=10) (stream_write_queue_duration.failures=0) (committer_tasks_completed=0) (op_is_file=0) (files_deleted=10) (stream_read_opened=1) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_get_named_map=0) (op_openfile=0) (op_get_content_summary=0) (stream_write_bytes=655360) (object_list_request=40) (op_copy_from_local_file.failures=0) (op_xattr_list.failures=0) (files_created=10) (object_list_request.failures=0) (committer_load_single_pending_file=0));
gauges=((client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=10) (object_put_request_active=0) (stream_write_block_uploads_active=0));
minimums=((committer_materialize_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_magic_marker_put.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_delegation_token.min=-1) (stream_read_remote_stream_drain.min=4) (object_put_request.min=32) (op_xattr_get_map.min=-1) (object_multipart_initiated.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_commit_job.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.min=33) (op_exists.min=-1) (op_get_content_summary.min=-1) (object_bulk_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (action_http_get_request.min=18) (delegation_tokens_issued.min=-1) (action_http_head_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_list.min=-1) (object_list_request.min=5) (op_xattr_list.failures.min=-1) (op_is_directory.min=-1) (op_is_file.min=-1) (op_abort.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.min=-1) (object_bulk_delete_request.min=8) (action_executor_acquired.min=-1) (op_is_directory.failures.min=-1) (object_put_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_status.min=5) (action_file_opened.min=0) (op_list_status.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_glob_status.failures.min=-1) (op_exists.failures.min=-1) (op_access.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_materialize_file.min=-1) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (op_create.min=12) (object_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_copy_from_local_file.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.min=-1) (object_multipart_initiated.failures.min=-1) (op_delete.min=29) (op_get_file_checksum.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (store_exists_probe.failures.min=-1) (op_abort.failures.min=-1) (op_access.min=-1) (op_createfile.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_list_files.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.min=-1) (action_http_head_request.min=3));
maximums=((action_executor_acquired.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.failures.max=-1) (op_glob_status.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.max=233) (op_get_content_summary.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (op_abort.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_glob_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_createfile.failures.max=-1) (object_bulk_delete_request.max=27) (committer_materialize_file.failures.max=-1) (op_abort.failures.max=-1) (op_is_directory.failures.max=-1) (op_get_file_status.max=5) (action_http_get_request.max=50) (op_xattr_get_map.max=-1) (delegation_tokens_issued.max=-1) (committer_materialize_file.max=-1) (object_put_request.max=101) (object_delete_request.max=-1) (object_delete_request.failures.max=-1) (op_delete.max=112) (store_exists_probe.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.failures.max=-1) (op_exists.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (object_multipart_aborted.max=-1) (op_mkdirs.failures.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_drain.max=4) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.max=26) (committer_commit_job.max=-1) (op_rename.max=-1) (op_get_delegation_token.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=53) (action_file_opened.max=26) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_list.max=-1) (op_create.failures.max=-1) (op_access.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.max=372) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (object_put_request.failures.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.failures.max=-1));
means=((object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=27, sum=206, mean=7.6296)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=7, sum=68, mean=9.7143)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=40, sum=689, mean=17.2250)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=10, sum=194, mean=19.4000)) (op_mkdirs.mean=(samples=10, sum=803, mean=80.3000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=20, sum=883, mean=44.1500)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=4, mean=4.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=10, sum=632, mean=63.2000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=20, sum=318, mean=15.9000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=203, mean=25.3750)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:07,723 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:07,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,724 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,724 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,724 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=101&ts=1731778687723
2024-11-16 17:38:07,730 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:07,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,730 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,731 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,731 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=101&ts=1731778687723
2024-11-16 17:38:07,734 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,734 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:07,734 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:07,734 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:07,734 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000058&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=101&ts=1731778687723
2024-11-16 17:38:07,750 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:07,750 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:07,750 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:38:07,750 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:07,750 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,750 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,751 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,751 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,751 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000059 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000059&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=101&ts=1731778687750
2024-11-16 17:38:07,757 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:07,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,758 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:07,759 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9158099295372206645.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:07,760 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9158099295372206645.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (op_hsync=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (op_hflush=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (op_abort.failures=0) (op_abort=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9158099295372206645.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,760 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,760 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:07,760 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9158099295372206645.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:07,760 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:07,761 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:07,761 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:07,761 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:07,761 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000059 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000059&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=102&ts=1731778687750
2024-11-16 17:38:07,803 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:07,803 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:07,803 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.042s
2024-11-16 17:38:07,803 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9158099295372206645.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:07,803 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9158099295372206645.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,803 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9158099295372206645.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,804 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:07,804 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,804 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_data=65536) (stream_write_total_time=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (op_abort=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (op_hsync=0) (multipart_upload_completed=0) (op_hflush=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_put_request=1) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=42) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=42) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:07,805 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:07,808 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,809 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,809 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:07,810 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [103] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000060 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000060/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000060&t0=103&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=103&ts=1731778687807
2024-11-16 17:38:07,815 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:07,822 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:07,823 [s3a-transfer-leg-bucket-unbounded-pool2-t13] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:07,823 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:38:07,823 [JUnit-testEOFRanges[Buffer type : direct]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,825 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations_incomplete=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_forward_operations=0) (action_executor_acquired=0) (action_http_get_request=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_fully_operations=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read.failures=0) (stream_read_version_mismatches=0) (stream_read_close_operations=1) (stream_read_total_bytes=0) (stream_aborted=0) (stream_read_block_acquire_read=0) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=0) (stream_read_block_acquire_read.failures=0) (stream_read_exceptions=0) (stream_read_bytes=0) (stream_read_vectored_operations=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=14) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=14) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=14, mean=14.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:07,827 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:07,827 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,827 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,827 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=101&ts=1731778687826
2024-11-16 17:38:07,839 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,839 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,839 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=101&ts=1731778687826
2024-11-16 17:38:07,852 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:07,853 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:07,853 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:07,853 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:07,853 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:07,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:07,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:07,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:07,853 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:07,853 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:07,853 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:07,853 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:07,854 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:07,854 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:07,854 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,854 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [104] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=104&ts=1731778687826
2024-11-16 17:38:07,865 [s3a-transfer-leg-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:07,866 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:38:07,867 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:07,867 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:07,867 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:07,867 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778687796; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:07,867 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:07,867 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:07,867 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:07,867 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:07,872 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:07,872 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:07,872 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:07,872 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:07,873 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,873 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,873 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:07,873 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,874 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=105&ts=1731778687826
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.017s
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:07,889 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:07,890 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000061&t0=101&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=105&ts=1731778687826
2024-11-16 17:38:07,907 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:38:07,907 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:38:07,907 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:38:07,907 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.035s
2024-11-16 17:38:07,907 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.035s
2024-11-16 17:38:07,908 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.055s
2024-11-16 17:38:07,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:07,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:07,914 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:07,927 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 14, active threads = 0, queued tasks = 0, completed tasks = 14], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_is_file=0) (op_hflush=0) (object_delete_request.failures=0) (stream_read_vectored_read_bytes_discarded=5974) (committer_magic_marker_put.failures=0) (op_get_file_checksum=0) (stream_read_exceptions=0) (stream_write_exceptions=0) (committer_magic_files_created=0) (op_list_status=0) (action_http_get_request=8) (audit_span_creation=43) (object_bulk_delete_request.failures=0) (op_get_file_status.failures=0) (op_xattr_get_named.failures=0) (fake_directories_created=0) (object_multipart_aborted=0) (op_delete.failures=0) (op_get_delegation_token.failures=0) (committer_commit_job.failures=0) (multipart_upload_aborted=0) (stream_read_opened=1) (object_multipart_aborted.failures=0) (files_created=11) (stream_read_total_bytes=68410) (action_file_opened=8) (committer_commits_reverted=0) (stream_write_total_time=0) (files_copied_bytes=0) (committer_materialize_file.failures=0) (committer_tasks_failed=0) (object_continue_list_request=0) (stream_write_bytes=720896) (op_createfile=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_map.failures=0) (op_access.failures=0) (op_delete=11) (stream_read_operations_incomplete=0) (op_rename.failures=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_completed=0) (op_create.failures=0) (action_http_get_request.failures=0) (delegation_tokens_issued.failures=0) (store_exists_probe.failures=0) (multipart_upload_part_put=0) (op_xattr_list=0) (stream_read_seek_policy_changed=9) (files_delete_rejected=0) (op_hsync=0) (op_access=0) (op_get_delegation_token=0) (op_xattr_get_named=0) (object_list_request=44) (committer_tasks_completed=0) (delegation_tokens_issued=0) (op_copy_from_local_file.failures=0) (stream_write_block_uploads_committed=0) (committer_load_single_pending_file=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (op_glob_status.failures=0) (op_list_located_status=0) (op_rename=0) (action_executor_acquired=0) (store_io_retry=0) (committer_commits_completed=0) (stream_read_vectored_incoming_ranges=25) (op_exists.failures=0) (object_delete_objects=22) (committer_jobs_failed=0) (committer_commits_aborted=0) (stream_read_seek_backward_operations=0) (op_list_files=0) (object_delete_request=0) (op_abort.failures=0) (stream_write_queue_duration=0) (stream_read_seek_forward_operations=0) (committer_jobs_completed=0) (multipart_instantiated=0) (stream_read_unbuffered=1) (op_is_directory=0) (op_copy_from_local_file=0) (stream_read_fully_operations=0) (stream_write_block_uploads=11) (object_put_bytes=720896) (op_create=11) (stream_read_remote_stream_drain.failures=0) (committer_bytes_uploaded=0) (stream_read_seek_operations=0) (committer_stage_file_upload.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=9) (stream_read_remote_stream_aborted=0) (op_open=8) (stream_write_total_data=1441792) (op_createfile.failures=0) (op_xattr_get_named_map.failures=0) (op_list_status.failures=0) (stream_read_vectored_operations=7) (op_list_files.failures=0) (multipart_upload_list=0) (op_mkdirs.failures=0) (stream_read_operations=1) (op_glob_status=0) (op_exists=0) (store_io_request=126) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_close=65336) (stream_write_block_uploads_aborted=0) (object_multipart_initiated.failures=0) (store_exists_probe=0) (op_get_file_checksum.failures=0) (stream_write_queue_duration.failures=0) (op_get_content_summary=0) (multipart_upload_list.failures=0) (committer_commit_job=0) (op_openfile=0) (audit_access_check_failure=0) (stream_aborted=0) (op_abort=0) (action_http_head_request=30) (committer_commits.failures=0) (stream_read_remote_stream_drain=1) (committer_commits_created=0) (stream_write_exceptions_completing_upload=0) (stream_read_close_operations=8) (object_metadata_request=30) (object_multipart_initiated=0) (store_io_throttled=0) (op_is_file.failures=0) (ignored_errors=0) (audit_request_execution=126) (committer_bytes_committed=0) (object_list_request.failures=0) (files_copied=0) (object_copy_requests=0) (op_get_file_status=1) (object_bulk_delete_request=22) (files_deleted=11) (op_xattr_list.failures=0) (op_mkdirs=11) (op_get_content_summary.failures=0) (stream_read_bytes=3074) (op_create_non_recursive=0) (op_xattr_get_map=0) (committer_materialize_file=0) (multipart_upload_started=0) (object_put_request=22) (object_continue_list_request.failures=0) (object_select_requests=0) (action_http_head_request.failures=0) (committer_load_single_pending_file.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named_map=0) (committer_magic_marker_put=0) (multipart_upload_abort_under_path_invoked=0) (object_put_request.failures=0) (stream_read_closed=1) (committer_stage_file_upload=0) (object_put_request_completed=22) (fake_directories_deleted=11) (stream_read_bytes_backwards_on_seek=0) (directories_created=11) (stream_read_seek_bytes_skipped=0) (action_file_opened.failures=0) (audit_failure=0) (directories_deleted=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=11) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0));
minimums=((committer_materialize_file.min=-1) (op_access.min=-1) (committer_stage_file_upload.failures.min=-1) (object_bulk_delete_request.min=8) (stream_read_remote_stream_drain.min=4) (committer_stage_file_upload.min=-1) (committer_materialize_file.failures.min=-1) (object_list_request.min=5) (committer_commit_job.failures.min=-1) (op_get_file_checksum.min=-1) (object_put_request.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_createfile.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.min=-1) (op_delete.failures.min=-1) (object_put_request.min=42) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.min=5) (multipart_upload_list.failures.min=-1) (op_is_file.min=-1) (op_rename.failures.min=-1) (op_delete.min=29) (object_continue_list_request.failures.min=-1) (action_http_head_request.min=3) (stream_read_remote_stream_drain.failures.min=-1) (op_mkdirs.failures.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_delete_request.failures.min=-1) (object_multipart_initiated.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (op_is_directory.min=-1) (op_abort.min=-1) (action_file_opened.min=14) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.min=-1) (multipart_upload_list.min=-1) (object_list_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (op_xattr_list.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (op_list_status.failures.min=-1) (op_is_file.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=18) (stream_write_queue_duration.min=-1) (op_get_delegation_token.min=-1) (op_exists.min=-1) (op_get_file_status.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (op_list_status.min=-1) (store_exists_probe.failures.min=-1) (op_create.min=9) (op_list_files.failures.min=-1) (op_mkdirs.min=27) (action_file_opened.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.failures.min=-1));
maximums=((op_get_delegation_token.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_bulk_delete_request.max=27) (multipart_upload_list.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_createfile.max=-1) (action_http_head_request.max=26) (action_executor_acquired.failures.max=-1) (op_delete.max=112) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_is_directory.failures.max=-1) (object_delete_request.max=-1) (op_glob_status.max=-1) (op_create.max=53) (op_copy_from_local_file.max=-1) (object_list_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_map.max=-1) (action_file_opened.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named.max=-1) (op_list_files.max=-1) (op_mkdirs.max=372) (object_delete_request.failures.max=-1) (object_put_request.failures.max=-1) (action_http_get_request.max=50) (committer_stage_file_upload.max=-1) (committer_magic_marker_put.max=-1) (op_delete.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.failures.max=-1) (op_abort.max=-1) (op_list_status.max=-1) (op_rename.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_files.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_access.failures.max=-1) (store_exists_probe.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.max=26) (action_executor_acquired.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_content_summary.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (op_is_directory.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.failures.max=-1) (op_is_file.max=-1) (op_get_delegation_token.max=-1) (op_get_file_status.max=5) (op_create.failures.max=-1) (committer_materialize_file.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (object_list_request.max=233) (op_xattr_list.failures.max=-1) (op_abort.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.max=101) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_map.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=8, sum=82, mean=10.2500)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=11, sum=203, mean=18.4545)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=44, sum=725, mean=16.4773)) (stream_read_remote_stream_drain.mean=(samples=1, sum=4, mean=4.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=22, sum=352, mean=16.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=22, sum=941, mean=42.7727)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=30, sum=228, mean=7.6000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=203, mean=25.3750)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=11, sum=687, mean=62.4545)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=11, sum=830, mean=75.4545)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:07,928 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:07,928 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,928 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,928 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,928 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,928 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778687927
2024-11-16 17:38:07,935 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:07,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:07,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:07,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:07,936 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778687927
2024-11-16 17:38:07,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:07,939 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:07,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:07,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:07,939 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000062&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778687927
2024-11-16 17:38:07,955 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:07,955 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:07,955 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:38:07,955 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:07,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:07,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:07,956 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:07,956 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000063 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000063&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778687956
2024-11-16 17:38:07,964 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:07,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:07,964 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:07,965 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12450936334521138333.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:07,966 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12450936334521138333.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_total_data=0) (multipart_upload_completed=0) (stream_write_total_time=0) (op_abort.failures=0) (op_abort=0) (committer_magic_marker_put=0) (object_put_request=0) (object_put_request.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1));
maximums=((op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12450936334521138333.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:07,966 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:07,966 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:07,966 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12450936334521138333.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:07,966 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:07,966 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:07,966 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:07,966 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:07,966 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000063 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000063&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=107&ts=1731778687956
2024-11-16 17:38:08,002 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:08,003 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:08,003 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.037s
2024-11-16 17:38:08,003 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12450936334521138333.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:08,003 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12450936334521138333.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,003 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12450936334521138333.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,003 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:08,003 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_put_request=1) (object_multipart_aborted=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (op_abort=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=36));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=36) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=36, mean=36.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:08,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:08,004 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,004 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,005 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:08,005 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778688004
2024-11-16 17:38:08,009 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:08,009 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:08,009 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,009 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:08,009 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:38:08,009 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,009 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-65535&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778688004
2024-11-16 17:38:08,024 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.015s
2024-11-16 17:38:08,024 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:08,024 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:08,025 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:08,025 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:08,025 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:08,026 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:08,026 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,026 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,027 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:08,027 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000064&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=108&ts=1731778688004
2024-11-16 17:38:08,038 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:38:08,039 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:08,039 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,039 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7440 bytes
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8744 bytes
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:38:08,040 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:08,041 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_vectored_operations=1) (stream_read_fully_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_read_total_bytes=65686) (stream_aborted=0) (stream_read_seek_operations=0) (stream_read_block_acquire_read.failures=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_closed=1) (stream_read_vectored_read_bytes_discarded=10) (stream_read_unbuffered=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=350) (stream_read_vectored_combined_ranges=1) (stream_read_block_read=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_operations=1) (action_file_opened=1) (stream_read_vectored_incoming_ranges=2) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_remote_stream_drain=1) (stream_read_block_acquire_read=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (action_http_get_request=2) (stream_read_opened=1) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.failures.min=-1) (action_file_opened.min=5) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_block_read.min=-1) (action_http_get_request.min=12) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=0) (action_http_get_request.failures.max=-1) (action_file_opened.max=5) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=15) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=27, mean=13.5000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:08,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:08,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,043 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,043 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778688042
2024-11-16 17:38:08,048 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,048 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,048 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=106&ts=1731778688042
2024-11-16 17:38:08,057 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:08,057 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:08,058 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:08,058 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:08,058 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:08,058 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:08,058 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:08,058 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:08,058 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:08,059 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:08,059 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:08,059 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:08,059 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:08,060 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:08,060 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,060 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [109] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=109&ts=1731778688042
2024-11-16 17:38:08,075 [s3a-transfer-leg-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:38:08,075 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.016s
2024-11-16 17:38:08,075 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:08,075 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:08,076 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:08,076 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778687996; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:08,076 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:08,076 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:08,076 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:08,077 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:08,078 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:08,078 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:08,078 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:08,078 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:08,078 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,079 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,079 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:08,079 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,079 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=110&ts=1731778688042
2024-11-16 17:38:08,093 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:08,093 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:38:08,093 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:38:08,093 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:08,094 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:08,094 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,094 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,094 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:08,095 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,095 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000065&t0=106&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=110&ts=1731778688042
2024-11-16 17:38:08,106 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:08,107 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:08,107 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:38:08,108 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:38:08,108 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.030s
2024-11-16 17:38:08,108 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.050s
2024-11-16 17:38:08,109 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:08,109 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:08,111 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:08,126 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 15], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_file_status.failures=0) (op_createfile.failures=0) (committer_commits_aborted=0) (fake_directories_deleted=12) (op_get_delegation_token=0) (action_http_head_request.failures=0) (stream_read_version_mismatches=0) (multipart_upload_list=0) (committer_jobs_failed=0) (committer_tasks_failed=0) (op_abort.failures=0) (committer_commits.failures=0) (store_io_retry=0) (committer_load_single_pending_file=0) (committer_commits_created=0) (object_put_request=24) (committer_magic_marker_put.failures=0) (op_exists=0) (object_put_request_completed=24) (committer_commits_completed=0) (object_multipart_initiated.failures=0) (stream_read_seek_forward_operations=0) (op_delete=12) (op_xattr_get_named=0) (store_exists_probe.failures=0) (op_list_files=0) (stream_write_block_uploads_aborted=0) (op_get_delegation_token.failures=0) (action_http_head_request=33) (directories_created=12) (directories_deleted=0) (object_delete_request.failures=0) (delegation_tokens_issued=0) (op_xattr_list.failures=0) (object_continue_list_request=0) (stream_read_remote_stream_drain=2) (multipart_instantiated=0) (committer_bytes_committed=0) (op_createfile=0) (op_xattr_get_named_map.failures=0) (op_open=9) (op_delete.failures=0) (op_xattr_get_map=0) (multipart_upload_part_put_bytes=0) (op_glob_status.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_close_operations=9) (op_list_located_status=0) (op_glob_status=0) (fake_directories_created=0) (store_exists_probe=0) (stream_read_operations=2) (stream_read_closed=2) (audit_span_creation=47) (action_http_get_request=10) (stream_write_exceptions=0) (op_xattr_get_named_map=0) (stream_read_bytes_discarded_in_close=130672) (op_access=0) (action_file_opened.failures=0) (audit_request_execution=139) (stream_write_block_uploads=12) (stream_write_total_time=0) (committer_stage_file_upload.failures=0) (op_xattr_get_named.failures=0) (stream_read_seek_backward_operations=0) (stream_read_unbuffered=1) (op_create.failures=0) (stream_read_vectored_combined_ranges=10) (op_list_status.failures=0) (stream_write_total_data=1572864) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=134096) (object_put_bytes=786432) (object_copy_requests=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=27) (op_get_file_checksum=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=3424) (stream_read_exceptions=0) (committer_commit_job.failures=0) (stream_read_fully_operations=0) (committer_commit_job=0) (multipart_upload_aborted=0) (files_created=12) (multipart_upload_part_put=0) (object_delete_request=0) (ignored_errors=0) (op_access.failures=0) (store_io_request=139) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (committer_magic_marker_put=0) (object_select_requests=0) (op_create_non_recursive=0) (op_is_directory=0) (object_bulk_delete_request=24) (op_xattr_get_map.failures=0) (op_copy_from_local_file=0) (committer_materialize_file.failures=0) (op_get_content_summary=0) (object_delete_objects=24) (op_get_content_summary.failures=0) (op_is_file=0) (op_openfile=0) (op_copy_from_local_file.failures=0) (audit_failure=0) (action_file_opened=9) (op_get_file_checksum.failures=0) (stream_read_bytes_discarded_in_abort=0) (committer_jobs_completed=0) (object_multipart_aborted=0) (object_list_request.failures=0) (stream_read_vectored_read_bytes_discarded=5984) (stream_read_vectored_operations=8) (object_multipart_aborted.failures=0) (op_abort=0) (op_is_directory.failures=0) (op_hflush=0) (multipart_upload_list.failures=0) (object_put_request.failures=0) (object_continue_list_request.failures=0) (committer_bytes_uploaded=0) (op_is_file.failures=0) (op_list_status=0) (op_xattr_list=0) (multipart_upload_started=0) (committer_stage_file_upload=0) (stream_write_queue_duration.failures=0) (stream_read_opened=2) (delegation_tokens_issued.failures=0) (op_mkdirs=12) (stream_read_seek_bytes_discarded=0) (files_copied_bytes=0) (committer_materialize_file=0) (stream_write_bytes=786432) (action_http_get_request.failures=0) (files_delete_rejected=0) (object_list_request=48) (stream_write_block_uploads_committed=0) (stream_aborted=0) (action_executor_acquired=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_skipped=0) (op_hsync=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions_completing_upload=0) (files_copied=0) (object_multipart_initiated=0) (committer_magic_files_created=0) (op_rename=0) (op_create=12) (multipart_upload_completed=0) (committer_load_single_pending_file.failures=0) (store_io_throttled=0) (stream_read_seek_policy_changed=10) (committer_tasks_completed=0) (object_metadata_request=33) (op_get_file_status=1) (stream_write_queue_duration=0) (op_mkdirs.failures=0) (audit_access_check_failure=0) (op_exists.failures=0) (files_deleted=12) (op_list_files.failures=0) (committer_commits_reverted=0) (op_rename.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=12) (stream_read_active_memory_in_use=0));
minimums=((op_xattr_get_map.failures.min=-1) (delegation_tokens_issued.min=-1) (op_access.min=-1) (op_is_directory.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.min=-1) (op_rename.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.min=-1) (op_exists.min=-1) (op_createfile.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_commit_job.min=-1) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.min=8) (action_http_get_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (object_continue_list_request.min=-1) (op_get_file_status.min=5) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_put_request.min=36) (op_copy_from_local_file.min=-1) (op_abort.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.min=12) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.min=29) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_list.min=-1) (action_file_opened.min=5) (op_mkdirs.min=27) (op_rename.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_map.min=-1) (op_list_status.min=-1) (op_create.min=9) (store_exists_probe.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.min=-1) (op_is_file.min=-1) (op_list_status.failures.min=-1) (op_get_delegation_token.min=-1) (op_mkdirs.failures.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_drain.min=0) (object_delete_request.failures.min=-1) (object_list_request.min=5) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.min=-1) (action_http_head_request.min=3) (op_create.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (object_continue_list_request.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.max=372) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_access.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.failures.max=-1) (object_delete_request.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=101) (op_get_delegation_token.failures.max=-1) (object_multipart_aborted.max=-1) (op_delete.max=112) (action_http_head_request.max=26) (stream_read_remote_stream_drain.max=4) (op_list_files.max=-1) (op_xattr_get_map.max=-1) (action_http_get_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.failures.max=-1) (object_list_request.max=233) (op_get_delegation_token.max=-1) (stream_write_queue_duration.max=-1) (object_multipart_initiated.max=-1) (op_exists.max=-1) (op_rename.max=-1) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_list.max=-1) (op_create.max=53) (op_list_files.failures.max=-1) (op_glob_status.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.failures.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.max=-1) (object_put_request.failures.max=-1) (op_createfile.max=-1) (op_create.failures.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.max=27) (committer_materialize_file.max=-1) (op_glob_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.failures.max=-1) (multipart_upload_list.max=-1) (action_http_get_request.max=50) (op_get_file_status.max=5) (action_executor_acquired.failures.max=-1) (action_file_opened.max=26) (op_xattr_get_named_map.max=-1) (op_list_status.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_delete.failures.max=-1) (op_is_file.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=12, sum=739, mean=61.5833)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=24, sum=993, mean=41.3750)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=12, sum=857, mean=71.4167)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=33, sum=239, mean=7.2424)) (action_file_opened.mean=(samples=9, sum=87, mean=9.6667)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=24, sum=377, mean=15.7083)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=48, sum=763, mean=15.8958)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=12, sum=212, mean=17.6667)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=4, mean=2.0000)) (action_http_get_request.mean=(samples=10, sum=230, mean=23.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:08,127 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:08,127 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,127 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,128 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,128 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,128 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=111&ts=1731778688127
2024-11-16 17:38:08,135 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:08,136 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,136 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,136 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,137 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,137 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=111&ts=1731778688127
2024-11-16 17:38:08,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,141 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:08,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:08,142 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:08,142 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000066&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=111&ts=1731778688127
2024-11-16 17:38:08,156 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:08,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:08,158 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:38:08,158 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:08,159 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,159 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,160 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,160 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,160 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000067 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000067&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=111&ts=1731778688159
2024-11-16 17:38:08,167 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:08,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,168 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:08,168 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7290572570820567618.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:08,170 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7290572570820567618.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_block_uploads=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (object_put_request=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_total_time=0) (op_abort=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7290572570820567618.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,170 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,171 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:08,171 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7290572570820567618.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:08,172 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:08,172 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:08,172 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:08,172 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:08,173 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000067 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000067&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=112&ts=1731778688159
2024-11-16 17:38:08,211 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:08,212 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:08,212 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.040s
2024-11-16 17:38:08,212 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7290572570820567618.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:08,212 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7290572570820567618.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,212 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7290572570820567618.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,212 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:08,213 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,214 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (op_hflush=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (op_abort=0) (op_hsync=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_total_data=65536) (object_put_request=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=38) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=38) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=38, mean=38.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:08,214 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:08,215 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,215 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,215 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:08,215 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=111&ts=1731778688214
2024-11-16 17:38:08,218 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:08,218 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:08,218 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,219 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:38:08,219 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:08,219 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:38:08,219 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:38:08,219 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,219 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,220 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,220 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:08,220 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,220 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=16101-16200&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=114&ts=1731778688214
2024-11-16 17:38:08,220 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:08,220 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-4200&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000068&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=113&ts=1731778688214
2024-11-16 17:38:08,231 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:38:08,231 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,234 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:38:08,235 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:38:08,235 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,235 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_block_read=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=2) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=4001) (action_file_opened=1) (stream_read_bytes=300) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_version_mismatches=0) (stream_read_close_operations=1) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=3) (action_file_opened.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_total_bytes=300) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_closed=0) (action_http_get_request=2) (action_executor_acquired.failures=0) (stream_read_vectored_operations=1) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.min=11) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=14) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=25, mean=12.5000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)));

2024-11-16 17:38:08,237 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:08,237 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,237 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,237 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=111&ts=1731778688236
2024-11-16 17:38:08,241 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,241 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,241 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=111&ts=1731778688236
2024-11-16 17:38:08,248 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:08,248 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:08,248 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:08,248 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:08,248 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:08,249 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:08,249 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:08,249 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:08,249 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:08,249 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:08,249 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:08,250 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:08,250 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:08,250 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:08,250 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,250 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [115] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=115&ts=1731778688236
2024-11-16 17:38:08,256 [s3a-transfer-leg-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:08,256 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:38:08,256 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:08,256 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:08,256 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:08,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778688207; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:08,257 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:08,257 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:08,257 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:08,257 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:08,257 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:08,258 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:08,258 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:08,258 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:08,258 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,258 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,258 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:08,259 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,259 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=116&ts=1731778688236
2024-11-16 17:38:08,268 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:08,268 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:08,268 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:08,268 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:08,269 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:08,269 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,269 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,269 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:08,269 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,269 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000069&t0=111&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=116&ts=1731778688236
2024-11-16 17:38:08,282 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:08,282 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:08,282 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:38:08,282 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:38:08,282 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:38:08,283 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:38:08,283 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:08,283 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:08,284 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:08,298 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 16], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_version_mismatches=0) (op_xattr_get_named_map.failures=0) (op_rename=0) (op_delete.failures=0) (stream_write_queue_duration=0) (committer_tasks_completed=0) (op_create=13) (object_continue_list_request=0) (op_createfile=0) (audit_request_execution=152) (committer_jobs_completed=0) (multipart_upload_part_put_bytes=0) (stream_write_block_uploads_committed=0) (op_openfile=0) (op_glob_status=0) (object_put_request=26) (committer_tasks_failed=0) (stream_read_remote_stream_drain=2) (committer_stage_file_upload.failures=0) (stream_read_unbuffered=1) (op_hsync=0) (object_multipart_aborted.failures=0) (object_list_request=52) (committer_magic_marker_put=0) (object_metadata_request=36) (op_xattr_get_map.failures=0) (stream_write_block_uploads=13) (stream_read_seek_forward_operations=0) (fake_directories_deleted=13) (op_open=10) (op_exists=0) (fake_directories_created=0) (stream_read_bytes_backwards_on_seek=0) (op_list_located_status=0) (multipart_upload_part_put=0) (stream_read_opened=2) (multipart_upload_started=0) (committer_magic_marker_put.failures=0) (op_list_status.failures=0) (stream_read_operations_incomplete=0) (committer_commits_aborted=0) (op_is_directory=0) (op_xattr_list.failures=0) (op_get_content_summary=0) (files_delete_rejected=0) (audit_failure=0) (stream_aborted=0) (store_io_request=152) (op_list_status=0) (op_access.failures=0) (object_multipart_aborted=0) (op_createfile.failures=0) (object_list_request.failures=0) (action_executor_acquired=0) (op_mkdirs.failures=0) (action_http_head_request.failures=0) (object_continue_list_request.failures=0) (store_io_throttled=0) (committer_stage_file_upload=0) (object_delete_objects=26) (committer_load_single_pending_file.failures=0) (committer_commits_created=0) (stream_write_total_time=0) (stream_read_total_bytes=134396) (directories_deleted=0) (stream_write_bytes=851968) (op_create.failures=0) (stream_read_close_operations=10) (op_mkdirs=13) (op_access=0) (multipart_upload_aborted=0) (op_get_file_checksum.failures=0) (committer_commit_job.failures=0) (directories_created=13) (store_exists_probe.failures=0) (stream_read_vectored_read_bytes_discarded=9985) (committer_load_single_pending_file=0) (op_is_directory.failures=0) (stream_read_operations=2) (multipart_upload_list=0) (stream_write_exceptions=0) (object_delete_request=0) (stream_read_vectored_combined_ranges=12) (committer_commits.failures=0) (files_copied=0) (stream_read_exceptions=0) (multipart_upload_abort_under_path_invoked=0) (op_delete=13) (op_xattr_get_named_map=0) (op_get_file_status.failures=0) (stream_read_seek_backward_operations=0) (object_put_request_completed=26) (op_create_non_recursive=0) (op_list_files=0) (stream_read_bytes_discarded_in_close=130672) (action_http_get_request.failures=0) (op_hflush=0) (committer_magic_files_created=0) (committer_commits_completed=0) (ignored_errors=0) (stream_read_remote_stream_drain.failures=0) (stream_write_queue_duration.failures=0) (op_get_file_status=1) (op_copy_from_local_file.failures=0) (object_select_requests=0) (stream_read_bytes_discarded_in_abort=0) (op_get_delegation_token.failures=0) (op_xattr_get_named.failures=0) (op_is_file=0) (committer_commits_reverted=0) (object_copy_requests=0) (op_rename.failures=0) (stream_read_vectored_incoming_ranges=30) (action_http_head_request=36) (committer_bytes_committed=0) (committer_materialize_file.failures=0) (stream_read_bytes=3724) (op_xattr_list=0) (op_xattr_get_named=0) (audit_access_check_failure=0) (store_exists_probe=0) (object_multipart_initiated=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_operations=0) (audit_span_creation=51) (op_abort.failures=0) (stream_read_closed=2) (op_exists.failures=0) (stream_read_remote_stream_aborted=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (op_xattr_get_map=0) (delegation_tokens_issued=0) (action_http_get_request=12) (op_glob_status.failures=0) (object_delete_request.failures=0) (action_file_opened=10) (op_get_delegation_token=0) (op_abort=0) (files_created=13) (store_io_retry=0) (op_is_file.failures=0) (object_put_request.failures=0) (op_get_content_summary.failures=0) (committer_bytes_uploaded=0) (stream_read_seek_bytes_skipped=0) (files_copied_bytes=0) (files_deleted=13) (stream_read_vectored_operations=9) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (op_list_files.failures=0) (op_copy_from_local_file=0) (committer_materialize_file=0) (committer_jobs_failed=0) (stream_read_remote_stream_aborted.failures=0) (committer_commit_job=0) (stream_read_fully_operations=0) (object_bulk_delete_request=26) (stream_read_seek_policy_changed=11) (multipart_instantiated=0) (multipart_upload_list.failures=0) (stream_write_total_data=1703936) (object_bulk_delete_request.failures=0) (delegation_tokens_issued.failures=0) (object_put_bytes=851968) (action_file_opened.failures=0) (op_get_file_checksum=0));
gauges=((stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=13));
minimums=((stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.min=11) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_file.failures.min=-1) (object_delete_request.failures.min=-1) (object_delete_request.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.min=-1) (op_create.min=9) (op_list_files.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_exists.failures.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.min=-1) (object_put_request.min=38) (op_abort.min=-1) (object_bulk_delete_request.min=8) (committer_load_single_pending_file.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_exists.min=-1) (op_access.failures.min=-1) (op_delete.min=29) (op_access.min=-1) (op_list_files.min=-1) (op_delete.failures.min=-1) (op_glob_status.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (action_http_head_request.min=3) (multipart_upload_list.min=-1) (stream_write_queue_duration.min=-1) (op_is_directory.min=-1) (op_list_status.failures.min=-1) (op_is_file.min=-1) (op_list_status.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.min=-1) (object_put_request.failures.min=-1) (op_get_file_status.min=5) (action_http_head_request.failures.min=-1) (action_executor_acquired.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_create.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_mkdirs.min=27) (store_exists_probe.min=-1) (object_list_request.min=5) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=3) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.failures.min=-1) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_initiated.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (op_list_status.max=-1) (op_is_directory.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (op_abort.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.max=-1) (committer_stage_file_upload.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_http_get_request.max=50) (op_get_file_checksum.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.max=-1) (object_put_request.max=101) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.max=-1) (object_put_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.max=26) (object_bulk_delete_request.max=27) (op_delete.max=112) (stream_read_remote_stream_drain.max=4) (op_list_status.failures.max=-1) (object_list_request.max=233) (store_exists_probe.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.failures.max=-1) (action_file_opened.max=26) (object_multipart_initiated.failures.max=-1) (op_is_file.max=-1) (committer_commit_job.failures.max=-1) (op_exists.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_delegation_token.max=-1) (op_access.failures.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.max=-1) (committer_materialize_file.max=-1) (op_mkdirs.max=372) (action_http_get_request.failures.max=-1) (op_list_files.max=-1) (op_is_directory.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_content_summary.max=-1) (op_create.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_rename.max=-1) (op_create.max=53) (op_xattr_get_map.max=-1) (action_file_opened.failures.max=-1) (op_get_file_status.max=5) (stream_write_queue_duration.failures.max=-1) (op_exists.max=-1));
means=((committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=13, sum=773, mean=59.4615)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=255, mean=21.2500)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=4, mean=2.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=52, sum=790, mean=15.1923)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=13, sum=888, mean=68.3077)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=26, sum=1045, mean=40.1923)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=36, sum=248, mean=6.8889)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=10, sum=90, mean=9.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=13, sum=222, mean=17.0769)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=26, sum=399, mean=15.3462)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:08,298 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:08,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,299 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,299 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=117&ts=1731778688298
2024-11-16 17:38:08,305 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:08,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,306 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,306 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=117&ts=1731778688298
2024-11-16 17:38:08,309 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,309 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:08,310 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:08,310 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:08,311 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000070&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=117&ts=1731778688298
2024-11-16 17:38:08,332 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:08,333 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:08,333 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:38:08,333 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:08,334 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,335 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,335 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,335 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,336 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000071 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000071&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=117&ts=1731778688334
2024-11-16 17:38:08,342 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:08,343 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,343 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:08,344 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-557345634403478130.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:08,345 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-557345634403478130.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (op_hflush=0) (object_multipart_initiated=0) (stream_write_total_data=0) (stream_write_total_time=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (op_hsync=0) (op_abort=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-557345634403478130.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,346 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,346 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:08,346 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-557345634403478130.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:08,348 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:08,348 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:08,349 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:08,349 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:08,349 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000071 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000071&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=118&ts=1731778688334
2024-11-16 17:38:08,389 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:08,389 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:08,390 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.042s
2024-11-16 17:38:08,390 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-557345634403478130.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:08,390 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-557345634403478130.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,390 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-557345634403478130.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,390 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:08,391 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,391 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (op_abort=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_put_request.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_put_request=1) (op_hsync=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=40) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=40));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=40, mean=40.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:08,392 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:08,393 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,393 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,393 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:08,393 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000072 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000072/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000072&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=117&ts=1731778688393
2024-11-16 17:38:08,399 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:08,400 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:08,400 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,401 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_aborted=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_total_bytes=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_backward_operations=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=0) (stream_read_exceptions=0) (stream_read_vectored_operations=0) (stream_read_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_combined_ranges=0) (stream_read_fully_operations=0) (stream_read_operations=0) (stream_read_opened=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=6) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=6) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:08,402 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:08,402 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,403 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,403 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=117&ts=1731778688402
2024-11-16 17:38:08,406 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,406 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,406 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=117&ts=1731778688402
2024-11-16 17:38:08,417 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:08,417 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:08,418 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:08,418 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:08,418 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:08,418 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:08,418 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:08,418 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:08,418 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:08,418 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:08,418 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:08,419 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:08,419 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:08,419 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:08,419 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,420 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [119] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=119&ts=1731778688402
2024-11-16 17:38:08,426 [s3a-transfer-leg-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:08,426 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:08,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:08,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:08,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:08,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778688383; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:08,426 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:08,426 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:08,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:08,427 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:08,427 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:08,427 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:08,427 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:08,427 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:08,428 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,428 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,428 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:08,428 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,428 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=120&ts=1731778688402
2024-11-16 17:38:08,435 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:38:08,435 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,436 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000073&t0=117&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=120&ts=1731778688402
2024-11-16 17:38:08,444 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:38:08,444 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:38:08,444 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:38:08,444 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:38:08,445 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:38:08,445 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:38:08,445 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:08,445 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:08,447 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:08,459 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 17, active threads = 0, queued tasks = 0, completed tasks = 17], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_abort.failures=0) (op_createfile=0) (store_exists_probe=0) (files_created=14) (object_multipart_initiated.failures=0) (op_create=14) (op_rename.failures=0) (audit_request_execution=163) (stream_read_opened=2) (ignored_errors=0) (op_xattr_list.failures=0) (op_xattr_list=0) (op_copy_from_local_file.failures=0) (stream_write_total_data=1835008) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (files_delete_rejected=0) (op_get_content_summary=0) (stream_read_vectored_read_bytes_discarded=9985) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=12) (object_multipart_aborted.failures=0) (committer_commit_job.failures=0) (committer_jobs_failed=0) (action_http_head_request=39) (stream_read_close_operations=11) (audit_span_creation=55) (stream_write_exceptions_completing_upload=0) (object_bulk_delete_request=28) (action_http_get_request=12) (op_list_status.failures=0) (committer_bytes_committed=0) (op_create.failures=0) (stream_read_remote_stream_aborted=0) (committer_commit_job=0) (op_xattr_get_named=0) (stream_read_vectored_operations=9) (multipart_instantiated=0) (object_multipart_initiated=0) (action_http_head_request.failures=0) (op_list_located_status=0) (op_copy_from_local_file=0) (op_is_directory=0) (stream_write_bytes=917504) (store_exists_probe.failures=0) (committer_magic_marker_put.failures=0) (committer_commits_aborted=0) (stream_read_remote_stream_drain=2) (delegation_tokens_issued.failures=0) (committer_commits_created=0) (stream_read_operations_incomplete=0) (committer_stage_file_upload.failures=0) (stream_write_exceptions=0) (op_abort=0) (op_glob_status.failures=0) (committer_jobs_completed=0) (op_access=0) (stream_write_block_uploads=14) (op_list_status=0) (op_mkdirs=14) (audit_failure=0) (stream_read_seek_bytes_skipped=0) (op_get_file_checksum.failures=0) (op_create_non_recursive=0) (object_list_request.failures=0) (stream_read_operations=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (stream_read_closed=2) (op_hsync=0) (stream_read_unbuffered=1) (op_open=11) (committer_load_single_pending_file.failures=0) (committer_load_single_pending_file=0) (committer_tasks_completed=0) (object_copy_requests=0) (op_is_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (directories_created=14) (op_createfile.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads_committed=0) (committer_bytes_uploaded=0) (multipart_upload_part_put_bytes=0) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (op_get_delegation_token.failures=0) (object_bulk_delete_request.failures=0) (op_is_file=0) (op_glob_status=0) (object_select_requests=0) (stream_read_vectored_combined_ranges=12) (op_xattr_get_named_map=0) (committer_tasks_failed=0) (committer_commits.failures=0) (op_hflush=0) (op_openfile=0) (op_get_content_summary.failures=0) (op_get_delegation_token=0) (files_deleted=14) (multipart_upload_started=0) (multipart_upload_part_put=0) (fake_directories_created=0) (op_rename=0) (object_delete_request.failures=0) (op_get_file_status=1) (op_exists=0) (stream_read_bytes_discarded_in_abort=0) (op_mkdirs.failures=0) (op_delete=14) (committer_commits_completed=0) (stream_write_block_uploads_aborted=0) (multipart_upload_aborted=0) (stream_read_total_bytes=134396) (object_delete_objects=28) (op_list_files.failures=0) (action_file_opened.failures=0) (object_put_bytes=917504) (action_file_opened=11) (committer_materialize_file=0) (delegation_tokens_issued=0) (object_continue_list_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_delete.failures=0) (committer_magic_files_created=0) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (directories_deleted=0) (committer_stage_file_upload=0) (object_delete_request=0) (stream_aborted=0) (multipart_upload_list.failures=0) (object_put_request=28) (op_list_files=0) (files_copied_bytes=0) (stream_write_total_time=0) (multipart_upload_list=0) (op_get_file_checksum=0) (audit_access_check_failure=0) (op_get_file_status.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_bytes=3724) (object_list_request=56) (op_is_directory.failures=0) (action_executor_acquired=0) (object_metadata_request=39) (op_xattr_get_named.failures=0) (committer_materialize_file.failures=0) (stream_read_bytes_discarded_in_close=130672) (op_exists.failures=0) (files_copied=0) (op_xattr_get_map.failures=0) (store_io_retry=0) (committer_commits_reverted=0) (store_io_request=163) (op_access.failures=0) (object_continue_list_request=0) (stream_read_vectored_incoming_ranges=30) (op_xattr_get_map=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (object_put_request.failures=0) (store_io_throttled=0) (multipart_upload_completed=0) (object_put_request_completed=28) (stream_write_queue_duration.failures=0) (fake_directories_deleted=14));
gauges=((stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=14) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((op_list_files.min=-1) (action_http_get_request.failures.min=-1) (op_list_status.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.min=-1) (op_createfile.min=-1) (object_put_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.min=-1) (op_list_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.failures.min=-1) (op_abort.failures.min=-1) (op_delete.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.min=-1) (action_file_opened.min=6) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.min=-1) (object_delete_request.failures.min=-1) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_aborted.min=-1) (op_mkdirs.min=27) (op_get_delegation_token.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.min=3) (object_multipart_initiated.min=-1) (op_mkdirs.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_file_checksum.min=-1) (object_delete_request.min=-1) (op_create.min=9) (op_delete.min=27) (op_create.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.failures.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (object_list_request.min=5) (object_continue_list_request.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.min=40) (op_glob_status.min=-1) (op_access.min=-1) (stream_read_remote_stream_drain.min=0) (op_xattr_get_named.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_get_request.min=11) (object_bulk_delete_request.min=7) (action_executor_acquired.failures.min=-1) (op_is_file.min=-1) (op_createfile.failures.min=-1) (op_glob_status.failures.min=-1) (committer_commit_job.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (op_xattr_list.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=5));
maximums=((op_glob_status.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.max=27) (action_http_head_request.max=26) (object_delete_request.max=-1) (action_executor_acquired.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_put_request.failures.max=-1) (op_delete.max=112) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=50) (object_multipart_initiated.failures.max=-1) (op_access.max=-1) (op_create.max=53) (object_list_request.max=233) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_delete.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.max=5) (committer_load_single_pending_file.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_is_file.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (action_file_opened.max=26) (op_get_delegation_token.max=-1) (stream_write_queue_duration.max=-1) (object_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_put_request.max=101) (op_exists.max=-1) (op_is_directory.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_magic_marker_put.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.max=-1) (op_is_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_continue_list_request.max=-1) (op_access.failures.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.max=372) (op_rename.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.max=-1) (op_list_status.failures.max=-1) (op_list_files.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=11, sum=96, mean=8.7273)) (stream_read_remote_stream_drain.mean=(samples=2, sum=4, mean=2.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=28, sum=414, mean=14.7857)) (op_mkdirs.mean=(samples=14, sum=924, mean=66.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=14, sum=233, mean=16.6429)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=14, sum=800, mean=57.1429)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=56, sum=819, mean=14.6250)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=39, sum=261, mean=6.6923)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=28, sum=1106, mean=39.5000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=255, mean=21.2500)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:08,460 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:08,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,461 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,461 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=121&ts=1731778688460
2024-11-16 17:38:08,466 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:08,467 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,467 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,467 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,467 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,467 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=121&ts=1731778688460
2024-11-16 17:38:08,470 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,470 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:08,470 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:08,470 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:08,470 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000074&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=121&ts=1731778688460
2024-11-16 17:38:08,484 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:08,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:08,485 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.015s
2024-11-16 17:38:08,485 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:08,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,485 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,486 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,486 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000075 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000075&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=121&ts=1731778688485
2024-11-16 17:38:08,494 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:08,494 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,494 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:08,494 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2232327008233593148.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:08,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2232327008233593148.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (op_abort.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (op_hsync=0) (object_put_request=0) (op_hflush=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2232327008233593148.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,495 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:08,495 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2232327008233593148.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:08,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:08,496 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:08,496 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:08,496 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:08,496 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000075 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000075&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=122&ts=1731778688485
2024-11-16 17:38:08,531 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:08,531 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:08,531 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:38:08,532 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2232327008233593148.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:08,532 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2232327008233593148.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,532 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2232327008233593148.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,532 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:08,532 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,533 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (object_put_request=1) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (object_multipart_aborted=0) (op_abort=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_block_uploads=1) (op_hflush=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=35) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=35) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((object_put_request.mean=(samples=1, sum=35, mean=35.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:08,534 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:08,535 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,535 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,535 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:08,535 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000076 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000076&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=121&ts=1731778688535
2024-11-16 17:38:08,538 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:08,539 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:08,539 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,539 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:38:08,539 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:08,539 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:38:08,541 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:38:08,542 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,542 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,542 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:08,543 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000076 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=10-1199&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000076&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=123&ts=1731778688535
2024-11-16 17:38:08,560 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:38:08,561 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:38:08,562 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:38:08,562 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:38:08,562 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,564 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_block_read=0) (stream_read_total_bytes=315) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_vectored_incoming_ranges=4) (stream_read_fully_operations=0) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=315) (action_file_opened=1) (stream_read_remote_stream_drain=0) (action_http_get_request=1) (stream_read_seek_operations=0) (stream_read_closed=0) (stream_read_version_mismatches=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=4) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=19));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=19) (action_file_opened.max=4) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1));
means=((action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=19, mean=19.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:08,566 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:08,567 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,567 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,568 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=121&ts=1731778688566
2024-11-16 17:38:08,572 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,572 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,573 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=121&ts=1731778688566
2024-11-16 17:38:08,582 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:08,583 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:08,583 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:08,584 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:08,584 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:08,584 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:08,585 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:08,585 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:08,586 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:08,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:08,586 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:08,586 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:08,587 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:08,587 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:08,587 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,587 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [124] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=124&ts=1731778688566
2024-11-16 17:38:08,600 [s3a-transfer-leg-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:08,601 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.014s
2024-11-16 17:38:08,601 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:08,601 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:08,601 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:08,601 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778688523; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:08,601 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:08,601 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:08,601 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:08,602 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:08,602 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,603 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=125&ts=1731778688566
2024-11-16 17:38:08,630 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.026s
2024-11-16 17:38:08,630 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.027s
2024-11-16 17:38:08,630 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.027s
2024-11-16 17:38:08,631 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:08,631 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:08,631 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,631 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,631 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:08,631 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,631 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000077&t0=121&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=125&ts=1731778688566
2024-11-16 17:38:08,646 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:38:08,646 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:38:08,646 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:38:08,646 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.043s
2024-11-16 17:38:08,646 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.044s
2024-11-16 17:38:08,647 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.061s
2024-11-16 17:38:08,647 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:08,647 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:08,650 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:08,670 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 18, active threads = 0, queued tasks = 0, completed tasks = 18], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_part_put_bytes=0) (object_put_bytes=983040) (store_io_throttled=0) (op_hflush=0) (op_open=12) (audit_request_execution=175) (committer_commits.failures=0) (op_delete=15) (committer_commit_job.failures=0) (committer_load_single_pending_file=0) (op_list_files.failures=0) (op_get_file_status.failures=0) (op_mkdirs.failures=0) (audit_span_creation=59) (op_hsync=0) (op_get_file_status=1) (committer_jobs_completed=0) (committer_materialize_file=0) (object_delete_objects=30) (op_glob_status.failures=0) (fake_directories_created=0) (committer_magic_marker_put.failures=0) (action_file_opened.failures=0) (committer_tasks_completed=0) (files_created=15) (ignored_errors=0) (op_get_file_checksum.failures=0) (op_rename.failures=0) (object_delete_request=0) (op_list_status=0) (object_multipart_initiated=0) (op_is_file=0) (stream_read_operations=2) (stream_read_seek_backward_operations=0) (committer_tasks_failed=0) (object_multipart_aborted=0) (delegation_tokens_issued.failures=0) (op_openfile=0) (delegation_tokens_issued=0) (stream_write_bytes=983040) (op_glob_status=0) (action_http_head_request=42) (op_exists.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_get_file_checksum=0) (stream_read_bytes=4039) (op_mkdirs=15) (store_exists_probe.failures=0) (op_xattr_get_named=0) (stream_write_block_uploads=15) (multipart_upload_part_put=0) (stream_write_queue_duration.failures=0) (stream_write_block_uploads_aborted=0) (op_create_non_recursive=0) (object_copy_requests=0) (op_abort.failures=0) (multipart_upload_list=0) (stream_read_bytes_discarded_in_abort=0) (files_delete_rejected=0) (fake_directories_deleted=15) (object_continue_list_request=0) (op_list_located_status=0) (op_get_content_summary.failures=0) (op_copy_from_local_file=0) (op_list_status.failures=0) (committer_commit_job=0) (op_createfile.failures=0) (stream_read_version_mismatches=0) (committer_bytes_committed=0) (op_is_file.failures=0) (op_rename=0) (store_io_retry=0) (object_bulk_delete_request.failures=0) (committer_commits_reverted=0) (object_delete_request.failures=0) (stream_read_seek_operations=0) (stream_read_close_operations=12) (op_create=15) (op_xattr_list=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=1) (op_get_delegation_token=0) (op_access.failures=0) (op_xattr_get_named_map.failures=0) (op_xattr_get_named_map=0) (files_copied_bytes=0) (op_get_content_summary=0) (stream_read_vectored_incoming_ranges=34) (action_executor_acquired.failures=0) (multipart_upload_list.failures=0) (object_multipart_initiated.failures=0) (stream_read_closed=2) (multipart_upload_completed=0) (op_xattr_get_map=0) (committer_commits_aborted=0) (object_list_request=60) (op_exists=0) (stream_read_vectored_read_bytes_discarded=10860) (store_exists_probe=0) (stream_write_queue_duration=0) (stream_read_remote_stream_drain.failures=0) (action_http_head_request.failures=0) (op_create.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_discarded_in_close=130672) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (object_bulk_delete_request=30) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=13) (object_put_request.failures=0) (op_abort=0) (stream_read_seek_forward_operations=0) (object_put_request_completed=30) (files_copied=0) (audit_access_check_failure=0) (action_http_get_request=13) (object_select_requests=0) (stream_read_operations_incomplete=0) (action_file_opened=12) (files_deleted=15) (object_put_request=30) (stream_read_seek_policy_changed=13) (directories_deleted=0) (stream_aborted=0) (committer_bytes_uploaded=0) (committer_magic_files_created=0) (op_list_files=0) (audit_failure=0) (committer_stage_file_upload=0) (committer_commits_completed=0) (object_multipart_aborted.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_total_time=0) (stream_read_exceptions=0) (stream_read_opened=2) (stream_write_block_uploads_committed=0) (stream_read_total_bytes=134711) (op_access=0) (stream_read_vectored_operations=10) (store_io_request=175) (stream_read_seek_bytes_discarded=0) (op_is_directory.failures=0) (multipart_upload_aborted=0) (committer_commits_created=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_read_remote_stream_drain=2) (op_createfile=0) (multipart_instantiated=0) (committer_jobs_failed=0) (multipart_upload_started=0) (object_continue_list_request.failures=0) (op_xattr_list.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_metadata_request=42) (op_get_delegation_token.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=1966080) (op_xattr_get_map.failures=0) (stream_read_fully_operations=0) (object_list_request.failures=0) (committer_stage_file_upload.failures=0) (action_http_get_request.failures=0) (op_delete.failures=0) (stream_read_remote_stream_aborted=0) (op_is_directory=0) (directories_created=15) (op_xattr_get_named.failures=0));
gauges=((object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=15) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((delegation_tokens_issued.min=-1) (op_exists.failures.min=-1) (op_glob_status.failures.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.failures.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (object_continue_list_request.min=-1) (op_access.min=-1) (action_http_get_request.failures.min=-1) (op_abort.min=-1) (op_access.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.min=-1) (action_executor_acquired.min=-1) (op_list_status.failures.min=-1) (object_list_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.failures.min=-1) (object_delete_request.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.min=-1) (op_create.failures.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.min=-1) (op_abort.failures.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.failures.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.min=3) (op_get_file_checksum.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.min=7) (action_file_opened.min=4) (committer_commit_job.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=27) (op_exists.min=-1) (op_delete.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_status.min=5) (op_xattr_list.failures.min=-1) (op_mkdirs.min=25) (action_http_get_request.min=19) (op_is_directory.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=35) (op_xattr_get_map.min=-1) (op_createfile.failures.min=-1) (op_glob_status.min=-1) (object_list_request.min=5) (op_rename.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_create.min=9) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_status.min=-1));
maximums=((op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (op_access.max=-1) (op_rename.failures.max=-1) (action_http_head_request.max=26) (op_xattr_get_map.max=-1) (op_xattr_list.max=-1) (action_http_get_request.max=50) (op_get_file_checksum.failures.max=-1) (store_exists_probe.failures.max=-1) (op_abort.failures.max=-1) (op_rename.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_exists.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=27) (committer_load_single_pending_file.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_content_summary.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.failures.max=-1) (action_executor_acquired.max=-1) (op_glob_status.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.max=-1) (action_file_opened.failures.max=-1) (op_delete.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_is_directory.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_named.failures.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_delegation_token.max=-1) (op_createfile.max=-1) (op_exists.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_list_request.failures.max=-1) (object_list_request.max=233) (object_put_request.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (committer_stage_file_upload.failures.max=-1) (op_create.max=53) (op_abort.max=-1) (delegation_tokens_issued.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_delete.max=112) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.failures.max=-1) (op_mkdirs.max=372) (op_list_files.max=-1) (action_file_opened.max=26) (op_list_status.failures.max=-1) (object_put_request.max=101) (op_get_file_status.max=5) (op_list_status.max=-1) (op_access.failures.max=-1) (committer_materialize_file.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=30, sum=455, mean=15.1667)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=60, sum=853, mean=14.2167)) (op_delete.mean=(samples=15, sum=863, mean=57.5333)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=42, sum=272, mean=6.4762)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=4, mean=2.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=30, sum=1155, mean=38.5000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=15, sum=949, mean=63.2667)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=13, sum=274, mean=21.0769)) (action_file_opened.mean=(samples=12, sum=100, mean=8.3333)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=15, sum=242, mean=16.1333)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:08,670 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:08,671 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,671 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,671 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,671 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,671 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=126&ts=1731778688670
2024-11-16 17:38:08,677 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:08,678 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,678 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,678 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,678 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,678 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=126&ts=1731778688670
2024-11-16 17:38:08,683 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,683 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:08,683 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:08,683 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:08,684 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000078&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=126&ts=1731778688670
2024-11-16 17:38:08,718 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:08,718 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:08,718 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.035s
2024-11-16 17:38:08,718 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:08,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,719 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,719 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,719 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000079 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000079&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=126&ts=1731778688719
2024-11-16 17:38:08,729 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:08,729 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,729 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:08,730 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12454508932158714761.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:08,731 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12454508932158714761.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (op_hsync=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_put_request.failures=0) (op_hflush=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12454508932158714761.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,731 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,731 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:08,731 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12454508932158714761.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:08,732 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:08,732 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:08,732 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:08,733 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:08,733 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000079 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000079&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=127&ts=1731778688719
2024-11-16 17:38:08,772 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:08,772 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:08,772 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.040s
2024-11-16 17:38:08,773 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12454508932158714761.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:08,773 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12454508932158714761.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,773 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12454508932158714761.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,773 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:08,774 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,775 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (stream_write_block_uploads=1) (object_put_request=1) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (op_abort=0) (object_multipart_initiated=0) (op_hsync=0) (stream_write_total_time=0) (stream_write_total_data=65536) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (op_hflush=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=39) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=39) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=39, mean=39.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:08,776 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:08,777 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,777 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,777 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:08,777 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000080 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000080&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=126&ts=1731778688777
2024-11-16 17:38:08,783 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:08,784 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:08,784 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,784 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:38:08,784 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:08,784 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:38:08,790 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:38:08,790 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,791 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:08,791 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:08,791 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000080 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-7998&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000080&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=128&ts=1731778688777
2024-11-16 17:38:08,806 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:38:08,807 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:38:08,807 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:38:08,807 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:08,808 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=1) (action_file_opened.failures=0) (stream_read_vectored_read_bytes_discarded=7699) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_closed=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (action_http_get_request=1) (stream_read_seek_backward_operations=0) (stream_read_opened=0) (stream_read_total_bytes=300) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (stream_read_bytes=300) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=3) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_read.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=16) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=7) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_file_opened.max=7) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=16) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=16, mean=16.0000)));

2024-11-16 17:38:08,811 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:08,811 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,811 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,811 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=126&ts=1731778688810
2024-11-16 17:38:08,816 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,817 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,817 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=126&ts=1731778688810
2024-11-16 17:38:08,836 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:38:08,837 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:08,837 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:08,837 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:08,841 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:08,841 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:08,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:08,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:08,842 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:08,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:08,842 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:08,842 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:08,845 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:08,846 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:08,846 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,846 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [129] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=129&ts=1731778688810
2024-11-16 17:38:08,854 [s3a-transfer-leg-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:08,855 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:38:08,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:08,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:08,855 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:08,856 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778688762; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:08,856 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:08,856 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:08,856 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:08,856 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:08,856 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:08,856 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:08,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:08,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:08,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:08,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,857 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=130&ts=1731778688810
2024-11-16 17:38:08,869 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:08,869 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:08,869 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:38:08,870 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:08,870 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:08,870 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:08,870 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:08,870 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:08,870 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:08,870 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000081&t0=126&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=130&ts=1731778688810
2024-11-16 17:38:08,883 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:08,883 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:08,883 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:38:08,883 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:38:08,883 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:38:08,884 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:38:08,884 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:08,884 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:08,890 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:08,911 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 19, active threads = 0, queued tasks = 0, completed tasks = 19], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_combined_ranges=14) (action_executor_acquired=0) (multipart_upload_started=0) (store_io_retry=0) (op_list_status.failures=0) (committer_load_single_pending_file.failures=0) (op_xattr_list=0) (stream_write_exceptions=0) (files_deleted=16) (op_create=16) (object_bulk_delete_request.failures=0) (stream_read_vectored_operations=11) (fake_directories_deleted=16) (committer_commits_reverted=0) (store_io_throttled=0) (stream_read_total_bytes=135011) (object_continue_list_request.failures=0) (multipart_upload_part_put_bytes=0) (files_copied=0) (object_multipart_aborted=0) (op_get_content_summary.failures=0) (op_xattr_list.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_vectored_read_bytes_discarded=18559) (stream_read_seek_backward_operations=0) (stream_read_close_operations=13) (stream_read_bytes_backwards_on_seek=0) (action_http_head_request.failures=0) (object_continue_list_request=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads_committed=0) (op_copy_from_local_file=0) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_drain=2) (multipart_upload_completed=0) (op_xattr_get_map=0) (ignored_errors=0) (object_list_request=64) (stream_read_version_mismatches=0) (op_openfile=0) (object_put_request_completed=32) (op_get_file_checksum.failures=0) (op_delete.failures=0) (op_createfile=0) (object_list_request.failures=0) (committer_magic_marker_put=0) (action_http_get_request.failures=0) (audit_failure=0) (action_file_opened.failures=0) (op_mkdirs.failures=0) (stream_write_queue_duration.failures=0) (committer_materialize_file=0) (stream_read_remote_stream_aborted.failures=0) (directories_created=16) (op_list_located_status=0) (stream_write_bytes=1048576) (object_select_requests=0) (object_copy_requests=0) (stream_read_seek_operations=0) (op_abort.failures=0) (op_is_file.failures=0) (op_open=13) (committer_stage_file_upload.failures=0) (op_exists=0) (object_delete_objects=32) (op_list_files=0) (audit_access_check_failure=0) (op_get_content_summary=0) (op_rename=0) (object_put_bytes=1048576) (committer_tasks_completed=0) (committer_commits_created=0) (object_multipart_aborted.failures=0) (store_exists_probe.failures=0) (committer_jobs_failed=0) (delegation_tokens_issued=0) (multipart_instantiated=0) (committer_stage_file_upload=0) (committer_commit_job.failures=0) (stream_read_vectored_incoming_ranges=37) (stream_read_unbuffered=1) (op_rename.failures=0) (op_createfile.failures=0) (object_metadata_request=45) (op_xattr_get_named_map.failures=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (files_delete_rejected=0) (stream_write_queue_duration=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named=0) (object_bulk_delete_request=32) (committer_commits_aborted=0) (op_hflush=0) (stream_read_operations=2) (op_is_file=0) (audit_request_execution=187) (op_hsync=0) (committer_commits_completed=0) (object_put_request.failures=0) (committer_jobs_completed=0) (stream_read_remote_stream_drain.failures=0) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (action_http_get_request=14) (audit_span_creation=63) (op_access.failures=0) (multipart_upload_abort_under_path_invoked=0) (action_executor_acquired.failures=0) (object_put_request=32) (op_is_directory=0) (op_xattr_get_map.failures=0) (op_get_delegation_token.failures=0) (stream_read_fully_operations=0) (op_mkdirs=16) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (op_get_file_checksum=0) (object_delete_request.failures=0) (multipart_upload_part_put=0) (committer_bytes_committed=0) (op_xattr_get_named.failures=0) (op_abort=0) (op_xattr_get_named_map=0) (multipart_upload_list.failures=0) (action_file_opened=13) (stream_aborted=0) (object_delete_request=0) (committer_materialize_file.failures=0) (stream_read_opened=2) (stream_write_total_time=0) (multipart_upload_list=0) (committer_commits.failures=0) (fake_directories_created=0) (stream_read_bytes=4339) (op_get_file_status=1) (op_exists.failures=0) (committer_bytes_uploaded=0) (action_http_head_request=45) (store_io_request=187) (op_create.failures=0) (op_get_delegation_token=0) (committer_commit_job=0) (stream_read_closed=2) (op_list_files.failures=0) (object_multipart_initiated=0) (op_access=0) (directories_deleted=0) (multipart_upload_aborted=0) (stream_write_total_data=2097152) (stream_read_bytes_discarded_in_close=130672) (op_glob_status=0) (store_exists_probe=0) (op_delete=16) (stream_read_seek_bytes_skipped=0) (op_is_directory.failures=0) (committer_tasks_failed=0) (committer_magic_files_created=0) (files_copied_bytes=0) (op_list_status=0) (committer_load_single_pending_file=0) (stream_read_seek_policy_changed=14) (op_create_non_recursive=0) (stream_write_block_uploads=16) (stream_read_operations_incomplete=0) (files_created=16) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_glob_status.failures=0));
gauges=((object_put_request_active=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=16) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((op_xattr_get_named.min=-1) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (action_http_head_request.min=3) (op_is_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.min=27) (stream_read_remote_stream_drain.min=0) (op_createfile.min=-1) (op_get_delegation_token.min=-1) (op_createfile.failures.min=-1) (op_abort.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_rename.failures.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_http_get_request.min=16) (stream_read_remote_stream_drain.failures.min=-1) (op_create.min=9) (committer_materialize_file.failures.min=-1) (op_exists.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.min=-1) (action_file_opened.min=7) (op_is_file.min=-1) (store_exists_probe.failures.min=-1) (op_access.failures.min=-1) (object_list_request.failures.min=-1) (op_create.failures.min=-1) (op_list_status.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.min=5) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.min=-1) (op_is_directory.failures.min=-1) (op_list_files.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (object_bulk_delete_request.min=7) (object_delete_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.min=-1) (object_put_request.min=39) (op_mkdirs.failures.min=-1) (op_list_files.failures.min=-1) (op_access.min=-1) (op_mkdirs.min=25) (op_xattr_get_map.min=-1) (op_rename.min=-1) (op_delete.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=5) (object_continue_list_request.min=-1) (action_file_opened.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((action_http_get_request.max=50) (store_exists_probe.max=-1) (op_glob_status.max=-1) (op_abort.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_materialize_file.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.max=4) (op_abort.max=-1) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_bulk_delete_request.max=27) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_exists.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (op_exists.max=-1) (op_rename.failures.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.failures.max=-1) (op_createfile.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.failures.max=-1) (object_put_request.failures.max=-1) (op_get_file_checksum.max=-1) (action_http_head_request.max=26) (action_http_head_request.failures.max=-1) (op_create.failures.max=-1) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_status.max=5) (op_is_directory.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.max=-1) (op_create.max=53) (op_delete.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.failures.max=-1) (op_rename.max=-1) (action_file_opened.max=26) (delegation_tokens_issued.failures.max=-1) (object_multipart_initiated.max=-1) (object_delete_request.max=-1) (op_copy_from_local_file.failures.max=-1) (op_mkdirs.max=372) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.max=-1) (op_access.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (object_list_request.max=233) (op_is_file.max=-1) (object_put_request.max=101) (stream_read_remote_stream_aborted.failures.max=-1) (op_delete.max=112) (delegation_tokens_issued.max=-1) (op_list_status.failures.max=-1) (object_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1));
means=((op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=14, sum=290, mean=20.7143)) (op_mkdirs.mean=(samples=16, sum=997, mean=62.3125)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=4, mean=2.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=16, sum=253, mean=15.8125)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=32, sum=1229, mean=38.4063)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=16, sum=906, mean=56.6250)) (object_bulk_delete_request.mean=(samples=32, sum=480, mean=15.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=64, sum=896, mean=14.0000)) (action_http_head_request.mean=(samples=45, sum=288, mean=6.4000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=13, sum=107, mean=8.2308)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:08,913 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:08,913 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,914 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,914 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,916 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,916 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=131&ts=1731778688912
2024-11-16 17:38:08,932 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:38:08,932 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,932 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:08,933 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:08,933 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:08,933 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=131&ts=1731778688912
2024-11-16 17:38:08,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:08,939 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:08,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:08,939 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:08,939 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000082&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=131&ts=1731778688912
2024-11-16 17:38:08,959 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:08,959 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:08,960 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:38:08,960 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:08,960 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:08,960 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,960 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:08,960 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:08,960 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000083 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000083&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=131&ts=1731778688960
2024-11-16 17:38:08,966 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:08,966 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:08,966 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:08,967 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17333989518331205280.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:08,968 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17333989518331205280.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (op_abort=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (object_put_request=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (op_hsync=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17333989518331205280.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:08,968 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:08,968 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:08,968 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17333989518331205280.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:08,969 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:08,969 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:08,970 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:08,970 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:08,970 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000083 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000083&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=132&ts=1731778688960
2024-11-16 17:38:09,012 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:09,012 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:09,012 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:38:09,013 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17333989518331205280.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:09,013 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17333989518331205280.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,013 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17333989518331205280.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,013 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:09,015 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (object_put_request=1) (op_abort.failures=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_total_time=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_initiated=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=42) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=42) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:09,016 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:09,017 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,017 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,017 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:09,017 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=131&ts=1731778689017
2024-11-16 17:38:09,021 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:09,021 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:09,021 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,024 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:09,024 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:09,024 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:38:09,024 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,024 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,025 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:09,025 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=133&ts=1731778689017
2024-11-16 17:38:09,025 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,025 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:09,025 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,025 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:09,026 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-14435&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=134&ts=1731778689017
2024-11-16 17:38:09,026 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,026 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,026 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:09,026 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000084&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=135&ts=1731778689017
2024-11-16 17:38:09,046 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:38:09,046 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,046 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:38:09,048 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:38:09,060 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:38:09,060 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:38:09,060 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,061 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,062 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=1) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_bytes=1424) (stream_read_close_operations=1) (stream_read_fully_operations=0) (action_http_get_request=3) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_vectored_operations=1) (action_http_get_request.failures=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_block_read=0) (action_executor_acquired.failures=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=5) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=3) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=1424) (stream_read_closed=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_http_get_request.min=21) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=4) (stream_read_prefetch_operations.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=4) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=22) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=65, mean=21.6667)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:09,066 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:09,066 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,066 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,066 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=131&ts=1731778689066
2024-11-16 17:38:09,072 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,072 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,072 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=131&ts=1731778689066
2024-11-16 17:38:09,079 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:09,079 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:09,079 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:09,079 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:09,079 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:09,080 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:09,080 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:09,080 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:09,080 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:09,080 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:09,080 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:09,080 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:09,080 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:09,080 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:09,080 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,081 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=142&ts=1731778689066
2024-11-16 17:38:09,086 [s3a-transfer-leg-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:09,086 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:38:09,087 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:09,087 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:09,087 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:09,087 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778689007; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:09,087 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:09,087 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:09,088 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:09,089 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:09,090 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:09,090 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:09,090 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:09,090 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:09,090 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,090 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,090 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:09,091 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,091 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=143&ts=1731778689066
2024-11-16 17:38:09,107 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:38:09,108 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:38:09,108 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:38:09,108 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:09,108 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:09,108 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,108 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,108 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:09,109 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,113 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000085&t0=131&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=143&ts=1731778689066
2024-11-16 17:38:09,136 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.027s
2024-11-16 17:38:09,137 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.029s
2024-11-16 17:38:09,137 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.029s
2024-11-16 17:38:09,137 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.047s
2024-11-16 17:38:09,137 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.047s
2024-11-16 17:38:09,137 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.057s
2024-11-16 17:38:09,137 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:09,137 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:09,142 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:09,157 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 20, active threads = 0, queued tasks = 0, completed tasks = 20], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_executor_acquired.failures=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (action_file_opened=14) (object_delete_request.failures=0) (op_createfile=0) (op_xattr_get_named_map.failures=0) (committer_commits_reverted=0) (committer_commit_job=0) (op_xattr_list=0) (audit_failure=0) (committer_materialize_file.failures=0) (multipart_upload_aborted=0) (object_delete_request=0) (op_hsync=0) (stream_read_seek_policy_changed=15) (stream_write_exceptions_completing_upload=0) (op_create_non_recursive=0) (stream_read_bytes_discarded_in_abort=0) (committer_magic_files_created=0) (object_list_request=68) (action_http_get_request.failures=0) (object_multipart_initiated.failures=0) (op_xattr_get_named_map=0) (op_glob_status=0) (stream_read_seek_backward_operations=0) (object_multipart_initiated=0) (stream_write_total_time=0) (delegation_tokens_issued.failures=0) (op_mkdirs.failures=0) (files_created=17) (audit_request_execution=201) (committer_bytes_committed=0) (committer_jobs_completed=0) (stream_read_seek_forward_operations=0) (object_put_request=34) (op_is_directory.failures=0) (action_http_head_request.failures=0) (op_abort=0) (op_copy_from_local_file=0) (committer_tasks_failed=0) (fake_directories_deleted=17) (op_rename=0) (stream_write_block_uploads=17) (op_get_file_checksum=0) (stream_read_vectored_incoming_ranges=42) (op_open=14) (store_io_retry=0) (object_continue_list_request.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (committer_materialize_file=0) (op_list_status=0) (stream_aborted=0) (stream_read_total_bytes=136435) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=2) (store_io_request=201) (op_list_status.failures=0) (committer_jobs_failed=0) (op_glob_status.failures=0) (stream_read_closed=2) (action_http_get_request=17) (stream_write_block_uploads_committed=0) (stream_read_bytes_discarded_in_close=130672) (committer_commits_created=0) (op_is_file.failures=0) (stream_read_operations_incomplete=0) (store_exists_probe.failures=0) (files_delete_rejected=0) (op_delete.failures=0) (stream_read_bytes=5763) (op_xattr_get_map.failures=0) (stream_read_operations=2) (action_http_head_request=48) (committer_load_single_pending_file=0) (ignored_errors=0) (stream_read_close_operations=14) (stream_read_seek_bytes_discarded=0) (files_copied_bytes=0) (committer_stage_file_upload.failures=0) (stream_read_unbuffered=1) (audit_access_check_failure=0) (op_openfile=0) (op_xattr_get_named=0) (directories_deleted=0) (multipart_instantiated=0) (object_delete_objects=34) (op_get_content_summary=0) (committer_commits_aborted=0) (op_delete=17) (stream_read_remote_stream_drain.failures=0) (multipart_upload_started=0) (stream_read_opened=2) (op_access.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (stream_write_queue_duration.failures=0) (object_metadata_request=48) (op_list_files=0) (stream_write_total_data=2228224) (audit_span_creation=67) (store_io_throttled=0) (op_list_located_status=0) (op_abort.failures=0) (object_list_request.failures=0) (op_get_delegation_token.failures=0) (committer_magic_marker_put.failures=0) (stream_read_fully_operations=0) (op_get_file_status.failures=0) (op_hflush=0) (object_put_request_completed=34) (stream_read_vectored_read_bytes_discarded=24503) (committer_tasks_completed=0) (op_get_file_checksum.failures=0) (op_exists=0) (stream_read_vectored_operations=12) (op_mkdirs=17) (committer_commit_job.failures=0) (files_copied=0) (object_bulk_delete_request=34) (op_get_delegation_token=0) (store_exists_probe=0) (stream_read_exceptions=0) (op_create=17) (multipart_upload_abort_under_path_invoked=0) (stream_write_bytes=1114112) (op_list_files.failures=0) (multipart_upload_list.failures=0) (object_select_requests=0) (stream_write_exceptions=0) (op_createfile.failures=0) (op_xattr_get_named.failures=0) (op_is_directory=0) (op_exists.failures=0) (op_xattr_list.failures=0) (op_copy_from_local_file.failures=0) (object_multipart_aborted.failures=0) (committer_commits_completed=0) (stream_read_vectored_combined_ranges=17) (files_deleted=17) (op_get_file_status=1) (op_xattr_get_map=0) (object_copy_requests=0) (directories_created=17) (stream_write_queue_duration=0) (committer_load_single_pending_file.failures=0) (op_access=0) (committer_stage_file_upload=0) (multipart_upload_completed=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (op_create.failures=0) (fake_directories_created=0) (op_get_content_summary.failures=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (multipart_upload_list=0) (committer_commits.failures=0) (op_rename.failures=0) (multipart_upload_part_put_bytes=0) (delegation_tokens_issued=0) (action_file_opened.failures=0) (committer_bytes_uploaded=0) (object_put_bytes=1114112) (op_is_file=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=17) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0));
minimums=((object_multipart_initiated.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (object_list_request.min=5) (op_xattr_get_map.min=-1) (op_abort.min=-1) (op_rename.failures.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=21) (op_glob_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (object_list_request.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.min=-1) (op_glob_status.min=-1) (op_is_file.failures.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_list.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=7) (op_delete.failures.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.min=-1) (op_get_content_summary.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.min=27) (committer_stage_file_upload.min=-1) (object_delete_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_map.failures.min=-1) (op_exists.failures.min=-1) (op_create.min=7) (committer_commit_job.min=-1) (op_access.min=-1) (committer_materialize_file.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (committer_magic_marker_put.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_status.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_status.min=5) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (op_mkdirs.min=25) (object_continue_list_request.failures.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_create.failures.min=-1) (action_http_head_request.min=3) (object_put_request.min=42) (op_rename.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.min=-1) (op_mkdirs.failures.min=-1) (op_get_delegation_token.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.min=-1));
maximums=((op_list_status.max=-1) (multipart_upload_list.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_file_opened.max=26) (action_http_get_request.failures.max=-1) (action_http_get_request.max=50) (op_mkdirs.max=372) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.max=5) (object_multipart_aborted.failures.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_file.max=-1) (delegation_tokens_issued.max=-1) (op_rename.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (object_put_request.failures.max=-1) (op_delete.max=112) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=101) (stream_write_queue_duration.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_content_summary.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.max=233) (object_multipart_initiated.max=-1) (op_glob_status.failures.max=-1) (action_http_head_request.max=26) (op_rename.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1) (op_create.max=53) (op_xattr_list.max=-1) (op_delete.failures.max=-1) (op_exists.max=-1) (store_exists_probe.max=-1) (action_file_opened.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_status.failures.max=-1) (op_access.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_checksum.max=-1) (op_exists.failures.max=-1) (object_delete_request.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_delegation_token.max=-1) (object_bulk_delete_request.max=27) (committer_materialize_file.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_content_summary.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_access.failures.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (op_is_directory.failures.max=-1) (object_continue_list_request.max=-1) (op_create.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named.max=-1));
means=((object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=17, sum=355, mean=20.8824)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=68, sum=931, mean=13.6912)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=48, sum=302, mean=6.2917)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=17, sum=963, mean=56.6471)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=17, sum=1044, mean=61.4118)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=17, sum=260, mean=15.2941)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=34, sum=1291, mean=37.9706)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=34, sum=519, mean=15.2647)) (stream_read_remote_stream_drain.mean=(samples=2, sum=4, mean=2.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=14, sum=111, mean=7.9286)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:09,158 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:09,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,159 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,159 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689158
2024-11-16 17:38:09,165 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:09,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,166 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689158
2024-11-16 17:38:09,172 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,172 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:09,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:09,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:09,173 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000086&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689158
2024-11-16 17:38:09,187 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:09,188 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:09,188 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:38:09,188 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:09,189 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,189 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,189 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,189 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,189 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000087 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000087&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689188
2024-11-16 17:38:09,198 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:09,199 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,199 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:09,199 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17845547518095657760.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:09,200 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17845547518095657760.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (object_multipart_initiated=0) (action_executor_acquired=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (op_abort=0) (op_abort.failures=0) (object_put_request.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17845547518095657760.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,201 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,201 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:09,201 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17845547518095657760.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:09,201 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:09,202 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:09,202 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:09,202 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:09,202 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000087 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000087&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=145&ts=1731778689188
2024-11-16 17:38:09,263 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:09,268 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:09,268 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.066s
2024-11-16 17:38:09,268 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17845547518095657760.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:09,268 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17845547518095657760.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,268 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17845547518095657760.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,269 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:09,269 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,270 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (object_put_request=1) (stream_write_exceptions=0) (op_hflush=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (stream_write_total_data=65536) (op_hsync=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=61) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=61) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=61, mean=61.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:09,271 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:09,272 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,272 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,272 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:09,273 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689272
2024-11-16 17:38:09,277 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:09,277 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:09,277 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,277 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:38:09,278 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:38:09,278 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:38:09,278 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:09,278 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:38:09,278 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,278 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,279 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:38:09,279 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-199&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=147&ts=1731778689272
2024-11-16 17:38:09,278 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,279 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-65535&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000088&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689272
2024-11-16 17:38:09,315 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.037s
2024-11-16 17:38:09,315 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:09,315 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:09,316 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.037s
2024-11-16 17:38:09,317 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7535 bytes
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:09,318 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8649 bytes
2024-11-16 17:38:09,319 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:38:09,319 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:09,319 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read=0) (stream_read_opened=1) (action_executor_acquired=0) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=1) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=200) (stream_read_closed=1) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=2) (stream_read_seek_operations=0) (stream_read_total_bytes=65536) (stream_read_vectored_incoming_ranges=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_fully_operations=1) (stream_read_vectored_operations=1) (action_http_get_request.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_remote_stream_drain=1) (stream_read_prefetch_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (action_file_opened=1) (stream_read_seek_backward_operations=0) (stream_read_block_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=36) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.min=1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=37) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=5) (action_http_get_request.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=73, mean=36.5000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:09,321 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:09,321 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,321 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,321 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689321
2024-11-16 17:38:09,326 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,327 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,327 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=144&ts=1731778689321
2024-11-16 17:38:09,333 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:09,333 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:09,333 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:09,333 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:09,333 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:09,334 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:09,334 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:09,334 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:09,334 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:09,334 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:09,334 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:09,334 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:09,334 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:09,334 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:09,335 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,335 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=149&ts=1731778689321
2024-11-16 17:38:09,349 [s3a-transfer-leg-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:38:09,349 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.015s
2024-11-16 17:38:09,349 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:09,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:09,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:09,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778689255; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:09,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:09,350 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:09,350 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:09,351 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:09,351 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:09,351 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:09,351 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:09,352 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:09,352 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,352 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,352 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:09,352 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,352 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=150&ts=1731778689321
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,364 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000089&t0=144&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=150&ts=1731778689321
2024-11-16 17:38:09,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:09,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:09,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:38:09,376 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:38:09,376 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:38:09,376 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:38:09,377 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:09,377 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:09,379 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:09,392 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 21, active threads = 0, queued tasks = 0, completed tasks = 21], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_seek_backward_operations=0) (stream_write_queue_duration.failures=0) (stream_write_exceptions=0) (fake_directories_created=0) (op_access=0) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_drain=3) (files_copied=0) (stream_read_vectored_combined_ranges=18) (committer_materialize_file.failures=0) (op_get_file_status.failures=0) (object_bulk_delete_request.failures=0) (stream_read_bytes_discarded_in_close=196008) (object_multipart_initiated=0) (action_http_get_request=19) (object_select_requests=0) (op_abort.failures=0) (action_executor_acquired=0) (delegation_tokens_issued.failures=0) (multipart_upload_part_put_bytes=0) (directories_deleted=0) (object_multipart_aborted=0) (object_continue_list_request=0) (stream_aborted=0) (committer_tasks_completed=0) (action_executor_acquired.failures=0) (op_list_status=0) (op_list_status.failures=0) (op_xattr_get_named=0) (files_copied_bytes=0) (op_open=15) (stream_read_fully_operations=1) (op_copy_from_local_file=0) (stream_write_bytes=1179648) (multipart_upload_list.failures=0) (stream_read_bytes_backwards_on_seek=0) (committer_commit_job=0) (action_http_head_request.failures=0) (stream_read_seek_policy_changed=16) (op_rename=0) (object_metadata_request=51) (op_hflush=0) (object_put_request=36) (stream_read_seek_bytes_skipped=0) (op_hsync=0) (op_delete.failures=0) (stream_read_seek_operations=0) (op_list_located_status=0) (op_create=18) (action_http_head_request=51) (store_exists_probe=0) (object_multipart_aborted.failures=0) (committer_commits_completed=0) (op_xattr_get_map=0) (stream_read_operations=3) (committer_commits_aborted=0) (multipart_upload_list=0) (stream_read_vectored_operations=13) (stream_write_block_uploads_committed=0) (op_copy_from_local_file.failures=0) (object_delete_request=0) (object_multipart_initiated.failures=0) (committer_stage_file_upload=0) (store_exists_probe.failures=0) (op_glob_status=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_operations_incomplete=0) (audit_access_check_failure=0) (stream_read_exceptions=0) (op_is_file.failures=0) (store_io_retry=0) (committer_commits.failures=0) (committer_bytes_uploaded=0) (op_abort=0) (stream_read_remote_stream_drain.failures=0) (object_delete_request.failures=0) (action_file_opened=15) (object_bulk_delete_request=36) (op_create_non_recursive=0) (stream_read_remote_stream_aborted.failures=0) (op_exists=0) (stream_read_total_bytes=201971) (stream_write_block_uploads=18) (object_put_bytes=1179648) (stream_write_total_data=2359296) (op_access.failures=0) (op_xattr_get_named_map.failures=0) (delegation_tokens_issued=0) (op_is_directory=0) (object_list_request.failures=0) (store_io_throttled=0) (op_get_file_checksum=0) (committer_commits_reverted=0) (stream_write_total_time=0) (op_mkdirs.failures=0) (multipart_upload_started=0) (audit_span_creation=71) (op_create.failures=0) (op_delete=18) (files_deleted=18) (op_mkdirs=18) (op_get_delegation_token.failures=0) (op_list_files=0) (object_continue_list_request.failures=0) (multipart_upload_aborted=0) (op_list_files.failures=0) (object_list_request=72) (files_created=18) (op_xattr_get_map.failures=0) (fake_directories_deleted=18) (op_is_directory.failures=0) (committer_stage_file_upload.failures=0) (stream_read_vectored_incoming_ranges=43) (op_createfile.failures=0) (op_is_file=0) (committer_commits_created=0) (stream_read_close_operations=15) (stream_read_closed=3) (committer_bytes_committed=0) (action_file_opened.failures=0) (stream_write_queue_duration=0) (op_glob_status.failures=0) (op_xattr_get_named_map=0) (object_copy_requests=0) (audit_failure=0) (audit_request_execution=214) (committer_tasks_failed=0) (stream_read_remote_stream_aborted=0) (committer_magic_marker_put.failures=0) (stream_read_unbuffered=1) (op_exists.failures=0) (stream_write_exceptions_completing_upload=0) (op_get_file_status=1) (committer_load_single_pending_file=0) (multipart_upload_part_put=0) (action_http_get_request.failures=0) (object_put_request.failures=0) (stream_read_vectored_read_bytes_discarded=24503) (stream_read_bytes_discarded_in_abort=0) (multipart_instantiated=0) (ignored_errors=0) (op_rename.failures=0) (files_delete_rejected=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (op_get_content_summary=0) (stream_read_bytes=5963) (object_delete_objects=36) (op_createfile=0) (op_xattr_list=0) (store_io_request=214) (committer_jobs_completed=0) (committer_magic_marker_put=0) (stream_read_version_mismatches=0) (object_put_request_completed=36) (multipart_upload_completed=0) (op_xattr_list.failures=0) (committer_load_single_pending_file.failures=0) (committer_magic_files_created=0) (op_openfile=0) (directories_created=18) (op_xattr_get_named.failures=0) (committer_materialize_file=0) (committer_commit_job.failures=0) (op_get_content_summary.failures=0) (op_get_file_checksum.failures=0) (op_get_delegation_token=0) (committer_jobs_failed=0) (stream_read_opened=3));
gauges=((stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_write_block_uploads_pending=18) (client_side_encryption_enabled=0));
minimums=((op_createfile.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_materialize_file.failures.min=-1) (op_delete.min=27) (committer_materialize_file.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.min=25) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.min=-1) (op_access.failures.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.failures.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_directory.min=-1) (object_list_request.min=5) (op_create.min=7) (action_http_get_request.min=36) (committer_magic_marker_put.failures.min=-1) (op_delete.failures.min=-1) (op_list_status.failures.min=-1) (action_http_head_request.min=3) (object_list_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.min=5) (multipart_upload_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_put_request.min=61) (action_executor_acquired.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_glob_status.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_map.min=-1) (stream_write_queue_duration.failures.min=-1) (object_bulk_delete_request.min=7) (op_rename.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.min=-1) (object_multipart_initiated.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_files.failures.min=-1) (op_access.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_content_summary.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_put_request.failures.min=-1) (op_create.failures.min=-1) (action_file_opened.min=5) (op_abort.failures.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.failures.min=-1) (op_rename.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (op_is_file.failures.min=-1) (op_list_status.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.min=-1));
maximums=((object_multipart_aborted.max=-1) (action_file_opened.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.failures.max=-1) (op_create.max=53) (op_is_file.failures.max=-1) (op_create.failures.max=-1) (op_xattr_list.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.max=-1) (action_executor_acquired.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.max=5) (stream_read_remote_stream_drain.max=4) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (op_glob_status.max=-1) (action_file_opened.max=26) (op_rename.failures.max=-1) (op_mkdirs.max=372) (op_is_directory.max=-1) (action_http_get_request.max=50) (op_get_delegation_token.max=-1) (op_get_file_checksum.max=-1) (op_copy_from_local_file.failures.max=-1) (object_put_request.max=101) (committer_materialize_file.max=-1) (op_is_file.max=-1) (committer_magic_marker_put.failures.max=-1) (op_rename.max=-1) (op_is_directory.failures.max=-1) (object_list_request.max=233) (object_continue_list_request.max=-1) (op_xattr_get_map.max=-1) (op_get_content_summary.failures.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.max=112) (op_abort.max=-1) (object_continue_list_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=26) (committer_load_single_pending_file.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (op_delete.failures.max=-1) (op_mkdirs.failures.max=-1) (object_bulk_delete_request.max=27) (op_xattr_list.failures.max=-1) (op_list_files.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.max=-1) (op_createfile.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.max=-1));
means=((op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=428, mean=22.5263)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=72, sum=966, mean=13.4167)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=18, sum=272, mean=15.1111)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=15, sum=116, mean=7.7333)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=18, sum=1007, mean=55.9444)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=18, sum=1074, mean=59.6667)) (object_put_request.mean=(samples=36, sum=1366, mean=37.9444)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=51, sum=318, mean=6.2353)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=36, sum=543, mean=15.0833)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:09,393 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:09,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,394 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,395 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=152&ts=1731778689393
2024-11-16 17:38:09,401 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:09,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,402 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,404 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=152&ts=1731778689393
2024-11-16 17:38:09,407 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,408 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:09,408 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:09,409 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:09,409 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000090&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=152&ts=1731778689393
2024-11-16 17:38:09,427 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:09,427 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:09,427 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:38:09,427 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:09,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,428 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,429 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000091 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000091&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=152&ts=1731778689428
2024-11-16 17:38:09,434 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:09,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,434 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:09,435 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12127902791397976621.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:09,435 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12127902791397976621.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (op_abort=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_put_request=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12127902791397976621.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,435 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,435 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:09,436 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12127902791397976621.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:09,436 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:09,436 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:09,437 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:09,437 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:09,437 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000091 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000091&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=154&ts=1731778689428
2024-11-16 17:38:09,471 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:09,471 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:09,472 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:38:09,472 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12127902791397976621.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:09,472 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12127902791397976621.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,472 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12127902791397976621.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,472 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:09,472 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,473 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (op_abort.failures=0) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (op_hflush=0) (committer_magic_marker_put=0) (object_put_request=1) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=34) (object_put_request.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=34) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=34, mean=34.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:09,473 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:09,474 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,475 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,475 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:09,475 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000092 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000092/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000092&t0=155&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=155&ts=1731778689474
2024-11-16 17:38:09,478 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:09,478 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:09,479 [s3a-transfer-leg-bucket-unbounded-pool2-t22] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,479 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:38:09,481 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_operations=0) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_total_bytes=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=0) (stream_read_unbuffered=0) (action_file_opened.failures=0) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_closed=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=4) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:09,482 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:09,482 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,482 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,482 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=152&ts=1731778689482
2024-11-16 17:38:09,485 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,485 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,486 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=152&ts=1731778689482
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:09,495 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:09,495 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:09,495 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:09,495 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:09,495 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:09,495 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:09,495 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:09,496 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,496 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [156] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=156&ts=1731778689482
2024-11-16 17:38:09,501 [s3a-transfer-leg-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:09,501 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:38:09,501 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:09,501 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:09,501 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:09,501 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778689467; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:09,501 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:09,502 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:09,502 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:09,503 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:09,503 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,504 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=157&ts=1731778689482
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:09,512 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,513 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000093&t0=152&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=157&ts=1731778689482
2024-11-16 17:38:09,521 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:09,521 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:09,521 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:38:09,521 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.017s
2024-11-16 17:38:09,521 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:38:09,521 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.026s
2024-11-16 17:38:09,521 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:09,521 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:09,523 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:09,537 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 23, active threads = 0, queued tasks = 0, completed tasks = 23], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_files.failures=0) (object_bulk_delete_request=38) (object_select_requests=0) (stream_read_opened=3) (op_copy_from_local_file.failures=0) (stream_read_seek_operations=0) (op_get_file_status.failures=0) (committer_commits_reverted=0) (stream_read_unbuffered=1) (stream_write_total_data=2490368) (op_list_located_status=0) (store_exists_probe=0) (stream_read_remote_stream_drain=3) (multipart_upload_abort_under_path_invoked=0) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (committer_magic_marker_put=0) (files_copied=0) (op_exists=0) (op_delete.failures=0) (stream_write_queue_duration.failures=0) (audit_failure=0) (op_is_directory.failures=0) (op_xattr_list=0) (op_access=0) (stream_write_block_uploads=19) (op_xattr_get_map.failures=0) (object_copy_requests=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (ignored_errors=0) (action_http_head_request=54) (files_deleted=19) (stream_read_remote_stream_drain.failures=0) (object_multipart_initiated.failures=0) (committer_tasks_failed=0) (object_list_request=76) (op_xattr_get_named_map=0) (committer_jobs_failed=0) (files_copied_bytes=0) (stream_aborted=0) (multipart_upload_part_put=0) (committer_commits_completed=0) (op_list_files=0) (delegation_tokens_issued.failures=0) (stream_read_close_operations=16) (stream_write_block_uploads_committed=0) (op_xattr_get_named_map.failures=0) (committer_magic_files_created=0) (stream_read_operations=3) (op_create.failures=0) (object_put_request_completed=38) (op_get_delegation_token=0) (committer_magic_marker_put.failures=0) (op_glob_status.failures=0) (stream_read_seek_bytes_discarded=0) (committer_commit_job=0) (committer_commits_aborted=0) (committer_load_single_pending_file.failures=0) (object_delete_request.failures=0) (object_continue_list_request=0) (multipart_upload_list.failures=0) (op_list_status.failures=0) (store_io_retry=0) (action_http_get_request.failures=0) (multipart_upload_list=0) (op_createfile=0) (store_io_request=225) (op_openfile=0) (op_rename.failures=0) (committer_jobs_completed=0) (op_mkdirs=19) (stream_read_vectored_combined_ranges=18) (object_list_request.failures=0) (fake_directories_created=0) (stream_read_version_mismatches=0) (multipart_upload_part_put_bytes=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=24503) (op_get_file_status=1) (op_is_directory=0) (stream_write_total_time=0) (committer_bytes_committed=0) (files_delete_rejected=0) (op_hflush=0) (committer_stage_file_upload=0) (object_bulk_delete_request.failures=0) (action_file_opened.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (committer_commit_job.failures=0) (committer_materialize_file=0) (stream_read_bytes_discarded_in_abort=0) (directories_deleted=0) (object_put_bytes=1245184) (op_glob_status=0) (op_get_file_checksum.failures=0) (object_delete_objects=38) (stream_write_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (committer_materialize_file.failures=0) (op_createfile.failures=0) (audit_access_check_failure=0) (op_is_file.failures=0) (directories_created=19) (stream_read_seek_backward_operations=0) (object_metadata_request=54) (committer_stage_file_upload.failures=0) (multipart_upload_aborted=0) (committer_load_single_pending_file=0) (stream_write_exceptions_completing_upload=0) (object_continue_list_request.failures=0) (store_exists_probe.failures=0) (stream_read_vectored_incoming_ranges=43) (op_abort=0) (object_put_request=38) (stream_read_bytes=5963) (op_is_file=0) (op_abort.failures=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted=0) (action_file_opened=16) (op_list_status=0) (committer_commits.failures=0) (op_mkdirs.failures=0) (delegation_tokens_issued=0) (op_get_content_summary.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_seek_forward_operations=0) (op_hsync=0) (fake_directories_deleted=19) (stream_read_bytes_backwards_on_seek=0) (files_created=19) (multipart_instantiated=0) (op_create_non_recursive=0) (op_rename=0) (op_delete=19) (committer_bytes_uploaded=0) (op_get_content_summary=0) (stream_read_total_bytes=201971) (store_io_throttled=0) (multipart_upload_started=0) (stream_read_seek_policy_changed=17) (committer_tasks_completed=0) (op_create=19) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (op_xattr_get_named.failures=0) (stream_read_closed=3) (stream_write_bytes=1245184) (op_access.failures=0) (action_executor_acquired.failures=0) (op_open=16) (action_http_get_request=19) (stream_read_fully_operations=1) (action_http_head_request.failures=0) (stream_read_vectored_operations=13) (audit_request_execution=225) (stream_write_block_uploads_aborted=0) (stream_read_exceptions=0) (object_delete_request=0) (op_xattr_get_map=0) (op_xattr_list.failures=0) (op_xattr_get_named=0) (op_get_file_checksum=0) (audit_span_creation=75) (op_exists.failures=0) (committer_commits_created=0));
gauges=((stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=19) (stream_read_active_prefetch_operations=0));
minimums=((op_copy_from_local_file.failures.min=-1) (op_list_status.min=-1) (store_exists_probe.failures.min=-1) (op_is_directory.failures.min=-1) (object_list_request.min=5) (op_xattr_get_map.min=-1) (op_abort.failures.min=-1) (op_access.failures.min=-1) (action_executor_acquired.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (store_exists_probe.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_file_checksum.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_delegation_token.min=-1) (object_multipart_aborted.min=-1) (object_delete_request.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_list_files.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_content_summary.min=-1) (object_bulk_delete_request.min=7) (op_xattr_list.min=-1) (action_http_head_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.failures.min=-1) (action_http_head_request.min=3) (op_access.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.min=26) (op_createfile.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (object_multipart_aborted.failures.min=-1) (op_delete.failures.min=-1) (op_create.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_create.min=7) (action_http_get_request.min=36) (op_rename.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.failures.min=-1) (committer_commit_job.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.min=25) (stream_read_remote_stream_drain.min=1) (object_continue_list_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.min=5) (committer_materialize_file.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_file_opened.min=4) (op_copy_from_local_file.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (op_rename.min=-1) (object_put_request.failures.min=-1) (op_exists.failures.min=-1) (op_is_file.min=-1) (object_put_request.min=34) (op_exists.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((committer_materialize_file.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_status.max=-1) (op_get_content_summary.max=-1) (op_glob_status.max=-1) (op_rename.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (op_delete.failures.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.max=372) (op_xattr_get_named_map.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_delete_request.max=-1) (object_delete_request.failures.max=-1) (op_is_directory.failures.max=-1) (op_createfile.max=-1) (op_get_file_status.max=5) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.max=4) (object_list_request.failures.max=-1) (object_list_request.max=233) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.max=-1) (op_list_files.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_initiated.max=-1) (action_http_head_request.max=26) (object_put_request.max=101) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.max=112) (action_http_get_request.max=50) (committer_load_single_pending_file.max=-1) (action_executor_acquired.max=-1) (op_create.max=53) (op_access.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.max=27) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (op_exists.max=-1) (committer_commit_job.max=-1) (store_exists_probe.failures.max=-1) (op_rename.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_is_file.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.max=26) (op_list_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_put_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (op_access.failures.max=-1) (op_abort.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.max=-1) (action_executor_acquired.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=38, sum=560, mean=14.7368)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=428, mean=22.5263)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=19, sum=279, mean=14.6842)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=38, sum=1418, mean=37.3158)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=19, sum=1033, mean=54.3684)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=16, sum=120, mean=7.5000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=76, sum=991, mean=13.0395)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=54, sum=328, mean=6.0741)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=19, sum=1109, mean=58.3684)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:09,538 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:09,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,538 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,538 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=158&ts=1731778689537
2024-11-16 17:38:09,544 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:09,545 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,545 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,545 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,546 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,546 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=158&ts=1731778689537
2024-11-16 17:38:09,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,550 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:09,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:09,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:09,550 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000094&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=158&ts=1731778689537
2024-11-16 17:38:09,562 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:09,562 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:09,562 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:38:09,562 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:09,562 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,563 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,563 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000095 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000095&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=158&ts=1731778689562
2024-11-16 17:38:09,573 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:09,573 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,574 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:09,574 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6721614770415129597.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:09,575 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6721614770415129597.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (op_hsync=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (op_abort=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6721614770415129597.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,576 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,576 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:09,576 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6721614770415129597.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:09,576 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:09,577 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:09,577 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:09,577 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:09,577 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000095 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000095&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=159&ts=1731778689562
2024-11-16 17:38:09,622 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:09,622 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:09,622 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.045s
2024-11-16 17:38:09,625 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6721614770415129597.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:09,626 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6721614770415129597.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,626 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6721614770415129597.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,626 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:09,626 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,627 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (object_put_request=1) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_hsync=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (op_abort.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_put_request.min=45) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=45) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1));
means=((object_put_request.mean=(samples=1, sum=45, mean=45.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:09,628 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:09,629 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,630 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,630 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:09,630 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000096 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000096/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000096&t0=160&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=160&ts=1731778689629
2024-11-16 17:38:09,637 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:09,637 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:09,638 [s3a-transfer-leg-bucket-unbounded-pool2-t24] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,638 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:38:09,639 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_fully_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request.failures=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (stream_read_total_bytes=0) (action_http_get_request=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_bytes=0) (stream_read_operations=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (stream_read_exceptions=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (action_executor_acquired.failures=0) (stream_read_vectored_operations=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=8) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=8) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)));

2024-11-16 17:38:09,640 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:09,640 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,640 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,640 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=158&ts=1731778689640
2024-11-16 17:38:09,645 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,645 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,645 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=158&ts=1731778689640
2024-11-16 17:38:09,652 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:09,652 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:09,652 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:09,652 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:09,652 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:09,653 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:09,653 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:09,653 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:09,653 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:09,653 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:09,653 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:09,653 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:09,653 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:09,654 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:09,654 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,654 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [161] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=161&ts=1731778689640
2024-11-16 17:38:09,660 [s3a-transfer-leg-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:09,660 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:09,660 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:09,660 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:09,660 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:09,661 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778689618; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:09,661 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:09,661 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:09,661 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:09,661 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:09,662 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,663 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=162&ts=1731778689640
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.022s
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.023s
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:09,686 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,687 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000097&t0=158&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=162&ts=1731778689640
2024-11-16 17:38:09,698 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:09,698 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:09,698 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:38:09,698 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.035s
2024-11-16 17:38:09,699 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.037s
2024-11-16 17:38:09,699 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.046s
2024-11-16 17:38:09,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:09,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:09,701 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:09,712 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 25, active threads = 0, queued tasks = 0, completed tasks = 25], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_located_status=0) (op_get_file_checksum.failures=0) (multipart_upload_list.failures=0) (stream_write_queue_duration.failures=0) (object_continue_list_request=0) (ignored_errors=0) (object_delete_request=0) (op_delete.failures=0) (action_http_head_request.failures=0) (stream_read_opened=3) (committer_commits_created=0) (audit_request_execution=236) (committer_commits.failures=0) (op_hsync=0) (stream_read_vectored_read_bytes_discarded=24503) (object_multipart_initiated.failures=0) (object_copy_requests=0) (committer_jobs_completed=0) (committer_bytes_uploaded=0) (object_put_request.failures=0) (committer_jobs_failed=0) (stream_read_remote_stream_drain.failures=0) (op_get_delegation_token.failures=0) (op_xattr_list.failures=0) (committer_materialize_file=0) (op_list_status=0) (files_deleted=20) (stream_read_fully_operations=1) (stream_read_remote_stream_drain=3) (op_access.failures=0) (delegation_tokens_issued=0) (op_list_files.failures=0) (op_get_content_summary=0) (action_file_opened=17) (stream_read_unbuffered=1) (stream_read_bytes_discarded_in_close=196008) (multipart_instantiated=0) (op_openfile=0) (stream_read_total_bytes=201971) (stream_read_version_mismatches=0) (object_select_requests=0) (op_get_file_checksum=0) (committer_load_single_pending_file.failures=0) (committer_commit_job.failures=0) (op_is_file.failures=0) (stream_read_seek_policy_changed=18) (op_mkdirs=20) (op_abort.failures=0) (files_copied=0) (multipart_upload_started=0) (op_createfile=0) (op_list_files=0) (stream_read_operations=3) (files_created=20) (stream_read_remote_stream_aborted.failures=0) (op_rename=0) (op_exists=0) (stream_write_block_uploads_committed=0) (action_http_get_request=19) (stream_read_seek_backward_operations=0) (op_get_file_status=1) (op_copy_from_local_file.failures=0) (op_create_non_recursive=0) (object_delete_objects=40) (stream_read_seek_forward_operations=0) (stream_read_bytes=5963) (op_is_file=0) (fake_directories_deleted=20) (stream_read_bytes_discarded_in_abort=0) (committer_load_single_pending_file=0) (op_is_directory=0) (object_put_request_completed=40) (store_exists_probe=0) (op_glob_status=0) (op_rename.failures=0) (op_glob_status.failures=0) (multipart_upload_part_put=0) (op_xattr_get_named_map=0) (stream_write_exceptions_completing_upload=0) (op_get_delegation_token=0) (op_get_file_status.failures=0) (stream_read_vectored_operations=13) (multipart_upload_aborted=0) (op_xattr_get_named_map.failures=0) (store_exists_probe.failures=0) (store_io_request=236) (stream_read_operations_incomplete=0) (files_delete_rejected=0) (action_http_head_request=57) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=43) (stream_read_vectored_combined_ranges=18) (action_executor_acquired.failures=0) (committer_commits_aborted=0) (op_delete=20) (op_xattr_get_map=0) (op_xattr_get_named=0) (committer_tasks_completed=0) (object_multipart_initiated=0) (committer_magic_files_created=0) (audit_access_check_failure=0) (object_bulk_delete_request=40) (committer_commits_reverted=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (stream_read_seek_bytes_skipped=0) (stream_write_bytes=1310720) (op_createfile.failures=0) (action_executor_acquired=0) (stream_read_exceptions=0) (store_io_retry=0) (stream_read_bytes_backwards_on_seek=0) (op_access=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_completed=0) (action_http_get_request.failures=0) (op_xattr_list=0) (action_file_opened.failures=0) (delegation_tokens_issued.failures=0) (committer_stage_file_upload=0) (object_metadata_request=57) (stream_read_closed=3) (object_bulk_delete_request.failures=0) (op_exists.failures=0) (committer_commit_job=0) (op_open=17) (directories_created=20) (stream_write_total_data=2621440) (audit_failure=0) (object_list_request=80) (fake_directories_created=0) (stream_write_block_uploads_aborted=0) (object_list_request.failures=0) (object_put_request=40) (stream_write_total_time=0) (multipart_upload_part_put_bytes=0) (op_mkdirs.failures=0) (object_delete_request.failures=0) (committer_magic_marker_put.failures=0) (op_abort=0) (op_create.failures=0) (op_is_directory.failures=0) (committer_stage_file_upload.failures=0) (op_get_content_summary.failures=0) (multipart_upload_completed=0) (object_continue_list_request.failures=0) (stream_read_close_operations=17) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (files_copied_bytes=0) (store_io_throttled=0) (op_copy_from_local_file=0) (committer_tasks_failed=0) (stream_write_block_uploads=20) (committer_materialize_file.failures=0) (object_put_bytes=1310720) (op_xattr_get_map.failures=0) (op_list_status.failures=0) (op_create=20) (directories_deleted=0) (committer_bytes_committed=0) (op_hflush=0) (multipart_upload_list=0) (op_xattr_get_named.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (stream_aborted=0) (audit_span_creation=79) (stream_write_exceptions=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=20) (object_put_bytes_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (op_get_file_status.min=5) (committer_commit_job.min=-1) (stream_write_queue_duration.min=-1) (op_delete.failures.min=-1) (action_http_head_request.min=3) (multipart_upload_list.min=-1) (action_executor_acquired.failures.min=-1) (op_create.min=7) (object_delete_request.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.min=45) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_list.min=-1) (op_exists.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (op_createfile.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.failures.min=-1) (op_create.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_list_request.min=5) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_get_request.min=36) (op_is_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.failures.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.min=-1) (op_list_status.failures.min=-1) (op_access.min=-1) (action_file_opened.min=8) (op_abort.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.min=-1) (op_is_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_list.failures.min=-1) (op_rename.min=-1) (op_mkdirs.min=24) (op_get_delegation_token.failures.min=-1) (object_bulk_delete_request.min=7) (stream_read_remote_stream_aborted.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.min=1) (op_access.failures.min=-1) (op_glob_status.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.min=26));
maximums=((op_copy_from_local_file.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_create.max=53) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_drain.max=4) (object_list_request.max=233) (op_is_directory.failures.max=-1) (action_http_head_request.max=26) (op_get_delegation_token.max=-1) (committer_materialize_file.max=-1) (op_is_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (multipart_upload_list.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_status.max=5) (action_file_opened.max=26) (stream_write_queue_duration.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_delete.max=112) (op_rename.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.max=-1) (op_glob_status.max=-1) (op_list_status.failures.max=-1) (op_access.max=-1) (op_exists.max=-1) (committer_commit_job.max=-1) (op_mkdirs.max=372) (op_delete.failures.max=-1) (object_put_request.max=101) (op_get_content_summary.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.max=27) (op_list_files.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.max=50) (object_delete_request.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (op_glob_status.failures.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.max=-1) (op_createfile.max=-1) (op_access.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_list.failures.max=-1) (action_http_get_request.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.max=-1));
means=((delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=40, sum=1475, mean=36.8750)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=40, sum=594, mean=14.8500)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=20, sum=292, mean=14.6000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=20, sum=1080, mean=54.0000)) (action_http_get_request.mean=(samples=19, sum=428, mean=22.5263)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=20, sum=1133, mean=56.6500)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=57, sum=344, mean=6.0351)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=80, sum=1020, mean=12.7500)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=17, sum=128, mean=7.5294)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:09,713 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:09,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,714 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,714 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=163&ts=1731778689713
2024-11-16 17:38:09,722 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:09,722 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,723 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,723 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=163&ts=1731778689713
2024-11-16 17:38:09,727 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,727 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:09,728 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:09,728 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:09,728 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000098&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=163&ts=1731778689713
2024-11-16 17:38:09,755 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:09,755 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:09,755 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.028s
2024-11-16 17:38:09,755 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:09,756 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,756 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,756 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,756 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,756 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000099 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000099&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=163&ts=1731778689755
2024-11-16 17:38:09,764 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:09,764 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,764 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:09,765 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17917594535668059660.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:09,766 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17917594535668059660.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (op_abort=0) (op_hsync=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_put_request=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17917594535668059660.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,766 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,766 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:09,766 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17917594535668059660.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:09,766 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:09,767 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:09,767 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:09,767 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:09,767 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000099 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000099&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=164&ts=1731778689755
2024-11-16 17:38:09,847 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:09,848 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:09,848 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.081s
2024-11-16 17:38:09,849 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17917594535668059660.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:09,849 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17917594535668059660.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,850 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17917594535668059660.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:09,850 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:09,850 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:09,851 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (op_abort.failures=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (op_hflush=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (op_abort=0) (op_hsync=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=80) (multipart_upload_part_put.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=80) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=80, mean=80.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:09,851 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:09,852 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:09,852 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:09,852 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:09,852 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=163&ts=1731778689852
2024-11-16 17:38:09,856 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:09,857 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:09,857 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,858 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:09,858 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:09,858 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:09,859 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:09,859 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:09,859 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:09,859 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:09,860 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:09,860 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,860 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,860 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:09,860 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=166&ts=1731778689852
2024-11-16 17:38:09,861 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,861 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:09,862 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:09,862 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000100&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=165&ts=1731778689852
2024-11-16 17:38:09,875 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:38:09,876 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:09,876 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,878 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:38:09,879 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:09,879 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_incoming_ranges=4) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (action_http_get_request=2) (stream_read_operations=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes=300) (action_executor_acquired=0) (stream_read_total_bytes=300) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_read_vectored_operations=2) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_seek_bytes_skipped=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=2) (action_executor_acquired.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=16) (action_file_opened.min=5) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=5) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=16) (action_executor_acquired.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=32, mean=16.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:09,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:09,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,880 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=163&ts=1731778689880
2024-11-16 17:38:09,881 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:09,883 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,883 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,884 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=163&ts=1731778689880
2024-11-16 17:38:09,890 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:09,891 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:09,891 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:09,891 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:09,892 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:09,892 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:09,893 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:09,893 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:09,894 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:09,894 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:09,894 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:09,895 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:09,896 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:09,896 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:09,896 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,896 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=167&ts=1731778689880
2024-11-16 17:38:09,917 [s3a-transfer-leg-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:38:09,917 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.021s
2024-11-16 17:38:09,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:09,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:09,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:09,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778689828; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:09,918 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:09,920 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:09,920 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:09,921 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:09,921 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:09,921 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:09,922 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:09,922 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:09,922 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,922 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,922 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:09,922 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,923 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=168&ts=1731778689880
2024-11-16 17:38:09,947 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.025s
2024-11-16 17:38:09,947 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.025s
2024-11-16 17:38:09,947 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.025s
2024-11-16 17:38:09,947 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:09,948 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:09,948 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:09,948 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:09,948 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:09,948 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:09,948 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000101&t0=163&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=168&ts=1731778689880
2024-11-16 17:38:09,972 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.024s
2024-11-16 17:38:09,972 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.024s
2024-11-16 17:38:09,972 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.024s
2024-11-16 17:38:09,972 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.051s
2024-11-16 17:38:09,973 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.052s
2024-11-16 17:38:09,973 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.079s
2024-11-16 17:38:09,973 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:09,973 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:09,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:09,988 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 26, active threads = 0, queued tasks = 0, completed tasks = 26], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_create=21) (op_rename=0) (object_select_requests=0) (object_multipart_aborted.failures=0) (op_hflush=0) (action_file_opened=18) (op_is_directory=0) (op_list_files=0) (committer_load_single_pending_file=0) (action_file_opened.failures=0) (op_list_status.failures=0) (op_get_file_checksum=0) (multipart_upload_aborted=0) (multipart_upload_started=0) (directories_created=21) (multipart_instantiated=0) (op_copy_from_local_file.failures=0) (files_created=21) (committer_materialize_file=0) (stream_read_total_bytes=202271) (op_access.failures=0) (stream_read_opened=3) (op_xattr_get_named.failures=0) (store_io_throttled=0) (op_xattr_get_named_map=0) (object_put_request_completed=42) (committer_load_single_pending_file.failures=0) (object_continue_list_request=0) (stream_read_seek_operations=0) (object_delete_request=0) (stream_write_exceptions=0) (files_deleted=21) (action_executor_acquired.failures=0) (object_metadata_request=60) (committer_jobs_completed=0) (stream_read_vectored_operations=15) (stream_write_block_uploads_aborted=0) (stream_read_fully_operations=1) (op_glob_status=0) (op_delete=21) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=24523) (op_exists.failures=0) (committer_jobs_failed=0) (stream_write_total_data=2752512) (stream_write_bytes=1376256) (op_create_non_recursive=0) (op_get_file_status.failures=0) (stream_write_block_uploads_committed=0) (op_xattr_list.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_write_queue_duration.failures=0) (fake_directories_deleted=21) (committer_commits_aborted=0) (object_multipart_initiated=0) (files_copied=0) (committer_commits_created=0) (stream_write_queue_duration=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=47) (multipart_upload_list.failures=0) (object_put_bytes=1376256) (committer_tasks_completed=0) (stream_read_remote_stream_aborted.failures=0) (op_rename.failures=0) (stream_write_exceptions_completing_upload=0) (committer_tasks_failed=0) (audit_access_check_failure=0) (stream_read_remote_stream_drain.failures=0) (store_io_request=249) (object_delete_request.failures=0) (committer_materialize_file.failures=0) (store_exists_probe.failures=0) (op_get_delegation_token=0) (op_exists=0) (stream_read_bytes_discarded_in_abort=0) (op_is_directory.failures=0) (stream_read_remote_stream_aborted=0) (object_put_request=42) (op_abort=0) (stream_read_seek_backward_operations=0) (stream_read_unbuffered=1) (object_put_request.failures=0) (object_continue_list_request.failures=0) (op_list_located_status=0) (object_list_request.failures=0) (audit_request_execution=249) (committer_magic_marker_put=0) (op_mkdirs=21) (stream_read_seek_policy_changed=19) (stream_read_bytes=6263) (op_get_content_summary.failures=0) (committer_stage_file_upload=0) (stream_read_vectored_combined_ranges=20) (stream_read_bytes_backwards_on_seek=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (multipart_upload_abort_under_path_invoked=0) (op_access=0) (committer_bytes_uploaded=0) (committer_magic_files_created=0) (op_createfile.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_operations=3) (multipart_upload_part_put=0) (action_http_get_request=21) (stream_read_close_operations=18) (committer_commits.failures=0) (delegation_tokens_issued=0) (files_copied_bytes=0) (store_exists_probe=0) (object_delete_objects=42) (action_http_head_request=60) (stream_write_block_uploads=21) (object_bulk_delete_request.failures=0) (audit_failure=0) (files_delete_rejected=0) (op_xattr_get_map.failures=0) (op_glob_status.failures=0) (op_is_file.failures=0) (store_io_retry=0) (object_list_request=84) (op_get_content_summary=0) (object_bulk_delete_request=42) (op_xattr_list=0) (op_copy_from_local_file=0) (stream_read_closed=3) (fake_directories_created=0) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (stream_read_seek_forward_operations=0) (multipart_upload_list=0) (op_xattr_get_map=0) (committer_stage_file_upload.failures=0) (committer_commit_job.failures=0) (audit_span_creation=83) (object_copy_requests=0) (committer_commits_completed=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named=0) (stream_write_total_time=0) (op_get_delegation_token.failures=0) (action_executor_acquired=0) (stream_read_remote_stream_drain=3) (stream_read_operations_incomplete=0) (op_open=18) (op_create.failures=0) (multipart_upload_completed=0) (ignored_errors=0) (op_get_file_status=1) (op_createfile=0) (directories_deleted=0) (action_http_get_request.failures=0) (op_list_status=0) (op_abort.failures=0) (committer_commits_reverted=0) (multipart_upload_part_put_bytes=0) (op_is_file=0) (stream_read_exceptions=0) (committer_magic_marker_put.failures=0) (op_openfile=0) (committer_commit_job=0) (op_mkdirs.failures=0) (op_delete.failures=0) (op_get_file_checksum.failures=0) (op_hsync=0) (action_http_head_request.failures=0) (committer_bytes_committed=0) (op_list_files.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=21) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((op_list_files.min=-1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (op_exists.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.min=24) (op_createfile.failures.min=-1) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (multipart_upload_list.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.min=-1) (object_list_request.min=5) (committer_materialize_file.failures.min=-1) (object_put_request.min=80) (op_xattr_list.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_exists.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.min=-1) (op_glob_status.failures.min=-1) (op_delete.min=26) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_delegation_token.min=-1) (store_exists_probe.failures.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.failures.min=-1) (object_delete_request.min=-1) (op_rename.failures.min=-1) (object_put_request.failures.min=-1) (op_is_directory.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_create.min=7) (op_list_files.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.failures.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.min=5) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=5) (op_access.failures.min=-1) (object_bulk_delete_request.min=7) (op_list_status.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_get_request.min=16) (op_create.failures.min=-1) (action_http_head_request.min=3) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (op_get_file_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_access.min=-1));
maximums=((op_xattr_list.max=-1) (object_list_request.max=233) (op_exists.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.failures.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.max=-1) (object_put_request.failures.max=-1) (op_access.max=-1) (op_list_files.failures.max=-1) (op_is_file.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_bulk_delete_request.max=27) (op_list_files.max=-1) (object_continue_list_request.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.max=101) (op_access.failures.max=-1) (op_create.max=53) (op_get_file_status.max=5) (op_create.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.failures.max=-1) (op_exists.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_drain.max=4) (object_delete_request.failures.max=-1) (object_delete_request.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_delete.max=112) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_get_request.max=50) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.max=-1) (store_exists_probe.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.max=-1) (op_abort.max=-1) (op_mkdirs.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_checksum.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_map.max=-1) (op_createfile.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.max=-1) (op_mkdirs.max=372) (action_file_opened.max=26) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_stage_file_upload.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_head_request.max=26) (op_rename.failures.max=-1) (op_list_status.max=-1) (action_http_get_request.failures.max=-1));
means=((op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=18, sum=133, mean=7.3889)) (object_list_request.mean=(samples=84, sum=1064, mean=12.6667)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=21, sum=1162, mean=55.3333)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=460, mean=21.9048)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=42, sum=642, mean=15.2857)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=42, sum=1582, mean=37.6667)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=21, sum=301, mean=14.3333)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=21, sum=1175, mean=55.9524)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=60, sum=354, mean=5.9000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:09,989 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:09,989 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,989 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,989 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:09,989 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:09,990 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=169&ts=1731778689989
2024-11-16 17:38:09,995 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:09,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:09,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:09,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:09,996 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=169&ts=1731778689989
2024-11-16 17:38:09,999 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:09,999 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:10,000 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:10,000 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:10,000 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000102&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=169&ts=1731778689989
2024-11-16 17:38:10,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:10,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:10,022 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:38:10,022 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:10,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,023 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,023 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,023 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000103 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000103&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=169&ts=1731778690022
2024-11-16 17:38:10,043 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.020s
2024-11-16 17:38:10,043 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,044 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,044 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9417207386103607235.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:10,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9417207386103607235.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort=0) (object_put_request=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_total_data=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (op_hflush=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (object_put_request.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1));
maximums=((op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9417207386103607235.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,045 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:10,045 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9417207386103607235.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:10,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:10,046 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:10,046 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:10,046 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:10,046 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000103 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000103&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=170&ts=1731778690022
2024-11-16 17:38:10,087 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:10,087 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:10,088 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.042s
2024-11-16 17:38:10,088 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9417207386103607235.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:10,088 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9417207386103607235.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,088 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9417207386103607235.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,088 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:10,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,090 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (op_hsync=0) (action_executor_acquired.failures=0) (op_hflush=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (multipart_upload_part_put.failures=0) (object_put_request=1) (stream_write_total_data=65536) (op_abort.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=41) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=41) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=41, mean=41.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:10,090 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:10,091 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,091 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,092 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:10,092 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000104 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000104/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000104&t0=171&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=171&ts=1731778690091
2024-11-16 17:38:10,096 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:10,096 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:10,096 [s3a-transfer-leg-bucket-unbounded-pool2-t27] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,097 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:38:10,098 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_vectored_combined_ranges=0) (stream_aborted=0) (action_file_opened=1) (action_http_get_request=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_total_bytes=0) (stream_read_remote_stream_drain=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=0) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=5));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=5) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,100 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:10,100 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,100 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,100 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=169&ts=1731778690100
2024-11-16 17:38:10,105 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,105 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,106 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=169&ts=1731778690100
2024-11-16 17:38:10,115 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:10,115 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:10,115 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:10,115 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:10,115 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:10,115 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:10,115 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:10,116 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:10,116 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:10,116 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:10,116 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:10,116 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:10,117 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:10,117 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:10,117 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,117 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [172] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=172&ts=1731778690100
2024-11-16 17:38:10,125 [s3a-transfer-leg-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:10,125 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:38:10,126 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:10,126 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:10,126 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:10,126 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778690079; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:10,126 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:10,126 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:10,127 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:10,127 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:10,130 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:10,130 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:10,131 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:10,131 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:10,131 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,131 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,131 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:10,131 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,131 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=173&ts=1731778690100
2024-11-16 17:38:10,144 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:10,144 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:10,144 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:38:10,144 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:10,144 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:10,144 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,144 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,145 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:10,145 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,145 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000105&t0=169&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=173&ts=1731778690100
2024-11-16 17:38:10,156 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:10,156 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:10,156 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:38:10,156 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:38:10,156 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:38:10,156 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.040s
2024-11-16 17:38:10,156 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:10,156 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:10,158 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:10,172 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 28, active threads = 0, queued tasks = 0, completed tasks = 28], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_initiated.failures=0) (committer_commits_aborted=0) (op_delete=22) (stream_read_remote_stream_drain.failures=0) (op_createfile.failures=0) (committer_jobs_completed=0) (delegation_tokens_issued=0) (stream_read_seek_operations=0) (store_io_retry=0) (stream_read_seek_bytes_discarded=0) (op_hflush=0) (files_delete_rejected=0) (op_list_files.failures=0) (fake_directories_deleted=22) (committer_stage_file_upload.failures=0) (files_copied=0) (committer_commit_job.failures=0) (committer_magic_marker_put=0) (committer_load_single_pending_file=0) (committer_commits.failures=0) (op_xattr_get_named=0) (stream_read_remote_stream_aborted.failures=0) (directories_deleted=0) (store_exists_probe=0) (committer_commits_created=0) (multipart_upload_part_put=0) (op_copy_from_local_file=0) (op_create_non_recursive=0) (stream_read_bytes=6263) (object_multipart_aborted.failures=0) (committer_commits_reverted=0) (op_xattr_get_named_map.failures=0) (stream_write_total_time=0) (op_copy_from_local_file.failures=0) (committer_stage_file_upload=0) (audit_request_execution=260) (stream_read_exceptions=0) (op_get_content_summary=0) (stream_read_remote_stream_drain=3) (action_file_opened=19) (op_delete.failures=0) (object_multipart_initiated=0) (op_hsync=0) (op_access=0) (stream_write_queue_duration=0) (multipart_upload_abort_under_path_invoked=0) (op_open=19) (audit_failure=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (op_exists.failures=0) (files_deleted=22) (object_metadata_request=63) (stream_write_exceptions_completing_upload=0) (op_get_file_status.failures=0) (multipart_upload_completed=0) (stream_write_block_uploads_committed=0) (op_get_content_summary.failures=0) (object_delete_objects=44) (stream_read_seek_backward_operations=0) (object_delete_request.failures=0) (committer_commit_job=0) (op_xattr_list=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=19) (stream_read_bytes_discarded_in_close=196008) (op_create.failures=0) (directories_created=22) (committer_magic_files_created=0) (op_xattr_get_named.failures=0) (op_get_file_checksum=0) (multipart_instantiated=0) (store_exists_probe.failures=0) (action_http_head_request.failures=0) (multipart_upload_list=0) (object_bulk_delete_request.failures=0) (files_created=22) (op_is_directory.failures=0) (committer_commits_completed=0) (committer_bytes_committed=0) (stream_write_queue_duration.failures=0) (stream_write_block_uploads=22) (object_put_bytes=1441792) (store_io_request=260) (stream_read_vectored_read_bytes_discarded=24523) (committer_jobs_failed=0) (op_xattr_get_map.failures=0) (op_mkdirs.failures=0) (stream_write_total_data=2883584) (multipart_upload_aborted=0) (op_list_located_status=0) (ignored_errors=0) (object_copy_requests=0) (op_openfile=0) (committer_tasks_failed=0) (op_get_file_status=1) (object_continue_list_request.failures=0) (op_glob_status.failures=0) (op_list_status=0) (multipart_upload_started=0) (stream_read_seek_policy_changed=20) (object_put_request_completed=44) (stream_read_bytes_backwards_on_seek=0) (op_is_file.failures=0) (committer_load_single_pending_file.failures=0) (op_mkdirs=22) (stream_write_bytes=1441792) (multipart_upload_list.failures=0) (stream_read_fully_operations=1) (stream_aborted=0) (op_createfile=0) (committer_tasks_completed=0) (object_continue_list_request=0) (committer_materialize_file.failures=0) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=47) (audit_access_check_failure=0) (op_glob_status=0) (op_get_delegation_token=0) (object_delete_request=0) (stream_read_unbuffered=1) (stream_read_operations=3) (op_xattr_get_map=0) (op_abort=0) (object_list_request=88) (action_http_head_request=63) (object_bulk_delete_request=44) (op_is_file=0) (stream_read_vectored_operations=15) (op_access.failures=0) (stream_write_block_uploads_aborted=0) (object_select_requests=0) (committer_materialize_file=0) (stream_read_vectored_combined_ranges=20) (fake_directories_created=0) (audit_span_creation=87) (op_get_file_checksum.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_list_request.failures=0) (op_is_directory=0) (op_list_status.failures=0) (op_rename.failures=0) (files_copied_bytes=0) (committer_bytes_uploaded=0) (stream_read_version_mismatches=0) (action_http_get_request=21) (store_io_throttled=0) (object_multipart_aborted=0) (multipart_upload_part_put_bytes=0) (stream_read_closed=3) (op_xattr_list.failures=0) (action_http_get_request.failures=0) (op_rename=0) (op_list_files=0) (op_create=22) (stream_read_total_bytes=202271) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named_map=0) (stream_read_opened=3) (op_get_delegation_token.failures=0) (op_exists=0) (object_put_request.failures=0) (delegation_tokens_issued.failures=0) (committer_magic_marker_put.failures=0) (action_file_opened.failures=0) (op_abort.failures=0) (object_put_request=44));
gauges=((stream_write_block_uploads_pending=22) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0));
minimums=((op_xattr_get_map.min=-1) (delegation_tokens_issued.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_file_opened.min=5) (committer_materialize_file.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_aborted.min=-1) (op_is_directory.min=-1) (action_http_get_request.failures.min=-1) (op_access.min=-1) (action_http_head_request.min=3) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=5) (op_exists.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=1) (op_list_files.min=-1) (op_get_delegation_token.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (op_mkdirs.min=24) (op_createfile.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1) (multipart_upload_list.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.min=-1) (object_continue_list_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (object_delete_request.min=-1) (committer_commit_job.min=-1) (committer_stage_file_upload.failures.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (op_createfile.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.failures.min=-1) (object_bulk_delete_request.min=7) (committer_materialize_file.failures.min=-1) (object_put_request.min=41) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (op_mkdirs.failures.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.min=-1) (op_delete.failures.min=-1) (op_delete.min=26) (op_xattr_get_named.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.min=-1) (action_file_opened.failures.min=-1) (op_exists.min=-1) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_status.min=5) (op_create.failures.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.min=16) (store_exists_probe.min=-1) (op_abort.failures.min=-1) (op_list_files.failures.min=-1) (op_create.min=7) (committer_magic_marker_put.min=-1) (op_get_file_checksum.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (committer_materialize_file.max=-1) (op_is_directory.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.max=26) (committer_magic_marker_put.failures.max=-1) (object_list_request.failures.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=26) (op_xattr_list.max=-1) (op_copy_from_local_file.max=-1) (object_list_request.max=233) (op_get_content_summary.max=-1) (action_http_head_request.failures.max=-1) (object_delete_request.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_put_request.max=101) (delegation_tokens_issued.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_copy_from_local_file.failures.max=-1) (op_access.max=-1) (object_continue_list_request.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.max=-1) (op_get_file_status.max=5) (op_glob_status.failures.max=-1) (op_is_directory.failures.max=-1) (op_createfile.max=-1) (op_get_file_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.max=-1) (op_rename.max=-1) (committer_commit_job.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=27) (object_multipart_aborted.max=-1) (op_delete.max=112) (multipart_upload_list.failures.max=-1) (object_put_request.failures.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.max=-1) (op_delete.failures.max=-1) (action_http_get_request.max=50) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (op_mkdirs.max=372) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (op_create.max=53) (op_exists.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_map.failures.max=-1) (op_access.failures.max=-1) (committer_commit_job.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (delegation_tokens_issued.failures.max=-1));
means=((committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=22, sum=323, mean=14.6818)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_list_request.mean=(samples=88, sum=1107, mean=12.5795)) (action_http_get_request.mean=(samples=21, sum=460, mean=21.9048)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=63, sum=366, mean=5.8095)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=22, sum=1203, mean=54.6818)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=44, sum=1645, mean=37.3864)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=19, sum=138, mean=7.2632)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=22, sum=1208, mean=54.9091)) (object_bulk_delete_request.mean=(samples=44, sum=666, mean=15.1364)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:10,172 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:10,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,173 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,174 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=174&ts=1731778690172
2024-11-16 17:38:10,182 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:10,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,182 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=174&ts=1731778690172
2024-11-16 17:38:10,191 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,191 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:10,191 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:10,192 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:10,192 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000106&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=174&ts=1731778690172
2024-11-16 17:38:10,206 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:10,206 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:10,206 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.015s
2024-11-16 17:38:10,207 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:10,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,207 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,207 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,207 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000107 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000107&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=174&ts=1731778690207
2024-11-16 17:38:10,212 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:10,212 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,213 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,213 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11115962429498644109.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:10,214 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11115962429498644109.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_data=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (op_abort=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (object_put_request=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (stream_write_total_time=0) (action_executor_acquired=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11115962429498644109.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,214 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,214 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:10,214 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11115962429498644109.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:10,214 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:10,214 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:10,214 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:10,214 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:10,214 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000107 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000107&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=31&ts=1731778690207
2024-11-16 17:38:10,251 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:10,251 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:10,251 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.037s
2024-11-16 17:38:10,251 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11115962429498644109.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:10,252 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11115962429498644109.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,252 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11115962429498644109.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,252 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:10,252 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,253 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_put_request=1) (action_executor_acquired=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=37) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=37) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=37, mean=37.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:10,253 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:10,254 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,254 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,254 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:10,254 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000108 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000108&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=174&ts=1731778690254
2024-11-16 17:38:10,258 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:10,258 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:10,258 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,258 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:38:10,258 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:10,258 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:38:10,258 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:38:10,259 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:10,259 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,259 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:10,259 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000108 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=500-899&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000108&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=36&ts=1731778690254
2024-11-16 17:38:10,270 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:38:10,271 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:10,272 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (action_executor_acquired.failures=0) (stream_read_opened=0) (stream_read_unbuffered=0) (stream_aborted=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=400) (stream_read_vectored_operations=1) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=3) (stream_read_vectored_combined_ranges=1) (stream_read_total_bytes=400) (stream_read_operations=0) (action_http_get_request=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=11) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=11) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=4) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,274 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:10,274 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,274 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,274 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=174&ts=1731778690273
2024-11-16 17:38:10,277 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,278 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,278 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=174&ts=1731778690273
2024-11-16 17:38:10,291 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:10,291 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:10,291 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:10,291 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:10,291 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:10,291 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:10,292 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:10,292 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:10,292 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:10,292 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:10,292 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:10,292 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:10,293 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:10,293 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:10,293 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,293 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [175] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=175&ts=1731778690273
2024-11-16 17:38:10,307 [s3a-transfer-leg-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:38:10,308 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.015s
2024-11-16 17:38:10,308 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:10,308 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:10,308 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:10,308 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778690246; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:10,308 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:10,308 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:10,308 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:10,309 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:10,309 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,309 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=38&ts=1731778690273
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.019s
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.019s
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,328 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000109&t0=174&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=38&ts=1731778690273
2024-11-16 17:38:10,346 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:38:10,347 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:38:10,347 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.019s
2024-11-16 17:38:10,347 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.038s
2024-11-16 17:38:10,347 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.038s
2024-11-16 17:38:10,347 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.055s
2024-11-16 17:38:10,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:10,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:10,350 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:10,368 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 29, active threads = 0, queued tasks = 0, completed tasks = 29], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_get_request.failures=0) (audit_failure=0) (audit_request_execution=272) (stream_read_fully_operations=1) (store_io_request=272) (op_get_delegation_token=0) (op_get_file_checksum.failures=0) (op_list_status.failures=0) (object_delete_objects=46) (action_http_get_request=22) (stream_read_vectored_operations=16) (op_is_directory.failures=0) (stream_read_vectored_incoming_ranges=50) (object_bulk_delete_request.failures=0) (stream_read_total_bytes=202671) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (object_multipart_initiated.failures=0) (stream_write_total_data=3014656) (op_hflush=0) (committer_materialize_file=0) (committer_bytes_committed=0) (stream_read_vectored_read_bytes_discarded=24523) (object_put_request=46) (stream_write_block_uploads_committed=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list.failures=0) (action_http_head_request.failures=0) (delegation_tokens_issued.failures=0) (stream_read_closed=3) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_list=0) (op_createfile.failures=0) (op_list_files=0) (op_exists=0) (op_is_file=0) (committer_jobs_failed=0) (op_get_file_status.failures=0) (committer_load_single_pending_file=0) (op_abort.failures=0) (stream_read_remote_stream_aborted.failures=0) (audit_access_check_failure=0) (stream_read_remote_stream_drain=3) (object_multipart_aborted=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=196008) (committer_commit_job=0) (object_bulk_delete_request=46) (committer_magic_marker_put=0) (op_access.failures=0) (stream_read_seek_operations=0) (committer_commits_aborted=0) (stream_write_block_uploads_aborted=0) (action_file_opened=20) (op_get_delegation_token.failures=0) (stream_read_vectored_combined_ranges=21) (stream_read_unbuffered=1) (op_create_non_recursive=0) (op_is_file.failures=0) (op_get_file_status=1) (stream_read_opened=3) (op_xattr_get_named_map=0) (op_mkdirs=23) (stream_read_close_operations=20) (op_create=23) (op_get_content_summary=0) (delegation_tokens_issued=0) (committer_jobs_completed=0) (committer_tasks_failed=0) (multipart_upload_part_put=0) (stream_read_version_mismatches=0) (files_delete_rejected=0) (op_delete=23) (stream_write_exceptions=0) (files_deleted=23) (ignored_errors=0) (op_hsync=0) (committer_commits_completed=0) (op_get_file_checksum=0) (stream_read_operations=3) (stream_read_exceptions=0) (store_exists_probe=0) (op_access=0) (stream_read_seek_bytes_skipped=0) (object_multipart_initiated=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired.failures=0) (op_list_located_status=0) (store_io_throttled=0) (object_continue_list_request.failures=0) (op_xattr_list=0) (op_glob_status=0) (object_copy_requests=0) (op_xattr_get_map.failures=0) (object_list_request=92) (files_copied=0) (fake_directories_deleted=23) (store_io_retry=0) (store_exists_probe.failures=0) (object_multipart_aborted.failures=0) (object_put_bytes=1507328) (action_executor_acquired=0) (op_list_status=0) (op_createfile=0) (op_is_directory=0) (stream_read_seek_backward_operations=0) (object_metadata_request=66) (stream_read_remote_stream_aborted=0) (stream_read_bytes=6663) (op_xattr_get_named.failures=0) (op_mkdirs.failures=0) (multipart_instantiated=0) (object_put_request.failures=0) (committer_commit_job.failures=0) (object_delete_request=0) (multipart_upload_completed=0) (op_openfile=0) (op_copy_from_local_file.failures=0) (directories_created=23) (object_delete_request.failures=0) (stream_write_block_uploads=23) (multipart_upload_list.failures=0) (op_xattr_get_named=0) (op_exists.failures=0) (multipart_upload_started=0) (committer_stage_file_upload.failures=0) (object_list_request.failures=0) (object_continue_list_request=0) (files_copied_bytes=0) (op_delete.failures=0) (committer_stage_file_upload=0) (fake_directories_created=0) (directories_deleted=0) (op_glob_status.failures=0) (committer_commits_reverted=0) (op_rename=0) (object_select_requests=0) (committer_bytes_uploaded=0) (committer_commits.failures=0) (stream_write_queue_duration=0) (committer_materialize_file.failures=0) (op_xattr_get_map=0) (stream_read_seek_policy_changed=21) (stream_aborted=0) (multipart_upload_aborted=0) (object_put_request_completed=46) (op_xattr_get_named_map.failures=0) (op_create.failures=0) (stream_write_queue_duration.failures=0) (stream_write_exceptions_completing_upload=0) (op_list_files.failures=0) (op_open=20) (committer_magic_marker_put.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_bytes_discarded_in_abort=0) (audit_span_creation=91) (action_http_head_request=66) (committer_tasks_completed=0) (files_created=23) (op_get_content_summary.failures=0) (committer_load_single_pending_file.failures=0) (op_abort=0) (op_rename.failures=0) (stream_write_bytes=1507328) (op_copy_from_local_file=0) (committer_magic_files_created=0) (stream_write_total_time=0) (committer_commits_created=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=23) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((committer_magic_marker_put.failures.min=-1) (committer_materialize_file.min=-1) (op_get_file_status.failures.min=-1) (op_access.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_exists.failures.min=-1) (op_get_file_status.min=5) (object_bulk_delete_request.min=7) (object_bulk_delete_request.failures.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.min=-1) (op_copy_from_local_file.min=-1) (op_createfile.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.failures.min=-1) (op_createfile.min=-1) (action_http_get_request.failures.min=-1) (op_list_files.min=-1) (op_create.failures.min=-1) (op_list_status.failures.min=-1) (object_delete_request.failures.min=-1) (op_create.min=6) (store_exists_probe.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_glob_status.failures.min=-1) (object_list_request.min=5) (op_delete.failures.min=-1) (object_delete_request.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.failures.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.min=-1) (op_get_file_checksum.min=-1) (op_exists.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_access.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=11) (op_is_directory.failures.min=-1) (op_mkdirs.min=24) (delegation_tokens_issued.min=-1) (action_file_opened.min=4) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.min=1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_rename.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.min=-1) (object_put_request.min=37) (committer_load_single_pending_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (multipart_upload_list.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_delete.min=26) (op_get_delegation_token.min=-1) (store_exists_probe.min=-1) (committer_commit_job.min=-1) (op_list_status.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_map.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.min=3) (object_list_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_list.failures.min=-1) (action_http_head_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (op_is_file.min=-1));
maximums=((multipart_upload_list.failures.max=-1) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_abort.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.failures.max=-1) (store_exists_probe.max=-1) (op_access.max=-1) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.failures.max=-1) (op_delete.failures.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (action_http_head_request.failures.max=-1) (action_executor_acquired.max=-1) (op_is_file.max=-1) (action_http_head_request.max=26) (op_create.max=53) (op_list_status.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.failures.max=-1) (object_put_request.max=101) (op_abort.failures.max=-1) (object_list_request.max=233) (op_get_file_status.max=5) (op_get_delegation_token.max=-1) (action_http_get_request.max=50) (op_get_file_checksum.failures.max=-1) (op_glob_status.max=-1) (op_access.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_is_directory.failures.max=-1) (op_createfile.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.max=-1) (op_delete.max=112) (object_list_request.failures.max=-1) (op_is_directory.max=-1) (op_exists.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_status.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (object_continue_list_request.max=-1) (object_multipart_aborted.failures.max=-1) (op_list_files.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=372) (op_xattr_get_named.max=-1) (op_exists.max=-1) (object_multipart_aborted.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=26) (object_bulk_delete_request.max=27) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.max=-1) (op_list_files.max=-1) (op_create.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.max=4) (op_copy_from_local_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1));
means=((stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=66, sum=382, mean=5.7879)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=92, sum=1147, mean=12.4674)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=471, mean=21.4091)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=46, sum=1696, mean=36.8696)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=23, sum=1259, mean=54.7391)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=23, sum=1243, mean=54.0435)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=23, sum=329, mean=14.3043)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=46, sum=703, mean=15.2826)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=142, mean=7.1000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:10,369 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:10,369 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,370 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,370 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,370 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,370 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=176&ts=1731778690369
2024-11-16 17:38:10,394 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.024s
2024-11-16 17:38:10,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,395 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,395 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,395 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,395 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=176&ts=1731778690369
2024-11-16 17:38:10,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,400 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:10,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:10,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:10,401 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000110&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=176&ts=1731778690369
2024-11-16 17:38:10,421 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:10,421 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:10,421 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.021s
2024-11-16 17:38:10,421 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:10,422 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,422 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,422 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,422 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,423 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000111 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000111&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=176&ts=1731778690422
2024-11-16 17:38:10,429 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:10,429 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,430 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,430 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13391117891847888112.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:10,431 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13391117891847888112.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (object_put_request=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_hsync=0) (op_abort=0) (stream_write_total_data=0) (object_multipart_aborted=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (stream_write_bytes=65536) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13391117891847888112.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,431 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,431 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:10,432 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13391117891847888112.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:10,432 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:10,432 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:10,432 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:10,432 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:10,432 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000111 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000111&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=41&ts=1731778690422
2024-11-16 17:38:10,476 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:10,476 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:10,477 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.045s
2024-11-16 17:38:10,477 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13391117891847888112.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:10,477 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13391117891847888112.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,477 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13391117891847888112.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,477 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:10,478 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,479 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (object_put_request.failures=0) (op_hsync=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (op_abort=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (object_put_request=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=44) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=44) (action_executor_acquired.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=44, mean=44.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:10,479 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:10,480 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:10,480 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:10,482 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:10,482 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,484 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:10,484 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:10,484 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:10,484 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:10,485 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:10,485 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:10,488 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:10,488 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:10,489 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:10,489 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:10,489 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='bd8356a9-cb14-4e33-9dc3-7db7a8230097', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:10,489 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='bd8356a9-cb14-4e33-9dc3-7db7a8230097', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:10,489 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='bd8356a9-cb14-4e33-9dc3-7db7a8230097', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:10,490 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:10,490 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:10,490 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:10,490 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:10,490 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:10,490 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:10,491 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a5fadd5]
2024-11-16 17:38:10,491 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a5fadd5]
2024-11-16 17:38:10,491 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:10,491 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:10,491 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:10,492 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:10,492 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:10,492 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:10,492 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:10,492 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:10,492 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:10,492 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:10,493 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:10,493 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:10,495 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:10,495 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:10,495 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:10,495 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:10,496 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:10,496 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:10,496 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:10,496 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:10,496 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:10,496 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:10,497 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:38:10,497 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:10,497 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:10,497 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:10,497 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:38:10,499 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:38:10,501 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,501 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,501 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:10,502 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] bd8356a9-cb14-4e33-9dc3-7db7a8230097-00000114 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/bd8356a9-cb14-4e33-9dc3-7db7a8230097-00000114/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=bd8356a9-cb14-4e33-9dc3-7db7a8230097-00000114&t0=176&fs=bd8356a9-cb14-4e33-9dc3-7db7a8230097&t1=176&ts=1731778690500
2024-11-16 17:38:10,502 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:10,502 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:38:10,503 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:10,504 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:10,517 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:10,517 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:10,517 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,518 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (action_http_get_request=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=0) (stream_read_vectored_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (action_file_opened=1) (stream_read_version_mismatches=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (stream_read_total_bytes=0) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_close_operations=1) (stream_read_exceptions=0) (stream_read_remote_stream_drain=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=16) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=16) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=16, mean=16.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,519 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:10,520 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:10,520 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:10,520 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@2eaf3eaa[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:38:10,520 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:10,520 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics6-leg-bucket
2024-11-16 17:38:10,521 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:10,521 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a5fadd5] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:10,521 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5a5fadd5] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:10,523 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((delegation_tokens_issued=0) (op_copy_from_local_file=0) (object_delete_objects=0) (committer_tasks_failed=0) (stream_read_operations=0) (stream_read_seek_backward_operations=0) (action_file_opened=1) (stream_write_total_data=0) (action_http_head_request=1) (committer_commits_completed=0) (stream_read_remote_stream_aborted.failures=0) (op_is_directory=0) (fake_directories_created=0) (stream_read_seek_forward_operations=0) (delegation_tokens_issued.failures=0) (op_get_file_status.failures=0) (store_exists_probe.failures=0) (action_http_head_request.failures=0) (op_createfile=0) (op_xattr_get_map.failures=0) (object_bulk_delete_request=0) (stream_read_close_operations=1) (object_put_bytes=0) (files_created=0) (stream_read_operations_incomplete=0) (object_put_request=0) (op_xattr_list.failures=0) (directories_created=0) (stream_write_block_uploads_aborted=0) (stream_read_vectored_incoming_ranges=0) (op_xattr_get_named.failures=0) (op_rename.failures=0) (audit_access_check_failure=0) (op_openfile=0) (op_copy_from_local_file.failures=0) (committer_magic_marker_put.failures=0) (op_xattr_get_named=0) (committer_load_single_pending_file.failures=0) (action_http_get_request.failures=0) (op_hsync=0) (object_multipart_aborted=0) (files_deleted=0) (op_hflush=0) (op_create.failures=0) (action_executor_acquired=0) (audit_failure=0) (op_createfile.failures=0) (op_is_directory.failures=0) (op_delete.failures=0) (object_list_request.failures=0) (op_access.failures=0) (op_glob_status=0) (files_copied_bytes=0) (multipart_upload_part_put_bytes=0) (multipart_upload_list.failures=0) (object_multipart_aborted.failures=0) (op_glob_status.failures=0) (op_get_file_checksum=0) (committer_stage_file_upload.failures=0) (stream_write_bytes=0) (committer_bytes_committed=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (op_xattr_get_named_map.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_started=0) (committer_bytes_uploaded=0) (op_list_files=0) (stream_read_remote_stream_aborted=0) (store_exists_probe=0) (stream_read_bytes=0) (action_http_get_request=0) (op_abort.failures=0) (stream_read_vectored_operations=0) (object_delete_request.failures=0) (committer_jobs_failed=0) (stream_read_vectored_read_bytes_discarded=0) (op_exists.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_queue_duration.failures=0) (object_list_request=0) (op_get_file_status=0) (op_create=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=0) (audit_span_creation=2) (op_get_file_checksum.failures=0) (stream_read_total_bytes=0) (object_multipart_initiated=0) (stream_write_block_uploads_committed=0) (op_access=0) (stream_read_seek_bytes_discarded=0) (committer_commit_job=0) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_close=0) (op_open=1) (stream_read_exceptions=0) (stream_write_block_uploads=0) (op_list_status.failures=0) (op_list_status=0) (op_is_file=0) (multipart_instantiated=0) (committer_commits_created=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (op_get_content_summary=0) (store_io_request=1) (op_rename=0) (committer_magic_marker_put=0) (multipart_upload_list=0) (object_delete_request=0) (store_io_throttled=0) (op_xattr_get_named_map=0) (op_abort=0) (directories_deleted=0) (stream_aborted=0) (committer_tasks_completed=0) (op_delete=0) (stream_write_exceptions_completing_upload=0) (committer_load_single_pending_file=0) (op_is_file.failures=0) (object_copy_requests=0) (fake_directories_deleted=0) (op_get_content_summary.failures=0) (files_delete_rejected=0) (op_exists=0) (committer_jobs_completed=0) (object_select_requests=0) (stream_write_total_time=0) (op_list_files.failures=0) (ignored_errors=0) (committer_commits_aborted=0) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_abort=0) (committer_magic_files_created=0) (op_create_non_recursive=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain=0) (op_mkdirs=0) (stream_read_seek_operations=0) (stream_read_unbuffered=0) (committer_materialize_file=0) (op_get_delegation_token.failures=0) (committer_commit_job.failures=0) (stream_write_queue_duration=0) (stream_read_closed=0) (committer_stage_file_upload=0) (action_file_opened.failures=0) (multipart_upload_completed=0) (audit_request_execution=1) (object_metadata_request=1) (object_put_request_completed=0) (op_list_located_status=0) (op_get_delegation_token=0) (committer_commits_reverted=0) (object_continue_list_request=0) (committer_commits.failures=0) (store_io_retry=0) (op_xattr_list=0) (stream_read_version_mismatches=0) (stream_read_opened=0) (committer_materialize_file.failures=0) (object_bulk_delete_request.failures=0) (stream_write_exceptions=0) (stream_read_fully_operations=0) (op_xattr_get_map=0) (object_continue_list_request.failures=0) (files_copied=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_active=0));
minimums=((object_continue_list_request.failures.min=-1) (op_access.min=-1) (op_exists.min=-1) (action_file_opened.min=16) (op_mkdirs.failures.min=-1) (op_create.min=-1) (object_multipart_initiated.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=-1) (op_mkdirs.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (object_bulk_delete_request.min=-1) (op_createfile.min=-1) (op_is_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.failures.min=-1) (op_createfile.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_list.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_head_request.min=16) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.min=-1) (op_access.failures.min=-1) (object_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=-1) (action_file_opened.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_map.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_named.failures.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (multipart_upload_list.min=-1) (op_list_status.failures.min=-1) (op_create.failures.min=-1) (object_put_request.failures.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.min=-1) (op_get_file_checksum.failures.min=-1) (object_continue_list_request.min=-1) (op_exists.failures.min=-1) (store_exists_probe.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named.min=-1));
maximums=((store_exists_probe.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (op_get_content_summary.max=-1) (op_createfile.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.max=-1) (object_delete_request.max=-1) (op_xattr_list.max=-1) (op_mkdirs.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_rename.max=-1) (op_access.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.max=-1) (action_http_get_request.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.failures.max=-1) (op_is_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_head_request.max=16) (op_abort.failures.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.failures.max=-1) (multipart_upload_list.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=-1) (object_multipart_initiated.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (object_put_request.max=-1) (op_delete.max=-1) (op_get_delegation_token.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (op_list_status.max=-1) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (op_abort.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_write_queue_duration.max=-1) (committer_magic_marker_put.max=-1) (action_file_opened.max=16) (op_access.failures.max=-1) (object_list_request.failures.max=-1) (op_get_content_summary.failures.max=-1));
means=((op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=16, mean=16.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=16, mean=16.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,524 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:10,524 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,524 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,524 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=176&ts=1731778690524
2024-11-16 17:38:10,528 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,528 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,528 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=176&ts=1731778690524
2024-11-16 17:38:10,540 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:10,540 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:10,540 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:10,540 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:10,540 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:10,541 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:10,541 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:10,541 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:10,541 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:10,541 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:10,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:10,541 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:10,544 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:10,545 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:10,545 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,545 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [178] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=178&ts=1731778690524
2024-11-16 17:38:10,555 [s3a-transfer-leg-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:10,555 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:38:10,555 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:10,555 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:10,555 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:10,555 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778690470; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:10,555 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:10,555 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:10,555 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:10,559 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:10,559 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:10,559 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:10,559 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:10,559 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:10,559 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,559 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,559 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:10,559 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,560 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=43&ts=1731778690524
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:10,571 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,572 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000115&t0=176&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=43&ts=1731778690524
2024-11-16 17:38:10,581 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:10,582 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:10,582 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:38:10,582 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:38:10,586 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:38:10,586 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.045s
2024-11-16 17:38:10,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:10,586 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:10,587 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:10,602 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 30, active threads = 0, queued tasks = 0, completed tasks = 30], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_block_uploads_committed=0) (op_rename.failures=0) (committer_commits_created=0) (store_exists_probe.failures=0) (object_put_request.failures=0) (op_hsync=0) (multipart_upload_list.failures=0) (object_put_bytes=1572864) (object_list_request.failures=0) (op_access=0) (committer_load_single_pending_file=0) (committer_commit_job.failures=0) (action_file_opened.failures=0) (files_deleted=24) (op_delete=24) (op_mkdirs=24) (op_is_directory=0) (files_delete_rejected=0) (op_list_files.failures=0) (stream_read_version_mismatches=0) (committer_commit_job=0) (object_delete_request.failures=0) (action_http_head_request=68) (store_exists_probe=0) (op_hflush=0) (op_xattr_get_map=0) (stream_write_block_uploads=24) (op_list_files=0) (stream_write_exceptions=0) (op_xattr_get_map.failures=0) (op_get_file_status.failures=0) (op_xattr_get_named_map=0) (committer_stage_file_upload.failures=0) (committer_commits_completed=0) (object_put_request=48) (stream_read_exceptions=0) (stream_write_queue_duration=0) (op_get_content_summary=0) (audit_request_execution=282) (multipart_upload_part_put_bytes=0) (op_create=24) (op_xattr_list=0) (action_file_opened=20) (object_multipart_aborted.failures=0) (op_abort=0) (committer_tasks_completed=0) (committer_commits_reverted=0) (delegation_tokens_issued=0) (multipart_instantiated=0) (committer_jobs_completed=0) (files_copied=0) (action_http_get_request=22) (stream_read_seek_bytes_discarded=0) (op_get_content_summary.failures=0) (stream_read_closed=3) (committer_magic_marker_put=0) (op_delete.failures=0) (stream_read_bytes_discarded_in_close=196008) (op_list_status.failures=0) (op_mkdirs.failures=0) (multipart_upload_list=0) (stream_read_remote_stream_drain=3) (op_glob_status=0) (committer_magic_marker_put.failures=0) (stream_read_operations_incomplete=0) (committer_bytes_committed=0) (committer_commits.failures=0) (committer_materialize_file.failures=0) (stream_read_seek_backward_operations=0) (op_xattr_list.failures=0) (object_delete_request=0) (op_exists.failures=0) (op_rename=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=6663) (object_metadata_request=68) (stream_read_vectored_read_bytes_discarded=24523) (stream_read_vectored_combined_ranges=21) (stream_read_close_operations=20) (op_list_status=0) (stream_read_remote_stream_aborted.failures=0) (op_open=20) (object_list_request=96) (op_copy_from_local_file.failures=0) (op_xattr_get_named=0) (store_io_throttled=0) (stream_aborted=0) (op_get_file_checksum=0) (store_io_retry=0) (fake_directories_created=0) (stream_read_fully_operations=1) (stream_write_queue_duration.failures=0) (op_create_non_recursive=0) (committer_materialize_file=0) (object_bulk_delete_request.failures=0) (op_get_delegation_token=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=1) (op_copy_from_local_file=0) (store_io_request=282) (op_get_file_checksum.failures=0) (stream_read_total_bytes=202671) (object_continue_list_request.failures=0) (stream_write_total_time=0) (op_get_delegation_token.failures=0) (fake_directories_deleted=24) (committer_magic_files_created=0) (stream_read_seek_bytes_skipped=0) (directories_created=24) (action_http_get_request.failures=0) (op_access.failures=0) (op_is_directory.failures=0) (stream_read_operations=3) (stream_read_bytes_discarded_in_abort=0) (stream_write_bytes=1572864) (stream_read_vectored_operations=16) (action_executor_acquired=0) (object_continue_list_request=0) (stream_read_seek_operations=0) (audit_span_creation=94) (multipart_upload_completed=0) (op_create.failures=0) (object_select_requests=0) (stream_write_total_data=3145728) (op_glob_status.failures=0) (delegation_tokens_issued.failures=0) (op_abort.failures=0) (audit_failure=0) (op_get_file_status=1) (stream_write_exceptions_completing_upload=0) (stream_read_opened=3) (object_put_request_completed=48) (object_delete_objects=48) (files_copied_bytes=0) (object_multipart_aborted=0) (stream_read_seek_forward_operations=0) (object_copy_requests=0) (op_openfile=0) (multipart_upload_aborted=0) (directories_deleted=0) (committer_stage_file_upload=0) (committer_jobs_failed=0) (action_http_head_request.failures=0) (stream_write_block_uploads_aborted=0) (op_list_located_status=0) (stream_read_remote_stream_aborted=0) (committer_commits_aborted=0) (committer_tasks_failed=0) (object_multipart_initiated=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_part_put=0) (multipart_upload_started=0) (object_multipart_initiated.failures=0) (op_is_file.failures=0) (files_created=24) (audit_access_check_failure=0) (op_xattr_get_named_map.failures=0) (ignored_errors=0) (stream_read_vectored_incoming_ranges=50) (stream_read_seek_policy_changed=21) (action_executor_acquired.failures=0) (object_bulk_delete_request=48) (op_is_file=0) (committer_bytes_uploaded=0) (committer_load_single_pending_file.failures=0) (op_createfile.failures=0) (op_createfile=0) (op_exists=0) (op_xattr_get_named.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=24) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((op_is_file.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.min=5) (committer_commit_job.min=-1) (op_get_file_checksum.min=-1) (multipart_upload_list.min=-1) (object_multipart_aborted.min=-1) (op_is_directory.failures.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_bulk_delete_request.min=7) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.failures.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.failures.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.failures.min=-1) (op_is_file.failures.min=-1) (op_access.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_named.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_create.min=6) (op_xattr_list.min=-1) (op_copy_from_local_file.failures.min=-1) (op_delete.failures.min=-1) (op_access.failures.min=-1) (committer_load_single_pending_file.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (committer_stage_file_upload.min=-1) (store_exists_probe.min=-1) (op_glob_status.failures.min=-1) (object_list_request.min=5) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.failures.min=-1) (op_rename.failures.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.min=26) (op_xattr_get_named_map.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_status.failures.min=-1) (op_glob_status.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_map.min=-1) (op_exists.min=-1) (op_xattr_list.failures.min=-1) (op_abort.min=-1) (action_http_head_request.min=3) (op_copy_from_local_file.min=-1) (op_list_files.min=-1) (object_delete_request.failures.min=-1) (op_rename.min=-1) (op_mkdirs.min=24) (action_http_get_request.min=11) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_multipart_aborted.failures.min=-1) (action_file_opened.min=4) (op_get_delegation_token.failures.min=-1) (object_put_request.min=44) (op_get_file_checksum.failures.min=-1) (op_is_directory.min=-1));
maximums=((op_delete.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=26) (store_exists_probe.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.max=-1) (op_is_directory.failures.max=-1) (object_put_request.max=101) (committer_materialize_file.max=-1) (op_access.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_glob_status.max=-1) (committer_commit_job.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.max=27) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (op_rename.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_rename.failures.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.max=26) (store_exists_probe.failures.max=-1) (op_abort.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_materialize_file.failures.max=-1) (multipart_upload_list.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.failures.max=-1) (op_glob_status.failures.max=-1) (op_get_file_status.max=5) (op_exists.max=-1) (op_is_directory.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.max=-1) (object_list_request.max=233) (op_get_file_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=112) (op_mkdirs.max=372) (op_createfile.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_file.max=-1) (op_abort.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (op_list_status.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (op_mkdirs.failures.max=-1) (op_create.max=53) (action_http_get_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_http_get_request.max=50));
means=((action_http_head_request.mean=(samples=68, sum=391, mean=5.7500)) (op_mkdirs.mean=(samples=24, sum=1296, mean=54.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=96, sum=1200, mean=12.5000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=142, mean=7.1000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=24, sum=337, mean=14.0417)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=48, sum=724, mean=15.0833)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=24, sum=1304, mean=54.3333)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=471, mean=21.4091)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=48, sum=1760, mean=36.6667)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:10,603 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:10,603 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,603 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,603 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,603 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,604 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=179&ts=1731778690603
2024-11-16 17:38:10,610 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:10,610 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,610 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,610 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,610 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,610 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=179&ts=1731778690603
2024-11-16 17:38:10,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,613 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:10,614 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:10,614 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:10,614 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000116&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=179&ts=1731778690603
2024-11-16 17:38:10,634 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:10,634 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:10,634 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.021s
2024-11-16 17:38:10,635 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:10,635 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,635 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,635 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,635 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,635 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000117 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000117&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=179&ts=1731778690635
2024-11-16 17:38:10,648 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:10,649 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,649 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,650 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13248899776691195149.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:10,651 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13248899776691195149.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (object_put_request.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (op_hsync=0) (op_abort=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_put_request=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13248899776691195149.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,652 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,652 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:10,653 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13248899776691195149.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:10,653 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:10,653 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:10,653 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:10,653 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000117 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000117&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=44&ts=1731778690635
2024-11-16 17:38:10,655 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:10,685 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:10,685 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:10,685 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.032s
2024-11-16 17:38:10,685 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13248899776691195149.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:10,685 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13248899776691195149.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,685 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13248899776691195149.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,685 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:10,686 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (object_multipart_aborted=0) (object_put_request=1) (multipart_upload_completed=0) (stream_write_total_time=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (op_abort=0) (op_abort.failures=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (stream_write_total_data=65536) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=32) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.max=32) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=32, mean=32.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:10,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:10,688 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:10,688 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:10,689 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:10,689 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:10,691 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='8478fb15-40a0-4b67-93a9-df0c285d83e2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='8478fb15-40a0-4b67-93a9-df0c285d83e2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='8478fb15-40a0-4b67-93a9-df0c285d83e2', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:10,692 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@42a25529]
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@42a25529]
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:10,693 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:10,694 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:10,694 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:10,694 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:10,695 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:10,696 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:10,697 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:38:10,697 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:10,697 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:10,697 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:10,697 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:38:10,697 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:38:10,698 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,698 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,698 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:10,698 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 8478fb15-40a0-4b67-93a9-df0c285d83e2-00000120 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/8478fb15-40a0-4b67-93a9-df0c285d83e2-00000120/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=8478fb15-40a0-4b67-93a9-df0c285d83e2-00000120&t0=179&fs=8478fb15-40a0-4b67-93a9-df0c285d83e2&t1=179&ts=1731778690698
2024-11-16 17:38:10,698 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:10,699 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:38:10,699 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:10,699 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:10,704 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:10,704 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:10,704 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,705 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=0) (action_http_get_request.failures=0) (stream_read_operations=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted=0) (stream_aborted=0) (action_file_opened=1) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_block_read=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_opened=0) (stream_read_unbuffered=0) (stream_read_total_bytes=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=6) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=6) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,706 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:10,707 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:10,707 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:10,707 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@77688df9[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:38:10,707 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:10,707 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics7-leg-bucket
2024-11-16 17:38:10,707 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:10,707 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@42a25529] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:10,708 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@42a25529] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:10,709 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((store_exists_probe.failures=0) (audit_request_execution=1) (action_file_opened=1) (object_list_request=0) (object_bulk_delete_request=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (audit_span_creation=2) (op_get_delegation_token.failures=0) (committer_commits_aborted=0) (op_access.failures=0) (stream_read_remote_stream_drain=0) (object_bulk_delete_request.failures=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted.failures=0) (op_hsync=0) (stream_read_opened=0) (op_createfile=0) (op_list_located_status=0) (stream_read_bytes=0) (action_executor_acquired.failures=0) (op_openfile=0) (stream_read_seek_operations=0) (op_rename.failures=0) (object_delete_objects=0) (op_xattr_get_named.failures=0) (multipart_upload_part_put=0) (stream_read_bytes_discarded_in_abort=0) (op_abort=0) (stream_read_seek_backward_operations=0) (object_copy_requests=0) (op_list_files.failures=0) (action_file_opened.failures=0) (op_get_content_summary=0) (fake_directories_created=0) (committer_materialize_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_closed=0) (committer_commits_created=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_started=0) (op_is_directory=0) (op_xattr_get_map.failures=0) (op_create.failures=0) (stream_write_total_time=0) (op_create_non_recursive=0) (stream_write_queue_duration.failures=0) (op_exists=0) (committer_load_single_pending_file.failures=0) (audit_failure=0) (committer_commits_completed=0) (multipart_upload_part_put_bytes=0) (stream_read_unbuffered=0) (object_delete_request=0) (op_xattr_get_named=0) (directories_created=0) (stream_write_block_uploads_aborted=0) (stream_read_operations_incomplete=0) (op_get_delegation_token=0) (stream_write_exceptions=0) (op_get_content_summary.failures=0) (directories_deleted=0) (object_multipart_aborted.failures=0) (op_xattr_get_named_map=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (committer_materialize_file=0) (object_list_request.failures=0) (op_get_file_status.failures=0) (op_hflush=0) (action_http_head_request.failures=0) (stream_read_remote_stream_aborted=0) (op_copy_from_local_file.failures=0) (committer_stage_file_upload=0) (op_xattr_list.failures=0) (op_createfile.failures=0) (stream_read_vectored_incoming_ranges=0) (op_open=1) (stream_read_version_mismatches=0) (object_put_bytes=0) (committer_stage_file_upload.failures=0) (stream_write_queue_duration=0) (files_copied=0) (stream_write_block_uploads=0) (op_list_status.failures=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (op_access=0) (op_xattr_list=0) (store_io_request=1) (fake_directories_deleted=0) (op_rename=0) (committer_commits_reverted=0) (committer_jobs_failed=0) (op_abort.failures=0) (op_get_file_checksum=0) (object_delete_request.failures=0) (op_is_file=0) (committer_bytes_uploaded=0) (delegation_tokens_issued=0) (committer_commit_job.failures=0) (store_io_retry=0) (op_list_status=0) (stream_read_remote_stream_drain.failures=0) (op_mkdirs.failures=0) (stream_write_bytes=0) (op_exists.failures=0) (op_create=0) (op_xattr_get_map=0) (committer_magic_files_created=0) (op_delete=0) (committer_commits.failures=0) (op_is_directory.failures=0) (op_delete.failures=0) (files_created=0) (files_deleted=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (object_metadata_request=1) (object_put_request=0) (stream_read_seek_policy_changed=1) (object_multipart_initiated=0) (committer_tasks_completed=0) (op_copy_from_local_file=0) (multipart_upload_completed=0) (stream_read_exceptions=0) (ignored_errors=0) (committer_tasks_failed=0) (stream_read_seek_bytes_skipped=0) (files_copied_bytes=0) (op_glob_status.failures=0) (stream_read_vectored_operations=0) (store_exists_probe=0) (op_list_files=0) (stream_read_fully_operations=0) (op_mkdirs=0) (stream_read_bytes_discarded_in_close=0) (action_http_head_request=1) (committer_commit_job=0) (object_continue_list_request.failures=0) (multipart_upload_list.failures=0) (object_put_request_completed=0) (multipart_upload_aborted=0) (stream_read_total_bytes=0) (object_multipart_aborted=0) (store_io_throttled=0) (delegation_tokens_issued.failures=0) (action_http_get_request=0) (multipart_upload_list=0) (object_select_requests=0) (committer_load_single_pending_file=0) (committer_magic_marker_put=0) (files_delete_rejected=0) (stream_read_bytes_backwards_on_seek=0) (multipart_instantiated=0) (audit_access_check_failure=0) (op_is_file.failures=0) (action_executor_acquired=0) (op_glob_status=0) (committer_bytes_committed=0) (stream_read_vectored_combined_ranges=0) (op_get_file_status=0) (op_xattr_get_named_map.failures=0) (object_continue_list_request=0) (stream_write_block_uploads_committed=0) (op_get_file_checksum.failures=0) (committer_jobs_completed=0) (stream_read_operations=0) (object_put_request.failures=0));
gauges=((stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_http_get_request.min=-1) (committer_load_single_pending_file.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_get_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (action_file_opened.min=6) (object_put_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_delete.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.min=-1) (op_delete.failures.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.min=-1) (op_create.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.failures.min=-1) (op_mkdirs.min=-1) (op_xattr_list.min=-1) (op_exists.failures.min=-1) (object_list_request.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.min=-1) (multipart_upload_list.min=-1) (committer_magic_marker_put.min=-1) (action_http_head_request.min=6) (op_rename.failures.min=-1) (action_executor_acquired.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=-1) (delegation_tokens_issued.min=-1) (op_rename.min=-1) (op_xattr_list.failures.min=-1) (committer_materialize_file.min=-1) (op_createfile.min=-1) (op_xattr_get_named.failures.min=-1) (op_abort.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (op_access.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.min=-1) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_list_status.failures.min=-1) (op_list_status.min=-1) (object_put_request.min=-1) (op_is_file.min=-1));
maximums=((action_http_head_request.max=6) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (op_list_status.max=-1) (op_get_file_status.max=-1) (op_abort.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (action_executor_acquired.max=-1) (op_glob_status.failures.max=-1) (object_bulk_delete_request.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_checksum.max=-1) (object_multipart_initiated.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_list_request.max=-1) (op_get_content_summary.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_glob_status.max=-1) (op_access.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_directory.failures.max=-1) (op_create.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (op_xattr_list.failures.max=-1) (multipart_upload_list.max=-1) (store_exists_probe.max=-1) (action_http_get_request.max=-1) (op_get_delegation_token.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (op_access.max=-1) (op_mkdirs.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.failures.max=-1) (op_create.failures.max=-1) (object_delete_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_createfile.failures.max=-1) (object_put_request.failures.max=-1) (op_delete.max=-1) (op_xattr_get_named_map.max=-1) (op_createfile.max=-1) (op_xattr_list.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=6) (op_is_file.max=-1) (op_list_files.max=-1) (object_multipart_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_rename.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_rename.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.max=-1) (committer_stage_file_upload.max=-1) (object_multipart_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_named.max=-1) (op_exists.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named.failures.max=-1));
means=((op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=6, mean=6.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,710 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:10,710 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,710 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,710 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=179&ts=1731778690710
2024-11-16 17:38:10,714 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,714 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,714 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=179&ts=1731778690710
2024-11-16 17:38:10,722 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:10,722 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:10,722 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:10,723 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:10,723 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:10,723 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:10,723 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:10,723 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:10,723 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:10,723 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:10,723 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:10,723 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:10,724 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:10,724 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:10,724 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,724 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=181&ts=1731778690710
2024-11-16 17:38:10,731 [s3a-transfer-leg-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:10,732 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:38:10,732 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:10,732 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:10,732 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:10,732 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778690680; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:10,732 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:10,733 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:10,733 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:10,733 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:10,733 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:10,733 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:10,733 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:10,733 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,733 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,734 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:10,734 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,734 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=45&ts=1731778690710
2024-11-16 17:38:10,734 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:10,743 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,744 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000121&t0=179&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=45&ts=1731778690710
2024-11-16 17:38:10,758 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:38:10,758 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:38:10,758 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:38:10,758 [s3a-transfer-leg-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:38:10,758 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:38:10,758 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.035s
2024-11-16 17:38:10,758 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:10,758 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:10,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:10,777 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 31, active threads = 0, queued tasks = 0, completed tasks = 31], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request=100) (stream_read_vectored_incoming_ranges=50) (op_create=25) (object_delete_request.failures=0) (stream_read_seek_bytes_discarded=0) (op_create.failures=0) (committer_tasks_completed=0) (op_delete.failures=0) (stream_read_remote_stream_drain=3) (stream_write_exceptions_completing_upload=0) (op_get_delegation_token=0) (op_get_file_checksum.failures=0) (stream_read_seek_operations=0) (multipart_upload_part_put=0) (committer_materialize_file=0) (stream_read_close_operations=20) (object_delete_objects=50) (object_put_bytes=1638400) (multipart_instantiated=0) (store_exists_probe.failures=0) (committer_bytes_committed=0) (op_copy_from_local_file=0) (committer_tasks_failed=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=1) (committer_jobs_completed=0) (stream_read_total_bytes=202671) (committer_commits.failures=0) (op_xattr_get_named=0) (stream_read_operations_incomplete=0) (object_bulk_delete_request=50) (committer_commit_job=0) (committer_bytes_uploaded=0) (op_get_content_summary=0) (op_exists=0) (stream_read_bytes=6663) (op_mkdirs=25) (store_io_retry=0) (stream_read_unbuffered=1) (op_xattr_get_map.failures=0) (object_multipart_aborted=0) (op_openfile=0) (op_rename=0) (object_multipart_initiated=0) (stream_write_total_time=0) (op_get_file_status=1) (stream_read_seek_backward_operations=0) (multipart_upload_list=0) (stream_write_queue_duration.failures=0) (op_xattr_list.failures=0) (op_create_non_recursive=0) (files_deleted=25) (stream_write_block_uploads=25) (committer_commits_created=0) (op_list_status.failures=0) (audit_access_check_failure=0) (committer_commit_job.failures=0) (op_open=20) (op_is_file=0) (stream_write_block_uploads_aborted=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_list.failures=0) (action_executor_acquired.failures=0) (stream_read_closed=3) (files_copied=0) (multipart_upload_completed=0) (committer_load_single_pending_file.failures=0) (op_createfile=0) (op_list_located_status=0) (audit_failure=0) (object_delete_request=0) (op_is_directory=0) (stream_write_total_data=3276800) (op_list_files=0) (stream_read_seek_policy_changed=21) (op_is_file.failures=0) (multipart_upload_aborted=0) (stream_read_vectored_combined_ranges=21) (op_xattr_get_named_map=0) (action_executor_acquired=0) (committer_commits_aborted=0) (stream_read_operations=3) (op_is_directory.failures=0) (op_xattr_get_map=0) (delegation_tokens_issued=0) (op_mkdirs.failures=0) (op_glob_status=0) (fake_directories_deleted=25) (multipart_upload_abort_under_path_invoked=0) (action_http_head_request=70) (committer_magic_marker_put=0) (op_glob_status.failures=0) (action_file_opened.failures=0) (stream_read_vectored_operations=16) (op_get_file_status.failures=0) (object_list_request.failures=0) (op_xattr_get_named.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (committer_stage_file_upload=0) (op_abort.failures=0) (audit_span_creation=97) (audit_request_execution=292) (op_access.failures=0) (op_abort=0) (ignored_errors=0) (files_copied_bytes=0) (object_continue_list_request.failures=0) (stream_write_queue_duration=0) (action_http_get_request.failures=0) (op_access=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened=20) (object_copy_requests=0) (files_created=25) (store_io_request=292) (multipart_upload_started=0) (store_io_throttled=0) (object_multipart_initiated.failures=0) (op_hflush=0) (op_hsync=0) (stream_write_block_uploads_committed=0) (action_http_get_request=22) (files_delete_rejected=0) (committer_jobs_failed=0) (delegation_tokens_issued.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_list=0) (object_put_request=50) (object_put_request_completed=50) (committer_magic_files_created=0) (op_rename.failures=0) (stream_read_bytes_discarded_in_close=196008) (committer_commits_reverted=0) (op_delete=25) (multipart_upload_part_put_bytes=0) (stream_read_vectored_read_bytes_discarded=24523) (op_xattr_get_named_map.failures=0) (op_get_content_summary.failures=0) (committer_magic_marker_put.failures=0) (stream_aborted=0) (directories_created=25) (op_list_files.failures=0) (op_createfile.failures=0) (object_select_requests=0) (stream_read_version_mismatches=0) (op_get_file_checksum=0) (object_bulk_delete_request.failures=0) (action_http_head_request.failures=0) (committer_materialize_file.failures=0) (object_multipart_aborted.failures=0) (object_metadata_request=70) (object_continue_list_request=0) (directories_deleted=0) (op_copy_from_local_file.failures=0) (stream_write_bytes=1638400) (op_list_status=0) (stream_write_exceptions=0) (op_get_delegation_token.failures=0) (committer_stage_file_upload.failures=0) (op_exists.failures=0) (committer_commits_completed=0) (store_exists_probe=0) (committer_load_single_pending_file=0) (stream_read_exceptions=0) (object_put_request.failures=0) (fake_directories_created=0) (stream_read_opened=3));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=25) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0));
minimums=((op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.min=-1) (action_http_get_request.min=11) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_multipart_aborted.failures.min=-1) (store_exists_probe.min=-1) (committer_stage_file_upload.failures.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.min=-1) (op_is_file.failures.min=-1) (object_list_request.failures.min=-1) (op_is_file.min=-1) (op_createfile.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.failures.min=-1) (op_list_status.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.min=3) (object_bulk_delete_request.min=7) (op_delete.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_files.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_delegation_token.min=-1) (object_list_request.min=5) (op_access.min=-1) (object_delete_request.failures.min=-1) (op_list_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_file_opened.min=4) (op_glob_status.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (op_delete.min=26) (op_exists.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_status.min=5) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.failures.min=-1) (object_put_request.min=32) (object_put_request.failures.min=-1) (op_create.min=6) (op_exists.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (committer_commit_job.failures.min=-1) (action_file_opened.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (op_rename.failures.min=-1) (op_xattr_list.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_get_map.min=-1) (delegation_tokens_issued.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=24) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.failures.min=-1));
maximums=((op_delete.max=112) (action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.max=50) (action_file_opened.max=26) (op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_aborted.max=-1) (committer_materialize_file.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_create.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_materialize_file.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.max=4) (op_get_content_summary.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_mkdirs.max=372) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (op_rename.failures.max=-1) (op_glob_status.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.max=-1) (action_http_head_request.max=26) (op_is_directory.max=-1) (object_list_request.failures.max=-1) (object_bulk_delete_request.max=27) (object_continue_list_request.max=-1) (op_mkdirs.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.max=101) (object_delete_request.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_status.max=5) (op_xattr_get_named.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.max=233) (op_is_file.max=-1) (op_is_file.failures.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (op_abort.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.max=53) (op_rename.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_write_queue_duration.max=-1) (op_delete.failures.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1));
means=((committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=471, mean=21.4091)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=25, sum=1328, mean=53.1200)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=50, sum=1812, mean=36.2400)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=100, sum=1235, mean=12.3500)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=50, sum=747, mean=14.9400)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=25, sum=1339, mean=53.5600)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=142, mean=7.1000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=70, sum=398, mean=5.6857)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=25, sum=353, mean=14.1200)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:10,778 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:10,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,778 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,778 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690778
2024-11-16 17:38:10,783 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:10,783 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,784 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,784 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690778
2024-11-16 17:38:10,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,787 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:10,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:10,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:10,787 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000122&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690778
2024-11-16 17:38:10,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:10,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:10,800 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:38:10,800 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:10,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,801 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,801 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,801 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000123 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000123&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690800
2024-11-16 17:38:10,807 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:10,807 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,807 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,807 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10677242792373708157.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:10,808 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10677242792373708157.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (stream_write_total_data=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_total_time=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (object_put_request=0) (committer_magic_marker_put=0) (op_hsync=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10677242792373708157.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,808 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,808 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:10,808 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10677242792373708157.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:10,808 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:10,809 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:10,809 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:10,809 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:10,809 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000123 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000123&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=47&ts=1731778690800
2024-11-16 17:38:10,851 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:10,852 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:10,852 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:38:10,852 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10677242792373708157.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:10,852 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10677242792373708157.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,852 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10677242792373708157.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,852 [s3a-transfer-leg-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:10,852 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,854 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (object_put_request=1) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (op_abort=0) (object_multipart_initiated=0) (op_hsync=0) (op_abort.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (op_hflush=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=42) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_put_request.max=42) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:10,854 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:10,855 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,855 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,855 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:10,855 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000124 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000124&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690855
2024-11-16 17:38:10,865 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:10,865 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:10,866 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,866 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:10,866 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:10,866 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:10,866 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:10,866 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:10,866 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:38:10,867 [s3a-transfer-leg-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:10,867 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_bytes=0) (stream_read_seek_operations=0) (action_http_get_request=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_seek_forward_operations=0) (stream_read_block_read=0) (action_executor_acquired.failures=0) (stream_read_opened=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_total_bytes=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=1) (stream_read_closed=0) (stream_read_vectored_incoming_ranges=2) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_close_operations=1) (stream_read_vectored_operations=1) (stream_read_seek_policy_changed=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=10) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=10) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,869 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,869 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,869 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:10,870 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000125 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000125&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690869
2024-11-16 17:38:10,873 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:10,873 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:10,873 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,873 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:10,874 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:10,874 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:10,874 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:10,874 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:10,874 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:10,874 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:10,874 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [50] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000125 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000125&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=50&ts=1731778690869
2024-11-16 17:38:10,883 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.009s
2024-11-16 17:38:10,884 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:10,884 [s3a-transfer-leg-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:10,885 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (stream_read_block_read=0) (stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes=150) (action_http_get_request=1) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=150) (stream_read_vectored_read_bytes_discarded=10) (stream_read_vectored_incoming_ranges=2) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_operations=0) (stream_read_fully_operations=0) (action_file_opened=1) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_drain=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_operations=1) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_prefetch_operations.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=10) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=4) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=10) (stream_read_prefetch_operations.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:10,886 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:10,886 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,886 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,886 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690886
2024-11-16 17:38:10,890 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,890 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,890 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=182&ts=1731778690886
2024-11-16 17:38:10,901 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:10,901 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:10,901 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:10,902 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:10,902 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:10,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:10,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:10,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:10,902 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:10,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:10,902 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:10,902 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:10,902 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:10,903 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:10,903 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,903 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [183] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=183&ts=1731778690886
2024-11-16 17:38:10,909 [s3a-transfer-leg-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:10,909 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:10,909 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:10,909 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:10,909 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:10,910 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778690838; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:10,910 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:10,910 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:10,910 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:10,910 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:10,910 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:10,910 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:10,911 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:10,911 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:10,911 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,911 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,911 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:10,911 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,911 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=51&ts=1731778690886
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:10,922 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000126&t0=182&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=51&ts=1731778690886
2024-11-16 17:38:10,929 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:38:10,929 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:38:10,930 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:38:10,930 [s3a-transfer-leg-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:38:10,930 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:38:10,930 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:38:10,930 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:10,930 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:10,933 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:10,943 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 32, active threads = 0, queued tasks = 0, completed tasks = 32], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_rename=0) (action_file_opened.failures=0) (committer_load_single_pending_file.failures=0) (multipart_upload_list.failures=0) (op_delete=26) (stream_read_remote_stream_aborted.failures=0) (op_copy_from_local_file.failures=0) (committer_materialize_file=0) (audit_access_check_failure=0) (action_http_get_request.failures=0) (delegation_tokens_issued=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named.failures=0) (op_is_file.failures=0) (object_delete_objects=52) (stream_write_total_data=3407872) (fake_directories_deleted=26) (committer_materialize_file.failures=0) (op_list_status=0) (committer_stage_file_upload.failures=0) (store_exists_probe.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_operations=0) (stream_read_closed=3) (stream_read_total_bytes=202821) (object_select_requests=0) (stream_write_bytes=1703936) (op_openfile=0) (ignored_errors=0) (multipart_upload_aborted=0) (op_xattr_list.failures=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_get_named=0) (committer_magic_marker_put.failures=0) (object_continue_list_request=0) (op_access=0) (files_deleted=26) (stream_read_seek_backward_operations=0) (stream_write_exceptions_completing_upload=0) (stream_read_unbuffered=1) (op_access.failures=0) (stream_read_close_operations=22) (object_list_request.failures=0) (committer_jobs_completed=0) (committer_commits_reverted=0) (object_multipart_initiated=0) (committer_magic_files_created=0) (stream_read_exceptions=0) (op_abort=0) (audit_request_execution=305) (op_xattr_list=0) (stream_read_seek_forward_operations=0) (committer_bytes_uploaded=0) (multipart_upload_started=0) (action_file_opened=22) (object_bulk_delete_request=52) (multipart_instantiated=0) (op_get_content_summary.failures=0) (committer_stage_file_upload=0) (stream_read_bytes_discarded_in_abort=0) (object_metadata_request=74) (object_multipart_initiated.failures=0) (op_list_status.failures=0) (committer_load_single_pending_file=0) (op_exists.failures=0) (stream_read_vectored_operations=18) (committer_magic_marker_put=0) (stream_read_version_mismatches=0) (op_get_file_checksum=0) (op_hsync=0) (store_io_request=305) (op_glob_status=0) (stream_read_remote_stream_aborted=0) (op_abort.failures=0) (stream_aborted=0) (op_xattr_get_named_map.failures=0) (op_createfile.failures=0) (stream_read_vectored_incoming_ranges=54) (committer_jobs_failed=0) (op_list_files.failures=0) (object_put_request.failures=0) (op_get_delegation_token.failures=0) (object_multipart_aborted.failures=0) (object_delete_request.failures=0) (op_get_file_status=1) (stream_write_total_time=0) (store_exists_probe=0) (action_executor_acquired=0) (directories_created=26) (action_http_head_request=74) (multipart_upload_abort_under_path_invoked=0) (action_http_head_request.failures=0) (stream_read_operations=3) (audit_span_creation=102) (store_io_retry=0) (directories_deleted=0) (stream_read_bytes_discarded_in_close=196008) (op_is_file=0) (stream_write_block_uploads=26) (op_xattr_get_named_map=0) (object_delete_request=0) (stream_write_block_uploads_aborted=0) (object_multipart_aborted=0) (op_create_non_recursive=0) (stream_write_block_uploads_committed=0) (store_io_throttled=0) (stream_read_vectored_combined_ranges=23) (op_list_located_status=0) (multipart_upload_part_put=0) (op_create.failures=0) (op_xattr_get_map=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=24533) (committer_bytes_committed=0) (committer_tasks_failed=0) (op_mkdirs=26) (object_put_request=52) (stream_read_opened=3) (stream_read_seek_bytes_skipped=0) (op_xattr_get_map.failures=0) (multipart_upload_list=0) (stream_read_seek_policy_changed=23) (multipart_upload_completed=0) (object_put_bytes=1703936) (object_copy_requests=0) (op_get_content_summary=0) (committer_commit_job.failures=0) (stream_read_fully_operations=1) (op_rename.failures=0) (committer_commit_job=0) (op_get_file_status.failures=0) (op_get_file_checksum.failures=0) (files_copied=0) (op_delete.failures=0) (action_http_get_request=23) (stream_write_exceptions=0) (committer_commits_aborted=0) (committer_tasks_completed=0) (op_hflush=0) (object_put_request_completed=52) (op_create=26) (stream_read_bytes=6813) (files_copied_bytes=0) (stream_write_queue_duration.failures=0) (op_is_directory=0) (object_list_request=104) (op_createfile=0) (files_delete_rejected=0) (stream_write_queue_duration=0) (committer_commits_completed=0) (op_copy_from_local_file=0) (op_list_files=0) (multipart_upload_part_put_bytes=0) (fake_directories_created=0) (op_glob_status.failures=0) (delegation_tokens_issued.failures=0) (object_bulk_delete_request.failures=0) (op_is_directory.failures=0) (op_open=22) (audit_failure=0) (op_get_delegation_token=0) (committer_commits.failures=0) (object_continue_list_request.failures=0) (stream_read_remote_stream_drain=3) (op_mkdirs.failures=0) (committer_commits_created=0) (stream_read_operations_incomplete=0) (files_created=26) (op_exists=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=26) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0));
minimums=((op_createfile.failures.min=-1) (action_http_head_request.min=3) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.min=26) (op_exists.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=10) (op_abort.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1) (action_file_opened.min=4) (op_access.failures.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.min=-1) (op_access.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_stage_file_upload.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.min=-1) (op_get_content_summary.min=-1) (object_put_request.min=42) (op_xattr_get_named_map.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.min=-1) (op_list_status.min=-1) (op_create.failures.min=-1) (op_create.min=6) (committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_glob_status.failures.min=-1) (multipart_upload_list.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (action_http_get_request.failures.min=-1) (object_bulk_delete_request.min=7) (store_exists_probe.failures.min=-1) (op_createfile.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.min=-1) (store_exists_probe.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.min=-1) (op_delete.failures.min=-1) (object_list_request.min=5) (op_get_delegation_token.failures.min=-1) (op_xattr_list.min=-1) (op_glob_status.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.min=5) (committer_stage_file_upload.failures.min=-1) (op_rename.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_rename.failures.min=-1) (op_exists.failures.min=-1) (op_is_file.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_mkdirs.min=22) (op_abort.min=-1));
maximums=((op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.max=-1) (op_mkdirs.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.max=-1) (committer_materialize_file.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.max=4) (op_exists.failures.max=-1) (action_http_head_request.max=26) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (op_access.max=-1) (object_list_request.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_rename.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_glob_status.failures.max=-1) (action_file_opened.max=26) (action_http_head_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.max=50) (op_delete.max=112) (op_glob_status.max=-1) (object_list_request.max=233) (object_multipart_initiated.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_mkdirs.max=372) (stream_read_remote_stream_aborted.failures.max=-1) (op_create.max=53) (object_put_request.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.max=-1) (op_is_directory.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.max=-1) (action_file_opened.failures.max=-1) (object_put_request.max=101) (object_bulk_delete_request.failures.max=-1) (op_exists.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_status.max=5) (object_continue_list_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.max=-1) (op_list_files.failures.max=-1) (op_list_status.max=-1) (object_bulk_delete_request.max=27) (delegation_tokens_issued.max=-1) (op_xattr_list.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_list.max=-1) (op_list_status.failures.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (stream_write_queue_duration.max=-1) (op_abort.max=-1) (op_createfile.failures.max=-1) (op_is_file.max=-1) (object_multipart_aborted.max=-1));
means=((op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=74, sum=418, mean=5.6486)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=26, sum=1350, mean=51.9231)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=52, sum=765, mean=14.7115)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=23, sum=481, mean=20.9130)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=52, sum=1867, mean=35.9038)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=22, sum=156, mean=7.0909)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=104, sum=1263, mean=12.1442)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=26, sum=1367, mean=52.5769)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=26, sum=360, mean=13.8462)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:10,943 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:10,943 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,943 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,943 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,944 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,944 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=184&ts=1731778690943
2024-11-16 17:38:10,949 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:10,949 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,949 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:10,949 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:10,949 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:10,949 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=184&ts=1731778690943
2024-11-16 17:38:10,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:10,952 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:10,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:10,952 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:10,952 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000127&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=184&ts=1731778690943
2024-11-16 17:38:10,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:10,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:10,963 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:38:10,963 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:10,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:10,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:10,964 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:10,964 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000128 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000128&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=184&ts=1731778690964
2024-11-16 17:38:10,970 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:10,970 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:10,970 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:10,970 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6195184637901362754.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:10,971 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6195184637901362754.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (op_abort=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (op_hsync=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6195184637901362754.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:10,971 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:10,971 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:10,971 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6195184637901362754.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:10,971 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:10,971 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:10,971 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:10,972 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:10,972 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000128 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000128&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=53&ts=1731778690964
2024-11-16 17:38:11,010 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:11,010 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:11,010 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:38:11,011 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6195184637901362754.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:11,011 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6195184637901362754.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,011 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6195184637901362754.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,011 [s3a-transfer-leg-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:11,011 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,012 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (op_hsync=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (object_multipart_aborted=0) (multipart_upload_completed=0) (object_put_request=1) (object_put_request.failures=0) (stream_write_queue_duration=0) (op_abort=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (op_hflush=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=38) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=38) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=38, mean=38.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:11,012 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:11,013 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,013 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,013 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:11,013 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=184&ts=1731778691013
2024-11-16 17:38:11,017 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:11,017 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:11,017 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,017 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:11,017 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:11,017 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:11,017 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,017 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,017 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,017 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=55&ts=1731778691013
2024-11-16 17:38:11,018 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:11,019 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((action_file_opened=1) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=2) (action_executor_acquired.failures=0) (stream_read_opened=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_closed=0) (stream_read_operations=0) (stream_read_vectored_operations=1) (stream_read_vectored_combined_ranges=1) (stream_read_block_read.failures=0) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_version_mismatches=0) (stream_read_total_bytes=0) (stream_read_seek_policy_changed=1) (stream_read_unbuffered=1) (stream_read_bytes_discarded_in_close=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes=0) (stream_read_close_operations=0) (action_http_get_request=1) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=4) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=4) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)));

2024-11-16 17:38:11,019 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:38:11,028 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:38:11,028 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1055)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:38:11,028 [s3a-transfer-leg-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,028 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:11,028 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,028 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:11,028 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:11,029 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:11,029 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,029 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,029 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,029 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000129&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=63&ts=1731778691013
2024-11-16 17:38:11,039 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:38:11,039 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:11,039 [s3a-transfer-leg-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,040 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read=0) (stream_read_vectored_operations=2) (stream_read_seek_backward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=150) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=2) (stream_read_bytes=150) (stream_aborted=0) (stream_read_prefetch_operations.failures=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (action_executor_acquired=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_vectored_incoming_ranges=4) (stream_read_vectored_read_bytes_discarded=10) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (action_file_opened=1) (action_http_get_request=2) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations=0) (stream_read_closed=0) (stream_read_vectored_combined_ranges=2) (stream_read_unbuffered=1) (stream_read_operations=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=1));
minimums=((action_http_get_request.min=10) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=4) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=4) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=11) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=21, mean=10.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:11,041 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:11,041 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,041 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,041 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=184&ts=1731778691041
2024-11-16 17:38:11,045 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,045 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,045 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=184&ts=1731778691041
2024-11-16 17:38:11,052 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:11,052 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:11,052 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:11,052 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:11,052 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:11,052 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:11,052 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:11,052 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:11,052 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:11,052 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:11,052 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:11,052 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:11,053 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:11,053 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:11,053 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,053 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [185] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=185&ts=1731778691041
2024-11-16 17:38:11,061 [s3a-transfer-leg-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:11,061 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:38:11,061 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:11,061 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:11,062 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:11,062 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691005; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:11,062 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:11,062 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:11,062 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:11,062 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:11,062 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:11,062 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:11,062 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:11,062 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:11,063 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,063 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,063 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:11,063 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,063 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=65&ts=1731778691041
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,076 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000130&t0=184&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=65&ts=1731778691041
2024-11-16 17:38:11,087 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:11,087 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:11,087 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:38:11,087 [s3a-transfer-leg-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:38:11,087 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:38:11,087 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.035s
2024-11-16 17:38:11,087 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:11,087 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:11,089 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:11,101 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 33, active threads = 0, queued tasks = 0, completed tasks = 33], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_head_request.failures=0) (object_continue_list_request=0) (op_get_delegation_token.failures=0) (op_glob_status.failures=0) (stream_read_exceptions=0) (op_list_located_status=0) (committer_jobs_completed=0) (op_hflush=0) (committer_commits_completed=0) (op_xattr_get_named=0) (files_delete_rejected=0) (op_xattr_get_map=0) (multipart_instantiated=0) (stream_read_seek_backward_operations=0) (committer_commits_created=0) (op_list_files.failures=0) (object_delete_objects=54) (files_copied_bytes=0) (fake_directories_deleted=27) (stream_read_bytes_discarded_in_abort=0) (op_createfile=0) (object_list_request=108) (op_abort.failures=0) (committer_commits_reverted=0) (op_list_status=0) (audit_span_creation=106) (object_list_request.failures=0) (op_delete.failures=0) (stream_write_bytes=1769472) (op_mkdirs=27) (object_put_request_completed=54) (action_http_get_request.failures=0) (directories_created=27) (multipart_upload_started=0) (audit_request_execution=318) (op_copy_from_local_file.failures=0) (stream_read_operations_incomplete=0) (committer_load_single_pending_file=0) (delegation_tokens_issued.failures=0) (object_delete_request.failures=0) (stream_read_closed=3) (op_xattr_list.failures=0) (stream_read_seek_bytes_discarded=0) (op_hsync=0) (op_is_directory=0) (op_is_file=0) (action_file_opened=23) (op_delete=27) (op_get_delegation_token=0) (op_rename=0) (multipart_upload_abort_under_path_invoked=0) (op_abort=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_write_queue_duration=0) (op_xattr_get_named_map=0) (multipart_upload_completed=0) (op_rename.failures=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_incoming_ranges=58) (ignored_errors=0) (action_executor_acquired.failures=0) (multipart_upload_part_put_bytes=0) (op_create=27) (op_access=0) (stream_read_remote_stream_aborted=0) (stream_write_block_uploads_aborted=0) (object_multipart_initiated=0) (stream_read_seek_policy_changed=25) (audit_access_check_failure=0) (committer_bytes_committed=0) (stream_write_exceptions_completing_upload=0) (op_create.failures=0) (committer_tasks_failed=0) (committer_stage_file_upload=0) (stream_write_total_time=0) (stream_read_unbuffered=2) (op_get_file_checksum.failures=0) (store_exists_probe=0) (multipart_upload_aborted=0) (store_io_throttled=0) (op_xattr_get_named.failures=0) (op_access.failures=0) (action_http_get_request=25) (store_exists_probe.failures=0) (stream_write_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (committer_commit_job=0) (op_create_non_recursive=0) (object_select_requests=0) (object_delete_request=0) (op_exists=0) (multipart_upload_part_put=0) (committer_commits_aborted=0) (op_xattr_get_map.failures=0) (object_metadata_request=77) (committer_jobs_failed=0) (op_list_files=0) (store_io_request=318) (delegation_tokens_issued=0) (action_file_opened.failures=0) (files_created=27) (op_is_directory.failures=0) (store_io_retry=0) (action_executor_acquired=0) (stream_read_vectored_operations=20) (op_xattr_list=0) (committer_magic_files_created=0) (stream_read_vectored_combined_ranges=25) (op_mkdirs.failures=0) (op_xattr_get_named_map.failures=0) (committer_magic_marker_put=0) (stream_read_total_bytes=202971) (stream_read_remote_stream_drain.failures=0) (files_copied=0) (op_openfile=0) (stream_read_remote_stream_drain=3) (stream_read_remote_stream_aborted.failures=0) (fake_directories_created=0) (stream_read_opened=3) (directories_deleted=0) (op_get_file_checksum=0) (committer_commit_job.failures=0) (committer_commits.failures=0) (object_continue_list_request.failures=0) (object_multipart_aborted=0) (stream_read_operations=3) (op_get_content_summary.failures=0) (object_bulk_delete_request=54) (op_glob_status=0) (stream_read_seek_bytes_skipped=0) (committer_bytes_uploaded=0) (op_get_content_summary=0) (multipart_upload_list=0) (object_multipart_initiated.failures=0) (object_put_bytes=1769472) (object_multipart_aborted.failures=0) (stream_read_close_operations=23) (object_put_request=54) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads=27) (object_put_request.failures=0) (stream_read_vectored_read_bytes_discarded=24543) (op_open=23) (stream_write_queue_duration.failures=0) (stream_read_fully_operations=1) (multipart_upload_list.failures=0) (committer_materialize_file=0) (committer_stage_file_upload.failures=0) (op_get_file_status.failures=0) (stream_aborted=0) (action_http_head_request=77) (committer_tasks_completed=0) (op_exists.failures=0) (stream_read_version_mismatches=0) (stream_read_bytes=6963) (op_is_file.failures=0) (stream_read_bytes_discarded_in_close=196008) (stream_write_total_data=3538944) (op_get_file_status=1) (op_copy_from_local_file=0) (object_copy_requests=0) (committer_materialize_file.failures=0) (op_createfile.failures=0) (stream_write_block_uploads_committed=0) (committer_magic_marker_put.failures=0) (files_deleted=27) (audit_failure=0) (op_list_status.failures=0));
gauges=((stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=27) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0));
minimums=((op_get_file_checksum.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=3) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1) (object_put_request.min=38) (multipart_upload_list.failures.min=-1) (op_list_files.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.min=7) (op_is_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.min=5) (action_http_get_request.min=10) (op_xattr_get_map.failures.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_create.min=6) (committer_load_single_pending_file.failures.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.failures.min=-1) (object_continue_list_request.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.min=-1) (op_xattr_list.min=-1) (object_multipart_aborted.failures.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.min=-1) (op_access.min=-1) (op_mkdirs.min=20) (op_is_directory.min=-1) (op_get_file_status.failures.min=-1) (op_exists.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_write_queue_duration.min=-1) (store_exists_probe.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (op_delete.min=26) (op_rename.min=-1) (op_list_status.min=-1) (op_abort.failures.min=-1) (op_list_status.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_read_remote_stream_drain.min=1) (op_access.failures.min=-1) (op_xattr_list.failures.min=-1) (action_file_opened.min=4) (op_mkdirs.failures.min=-1) (op_is_file.min=-1) (op_list_files.min=-1) (op_copy_from_local_file.min=-1) (op_create.failures.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_delegation_token.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=5));
maximums=((op_exists.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.max=-1) (multipart_upload_list.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.max=-1) (op_abort.max=-1) (op_glob_status.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=26) (store_exists_probe.failures.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_mkdirs.max=372) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=4) (op_xattr_get_map.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.max=-1) (multipart_upload_list.failures.max=-1) (op_is_file.max=-1) (op_delete.max=112) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.max=27) (committer_load_single_pending_file.failures.max=-1) (op_get_content_summary.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_list_status.failures.max=-1) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.failures.max=-1) (object_list_request.max=233) (op_xattr_list.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.max=26) (action_http_get_request.max=50) (op_rename.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=101) (op_createfile.failures.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (object_continue_list_request.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_create.max=53) (op_list_status.max=-1) (op_copy_from_local_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_status.max=5));
means=((op_create.mean=(samples=27, sum=366, mean=13.5556)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=27, sum=1402, mean=51.9259)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=77, sum=429, mean=5.5714)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=54, sum=1916, mean=35.4815)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=108, sum=1289, mean=11.9352)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=160, mean=6.9565)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=27, sum=1370, mean=50.7407)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=502, mean=20.0800)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=54, sum=789, mean=14.6111)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:11,101 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:11,101 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,101 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,101 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,102 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,102 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=186&ts=1731778691101
2024-11-16 17:38:11,107 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:11,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,107 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,108 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=186&ts=1731778691101
2024-11-16 17:38:11,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,110 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:11,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:11,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:11,110 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000131&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=186&ts=1731778691101
2024-11-16 17:38:11,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:11,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:11,143 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.033s
2024-11-16 17:38:11,143 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:11,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,144 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,144 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000132 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000132&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=186&ts=1731778691144
2024-11-16 17:38:11,152 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:11,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,152 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:11,153 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5290858002188659681.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:11,154 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5290858002188659681.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (stream_write_exceptions=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (object_put_request=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (op_abort=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5290858002188659681.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,154 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,154 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:11,154 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5290858002188659681.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:11,154 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:11,154 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:11,154 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:11,154 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:11,154 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000132 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000132&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=77&ts=1731778691144
2024-11-16 17:38:11,198 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:11,198 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:11,198 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.044s
2024-11-16 17:38:11,198 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5290858002188659681.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:11,199 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5290858002188659681.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,199 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5290858002188659681.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,199 [s3a-transfer-leg-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:11,199 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,200 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_bytes=65536) (op_hflush=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (object_put_request=1) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (op_hsync=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (op_abort=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_put_request.min=44) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=44) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=44, mean=44.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:11,201 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:11,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:11,201 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:11,202 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:11,203 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:11,204 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:11,204 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:11,205 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:11,205 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:11,205 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:11,205 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='0f0500c0-b0f0-4b82-bad9-4217170ace40', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='0f0500c0-b0f0-4b82-bad9-4217170ace40', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='0f0500c0-b0f0-4b82-bad9-4217170ace40', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:11,206 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:11,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:11,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:11,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:11,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:11,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@69583797]
2024-11-16 17:38:11,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@69583797]
2024-11-16 17:38:11,207 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:11,208 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:11,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:11,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:11,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:11,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:11,213 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:11,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:11,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:11,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:11,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:11,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:11,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:38:11,214 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:11,215 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 0f0500c0-b0f0-4b82-bad9-4217170ace40-00000135 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/0f0500c0-b0f0-4b82-bad9-4217170ace40-00000135/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=0f0500c0-b0f0-4b82-bad9-4217170ace40-00000135&t0=186&fs=0f0500c0-b0f0-4b82-bad9-4217170ace40&t1=186&ts=1731778691215
2024-11-16 17:38:11,216 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:11,216 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:38:11,216 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:11,217 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:11,222 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:11,222 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:11,224 [s3a-transfer-leg-bucket-unbounded-pool17-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:11,224 [s3a-transfer-leg-bucket-unbounded-pool17-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,224 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:11,224 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:11,224 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:11,224 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:11,224 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:11,225 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:11,225 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:11,225 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:38:11,225 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,225 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,225 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,225 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,225 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,226 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,226 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [190] 0f0500c0-b0f0-4b82-bad9-4217170ace40-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/0f0500c0-b0f0-4b82-bad9-4217170ace40-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-1099&id=0f0500c0-b0f0-4b82-bad9-4217170ace40-00000136&t0=188&fs=0f0500c0-b0f0-4b82-bad9-4217170ace40&t1=190&ts=1731778691224
2024-11-16 17:38:11,226 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 0f0500c0-b0f0-4b82-bad9-4217170ace40-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/0f0500c0-b0f0-4b82-bad9-4217170ace40-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-1099&id=0f0500c0-b0f0-4b82-bad9-4217170ace40-00000136&t0=188&fs=0f0500c0-b0f0-4b82-bad9-4217170ace40&t1=189&ts=1731778691224
2024-11-16 17:38:11,244 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:38:11,244 [s3a-transfer-leg-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,245 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:38:11,248 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request.failures=0) (stream_read_closed=0) (stream_read_block_read=0) (stream_read_bytes=2000) (stream_read_unbuffered=0) (stream_read_total_bytes=2000) (stream_read_remote_stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_combined_ranges=2) (stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (action_http_get_request=2) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_seek_policy_changed=1) (stream_aborted=0) (stream_read_vectored_operations=2) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_operations=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=4) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=19) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=0));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=19) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=0) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=38, mean=19.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:11,249 [s3a-transfer-leg-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,249 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:11,250 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:11,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:11,251 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@47a382cd[Shutting down, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:38:11,252 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:11,252 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics8-leg-bucket
2024-11-16 17:38:11,252 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:11,252 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@69583797] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:11,252 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@69583797] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:11,254 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((committer_materialize_file=0) (store_exists_probe=0) (committer_jobs_completed=0) (stream_write_bytes=0) (op_access=0) (op_get_file_status=1) (stream_read_seek_forward_operations=0) (object_list_request.failures=0) (directories_created=0) (audit_failure=0) (op_is_directory.failures=0) (op_list_status=0) (object_list_request=0) (stream_read_vectored_read_bytes_discarded=0) (object_put_bytes=0) (op_list_files=0) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_aborted=0) (op_hflush=0) (stream_read_bytes_discarded_in_close=0) (op_copy_from_local_file.failures=0) (multipart_upload_part_put=0) (object_select_requests=0) (op_rename=0) (committer_commits.failures=0) (op_get_file_status.failures=0) (stream_write_block_uploads_aborted=0) (object_multipart_initiated.failures=0) (object_continue_list_request.failures=0) (stream_read_unbuffered=0) (audit_span_creation=3) (object_multipart_aborted.failures=0) (committer_commit_job.failures=0) (op_xattr_get_named=0) (op_list_files.failures=0) (op_createfile=0) (multipart_upload_aborted=0) (object_multipart_initiated=0) (op_createfile.failures=0) (object_continue_list_request=0) (op_hsync=0) (object_copy_requests=0) (action_executor_acquired=0) (op_xattr_list=0) (multipart_instantiated=0) (op_delete.failures=0) (audit_access_check_failure=0) (committer_stage_file_upload.failures=0) (store_exists_probe.failures=0) (committer_commit_job=0) (stream_read_vectored_operations=2) (store_io_retry=0) (multipart_upload_list.failures=0) (op_get_file_checksum.failures=0) (op_openfile=0) (stream_write_block_uploads_committed=0) (op_get_content_summary.failures=0) (committer_stage_file_upload=0) (files_copied_bytes=0) (committer_commits_reverted=0) (op_xattr_get_named_map.failures=0) (committer_load_single_pending_file=0) (files_deleted=0) (action_http_head_request=1) (files_created=0) (stream_read_seek_operations=0) (stream_read_total_bytes=2000) (stream_read_seek_policy_changed=1) (op_is_file=0) (object_bulk_delete_request=0) (op_list_status.failures=0) (op_get_delegation_token.failures=0) (action_file_opened.failures=0) (object_delete_request=0) (stream_read_operations=0) (stream_read_exceptions=0) (fake_directories_deleted=0) (stream_write_exceptions_completing_upload=0) (op_create.failures=0) (op_glob_status.failures=0) (object_delete_request.failures=0) (action_http_head_request.failures=0) (object_metadata_request=1) (store_io_throttled=0) (stream_write_queue_duration=0) (committer_jobs_failed=0) (op_xattr_get_map=0) (stream_write_total_time=0) (object_put_request=0) (multipart_upload_part_put_bytes=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted.failures=0) (ignored_errors=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (op_mkdirs=0) (op_xattr_get_named_map=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_created=0) (delegation_tokens_issued.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (object_put_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_abort.failures=0) (committer_tasks_completed=0) (committer_bytes_uploaded=0) (op_get_content_summary=0) (op_is_file.failures=0) (stream_read_close_operations=1) (op_open=1) (stream_read_closed=0) (op_create_non_recursive=0) (multipart_upload_started=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=0) (committer_commits_completed=0) (stream_read_seek_bytes_skipped=0) (audit_request_execution=3) (op_xattr_get_named.failures=0) (committer_magic_files_created=0) (op_copy_from_local_file=0) (stream_read_version_mismatches=0) (store_io_request=3) (stream_read_seek_backward_operations=0) (committer_bytes_committed=0) (action_file_opened=1) (stream_write_block_uploads=0) (object_bulk_delete_request.failures=0) (delegation_tokens_issued=0) (committer_tasks_failed=0) (multipart_upload_list=0) (committer_commits_aborted=0) (op_list_located_status=0) (action_http_get_request.failures=0) (object_delete_objects=0) (committer_materialize_file.failures=0) (object_multipart_aborted=0) (fake_directories_created=0) (op_mkdirs.failures=0) (op_get_delegation_token=0) (committer_load_single_pending_file.failures=0) (stream_read_bytes=2000) (files_copied=0) (op_access.failures=0) (op_xattr_list.failures=0) (committer_magic_marker_put.failures=0) (op_glob_status=0) (op_exists=0) (op_delete=0) (op_abort=0) (op_is_directory=0) (stream_aborted=0) (stream_read_opened=0) (op_create=0) (op_get_file_checksum=0) (directories_deleted=0) (action_http_get_request=2) (op_exists.failures=0) (stream_write_queue_duration.failures=0) (op_xattr_get_map.failures=0) (op_rename.failures=0) (stream_write_exceptions=0) (stream_write_total_data=0) (stream_read_vectored_combined_ranges=2) (object_put_request_completed=0) (files_delete_rejected=0) (committer_magic_marker_put=0) (multipart_upload_completed=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0));
minimums=((action_http_head_request.min=7) (object_bulk_delete_request.min=-1) (op_list_status.min=-1) (op_delete.min=-1) (op_get_content_summary.min=-1) (committer_stage_file_upload.min=-1) (committer_load_single_pending_file.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_map.min=-1) (action_executor_acquired.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (object_list_request.min=-1) (op_create.min=-1) (object_multipart_aborted.min=-1) (op_rename.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.min=-1) (object_put_request.min=-1) (action_http_get_request.min=19) (op_createfile.failures.min=-1) (committer_commit_job.min=-1) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (op_glob_status.min=-1) (op_list_files.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.min=-1) (stream_write_queue_duration.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.failures.min=-1) (op_abort.min=-1) (committer_materialize_file.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.min=-1) (op_delete.failures.min=-1) (op_list_files.failures.min=-1) (op_list_status.failures.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=0) (op_is_file.failures.min=-1) (op_mkdirs.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_glob_status.failures.min=-1) (object_multipart_initiated.min=-1) (op_rename.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.min=-1) (op_access.min=-1) (stream_read_remote_stream_aborted.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_status.min=7) (store_exists_probe.failures.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1) (object_list_request.failures.min=-1) (op_get_delegation_token.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (op_mkdirs.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (object_list_request.max=-1) (op_get_file_checksum.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.max=0) (op_xattr_get_named_map.failures.max=-1) (op_is_file.failures.max=-1) (action_executor_acquired.max=-1) (op_rename.failures.max=-1) (op_get_file_status.failures.max=-1) (op_exists.failures.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.failures.max=-1) (op_access.failures.max=-1) (action_http_head_request.max=7) (committer_commit_job.failures.max=-1) (op_abort.max=-1) (op_create.max=-1) (object_put_request.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_directory.failures.max=-1) (object_multipart_initiated.max=-1) (op_delete.max=-1) (committer_magic_marker_put.max=-1) (op_exists.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.failures.max=-1) (action_file_opened.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (op_createfile.failures.max=-1) (multipart_upload_list.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_create.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_put_request.failures.max=-1) (op_createfile.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (op_get_file_status.max=7) (op_access.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.failures.max=-1) (action_http_get_request.max=19) (op_xattr_get_named.failures.max=-1) (store_exists_probe.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_list_status.max=-1) (op_get_content_summary.failures.max=-1) (object_bulk_delete_request.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (op_delete.failures.max=-1) (op_get_delegation_token.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=7, mean=7.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=38, mean=19.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:11,254 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:11,254 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,254 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,254 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=186&ts=1731778691254
2024-11-16 17:38:11,258 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,258 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,258 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=186&ts=1731778691254
2024-11-16 17:38:11,263 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:11,263 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:11,263 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:11,263 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:11,263 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:11,263 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:11,263 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:11,263 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:11,264 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:11,264 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:11,264 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:11,264 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:11,264 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:11,264 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:11,264 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,264 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [193] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=193&ts=1731778691254
2024-11-16 17:38:11,269 [s3a-transfer-leg-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:11,270 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:38:11,271 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:11,271 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:11,271 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:11,271 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691186; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:11,271 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:11,271 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:11,271 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:11,271 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:11,271 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:11,271 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:11,271 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:11,272 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:11,272 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,272 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,272 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:11,272 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,272 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=79&ts=1731778691254
2024-11-16 17:38:11,282 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:11,282 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:11,282 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:11,282 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:11,282 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:11,283 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,283 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,283 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:11,283 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,283 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000137&t0=186&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=79&ts=1731778691254
2024-11-16 17:38:11,291 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:38:11,291 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:11,291 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:38:11,291 [s3a-transfer-leg-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:38:11,293 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.022s
2024-11-16 17:38:11,293 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:38:11,293 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:11,293 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:11,294 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:11,306 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 34, active threads = 0, queued tasks = 0, completed tasks = 34], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_delegation_token=0) (multipart_upload_list=0) (op_list_located_status=0) (op_xattr_get_named.failures=0) (audit_failure=0) (op_glob_status.failures=0) (stream_read_vectored_incoming_ranges=58) (op_get_content_summary.failures=0) (stream_read_total_bytes=202971) (stream_read_close_operations=23) (op_openfile=0) (object_multipart_aborted=0) (store_exists_probe=0) (committer_commits_completed=0) (op_delete.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=6963) (object_list_request.failures=0) (object_multipart_initiated.failures=0) (op_create=28) (op_copy_from_local_file.failures=0) (committer_bytes_uploaded=0) (object_bulk_delete_request.failures=0) (op_get_delegation_token.failures=0) (op_list_files=0) (action_http_head_request=79) (fake_directories_deleted=28) (object_metadata_request=79) (committer_commits_aborted=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (op_exists=0) (object_bulk_delete_request=56) (directories_deleted=0) (stream_read_bytes_discarded_in_close=196008) (op_is_directory.failures=0) (fake_directories_created=0) (op_xattr_get_named=0) (stream_read_bytes_backwards_on_seek=0) (store_io_throttled=0) (stream_write_total_data=3670016) (object_put_request.failures=0) (action_file_opened=23) (stream_write_exceptions=0) (store_io_request=328) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_aborted=0) (action_file_opened.failures=0) (stream_read_exceptions=0) (object_delete_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=24543) (stream_read_version_mismatches=0) (committer_bytes_committed=0) (stream_read_opened=3) (op_xattr_get_map=0) (committer_commits.failures=0) (files_deleted=28) (op_hsync=0) (op_exists.failures=0) (multipart_upload_list.failures=0) (object_delete_objects=56) (committer_stage_file_upload.failures=0) (stream_read_seek_bytes_discarded=0) (op_get_file_checksum=0) (op_get_content_summary=0) (op_create_non_recursive=0) (stream_read_vectored_combined_ranges=25) (stream_read_seek_forward_operations=0) (committer_jobs_completed=0) (op_rename=0) (committer_tasks_completed=0) (stream_write_block_uploads_committed=0) (op_get_file_status=1) (object_delete_request=0) (audit_request_execution=328) (committer_materialize_file=0) (directories_created=28) (committer_stage_file_upload=0) (committer_commits_reverted=0) (op_is_directory=0) (committer_magic_files_created=0) (op_rename.failures=0) (op_abort=0) (committer_materialize_file.failures=0) (op_xattr_get_named_map.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_vectored_operations=20) (object_continue_list_request.failures=0) (action_http_get_request=25) (stream_write_total_time=0) (files_copied_bytes=0) (op_delete=28) (stream_read_bytes_discarded_in_abort=0) (store_exists_probe.failures=0) (object_multipart_initiated=0) (op_list_status=0) (op_get_file_checksum.failures=0) (op_is_file.failures=0) (op_access=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_part_put=0) (op_createfile=0) (files_created=28) (op_access.failures=0) (stream_aborted=0) (object_continue_list_request=0) (multipart_upload_completed=0) (op_abort.failures=0) (audit_span_creation=109) (stream_read_remote_stream_drain=3) (object_list_request=112) (committer_tasks_failed=0) (op_createfile.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_hflush=0) (op_list_status.failures=0) (object_select_requests=0) (ignored_errors=0) (stream_write_block_uploads_aborted=0) (op_mkdirs=28) (stream_read_unbuffered=2) (op_list_files.failures=0) (stream_read_closed=3) (store_io_retry=0) (committer_magic_marker_put.failures=0) (op_create.failures=0) (object_copy_requests=0) (committer_jobs_failed=0) (action_executor_acquired.failures=0) (object_put_bytes=1835008) (stream_read_operations=3) (stream_write_bytes=1835008) (stream_write_queue_duration=0) (stream_write_block_uploads=28) (op_is_file=0) (committer_load_single_pending_file.failures=0) (op_glob_status=0) (op_xattr_get_named_map=0) (op_copy_from_local_file=0) (committer_load_single_pending_file=0) (audit_access_check_failure=0) (op_xattr_list=0) (files_copied=0) (stream_read_seek_operations=0) (files_delete_rejected=0) (op_mkdirs.failures=0) (committer_commits_created=0) (stream_read_fully_operations=1) (committer_commit_job.failures=0) (op_get_file_status.failures=0) (object_put_request=56) (stream_read_seek_policy_changed=25) (committer_commit_job=0) (action_http_head_request.failures=0) (op_xattr_list.failures=0) (op_xattr_get_map.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_write_queue_duration.failures=0) (stream_read_operations_incomplete=0) (multipart_upload_started=0) (object_put_request_completed=56) (multipart_instantiated=0) (op_open=23) (delegation_tokens_issued=0) (stream_read_seek_bytes_skipped=0) (delegation_tokens_issued.failures=0));
gauges=((stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=28) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0));
minimums=((op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_access.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_abort.failures.min=-1) (op_create.failures.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_magic_marker_put.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_mkdirs.min=20) (op_exists.failures.min=-1) (op_is_directory.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.min=-1) (committer_commit_job.failures.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.failures.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_bulk_delete_request.min=7) (committer_magic_marker_put.failures.min=-1) (object_list_request.failures.min=-1) (object_put_request.min=44) (op_rename.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_list.min=-1) (object_list_request.min=5) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.min=-1) (op_get_content_summary.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.min=5) (stream_write_queue_duration.failures.min=-1) (op_create.min=6) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=4) (committer_commit_job.min=-1) (op_list_files.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.min=-1) (op_rename.failures.min=-1) (op_get_delegation_token.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_get_request.min=10) (store_exists_probe.failures.min=-1) (op_createfile.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_content_summary.min=-1) (op_is_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_abort.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.min=3) (object_put_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_exists.min=-1) (object_delete_request.min=-1) (op_delete.min=26) (stream_read_remote_stream_drain.failures.min=-1) (op_list_status.min=-1));
maximums=((op_is_directory.max=-1) (op_access.failures.max=-1) (op_glob_status.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_continue_list_request.failures.max=-1) (multipart_upload_list.max=-1) (action_executor_acquired.max=-1) (op_createfile.failures.max=-1) (object_multipart_aborted.max=-1) (stream_write_queue_duration.failures.max=-1) (op_is_directory.failures.max=-1) (op_createfile.max=-1) (op_get_file_checksum.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_http_get_request.max=50) (op_is_file.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (object_put_request.max=101) (op_exists.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_delete.max=112) (delegation_tokens_issued.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_materialize_file.max=-1) (op_list_status.max=-1) (action_http_head_request.max=26) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=4) (action_executor_acquired.failures.max=-1) (op_exists.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.max=26) (op_xattr_get_named.max=-1) (op_get_file_status.max=5) (action_http_get_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_delegation_token.failures.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.max=-1) (object_continue_list_request.max=-1) (object_list_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_checksum.max=-1) (op_create.failures.max=-1) (op_create.max=53) (op_mkdirs.max=372) (op_get_content_summary.failures.max=-1) (op_is_file.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.max=27) (op_get_content_summary.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (delegation_tokens_issued.max=-1) (object_delete_request.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_map.max=-1) (op_access.max=-1) (object_list_request.max=233) (op_delete.failures.max=-1) (op_list_status.failures.max=-1) (op_rename.max=-1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.max=-1));
means=((op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=79, sum=436, mean=5.5190)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=56, sum=1993, mean=35.5893)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=28, sum=375, mean=13.3929)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=28, sum=1432, mean=51.1429)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=56, sum=807, mean=14.4107)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=28, sum=1412, mean=50.4286)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=502, mean=20.0800)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=160, mean=6.9565)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=112, sum=1312, mean=11.7143)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:11,307 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:11,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,307 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,308 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,308 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=194&ts=1731778691307
2024-11-16 17:38:11,314 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:11,314 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,314 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,314 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,314 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,314 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=194&ts=1731778691307
2024-11-16 17:38:11,317 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,317 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:11,317 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:11,317 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:11,317 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000138&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=194&ts=1731778691307
2024-11-16 17:38:11,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:11,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:11,331 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:38:11,331 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:11,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,331 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,332 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,332 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,332 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000139 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000139&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=194&ts=1731778691331
2024-11-16 17:38:11,337 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:11,337 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,337 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:11,338 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7748067230675077056.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:11,338 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7748067230675077056.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (stream_write_total_data=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (object_put_request=0) (multipart_upload_completed.failures=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7748067230675077056.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,338 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,339 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:11,339 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7748067230675077056.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:11,339 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:11,339 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:11,340 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:11,340 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:11,340 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000139 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000139&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=80&ts=1731778691331
2024-11-16 17:38:11,367 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:11,367 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:11,367 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:38:11,367 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7748067230675077056.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:11,367 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7748067230675077056.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,367 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7748067230675077056.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,368 [s3a-transfer-leg-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:11,368 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,368 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (stream_write_total_time=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (object_put_request=1) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (op_hflush=0) (op_abort=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=27) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=27) (op_abort.max=-1) (committer_magic_marker_put.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:11,369 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:11,369 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for leg-bucket
2024-11-16 17:38:11,369 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.leg-bucket.
2024-11-16 17:38:11,370 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:11,371 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:11,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:38:11,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:38:11,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:38:11,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:38:11,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:38:11,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:38:11,372 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:38:11,373 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:38:11,373 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:38:11,373 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:38:11,373 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:11,373 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:38:11,373 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:38:11,373 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://leg-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@72e9031f]
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@72e9031f]
2024-11-16 17:38:11,374 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:38:11,375 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:38:11,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:38:11,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:38:11,376 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:38:11,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:38:11,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:38:11,377 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:38:11,378 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:38:11,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:38:11,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:38:11,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:38:11,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:11,379 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000142 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000142/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000142&t0=194&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=194&ts=1731778691379
2024-11-16 17:38:11,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:38:11,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:38:11,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:38:11,380 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:38:11,384 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:11,384 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:11,385 [s3a-transfer-leg-bucket-unbounded-pool19-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:11,386 [s3a-transfer-leg-bucket-unbounded-pool19-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,386 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:11,386 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:11,386 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:38:11,386 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [199] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143&t0=196&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=199&ts=1731778691385
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,388 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,388 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [198] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-14435&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143&t0=196&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=198&ts=1731778691385
2024-11-16 17:38:11,387 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [197] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000143&t0=196&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=197&ts=1731778691385
2024-11-16 17:38:11,387 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:11,404 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:38:11,405 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:38:11,405 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:38:11,405 [s3a-transfer-leg-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,415 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:38:11,415 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.028s
2024-11-16 17:38:11,415 [s3a-transfer-leg-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,416 [s3a-transfer-leg-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,417 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=17));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=29));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=74, mean=24.6667)));

2024-11-16 17:38:11,418 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_block_acquire_read=0) (stream_read_vectored_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_opened=0) (stream_read_block_read.failures=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_closed=0) (stream_read_unbuffered=0) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=5) (stream_read_vectored_combined_ranges=3) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (action_http_get_request=3) (stream_aborted=0) (stream_read_bytes=1424) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_total_bytes=1424) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=17) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=0) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=0) (action_http_get_request.max=29));
means=((action_http_get_request.mean=(samples=3, sum=74, mean=24.6667)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:11,420 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:11,421 [s3a-transfer-leg-bucket-unbounded-pool19-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:11,422 [s3a-transfer-leg-bucket-unbounded-pool19-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,423 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:11,424 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:38:11,424 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,425 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=10240-65535&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144&t0=203&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=194&ts=1731778691421
2024-11-16 17:38:11,442 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.019s
2024-11-16 17:38:11,443 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:11,443 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:11,444 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:11,444 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:38:11,444 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:11,445 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:38:11,445 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,447 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://leg-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:38:11,448 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:38:11,448 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,449 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-8291&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144&t0=203&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=194&ts=1731778691421
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.016s
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,460 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=14336-14435&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144&t0=203&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=194&ts=1731778691421
2024-11-16 17:38:11,472 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:38:11,472 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:11,472 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:11,472 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:11,472 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:11,473 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:38:11,473 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:11,473 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:38:11,473 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,473 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144&t0=203&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=194&ts=1731778691421
2024-11-16 17:38:11,483 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.011s
2024-11-16 17:38:11,483 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,484 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb-00000144&t0=203&fs=6f5961bc-2697-42e0-bb0c-c65b5c0ba0eb&t1=194&ts=1731778691421
2024-11-16 17:38:11,496 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:38:11,497 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:11,497 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:11,498 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=10)
(stream_read_remote_stream_aborted.min=3)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=17)
(stream_read_remote_stream_aborted.max=3)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=63, mean=12.6000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=1, mean=0.3333)));

2024-11-16 17:38:11,498 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:11,498 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:38:11,498 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:11,499 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=1424) (stream_read_operations_incomplete=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_drain=4) (stream_read_bytes_backwards_on_seek=14637) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read=0) (stream_read_operations=5) (stream_read_opened=5) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=0) (stream_read_total_bytes=1424) (stream_read_seek_backward_operations=2) (stream_read_seek_operations=4) (stream_read_vectored_operations=0) (stream_read_exceptions=0) (action_http_get_request=5) (stream_read_block_read=0) (stream_read_remote_stream_aborted=1) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=5) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=2) (stream_read_seek_bytes_skipped=44957) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_prefetch_operations=0) (stream_aborted=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=2) (stream_read_version_mismatches=0) (stream_read_closed=4) (action_executor_acquired=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=3) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=10) (stream_read_block_read.min=-1) (action_file_opened.min=0) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_http_get_request.max=17) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=3) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=0));
means=((action_http_get_request.mean=(samples=5, sum=63, mean=12.6000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=2, mean=0.5000)));

2024-11-16 17:38:11,503 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:11,504 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:11,504 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:11,504 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@654c38ea[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:38:11,505 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:11,505 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics9-leg-bucket
2024-11-16 17:38:11,505 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:11,505 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@72e9031f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:11,505 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@72e9031f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:11,507 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((object_multipart_initiated.failures=0) (stream_write_queue_duration.failures=0) (op_open=2) (committer_tasks_completed=0) (object_put_bytes=0) (op_is_file.failures=0) (stream_write_bytes=0) (action_http_head_request.failures=0) (op_list_status=0) (committer_bytes_uploaded=0) (op_get_file_checksum.failures=0) (delegation_tokens_issued.failures=0) (stream_read_seek_bytes_skipped=44957) (stream_read_seek_backward_operations=2) (object_metadata_request=1) (stream_aborted=1) (committer_stage_file_upload=0) (object_put_request=0) (op_get_delegation_token.failures=0) (stream_read_unbuffered=0) (committer_magic_marker_put.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_load_single_pending_file.failures=0) (op_glob_status=0) (op_xattr_get_named.failures=0) (files_copied_bytes=0) (action_file_opened.failures=0) (delegation_tokens_issued=0) (op_xattr_get_named_map=0) (object_multipart_aborted=0) (stream_read_total_bytes=2848) (committer_commit_job=0) (stream_write_exceptions=0) (op_get_file_checksum=0) (op_get_content_summary=0) (stream_write_exceptions_completing_upload=0) (ignored_errors=0) (object_select_requests=0) (op_abort.failures=0) (object_delete_request.failures=0) (fake_directories_created=0) (stream_read_bytes_backwards_on_seek=14637) (op_is_directory=0) (committer_stage_file_upload.failures=0) (store_io_request=9) (audit_request_execution=9) (op_create=0) (stream_read_closed=4) (action_executor_acquired.failures=0) (op_list_located_status=0) (stream_write_queue_duration=0) (multipart_upload_abort_under_path_invoked=0) (store_exists_probe=0) (directories_deleted=0) (op_rename=0) (multipart_upload_completed=0) (stream_write_total_data=0) (stream_read_remote_stream_drain=4) (object_put_request_completed=0) (object_continue_list_request.failures=0) (fake_directories_deleted=0) (object_multipart_aborted.failures=0) (audit_span_creation=4) (object_copy_requests=0) (store_io_retry=0) (op_createfile.failures=0) (committer_commits.failures=0) (stream_write_block_uploads_committed=0) (object_delete_request=0) (committer_load_single_pending_file=0) (multipart_upload_list.failures=0) (files_delete_rejected=0) (committer_magic_marker_put=0) (committer_commits_aborted=0) (object_list_request.failures=0) (committer_jobs_completed=0) (action_http_get_request=8) (stream_write_total_time=0) (op_abort=0) (op_openfile=0) (multipart_upload_part_put_bytes=0) (op_mkdirs=0) (op_copy_from_local_file=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_seek_operations=4) (op_xattr_get_named=0) (op_list_files.failures=0) (committer_commits_reverted=0) (op_copy_from_local_file.failures=0) (op_delete=0) (stream_read_vectored_operations=1) (audit_failure=0) (op_exists.failures=0) (op_glob_status.failures=0) (stream_read_vectored_combined_ranges=3) (stream_read_remote_stream_aborted=1) (stream_read_seek_bytes_discarded=0) (op_createfile=0) (committer_commit_job.failures=0) (op_list_files=0) (object_continue_list_request=0) (files_copied=0) (op_access.failures=0) (op_get_file_status.failures=0) (stream_read_operations_incomplete=0) (op_xattr_list.failures=0) (op_delete.failures=0) (committer_commits_created=0) (files_deleted=0) (committer_materialize_file=0) (directories_created=0) (object_bulk_delete_request.failures=0) (op_exists=0) (op_is_directory.failures=0) (op_get_delegation_token=0) (committer_materialize_file.failures=0) (committer_bytes_committed=0) (op_hflush=0) (op_xattr_get_map=0) (op_xattr_get_map.failures=0) (stream_read_opened=5) (object_delete_objects=0) (multipart_upload_part_put=0) (stream_read_version_mismatches=0) (object_multipart_initiated=0) (stream_read_seek_policy_changed=3) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=5) (multipart_upload_started=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (multipart_upload_aborted=0) (op_get_file_status=1) (action_http_head_request=1) (op_xattr_list=0) (op_hsync=0) (action_file_opened=2) (stream_read_operations=5) (object_bulk_delete_request=0) (stream_read_seek_forward_operations=2) (stream_read_close_operations=2) (stream_write_block_uploads_aborted=0) (multipart_upload_list=0) (stream_read_exceptions=0) (action_executor_acquired=0) (action_http_get_request.failures=0) (committer_commits_completed=0) (op_xattr_get_named_map.failures=0) (stream_read_fully_operations=5) (committer_magic_files_created=0) (files_created=0) (audit_access_check_failure=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_close=0) (op_list_status.failures=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_bytes=2848) (op_access=0) (store_exists_probe.failures=0) (op_rename.failures=0) (op_create.failures=0) (op_get_content_summary.failures=0) (op_create_non_recursive=0) (committer_tasks_failed=0) (op_mkdirs.failures=0) (store_io_throttled=0) (object_list_request=0) (op_is_file=0));
gauges=((stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((stream_read_remote_stream_aborted.min=3) (op_list_status.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.min=-1) (store_exists_probe.failures.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_status.min=5) (action_http_get_request.min=10) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.min=-1) (op_access.min=-1) (multipart_upload_list.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.min=-1) (action_file_opened.failures.min=-1) (op_exists.min=-1) (op_is_file.failures.min=-1) (object_delete_request.min=-1) (object_put_request.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_head_request.min=5) (object_list_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (op_is_directory.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=0) (op_access.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_list.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.min=-1) (delegation_tokens_issued.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (store_exists_probe.min=-1) (op_is_file.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.min=-1) (op_create.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (object_list_request.min=-1) (op_delete.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.min=-1) (delegation_tokens_issued.min=-1) (op_rename.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.failures.min=-1));
maximums=((op_is_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_rename.failures.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (op_list_status.max=-1) (action_http_head_request.max=5) (op_xattr_list.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.max=-1) (op_abort.max=-1) (committer_commit_job.failures.max=-1) (op_mkdirs.max=-1) (object_put_request.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.failures.max=-1) (action_http_get_request.max=29) (delegation_tokens_issued.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_aborted.max=3) (committer_materialize_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (action_file_opened.max=0) (object_continue_list_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_create.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.max=1) (op_xattr_list.failures.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (committer_commit_job.max=-1) (op_delete.max=-1) (action_file_opened.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.failures.max=-1) (delegation_tokens_issued.max=-1) (op_createfile.max=-1) (object_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_delegation_token.max=-1) (op_delete.failures.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.failures.max=-1) (object_bulk_delete_request.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.max=5) (action_http_head_request.failures.max=-1) (op_access.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.failures.max=-1) (op_exists.max=-1) (object_list_request.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.failures.max=-1) (op_create.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (op_is_file.max=-1) (object_continue_list_request.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_exists.failures.max=-1) (op_abort.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.max=-1) (op_list_files.max=-1));
means=((committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=2, mean=0.5000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=5, mean=5.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=137, mean=17.1250)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=3, mean=3.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:11,508 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:11,508 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,508 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,508 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=194&ts=1731778691508
2024-11-16 17:38:11,513 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,513 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,513 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=194&ts=1731778691508
2024-11-16 17:38:11,524 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:11,525 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:11,525 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:11,525 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:11,525 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:11,525 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:11,528 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:11,528 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:11,528 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:11,528 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:11,528 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:11,528 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:11,529 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:11,531 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:11,531 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,531 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [205] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=205&ts=1731778691508
2024-11-16 17:38:11,537 [s3a-transfer-leg-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:11,537 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:38:11,538 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:11,538 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:11,538 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:11,538 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691364; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:11,538 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:11,538 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:11,539 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:11,539 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:11,539 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:11,539 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:11,539 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:11,539 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:11,539 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,539 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,539 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:11,539 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,540 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=82&ts=1731778691508
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,549 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:11,550 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,550 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000145&t0=194&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=82&ts=1731778691508
2024-11-16 17:38:11,558 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:38:11,558 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:11,559 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:38:11,559 [s3a-transfer-leg-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:38:11,559 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:38:11,559 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:38:11,559 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:11,559 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:11,561 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:11,571 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 35, active threads = 0, queued tasks = 0, completed tasks = 35], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_drain.failures=0) (op_xattr_get_named_map=0) (object_put_request=58) (committer_materialize_file=0) (stream_read_bytes_discarded_in_abort=0) (action_http_head_request=81) (committer_bytes_committed=0) (stream_read_vectored_operations=20) (op_rename.failures=0) (stream_write_bytes=1900544) (committer_jobs_completed=0) (op_createfile=0) (object_select_requests=0) (op_list_located_status=0) (op_get_content_summary=0) (fake_directories_deleted=29) (op_copy_from_local_file=0) (committer_commit_job=0) (op_access=0) (stream_read_closed=3) (stream_read_seek_backward_operations=0) (ignored_errors=0) (audit_span_creation=112) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (op_get_file_status=1) (files_deleted=29) (op_openfile=0) (store_exists_probe.failures=0) (op_delete=29) (stream_write_block_uploads_aborted=0) (op_glob_status=0) (stream_read_version_mismatches=0) (stream_read_bytes_backwards_on_seek=0) (object_list_request=116) (stream_write_exceptions=0) (op_mkdirs.failures=0) (multipart_instantiated=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (stream_read_vectored_combined_ranges=25) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (files_delete_rejected=0) (committer_load_single_pending_file.failures=0) (op_xattr_list.failures=0) (action_file_opened.failures=0) (op_create=29) (op_hflush=0) (stream_read_seek_policy_changed=25) (committer_tasks_failed=0) (op_xattr_get_named_map.failures=0) (committer_commit_job.failures=0) (object_continue_list_request=0) (object_put_request_completed=58) (op_xattr_get_map.failures=0) (audit_failure=0) (object_multipart_aborted.failures=0) (object_metadata_request=81) (op_abort=0) (op_is_file=0) (store_io_retry=0) (audit_request_execution=338) (stream_write_block_uploads=29) (action_file_opened=23) (committer_jobs_failed=0) (action_http_head_request.failures=0) (stream_write_exceptions_completing_upload=0) (op_exists.failures=0) (delegation_tokens_issued.failures=0) (committer_commits_reverted=0) (op_xattr_list=0) (directories_deleted=0) (store_io_throttled=0) (committer_commits_created=0) (stream_read_vectored_incoming_ranges=58) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_read_fully_operations=1) (op_delete.failures=0) (stream_read_vectored_read_bytes_discarded=24543) (committer_load_single_pending_file=0) (store_io_request=338) (stream_read_bytes=6963) (audit_access_check_failure=0) (committer_magic_marker_put.failures=0) (stream_read_remote_stream_drain=3) (stream_write_total_data=3801088) (object_delete_objects=58) (delegation_tokens_issued=0) (op_is_file.failures=0) (op_is_directory.failures=0) (files_copied=0) (object_bulk_delete_request=58) (committer_commits.failures=0) (stream_read_remote_stream_aborted=0) (op_get_delegation_token.failures=0) (op_xattr_get_named.failures=0) (stream_read_seek_operations=0) (object_put_bytes=1900544) (op_access.failures=0) (directories_created=29) (multipart_upload_abort_under_path_invoked=0) (action_http_get_request=25) (committer_tasks_completed=0) (stream_write_queue_duration.failures=0) (multipart_upload_part_put_bytes=0) (multipart_upload_aborted=0) (multipart_upload_list.failures=0) (op_list_status=0) (op_glob_status.failures=0) (committer_materialize_file.failures=0) (stream_read_exceptions=0) (op_abort.failures=0) (op_list_files.failures=0) (multipart_upload_started=0) (op_hsync=0) (object_multipart_initiated=0) (multipart_upload_list=0) (object_put_request.failures=0) (stream_read_bytes_discarded_in_close=196008) (committer_commits_aborted=0) (stream_aborted=0) (op_create.failures=0) (stream_read_total_bytes=202971) (op_is_directory=0) (committer_stage_file_upload.failures=0) (stream_write_total_time=0) (store_exists_probe=0) (op_copy_from_local_file.failures=0) (op_mkdirs=29) (action_executor_acquired=0) (stream_write_block_uploads_committed=0) (op_rename=0) (op_exists=0) (op_open=23) (op_xattr_get_named=0) (files_created=29) (op_list_status.failures=0) (object_bulk_delete_request.failures=0) (committer_magic_files_created=0) (committer_stage_file_upload=0) (op_list_files=0) (object_multipart_initiated.failures=0) (op_get_delegation_token=0) (stream_read_operations=3) (committer_commits_completed=0) (object_delete_request=0) (stream_read_close_operations=23) (op_createfile.failures=0) (object_copy_requests=0) (object_multipart_aborted=0) (op_get_content_summary.failures=0) (op_create_non_recursive=0) (stream_read_opened=3) (fake_directories_created=0) (op_get_file_checksum.failures=0) (files_copied_bytes=0) (object_continue_list_request.failures=0) (op_get_file_status.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (object_delete_request.failures=0) (committer_bytes_uploaded=0) (object_list_request.failures=0) (op_get_file_checksum=0) (stream_read_unbuffered=2) (op_xattr_get_map=0));
gauges=((stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_pending=29) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_xattr_get_named.min=-1) (object_put_request.min=27) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.failures.min=-1) (op_list_status.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.min=-1) (op_createfile.failures.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_status.min=5) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_aborted.min=-1) (op_access.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_list_files.min=-1) (object_list_request.min=5) (op_create.failures.min=-1) (op_is_file.failures.min=-1) (op_glob_status.failures.min=-1) (op_xattr_list.min=-1) (action_http_get_request.min=10) (committer_materialize_file.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_mkdirs.min=20) (op_exists.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.failures.min=-1) (op_access.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_createfile.min=-1) (op_glob_status.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=7) (action_file_opened.min=4) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_head_request.min=3) (committer_magic_marker_put.failures.min=-1) (object_delete_request.failures.min=-1) (op_create.min=6) (stream_write_queue_duration.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_abort.min=-1) (op_rename.min=-1) (object_continue_list_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_stage_file_upload.min=-1) (action_file_opened.failures.min=-1) (op_is_file.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_is_directory.min=-1) (store_exists_probe.min=-1) (op_delete.min=26) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.failures.min=-1));
maximums=((store_exists_probe.max=-1) (op_copy_from_local_file.max=-1) (op_abort.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.max=-1) (action_executor_acquired.max=-1) (op_get_delegation_token.max=-1) (op_is_directory.failures.max=-1) (object_bulk_delete_request.max=27) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.max=-1) (op_list_files.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=26) (op_list_files.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_status.max=5) (object_list_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (object_continue_list_request.max=-1) (op_create.max=53) (op_xattr_list.failures.max=-1) (op_mkdirs.max=372) (committer_commit_job.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.max=-1) (op_exists.failures.max=-1) (op_createfile.max=-1) (op_access.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=101) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (op_delete.failures.max=-1) (action_http_get_request.max=50) (committer_load_single_pending_file.max=-1) (multipart_upload_list.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_createfile.failures.max=-1) (multipart_upload_list.max=-1) (op_rename.failures.max=-1) (op_list_status.max=-1) (op_get_file_checksum.max=-1) (action_http_head_request.max=26) (op_copy_from_local_file.failures.max=-1) (op_rename.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.max=233) (action_http_get_request.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.max=-1) (op_exists.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.failures.max=-1) (object_multipart_aborted.max=-1) (stream_read_remote_stream_drain.max=4) (op_delete.max=112) (object_bulk_delete_request.failures.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.max=-1) (op_abort.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_is_directory.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=116, sum=1340, mean=11.5517)) (action_file_opened.mean=(samples=23, sum=160, mean=6.9565)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=5, mean=1.6667)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=58, sum=2033, mean=35.0517)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=58, sum=824, mean=14.2069)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=29, sum=382, mean=13.1724)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=29, sum=1436, mean=49.5172)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=29, sum=1466, mean=50.5517)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=25, sum=502, mean=20.0800)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=81, sum=444, mean=5.4815)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:11,571 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:11,572 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,572 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,572 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,572 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,572 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691571
2024-11-16 17:38:11,577 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:11,577 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,577 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,577 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,577 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,577 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691571
2024-11-16 17:38:11,580 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,580 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:11,580 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:11,581 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:11,581 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000146&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691571
2024-11-16 17:38:11,598 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:11,598 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:11,598 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.018s
2024-11-16 17:38:11,598 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:11,598 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,598 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,599 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,599 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,599 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000147 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000147&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691598
2024-11-16 17:38:11,604 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:11,605 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,605 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:11,605 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7368879315505239900.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:11,606 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7368879315505239900.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_put_request=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (op_hsync=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (op_abort=0) (object_multipart_initiated=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (op_abort.failures=0) (multipart_upload_completed=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7368879315505239900.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,606 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,607 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:11,607 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7368879315505239900.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:11,607 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:11,608 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:11,608 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:11,608 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000147 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000147&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=84&ts=1731778691598
2024-11-16 17:38:11,609 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:11,642 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:11,642 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:11,642 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:38:11,643 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7368879315505239900.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:11,643 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7368879315505239900.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,643 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7368879315505239900.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,643 [s3a-transfer-leg-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:11,643 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,644 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_put_request=1) (object_multipart_initiated=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (op_abort=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (op_hsync=0) (op_abort.failures=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=34) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=34) (op_abort.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=34, mean=34.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:11,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:11,646 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,646 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,646 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:11,647 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691646
2024-11-16 17:38:11,650 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:11,650 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:11,651 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,651 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:11,651 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:11,652 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:11,652 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,652 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,652 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:11,652 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=87&ts=1731778691646
2024-11-16 17:38:11,653 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:11,653 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:11,654 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:38:11,654 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,654 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-65535&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000148&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691646
2024-11-16 17:38:11,666 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:38:11,667 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:11,667 [s3a-transfer-leg-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:11,666 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.013s
2024-11-16 17:38:11,668 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:11,668 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:11,669 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:11,670 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:38:11,670 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:38:11,670 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7440 bytes
2024-11-16 17:38:11,671 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:11,671 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:11,671 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:11,672 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8744 bytes
2024-11-16 17:38:11,672 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:38:11,672 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:11,673 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=65686) (action_file_opened.failures=0) (action_executor_acquired=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=350) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (action_http_get_request=2) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_prefetch_operations.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_policy_changed=1) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_vectored_operations=1) (stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_vectored_incoming_ranges=2) (stream_read_seek_forward_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_drain=1) (stream_read_closed=1) (stream_read_prefetch_operations=0) (stream_read_operations=1) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_seek_operations=0) (stream_read_opened=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=4) (action_http_get_request.min=12) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=2) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=2) (action_http_get_request.max=14) (action_file_opened.max=4) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=2, mean=2.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=26, mean=13.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:11,674 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:11,675 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,675 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,675 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691674
2024-11-16 17:38:11,680 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,680 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,680 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=206&ts=1731778691674
2024-11-16 17:38:11,688 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:11,688 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:11,689 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:11,689 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:11,689 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:11,689 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:11,689 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:11,689 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:11,690 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:11,690 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:11,690 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:11,690 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:11,690 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:11,691 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:11,691 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,691 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=207&ts=1731778691674
2024-11-16 17:38:11,698 [s3a-transfer-leg-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:11,698 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:38:11,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:11,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:11,698 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:11,699 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691636; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:11,699 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:11,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:11,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:11,699 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:11,699 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:11,699 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:11,699 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:11,700 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:11,700 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,700 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,700 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:11,700 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,700 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=89&ts=1731778691674
2024-11-16 17:38:11,713 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,714 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000149&t0=206&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=89&ts=1731778691674
2024-11-16 17:38:11,728 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:11,728 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:38:11,728 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:38:11,728 [s3a-transfer-leg-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.029s
2024-11-16 17:38:11,731 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.032s
2024-11-16 17:38:11,731 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:38:11,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:11,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:11,732 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:11,751 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 36, active threads = 0, queued tasks = 0, completed tasks = 36], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_incoming_ranges=60) (committer_stage_file_upload.failures=0) (stream_read_seek_backward_operations=0) (multipart_upload_list.failures=0) (files_copied=0) (op_create.failures=0) (committer_magic_files_created=0) (committer_magic_marker_put.failures=0) (object_list_request.failures=0) (files_copied_bytes=0) (committer_commits_created=0) (op_copy_from_local_file.failures=0) (committer_jobs_completed=0) (op_openfile=0) (action_executor_acquired=0) (stream_read_opened=4) (op_get_delegation_token=0) (store_exists_probe=0) (op_get_file_checksum=0) (committer_tasks_failed=0) (audit_access_check_failure=0) (directories_created=30) (committer_commits_reverted=0) (action_file_opened=24) (audit_failure=0) (committer_bytes_committed=0) (op_mkdirs.failures=0) (store_exists_probe.failures=0) (stream_write_queue_duration.failures=0) (committer_commit_job=0) (object_multipart_initiated=0) (stream_read_seek_operations=0) (store_io_throttled=0) (action_http_get_request=27) (action_executor_acquired.failures=0) (committer_stage_file_upload=0) (op_hsync=0) (op_list_located_status=0) (stream_write_total_time=0) (op_create=30) (op_get_content_summary=0) (op_xattr_get_map.failures=0) (op_xattr_list.failures=0) (op_delete.failures=0) (object_list_request=120) (stream_write_block_uploads=30) (op_access=0) (multipart_upload_part_put_bytes=0) (op_exists.failures=0) (op_mkdirs=30) (files_deleted=30) (committer_load_single_pending_file=0) (op_list_status=0) (op_glob_status=0) (stream_read_seek_bytes_skipped=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named=0) (op_get_file_status.failures=0) (committer_bytes_uploaded=0) (op_get_content_summary.failures=0) (op_access.failures=0) (object_select_requests=0) (object_continue_list_request=0) (multipart_upload_abort_under_path_invoked=0) (action_http_get_request.failures=0) (stream_read_closed=4) (op_open=24) (committer_jobs_failed=0) (op_list_status.failures=0) (stream_read_seek_forward_operations=0) (op_glob_status.failures=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (op_delete=30) (op_exists=0) (object_metadata_request=84) (stream_read_remote_stream_drain=4) (op_abort.failures=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list=0) (op_createfile=0) (stream_read_remote_stream_aborted.failures=0) (action_http_head_request=84) (stream_read_fully_operations=1) (committer_commit_job.failures=0) (op_xattr_get_named.failures=0) (files_created=30) (store_io_request=351) (op_copy_from_local_file=0) (op_list_files.failures=0) (committer_commits_aborted=0) (op_create_non_recursive=0) (fake_directories_created=0) (files_delete_rejected=0) (object_multipart_aborted.failures=0) (op_get_delegation_token.failures=0) (stream_read_unbuffered=2) (op_xattr_get_map=0) (stream_aborted=0) (stream_read_total_bytes=268657) (op_is_directory.failures=0) (committer_load_single_pending_file.failures=0) (op_rename=0) (delegation_tokens_issued.failures=0) (directories_deleted=0) (audit_request_execution=351) (op_xattr_get_named_map.failures=0) (object_delete_request=0) (multipart_upload_list=0) (stream_read_bytes_discarded_in_close=261344) (object_put_bytes=1966080) (op_list_files=0) (object_multipart_aborted=0) (op_is_directory=0) (stream_read_exceptions=0) (committer_materialize_file=0) (object_copy_requests=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (object_bulk_delete_request=60) (stream_write_exceptions_completing_upload=0) (multipart_upload_aborted=0) (op_is_file.failures=0) (action_http_head_request.failures=0) (committer_commits_completed=0) (op_hflush=0) (stream_read_close_operations=24) (object_put_request_completed=60) (delegation_tokens_issued=0) (ignored_errors=0) (fake_directories_deleted=30) (object_continue_list_request.failures=0) (object_bulk_delete_request.failures=0) (committer_magic_marker_put=0) (stream_read_operations=4) (op_is_file=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (multipart_instantiated=0) (op_xattr_get_named_map=0) (committer_materialize_file.failures=0) (op_get_file_status=1) (op_abort=0) (object_delete_objects=60) (committer_tasks_completed=0) (action_file_opened.failures=0) (stream_write_bytes=1966080) (object_put_request=60) (op_rename.failures=0) (stream_read_operations_incomplete=0) (multipart_upload_started=0) (object_put_request.failures=0) (stream_read_vectored_read_bytes_discarded=24553) (op_get_file_checksum.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_delete_request.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=26) (store_io_retry=0) (stream_read_vectored_operations=21) (audit_span_creation=116) (stream_read_vectored_combined_ranges=26) (stream_read_bytes=7313) (stream_write_total_data=3932160) (committer_commits.failures=0) (multipart_upload_completed=0) (op_createfile.failures=0) (stream_write_block_uploads_committed=0));
gauges=((object_put_bytes_pending=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=30) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((committer_commit_job.failures.min=-1) (op_glob_status.min=-1) (op_is_file.min=-1) (action_executor_acquired.min=-1) (op_xattr_list.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.min=5) (op_list_status.failures.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_file_opened.failures.min=-1) (object_list_request.min=5) (object_put_request.min=34) (op_xattr_list.min=-1) (op_access.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_map.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_drain.min=2) (op_xattr_get_named_map.failures.min=-1) (op_is_file.failures.min=-1) (op_list_files.min=-1) (action_file_opened.min=4) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (op_glob_status.failures.min=-1) (stream_write_queue_duration.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_stage_file_upload.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_create.failures.min=-1) (op_createfile.min=-1) (op_is_directory.failures.min=-1) (op_rename.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_access.min=-1) (object_continue_list_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.min=-1) (delegation_tokens_issued.failures.min=-1) (op_exists.min=-1) (op_xattr_get_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_list_files.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_mkdirs.min=20) (op_abort.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_delete_request.min=-1) (op_list_status.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_commit_job.min=-1) (op_delete.min=26) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_materialize_file.min=-1) (action_http_head_request.min=3) (committer_magic_marker_put.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.min=12) (object_bulk_delete_request.min=7) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.min=6) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((op_copy_from_local_file.max=-1) (object_put_request.failures.max=-1) (op_get_delegation_token.max=-1) (op_access.max=-1) (op_rename.max=-1) (object_multipart_aborted.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_directory.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.max=26) (store_exists_probe.failures.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (op_delete.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.max=-1) (op_is_file.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=101) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.max=-1) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=50) (op_is_file.failures.max=-1) (op_create.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.max=372) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.failures.max=-1) (action_http_head_request.max=26) (op_createfile.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_delete_request.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.max=27) (op_get_file_checksum.max=-1) (op_exists.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_status.max=5) (object_list_request.max=233) (delegation_tokens_issued.failures.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=4) (action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (op_delete.max=112) (op_create.max=53) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.max=-1) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_list_status.failures.max=-1));
means=((multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=30, sum=390, mean=13.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=30, sum=1463, mean=48.7667)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=60, sum=851, mean=14.1833)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=84, sum=456, mean=5.4286)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=60, sum=2084, mean=34.7333)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=120, sum=1365, mean=11.3750)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=24, sum=164, mean=6.8333)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=30, sum=1508, mean=50.2667)) (action_http_get_request.mean=(samples=27, sum=528, mean=19.5556)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:11,752 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:11,752 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,752 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,752 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,752 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,752 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=208&ts=1731778691752
2024-11-16 17:38:11,758 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:11,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,759 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=208&ts=1731778691752
2024-11-16 17:38:11,766 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,766 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:11,766 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:11,766 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:11,766 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000150&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=208&ts=1731778691752
2024-11-16 17:38:11,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:11,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:11,781 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.015s
2024-11-16 17:38:11,781 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:11,782 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,782 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,782 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,782 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,782 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000151 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000151&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=208&ts=1731778691782
2024-11-16 17:38:11,792 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:11,792 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,793 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:11,793 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2722253537348343771.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:11,794 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2722253537348343771.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (stream_write_total_time=0) (op_abort=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (object_put_request=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2722253537348343771.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,794 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,794 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:11,794 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2722253537348343771.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:11,794 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:11,794 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:11,794 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:11,794 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:11,795 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000151 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000151&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=90&ts=1731778691782
2024-11-16 17:38:11,843 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:11,843 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:11,843 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.049s
2024-11-16 17:38:11,843 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2722253537348343771.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:11,844 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2722253537348343771.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,844 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2722253537348343771.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,844 [s3a-transfer-leg-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:11,844 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,845 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_put_request.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (object_put_request=1) (multipart_upload_completed=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (op_hsync=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=48) (op_abort.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=48) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=48, mean=48.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:11,846 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:11,848 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,848 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,848 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:11,848 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [209] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000152 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000152/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000152&t0=209&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=209&ts=1731778691848
2024-11-16 17:38:11,854 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:11,854 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:11,855 [s3a-transfer-leg-bucket-unbounded-pool2-t37] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:11,855 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:38:11,856 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (action_http_get_request=0) (stream_read_vectored_combined_ranges=0) (stream_read_opened=0) (stream_read_operations=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_block_read=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_block_acquire_read=0) (stream_read_seek_policy_changed=1) (stream_read_close_operations=1) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_vectored_operations=0) (stream_read_seek_forward_operations=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=6));
maximums=((action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:11,858 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:11,858 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,858 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,858 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=208&ts=1731778691858
2024-11-16 17:38:11,864 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,864 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,864 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=208&ts=1731778691858
2024-11-16 17:38:11,880 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:38:11,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:11,880 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:11,881 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:11,881 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:11,881 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:11,881 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:11,881 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:11,881 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:11,882 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:11,882 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:11,882 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:11,882 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:11,882 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:11,883 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,883 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [210] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=210&ts=1731778691858
2024-11-16 17:38:11,892 [s3a-transfer-leg-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:11,892 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:38:11,892 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:11,892 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:11,893 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:11,893 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778691838; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:11,893 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:11,893 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:11,893 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:11,894 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:11,894 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,894 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=92&ts=1731778691858
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:11,906 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000153&t0=208&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=92&ts=1731778691858
2024-11-16 17:38:11,920 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:11,921 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:38:11,921 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:38:11,921 [s3a-transfer-leg-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:38:11,922 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:38:11,922 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:38:11,922 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:11,922 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:11,923 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:11,946 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 38, active threads = 0, queued tasks = 0, completed tasks = 38], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_part_put=0) (committer_magic_files_created=0) (object_put_request=62) (object_multipart_initiated=0) (delegation_tokens_issued=0) (committer_commits.failures=0) (op_get_file_checksum=0) (object_bulk_delete_request.failures=0) (op_rename=0) (object_continue_list_request.failures=0) (delegation_tokens_issued.failures=0) (object_metadata_request=87) (op_hflush=0) (stream_read_closed=4) (op_list_located_status=0) (multipart_upload_part_put_bytes=0) (store_io_throttled=0) (files_copied_bytes=0) (committer_commits_completed=0) (action_executor_acquired=0) (op_openfile=0) (committer_stage_file_upload=0) (committer_bytes_uploaded=0) (op_get_file_status=1) (object_continue_list_request=0) (fake_directories_deleted=31) (committer_materialize_file=0) (committer_magic_marker_put.failures=0) (committer_tasks_failed=0) (committer_commits_aborted=0) (directories_created=31) (object_put_bytes=2031616) (stream_read_unbuffered=2) (audit_access_check_failure=0) (op_list_status.failures=0) (stream_read_seek_backward_operations=0) (committer_tasks_completed=0) (op_get_delegation_token=0) (action_http_get_request=27) (stream_read_vectored_read_bytes_discarded=24553) (stream_read_remote_stream_drain=4) (stream_read_vectored_combined_ranges=26) (op_xattr_get_named=0) (stream_read_opened=4) (op_xattr_get_named_map=0) (stream_aborted=0) (op_delete.failures=0) (op_mkdirs=31) (audit_request_execution=362) (op_is_directory.failures=0) (op_copy_from_local_file=0) (op_xattr_get_map=0) (stream_write_exceptions=0) (op_is_file=0) (ignored_errors=0) (multipart_upload_aborted=0) (op_exists.failures=0) (action_http_get_request.failures=0) (stream_write_block_uploads_committed=0) (committer_commits_created=0) (directories_deleted=0) (committer_materialize_file.failures=0) (op_get_content_summary.failures=0) (object_copy_requests=0) (object_multipart_aborted.failures=0) (multipart_instantiated=0) (committer_commit_job.failures=0) (committer_load_single_pending_file=0) (files_created=31) (op_xattr_list.failures=0) (multipart_upload_abort_under_path_invoked=0) (committer_jobs_failed=0) (op_open=25) (op_rename.failures=0) (op_createfile.failures=0) (op_get_delegation_token.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_list=0) (op_create_non_recursive=0) (committer_stage_file_upload.failures=0) (object_select_requests=0) (op_list_files=0) (stream_read_seek_policy_changed=27) (op_hsync=0) (store_exists_probe=0) (stream_read_total_bytes=268657) (action_http_head_request.failures=0) (stream_read_seek_bytes_skipped=0) (stream_write_bytes=2031616) (files_deleted=31) (multipart_upload_completed=0) (stream_read_seek_operations=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_bytes_discarded=0) (committer_commit_job=0) (stream_read_bytes=7313) (op_glob_status=0) (object_put_request_completed=62) (op_list_files.failures=0) (op_abort=0) (op_delete=31) (object_delete_request=0) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (action_file_opened=25) (stream_write_block_uploads_aborted=0) (object_list_request.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=261344) (stream_read_exceptions=0) (stream_write_queue_duration=0) (op_xattr_get_named.failures=0) (stream_write_exceptions_completing_upload=0) (object_list_request=124) (stream_write_block_uploads=31) (object_bulk_delete_request=62) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=25) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=1) (stream_write_total_data=4063232) (object_multipart_aborted=0) (stream_read_vectored_incoming_ranges=60) (object_delete_objects=62) (files_delete_rejected=0) (op_get_file_status.failures=0) (object_delete_request.failures=0) (op_create=31) (store_io_request=362) (op_createfile=0) (store_exists_probe.failures=0) (stream_read_remote_stream_aborted=0) (committer_commits_reverted=0) (op_is_directory=0) (op_create.failures=0) (stream_write_queue_duration.failures=0) (stream_read_vectored_operations=21) (op_xattr_get_map.failures=0) (fake_directories_created=0) (op_access=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (op_exists=0) (op_get_file_checksum.failures=0) (object_put_request.failures=0) (op_glob_status.failures=0) (op_mkdirs.failures=0) (op_is_file.failures=0) (multipart_upload_started=0) (committer_magic_marker_put=0) (op_get_content_summary=0) (committer_bytes_committed=0) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_list.failures=0) (store_io_retry=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named_map.failures=0) (action_http_head_request=87) (op_xattr_list=0) (op_access.failures=0) (op_list_status=0) (op_copy_from_local_file.failures=0) (stream_read_operations=4) (committer_jobs_completed=0) (files_copied=0) (audit_span_creation=120) (audit_failure=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=31) (object_put_request_active=0) (object_put_bytes_pending=0));
minimums=((op_rename.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (op_delete.min=26) (op_get_file_checksum.min=-1) (object_list_request.min=5) (op_create.min=6) (op_delete.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (multipart_upload_list.min=-1) (action_executor_acquired.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.min=-1) (delegation_tokens_issued.min=-1) (object_delete_request.min=-1) (op_xattr_list.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_commit_job.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.min=5) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_drain.min=2) (action_http_get_request.min=12) (op_createfile.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_rename.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.min=-1) (committer_materialize_file.min=-1) (action_file_opened.min=6) (committer_magic_marker_put.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.min=-1) (multipart_upload_list.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_is_directory.failures.min=-1) (op_create.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.min=-1) (object_put_request.min=48) (op_access.failures.min=-1) (object_put_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.min=-1) (object_bulk_delete_request.min=7) (op_list_status.failures.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.min=-1) (op_list_files.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.min=20) (op_glob_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_abort.min=-1) (object_continue_list_request.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.min=3) (committer_commit_job.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.failures.min=-1));
maximums=((op_mkdirs.max=372) (op_create.failures.max=-1) (op_abort.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_list_status.failures.max=-1) (op_list_files.failures.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_commit_job.max=-1) (op_get_content_summary.failures.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.max=-1) (object_bulk_delete_request.failures.max=-1) (op_rename.failures.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.max=-1) (committer_stage_file_upload.max=-1) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_list.failures.max=-1) (op_copy_from_local_file.max=-1) (op_is_directory.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_create.max=53) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (op_delete.max=112) (object_multipart_initiated.failures.max=-1) (op_is_directory.failures.max=-1) (object_put_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.failures.max=-1) (store_exists_probe.max=-1) (committer_materialize_file.max=-1) (op_glob_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.max=26) (op_rename.max=-1) (object_put_request.max=101) (op_xattr_get_named_map.max=-1) (committer_materialize_file.failures.max=-1) (op_access.max=-1) (op_list_files.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_checksum.failures.max=-1) (committer_commit_job.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_abort.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.max=5) (action_http_get_request.max=50) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (object_list_request.failures.max=-1) (object_list_request.max=233) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_drain.max=4) (action_http_head_request.failures.max=-1) (op_xattr_list.max=-1) (op_exists.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (action_file_opened.max=26) (op_createfile.max=-1) (object_bulk_delete_request.max=27) (multipart_upload_list.max=-1) (op_xattr_get_map.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_glob_status.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.max=-1) (action_file_opened.failures.max=-1) (object_multipart_initiated.max=-1));
means=((op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=31, sum=1492, mean=48.1290)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=62, sum=877, mean=14.1452)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=124, sum=1406, mean=11.3387)) (action_http_get_request.mean=(samples=27, sum=528, mean=19.5556)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=25, sum=170, mean=6.8000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=31, sum=401, mean=12.9355)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (op_delete.mean=(samples=31, sum=1549, mean=49.9677)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=87, sum=475, mean=5.4598)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=62, sum=2147, mean=34.6290)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:11,947 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:11,947 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,947 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,947 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,947 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,947 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=211&ts=1731778691947
2024-11-16 17:38:11,953 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:11,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:11,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:11,953 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:11,953 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=211&ts=1731778691947
2024-11-16 17:38:11,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:11,957 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:11,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:11,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:11,957 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000154&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=211&ts=1731778691947
2024-11-16 17:38:11,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:11,979 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:11,979 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.022s
2024-11-16 17:38:11,979 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:11,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:11,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:11,980 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:11,980 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000155 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000155&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=211&ts=1731778691980
2024-11-16 17:38:11,990 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:11,991 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:11,991 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:11,991 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13921738717991473763.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:11,992 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13921738717991473763.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (op_hflush=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_put_request=0) (op_hsync=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_multipart_aborted.failures=0) (op_abort=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13921738717991473763.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:11,993 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:11,993 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:11,993 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13921738717991473763.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:11,993 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:11,993 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:11,993 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:11,994 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:11,994 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000155 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000155&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=94&ts=1731778691980
2024-11-16 17:38:12,048 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:12,048 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:12,048 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:38:12,049 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13921738717991473763.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:12,049 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13921738717991473763.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,049 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13921738717991473763.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,049 [s3a-transfer-leg-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:12,049 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,050 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (stream_write_block_uploads=1) (action_executor_acquired.failures=0) (op_hsync=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (op_abort=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (object_put_request=1) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=54) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1));
maximums=((op_abort.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=54) (multipart_upload_completed.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=54, mean=54.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:12,050 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:12,051 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,051 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,051 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:12,051 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000156 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000156&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=211&ts=1731778692051
2024-11-16 17:38:12,057 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:12,058 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:12,058 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,058 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:38:12,058 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:12,058 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:38:12,058 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:38:12,058 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,058 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,058 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:12,058 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000156 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-999&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000156&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=98&ts=1731778692051
2024-11-16 17:38:12,079 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:38:12,079 [s3a-transfer-leg-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,081 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_vectored_operations=1) (stream_read_operations_incomplete=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_policy_changed=1) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (action_http_get_request=1) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=1000) (stream_read_vectored_combined_ranges=1) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_incoming_ranges=10) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_exceptions=0) (stream_read_total_bytes=1000) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=0) (stream_read_unbuffered=0) (stream_read_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=7) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=21));
maximums=((action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=21) (action_file_opened.max=7) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.mean=(samples=1, sum=21, mean=21.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:12,082 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:12,082 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,082 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,082 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=211&ts=1731778692082
2024-11-16 17:38:12,086 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,087 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,087 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=211&ts=1731778692082
2024-11-16 17:38:12,094 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:12,094 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:12,094 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:12,094 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:12,094 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:12,094 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:12,095 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:12,095 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:12,095 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:12,095 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:12,095 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:12,095 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:12,096 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:12,096 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:12,097 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,097 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=212&ts=1731778692082
2024-11-16 17:38:12,104 [s3a-transfer-leg-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:12,104 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:38:12,104 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:12,105 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:12,105 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:12,105 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778692041; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:12,105 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:12,105 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:12,105 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:12,105 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:12,105 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:12,105 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:12,105 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:12,105 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:12,105 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,105 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,105 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:12,105 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,106 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=96&ts=1731778692082
2024-11-16 17:38:12,115 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:12,115 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:12,115 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:12,115 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:12,115 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:12,116 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,116 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,116 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:12,116 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,116 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000157&t0=211&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=96&ts=1731778692082
2024-11-16 17:38:12,126 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:12,126 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:12,127 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:38:12,127 [s3a-transfer-leg-bucket-bounded-pool1-t26] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:38:12,127 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.022s
2024-11-16 17:38:12,127 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.032s
2024-11-16 17:38:12,127 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:12,127 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:12,128 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:12,140 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 39, active threads = 0, queued tasks = 0, completed tasks = 39], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_aborted.failures=0) (ignored_errors=0) (op_xattr_get_named.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads_committed=0) (op_create_non_recursive=0) (committer_stage_file_upload.failures=0) (directories_created=32) (stream_write_total_time=0) (stream_read_seek_operations=0) (op_delete.failures=0) (committer_jobs_failed=0) (op_list_located_status=0) (stream_write_queue_duration=0) (op_get_delegation_token=0) (op_open=26) (multipart_upload_part_put=0) (object_select_requests=0) (files_delete_rejected=0) (stream_aborted=0) (op_is_directory.failures=0) (committer_load_single_pending_file=0) (multipart_upload_aborted=0) (committer_jobs_completed=0) (op_is_directory=0) (object_multipart_initiated.failures=0) (committer_commits_created=0) (action_file_opened=26) (committer_commits.failures=0) (op_get_file_status=1) (op_abort=0) (op_is_file=0) (op_hsync=0) (op_xattr_get_map.failures=0) (files_created=32) (op_xattr_get_named=0) (op_openfile=0) (action_http_head_request=90) (op_glob_status.failures=0) (stream_read_opened=4) (op_get_file_status.failures=0) (op_exists=0) (audit_span_creation=124) (files_deleted=32) (object_multipart_initiated=0) (committer_magic_files_created=0) (committer_load_single_pending_file.failures=0) (multipart_instantiated=0) (multipart_upload_part_put_bytes=0) (op_create.failures=0) (multipart_upload_started=0) (stream_read_bytes=8313) (action_http_get_request=28) (files_copied_bytes=0) (object_bulk_delete_request.failures=0) (op_list_status.failures=0) (action_executor_acquired.failures=0) (fake_directories_created=0) (stream_write_bytes=2097152) (committer_commits_aborted=0) (op_rename=0) (op_copy_from_local_file=0) (object_multipart_aborted=0) (audit_request_execution=374) (op_createfile.failures=0) (op_xattr_list.failures=0) (object_delete_request.failures=0) (op_copy_from_local_file.failures=0) (object_delete_objects=64) (object_put_request_completed=64) (stream_read_bytes_discarded_in_close=261344) (op_is_file.failures=0) (object_bulk_delete_request=64) (object_put_request.failures=0) (stream_read_vectored_read_bytes_discarded=24553) (multipart_upload_list=0) (stream_read_bytes_backwards_on_seek=0) (op_get_delegation_token.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_list=0) (committer_bytes_uploaded=0) (object_put_request=64) (committer_magic_marker_put=0) (op_createfile=0) (op_get_content_summary.failures=0) (audit_failure=0) (committer_materialize_file=0) (op_list_files=0) (committer_materialize_file.failures=0) (store_io_throttled=0) (committer_magic_marker_put.failures=0) (stream_read_closed=4) (stream_read_fully_operations=1) (op_xattr_get_named_map=0) (object_list_request.failures=0) (committer_commit_job=0) (stream_read_operations=4) (store_io_retry=0) (multipart_upload_abort_under_path_invoked=0) (delegation_tokens_issued=0) (op_get_file_checksum=0) (delegation_tokens_issued.failures=0) (store_exists_probe.failures=0) (stream_read_seek_backward_operations=0) (op_list_files.failures=0) (op_glob_status=0) (stream_read_close_operations=26) (store_io_request=374) (stream_read_remote_stream_drain.failures=0) (fake_directories_deleted=32) (stream_read_vectored_incoming_ranges=70) (op_delete=32) (stream_read_seek_forward_operations=0) (stream_write_queue_duration.failures=0) (multipart_upload_list.failures=0) (stream_write_block_uploads=32) (committer_stage_file_upload=0) (op_mkdirs.failures=0) (stream_read_seek_bytes_skipped=0) (object_delete_request=0) (stream_read_vectored_combined_ranges=27) (stream_read_vectored_operations=22) (op_get_file_checksum.failures=0) (committer_tasks_failed=0) (committer_commit_job.failures=0) (op_mkdirs=32) (object_copy_requests=0) (object_continue_list_request=0) (object_list_request=128) (stream_read_remote_stream_aborted=0) (op_access=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (committer_bytes_committed=0) (stream_read_unbuffered=2) (stream_read_operations_incomplete=0) (op_hflush=0) (stream_write_total_data=4194304) (committer_commits_completed=0) (object_continue_list_request.failures=0) (op_get_content_summary=0) (committer_commits_reverted=0) (action_file_opened.failures=0) (op_access.failures=0) (stream_read_seek_policy_changed=28) (stream_read_version_mismatches=0) (directories_deleted=0) (op_xattr_get_map=0) (object_metadata_request=90) (op_abort.failures=0) (committer_tasks_completed=0) (stream_write_block_uploads_aborted=0) (op_create=32) (op_rename.failures=0) (audit_access_check_failure=0) (op_exists.failures=0) (object_multipart_aborted.failures=0) (stream_read_remote_stream_drain=4) (op_list_status=0) (action_executor_acquired=0) (object_put_bytes=2097152) (stream_read_exceptions=0) (multipart_upload_completed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_total_bytes=269657) (op_xattr_get_named_map.failures=0) (files_copied=0) (action_http_head_request.failures=0) (store_exists_probe=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_write_block_uploads_pending=32) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_drain.min=2) (op_get_file_status.min=5) (op_glob_status.failures.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named.min=-1) (op_create.failures.min=-1) (op_get_file_checksum.min=-1) (op_delete.min=26) (delegation_tokens_issued.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_directory.min=-1) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (op_access.min=-1) (action_file_opened.failures.min=-1) (op_list_status.failures.min=-1) (action_http_head_request.min=3) (object_bulk_delete_request.failures.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (op_get_content_summary.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (store_exists_probe.failures.min=-1) (op_create.min=6) (object_put_request.min=54) (op_list_status.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_glob_status.min=-1) (op_abort.min=-1) (delegation_tokens_issued.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.min=-1) (action_executor_acquired.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.min=7) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=21) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=5) (committer_commit_job.failures.min=-1) (op_delete.failures.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (op_createfile.failures.min=-1) (op_rename.min=-1) (op_createfile.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_http_head_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_bulk_delete_request.min=7) (op_xattr_get_map.min=-1) (object_delete_request.min=-1) (op_exists.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_directory.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_magic_marker_put.min=-1) (object_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=20) (op_copy_from_local_file.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (op_mkdirs.max=372) (op_xattr_list.failures.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (op_abort.failures.max=-1) (op_createfile.failures.max=-1) (op_get_file_status.failures.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=26) (op_xattr_get_named.failures.max=-1) (op_list_status.failures.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.max=-1) (object_bulk_delete_request.max=27) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (action_http_get_request.max=50) (op_exists.max=-1) (object_put_request.max=101) (op_is_directory.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_delete.max=112) (object_continue_list_request.max=-1) (object_continue_list_request.failures.max=-1) (op_createfile.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1) (op_abort.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=4) (object_list_request.max=233) (object_bulk_delete_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.max=-1) (object_delete_request.max=-1) (action_file_opened.failures.max=-1) (op_exists.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=53) (op_get_file_status.max=5) (op_create.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_access.max=-1) (object_multipart_initiated.max=-1) (op_rename.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.max=-1) (action_file_opened.max=26) (op_xattr_list.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.failures.max=-1) (op_copy_from_local_file.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named.max=-1) (op_get_delegation_token.max=-1));
means=((action_file_opened.mean=(samples=26, sum=177, mean=6.8077)) (object_bulk_delete_request.mean=(samples=64, sum=897, mean=14.0156)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=5, mean=5.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=32, sum=1582, mean=49.4375)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=28, sum=549, mean=19.6071)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=128, sum=1436, mean=11.2188)) (object_put_request.mean=(samples=64, sum=2223, mean=34.7344)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=90, sum=489, mean=5.4333)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=32, sum=413, mean=12.9063)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=32, sum=1524, mean=47.6250)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:12,140 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:12,140 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,140 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,140 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,141 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,141 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=213&ts=1731778692140
2024-11-16 17:38:12,150 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:12,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,150 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=213&ts=1731778692140
2024-11-16 17:38:12,152 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,152 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:12,153 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:12,153 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:12,153 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000158&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=213&ts=1731778692140
2024-11-16 17:38:12,168 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:12,168 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:12,168 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:38:12,168 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:12,169 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,169 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,169 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,169 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,169 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000159 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000159&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=213&ts=1731778692168
2024-11-16 17:38:12,178 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:12,178 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,178 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:12,179 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17150546114838774114.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:12,180 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17150546114838774114.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (op_abort.failures=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (multipart_upload_completed=0) (stream_write_total_time=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (object_put_request=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (op_abort=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_put_request.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17150546114838774114.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,180 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,180 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:12,180 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17150546114838774114.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:12,181 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:12,181 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:12,181 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:12,181 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:12,181 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000159 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000159&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=97&ts=1731778692168
2024-11-16 17:38:12,216 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:12,216 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:12,217 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.036s
2024-11-16 17:38:12,217 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17150546114838774114.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:12,217 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17150546114838774114.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,217 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17150546114838774114.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,217 [s3a-transfer-leg-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:12,218 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,219 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_put_request=1) (object_multipart_aborted=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=35) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=35) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=35, mean=35.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:12,219 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:12,220 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,220 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,220 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:12,220 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000160 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000160/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000160&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=213&ts=1731778692219
2024-11-16 17:38:12,224 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:12,224 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778692000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:38:12,226 [s3a-transfer-leg-bucket-unbounded-pool2-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:12,226 [s3a-transfer-leg-bucket-unbounded-pool2-t40] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,226 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:12,226 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:12,226 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:38:12,227 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,227 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,227 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:12,227 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161&t0=214&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=100&ts=1731778692226
2024-11-16 17:38:12,228 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:12,228 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,228 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,228 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:12,228 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161&t0=214&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=105&ts=1731778692226
2024-11-16 17:38:12,228 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,229 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,229 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:12,229 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-14435&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000161&t0=214&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=102&ts=1731778692226
2024-11-16 17:38:12,248 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:38:12,248 [s3a-transfer-leg-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,249 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:38:12,249 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:38:12,249 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:38:12,249 [s3a-transfer-leg-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,250 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:38:12,250 [s3a-transfer-leg-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,252 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (action_file_opened=1) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=5) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=1424) (stream_aborted=0) (stream_read_bytes=1424) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (action_http_get_request=3) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_closed=0) (stream_read_close_operations=1) (stream_read_operations=0) (stream_read_opened=0) (stream_read_vectored_operations=1) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=3) (stream_read_seek_policy_changed=1) (stream_read_block_read=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=20) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=22) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=0) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=63, mean=21.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:12,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:12,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,253 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=213&ts=1731778692253
2024-11-16 17:38:12,260 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,260 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,261 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=213&ts=1731778692253
2024-11-16 17:38:12,266 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:12,266 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:12,266 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:12,266 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:12,266 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:12,266 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:12,266 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:12,266 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:12,266 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:12,266 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:12,266 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:12,266 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:12,267 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:12,267 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:12,267 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,268 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [215] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=215&ts=1731778692253
2024-11-16 17:38:12,273 [s3a-transfer-leg-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:12,273 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:38:12,273 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:12,273 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:12,273 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:12,273 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778692212; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:12,273 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:12,273 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:12,273 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:12,277 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:12,278 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,280 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=107&ts=1731778692253
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,294 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000162&t0=213&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=107&ts=1731778692253
2024-11-16 17:38:12,320 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.026s
2024-11-16 17:38:12,320 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.026s
2024-11-16 17:38:12,320 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.026s
2024-11-16 17:38:12,320 [s3a-transfer-leg-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.040s
2024-11-16 17:38:12,321 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.043s
2024-11-16 17:38:12,321 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.055s
2024-11-16 17:38:12,321 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:12,322 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:12,324 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:12,345 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 41, active threads = 0, queued tasks = 0, completed tasks = 41], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_started=0) (audit_access_check_failure=0) (object_delete_request.failures=0) (stream_read_vectored_operations=23) (multipart_upload_list=0) (object_bulk_delete_request.failures=0) (op_createfile.failures=0) (delegation_tokens_issued.failures=0) (op_delete.failures=0) (op_get_content_summary.failures=0) (op_exists.failures=0) (op_access=0) (op_list_status.failures=0) (committer_magic_marker_put=0) (stream_read_fully_operations=1) (op_list_files=0) (op_get_delegation_token=0) (action_file_opened.failures=0) (op_mkdirs=33) (stream_read_operations_incomplete=0) (files_copied=0) (files_deleted=33) (object_put_request_completed=66) (stream_read_remote_stream_aborted=0) (stream_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_read_closed=4) (directories_deleted=0) (action_file_opened=27) (delegation_tokens_issued=0) (op_rename=0) (op_get_file_checksum.failures=0) (op_get_file_status=2) (object_multipart_aborted=0) (op_list_located_status=0) (multipart_instantiated=0) (object_delete_objects=66) (stream_read_bytes_backwards_on_seek=0) (op_is_file=0) (op_hflush=0) (op_rename.failures=0) (op_xattr_get_named_map=0) (op_create.failures=0) (op_is_directory.failures=0) (stream_write_block_uploads_committed=0) (op_is_file.failures=0) (op_xattr_get_named_map.failures=0) (object_list_request.failures=0) (op_create=33) (stream_write_queue_duration=0) (stream_write_queue_duration.failures=0) (op_xattr_get_named.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (store_exists_probe=0) (multipart_upload_aborted=0) (object_select_requests=0) (files_delete_rejected=0) (committer_magic_files_created=0) (object_delete_request=0) (op_abort=0) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_close=261344) (object_bulk_delete_request=66) (multipart_upload_part_put=0) (object_put_bytes=2162688) (action_http_get_request.failures=0) (op_list_files.failures=0) (object_copy_requests=0) (committer_load_single_pending_file=0) (fake_directories_created=0) (stream_write_bytes=2162688) (action_http_get_request=31) (stream_read_unbuffered=2) (op_createfile=0) (multipart_upload_abort_under_path_invoked=0) (committer_tasks_completed=0) (stream_read_total_bytes=271081) (op_copy_from_local_file=0) (directories_created=33) (stream_read_seek_operations=0) (committer_commits_created=0) (stream_read_opened=4) (object_multipart_aborted.failures=0) (op_xattr_list.failures=0) (committer_bytes_committed=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_map=0) (op_glob_status.failures=0) (op_xattr_get_named=0) (object_continue_list_request.failures=0) (object_continue_list_request=0) (stream_write_total_time=0) (stream_read_vectored_read_bytes_discarded=30497) (stream_read_seek_backward_operations=0) (op_mkdirs.failures=0) (op_is_directory=0) (op_xattr_get_map.failures=0) (files_copied_bytes=0) (op_list_status=0) (stream_write_block_uploads_aborted=0) (committer_commit_job=0) (object_metadata_request=93) (committer_commits_aborted=0) (op_hsync=0) (stream_read_version_mismatches=0) (committer_stage_file_upload=0) (committer_commits_completed=0) (op_exists=0) (op_delete=33) (audit_failure=0) (stream_read_vectored_combined_ranges=30) (op_create_non_recursive=0) (stream_read_seek_policy_changed=29) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain=4) (stream_read_remote_stream_drain.failures=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload.failures=0) (object_multipart_initiated.failures=0) (stream_read_close_operations=27) (stream_read_operations=4) (committer_materialize_file.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=4325376) (committer_commits_reverted=0) (stream_read_bytes=9737) (stream_write_exceptions=0) (stream_write_block_uploads=33) (op_openfile=0) (store_io_retry=0) (committer_tasks_failed=0) (stream_read_exceptions=0) (op_get_delegation_token.failures=0) (op_open=27) (audit_request_execution=388) (committer_materialize_file=0) (object_list_request=132) (action_executor_acquired=0) (object_put_request.failures=0) (op_glob_status=0) (stream_read_vectored_incoming_ranges=75) (store_exists_probe.failures=0) (store_io_throttled=0) (ignored_errors=0) (files_created=33) (audit_span_creation=129) (committer_jobs_completed=0) (committer_commit_job.failures=0) (op_access.failures=0) (stream_read_seek_bytes_skipped=0) (object_put_request=66) (op_abort.failures=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (fake_directories_deleted=33) (action_http_head_request.failures=0) (multipart_upload_list.failures=0) (committer_bytes_uploaded=0) (op_get_content_summary=0) (op_xattr_list=0) (action_http_head_request=93) (store_io_request=388) (committer_commits.failures=0) (op_get_file_status.failures=0) (op_get_file_checksum=0) (multipart_upload_part_put_bytes=0));
gauges=((stream_read_active_memory_in_use=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=33) (stream_write_block_uploads_data_pending=0));
minimums=((object_list_request.min=5) (object_continue_list_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (op_glob_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_status.failures.min=-1) (op_glob_status.min=-1) (multipart_upload_list.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (action_http_head_request.min=2) (op_exists.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.failures.min=-1) (op_mkdirs.min=20) (op_createfile.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_delegation_token.min=-1) (object_put_request.min=35) (committer_stage_file_upload.failures.min=-1) (action_file_opened.min=0) (op_xattr_get_named_map.failures.min=-1) (op_is_directory.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (op_mkdirs.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (op_create.min=6) (op_access.failures.min=-1) (stream_read_remote_stream_drain.min=2) (object_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.min=-1) (op_list_files.failures.min=-1) (op_exists.failures.min=-1) (op_delete.min=26) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.min=-1) (op_rename.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.min=-1) (object_bulk_delete_request.min=7) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.min=20) (op_xattr_list.min=-1) (op_get_file_status.min=4) (op_list_files.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.failures.min=-1) (op_get_file_checksum.min=-1) (op_access.min=-1));
maximums=((op_xattr_get_named.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.max=-1) (object_list_request.failures.max=-1) (object_list_request.max=233) (action_executor_acquired.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_drain.max=4) (op_is_directory.failures.max=-1) (op_createfile.failures.max=-1) (op_mkdirs.failures.max=-1) (action_file_opened.max=26) (action_http_head_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (op_exists.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.max=-1) (op_mkdirs.max=372) (op_get_delegation_token.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.max=5) (op_create.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.max=-1) (action_http_get_request.failures.max=-1) (action_http_head_request.max=26) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.max=101) (op_list_status.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_continue_list_request.max=-1) (op_list_status.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.failures.max=-1) (op_glob_status.max=-1) (op_createfile.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_copy_from_local_file.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.max=-1) (action_http_get_request.max=50) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_map.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (op_delete.max=112) (op_create.max=53) (stream_read_remote_stream_aborted.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.max=27) (object_bulk_delete_request.failures.max=-1) (op_rename.max=-1) (stream_write_queue_duration.max=-1) (op_access.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named.failures.max=-1) (object_delete_request.failures.max=-1) (op_access.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.failures.max=-1));
means=((op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=33, sum=1552, mean=47.0303)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=93, sum=502, mean=5.3978)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=66, sum=2272, mean=34.4242)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=33, sum=1638, mean=49.6364)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=31, sum=612, mean=19.7419)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=27, sum=177, mean=6.5556)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=132, sum=1464, mean=11.0909)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=33, sum=423, mean=12.8182)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=66, sum=937, mean=14.1970)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:12,346 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:12,347 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,347 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,347 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,348 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,348 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=216&ts=1731778692346
2024-11-16 17:38:12,354 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:12,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,355 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,356 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,356 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=216&ts=1731778692346
2024-11-16 17:38:12,360 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,361 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:12,361 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:12,361 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:12,362 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000163&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=216&ts=1731778692346
2024-11-16 17:38:12,389 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:12,390 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:12,390 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.029s
2024-11-16 17:38:12,390 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:12,391 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,392 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,392 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,393 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,393 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000164 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000164&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=216&ts=1731778692391
2024-11-16 17:38:12,406 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:12,406 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,407 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:12,407 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3482918920251166889.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:12,408 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3482918920251166889.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (op_abort.failures=0) (object_put_request=0) (object_put_request.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (op_abort=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (op_hflush=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3482918920251166889.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,409 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,409 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:12,409 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3482918920251166889.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:12,410 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:12,410 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:12,410 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:12,410 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:12,411 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000164 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000164&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=108&ts=1731778692391
2024-11-16 17:38:12,450 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:12,451 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:12,451 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.041s
2024-11-16 17:38:12,451 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3482918920251166889.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:12,451 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3482918920251166889.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,451 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-3482918920251166889.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,451 [s3a-transfer-leg-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:12,452 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,453 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=40) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_put_request.max=40) (multipart_upload_part_put.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=40, mean=40.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:12,453 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:12,456 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,456 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,456 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:12,456 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [217] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000165 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000165/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000165&t0=217&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=217&ts=1731778692455
2024-11-16 17:38:12,462 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:12,462 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:12,462 [s3a-transfer-leg-bucket-unbounded-pool2-t42] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,462 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:38:12,462 [JUnit-testEOFRanges[Buffer type : array]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,463 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired=0) (stream_read_total_bytes=0) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_opened=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=0) (stream_read_version_mismatches=0) (stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (action_file_opened.failures=0) (action_http_get_request=0) (stream_read_unbuffered=0) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=7) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=7) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:12,464 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:12,464 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,465 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,465 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=216&ts=1731778692464
2024-11-16 17:38:12,468 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,468 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,468 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=216&ts=1731778692464
2024-11-16 17:38:12,473 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:12,473 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:12,473 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:12,473 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:12,473 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:12,473 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:12,474 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:12,474 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:12,474 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:12,474 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:12,474 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:12,474 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:12,474 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:12,474 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:12,475 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,475 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=218&ts=1731778692464
2024-11-16 17:38:12,480 [s3a-transfer-leg-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:12,481 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:12,481 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:12,481 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:12,481 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:12,481 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778692444; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:12,481 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:12,481 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:12,481 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:12,483 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:12,483 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:12,483 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:12,483 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:12,484 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:12,484 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,484 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,484 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:12,484 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,484 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=110&ts=1731778692464
2024-11-16 17:38:12,499 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:38:12,499 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:38:12,499 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:38:12,499 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:12,499 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:12,499 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,499 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,500 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:12,500 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,500 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000166&t0=216&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=110&ts=1731778692464
2024-11-16 17:38:12,510 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:12,510 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:12,510 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:38:12,511 [s3a-transfer-leg-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:38:12,511 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:38:12,511 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.037s
2024-11-16 17:38:12,511 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:12,511 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:12,512 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:12,527 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 43, active threads = 0, queued tasks = 0, completed tasks = 43], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_queue_duration=0) (op_get_file_status=2) (op_create=34) (committer_stage_file_upload=0) (committer_load_single_pending_file=0) (op_openfile=0) (committer_tasks_completed=0) (op_glob_status=0) (committer_bytes_uploaded=0) (object_delete_request.failures=0) (stream_read_version_mismatches=0) (object_list_request.failures=0) (stream_aborted=0) (op_access=0) (stream_read_seek_operations=0) (committer_load_single_pending_file.failures=0) (stream_read_operations=4) (committer_commits_reverted=0) (stream_read_vectored_read_bytes_discarded=30497) (op_xattr_get_named_map=0) (committer_materialize_file=0) (stream_write_queue_duration.failures=0) (op_get_file_checksum.failures=0) (stream_read_fully_operations=1) (stream_read_seek_forward_operations=0) (op_createfile=0) (op_list_status=0) (stream_read_seek_policy_changed=30) (object_list_request=136) (op_open=28) (committer_jobs_failed=0) (op_exists=0) (op_glob_status.failures=0) (stream_read_total_bytes=271081) (stream_read_remote_stream_aborted.failures=0) (stream_write_total_time=0) (committer_commits.failures=0) (stream_write_block_uploads_committed=0) (op_hsync=0) (multipart_upload_list=0) (action_http_head_request=96) (committer_bytes_committed=0) (object_delete_objects=68) (stream_read_opened=4) (op_hflush=0) (object_bulk_delete_request.failures=0) (committer_magic_marker_put=0) (committer_tasks_failed=0) (files_delete_rejected=0) (op_list_located_status=0) (files_copied_bytes=0) (stream_write_block_uploads=34) (op_get_delegation_token=0) (op_is_directory=0) (object_put_bytes=2228224) (op_mkdirs.failures=0) (action_http_get_request=31) (action_http_head_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (committer_commits_created=0) (stream_read_remote_stream_drain=4) (op_is_file=0) (stream_write_total_data=4456448) (op_create_non_recursive=0) (object_continue_list_request.failures=0) (op_xattr_get_named_map.failures=0) (op_delete=34) (directories_deleted=0) (op_access.failures=0) (op_list_files.failures=0) (stream_read_seek_bytes_skipped=0) (committer_magic_files_created=0) (op_rename.failures=0) (stream_read_unbuffered=2) (committer_commit_job.failures=0) (stream_read_close_operations=28) (audit_failure=0) (stream_read_bytes=9737) (op_xattr_list.failures=0) (committer_materialize_file.failures=0) (store_exists_probe=0) (stream_read_vectored_incoming_ranges=75) (op_get_file_checksum=0) (audit_span_creation=133) (multipart_upload_aborted=0) (op_is_directory.failures=0) (files_created=34) (op_exists.failures=0) (action_http_get_request.failures=0) (delegation_tokens_issued=0) (fake_directories_created=0) (action_executor_acquired.failures=0) (fake_directories_deleted=34) (object_put_request.failures=0) (audit_request_execution=399) (op_get_delegation_token.failures=0) (op_is_file.failures=0) (op_create.failures=0) (op_list_status.failures=0) (op_get_content_summary=0) (op_abort=0) (multipart_upload_started=0) (object_select_requests=0) (store_io_throttled=0) (stream_read_seek_bytes_discarded=0) (op_rename=0) (multipart_upload_list.failures=0) (object_bulk_delete_request=68) (object_multipart_initiated=0) (stream_read_remote_stream_aborted=0) (op_delete.failures=0) (action_executor_acquired=0) (store_io_request=399) (stream_read_remote_stream_drain.failures=0) (committer_commits_aborted=0) (op_get_file_status.failures=0) (ignored_errors=0) (action_file_opened.failures=0) (op_list_files=0) (object_put_request_completed=68) (stream_read_vectored_combined_ranges=30) (files_deleted=34) (store_io_retry=0) (stream_read_exceptions=0) (files_copied=0) (object_delete_request=0) (op_mkdirs=34) (multipart_instantiated=0) (audit_access_check_failure=0) (action_file_opened=28) (op_xattr_get_named=0) (op_xattr_get_map=0) (stream_read_vectored_operations=23) (op_xattr_get_map.failures=0) (stream_read_closed=4) (op_copy_from_local_file.failures=0) (stream_read_operations_incomplete=0) (op_copy_from_local_file=0) (op_xattr_list=0) (object_metadata_request=96) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named.failures=0) (stream_read_seek_backward_operations=0) (store_exists_probe.failures=0) (stream_read_bytes_discarded_in_abort=0) (delegation_tokens_issued.failures=0) (object_put_request=68) (object_continue_list_request=0) (stream_read_bytes_backwards_on_seek=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (multipart_upload_part_put_bytes=0) (multipart_upload_completed=0) (committer_commit_job=0) (object_multipart_aborted=0) (stream_read_bytes_discarded_in_close=261344) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=2228224) (op_createfile.failures=0) (stream_write_exceptions=0) (committer_stage_file_upload.failures=0) (multipart_upload_part_put=0) (directories_created=34) (object_copy_requests=0) (committer_jobs_completed=0) (op_get_content_summary.failures=0) (committer_commits_completed=0));
gauges=((stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=34) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((op_list_files.min=-1) (action_http_get_request.failures.min=-1) (op_mkdirs.min=20) (op_access.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=6) (op_xattr_get_named.min=-1) (op_xattr_get_map.min=-1) (action_file_opened.failures.min=-1) (op_createfile.min=-1) (action_http_head_request.failures.min=-1) (op_list_status.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_list.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.failures.min=-1) (op_is_directory.min=-1) (op_delete.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.failures.min=-1) (op_delete.min=26) (op_abort.min=-1) (op_get_file_checksum.failures.min=-1) (committer_commit_job.min=-1) (op_exists.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.failures.min=-1) (object_bulk_delete_request.min=7) (op_exists.min=-1) (action_file_opened.min=7) (action_http_head_request.min=2) (store_exists_probe.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.min=4) (object_delete_request.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_glob_status.min=-1) (object_list_request.min=5) (op_get_content_summary.failures.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.min=20) (op_access.min=-1) (object_bulk_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_glob_status.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=2) (stream_read_remote_stream_aborted.min=-1) (object_put_request.min=40) (committer_materialize_file.min=-1) (delegation_tokens_issued.min=-1) (op_list_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_commit_job.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (op_createfile.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_rename.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.min=-1));
maximums=((object_put_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_access.failures.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.failures.max=-1) (object_continue_list_request.max=-1) (op_is_directory.max=-1) (op_abort.max=-1) (op_xattr_get_named.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (op_get_content_summary.max=-1) (op_is_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_file_opened.max=26) (op_list_status.max=-1) (store_exists_probe.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (op_is_directory.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_file_status.max=5) (op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_checksum.max=-1) (action_file_opened.failures.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (op_glob_status.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (op_delete.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_stage_file_upload.failures.max=-1) (op_exists.max=-1) (op_list_status.failures.max=-1) (op_delete.max=112) (op_createfile.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_bulk_delete_request.max=27) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (object_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=26) (object_put_request.max=101) (op_rename.failures.max=-1) (op_xattr_get_named.max=-1) (object_list_request.max=233) (action_executor_acquired.failures.max=-1) (op_create.max=53) (stream_read_remote_stream_drain.max=4) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.max=-1) (action_http_get_request.max=50) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.max=372) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_list.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.max=-1) (op_rename.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1));
means=((object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=7, mean=1.7500)) (action_http_head_request.mean=(samples=96, sum=515, mean=5.3646)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=28, sum=184, mean=6.5714)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=68, sum=2339, mean=34.3971)) (op_delete.mean=(samples=34, sum=1676, mean=49.2941)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=68, sum=962, mean=14.1471)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (object_list_request.mean=(samples=136, sum=1493, mean=10.9779)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=31, sum=612, mean=19.7419)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=34, sum=440, mean=12.9412)) (op_mkdirs.mean=(samples=34, sum=1597, mean=46.9706)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:12,528 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:12,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,528 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,528 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,528 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692527
2024-11-16 17:38:12,534 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:12,534 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,534 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,534 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,535 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,535 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692527
2024-11-16 17:38:12,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,538 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:12,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:12,538 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:12,538 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000167&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692527
2024-11-16 17:38:12,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:12,563 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:12,563 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.025s
2024-11-16 17:38:12,563 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:12,564 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,564 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,564 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,564 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,564 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000168 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000168&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692563
2024-11-16 17:38:12,569 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:12,570 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,570 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:12,570 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14464339550332638785.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:12,571 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14464339550332638785.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hflush=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (op_abort.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (stream_write_total_data=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_abort=0) (stream_write_total_time=0) (action_executor_acquired=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (stream_write_bytes=65536) (object_put_request=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1));
maximums=((multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14464339550332638785.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,571 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,571 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:12,572 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14464339550332638785.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:12,572 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:12,572 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:12,572 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:12,572 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:12,572 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000168 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000168&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=112&ts=1731778692563
2024-11-16 17:38:12,611 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:12,611 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:12,611 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:38:12,612 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14464339550332638785.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:12,612 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14464339550332638785.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,612 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14464339550332638785.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,612 [s3a-transfer-leg-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:12,612 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,614 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (op_abort=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_data=65536) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_put_request=1) (stream_write_exceptions=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (object_put_request.min=39) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=39) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=39, mean=39.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:12,614 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:12,615 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,616 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,616 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:12,616 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692615
2024-11-16 17:38:12,624 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:12,625 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:12,625 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,626 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:12,626 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:38:12,626 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,627 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-65535&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692615
2024-11-16 17:38:12,650 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.024s
2024-11-16 17:38:12,651 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:12,651 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:12,652 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:12,653 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:12,653 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:12,654 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,654 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,654 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:12,655 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000169&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=114&ts=1731778692615
2024-11-16 17:38:12,656 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:12,667 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:38:12,667 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:12,667 [s3a-transfer-leg-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,673 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:12,674 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:38:12,674 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:38:12,674 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7443 bytes
2024-11-16 17:38:12,674 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:12,674 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:12,674 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:12,675 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8741 bytes
2024-11-16 17:38:12,676 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:38:12,676 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:12,677 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (stream_read_bytes=350) (stream_read_total_bytes=65686) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_exceptions=0) (action_http_get_request=2) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=2) (stream_aborted=0) (stream_read_opened=1) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=10) (action_http_get_request.failures=0) (stream_read_vectored_operations=1) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=1) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_seek_operations=0) (stream_read_operations=1) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_closed=1) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=13) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=10) (stream_read_remote_stream_drain.min=3) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=3) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=23) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=10) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=36, mean=18.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:12,678 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:12,678 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,678 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,678 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692678
2024-11-16 17:38:12,684 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,685 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,685 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=219&ts=1731778692678
2024-11-16 17:38:12,698 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:12,699 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:12,699 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:12,700 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:12,700 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:12,701 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:12,701 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:12,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:12,702 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:12,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:12,703 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:12,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:12,704 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:12,705 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:12,705 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,706 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [220] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=220&ts=1731778692678
2024-11-16 17:38:12,713 [s3a-transfer-leg-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:12,713 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:38:12,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:12,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:12,716 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:12,716 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778692605; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:12,716 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:12,717 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:12,717 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:12,718 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:12,718 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,720 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=113&ts=1731778692678
2024-11-16 17:38:12,731 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:12,731 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:12,731 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:38:12,732 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:12,732 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:12,732 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,732 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,732 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:12,732 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,732 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000170&t0=219&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=113&ts=1731778692678
2024-11-16 17:38:12,744 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:12,745 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:12,745 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:38:12,745 [s3a-transfer-leg-bucket-bounded-pool1-t36] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:38:12,745 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:38:12,745 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:38:12,745 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:12,745 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:12,747 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:12,763 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 44, active threads = 0, queued tasks = 0, completed tasks = 44], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_part_put_bytes=0) (ignored_errors=0) (audit_request_execution=412) (object_copy_requests=0) (stream_read_seek_forward_operations=0) (op_get_file_checksum.failures=0) (stream_write_block_uploads_committed=0) (op_glob_status.failures=0) (stream_read_operations=5) (op_xattr_list=0) (op_xattr_get_map.failures=0) (op_exists.failures=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_close=326680) (multipart_upload_aborted=0) (stream_read_seek_bytes_discarded=0) (object_put_bytes=2293760) (committer_commits_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_abort=0) (op_xattr_get_named.failures=0) (multipart_upload_list=0) (fake_directories_deleted=35) (op_xattr_get_named=0) (action_http_head_request.failures=0) (committer_load_single_pending_file=0) (committer_jobs_completed=0) (committer_commit_job=0) (multipart_upload_part_put=0) (op_rename.failures=0) (committer_commits_reverted=0) (op_abort.failures=0) (op_hflush=0) (op_copy_from_local_file=0) (files_deleted=35) (op_get_file_checksum=0) (op_list_status.failures=0) (op_is_file.failures=0) (store_io_throttled=0) (object_delete_request.failures=0) (committer_tasks_completed=0) (op_exists=0) (fake_directories_created=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_started=0) (stream_read_remote_stream_drain=5) (stream_write_block_uploads_aborted=0) (files_created=35) (op_createfile.failures=0) (stream_write_queue_duration=0) (op_rename=0) (directories_deleted=0) (object_continue_list_request=0) (committer_magic_files_created=0) (committer_commits_completed=0) (action_executor_acquired.failures=0) (op_list_located_status=0) (stream_read_total_bytes=336767) (object_put_request.failures=0) (audit_access_check_failure=0) (op_xattr_get_map=0) (stream_write_block_uploads=35) (action_http_head_request=99) (stream_read_vectored_operations=24) (op_get_delegation_token=0) (delegation_tokens_issued.failures=0) (stream_read_opened=5) (stream_read_bytes=10087) (stream_read_close_operations=29) (stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (object_select_requests=0) (op_create_non_recursive=0) (stream_read_seek_bytes_skipped=0) (store_io_request=412) (object_delete_request=0) (committer_magic_marker_put=0) (op_xattr_get_named_map=0) (op_get_content_summary.failures=0) (committer_jobs_failed=0) (audit_span_creation=137) (stream_read_vectored_read_bytes_discarded=30507) (stream_write_bytes=2293760) (committer_materialize_file=0) (stream_write_total_data=4587520) (stream_write_queue_duration.failures=0) (stream_read_seek_operations=0) (files_delete_rejected=0) (op_glob_status=0) (audit_failure=0) (stream_read_remote_stream_aborted.failures=0) (op_createfile=0) (delegation_tokens_issued=0) (op_xattr_get_named_map.failures=0) (op_get_file_status.failures=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_drain.failures=0) (op_is_directory.failures=0) (object_bulk_delete_request=70) (committer_stage_file_upload.failures=0) (object_put_request=70) (stream_read_unbuffered=2) (committer_commits.failures=0) (op_openfile=0) (object_put_request_completed=70) (stream_read_fully_operations=1) (op_is_file=0) (committer_stage_file_upload=0) (committer_bytes_uploaded=0) (object_multipart_initiated.failures=0) (op_open=29) (committer_tasks_failed=0) (multipart_upload_list.failures=0) (op_hsync=0) (stream_read_vectored_incoming_ranges=77) (stream_aborted=0) (object_bulk_delete_request.failures=0) (action_http_get_request=33) (stream_read_remote_stream_aborted=0) (op_get_file_status=2) (op_access.failures=0) (op_list_status=0) (op_create.failures=0) (action_http_get_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_total_time=0) (stream_read_exceptions=0) (directories_created=35) (op_access=0) (object_delete_objects=70) (stream_read_seek_backward_operations=0) (op_mkdirs=35) (stream_write_exceptions=0) (object_multipart_aborted=0) (action_file_opened=29) (multipart_instantiated=0) (committer_commits_created=0) (op_get_content_summary=0) (stream_read_vectored_combined_ranges=31) (op_get_delegation_token.failures=0) (object_list_request.failures=0) (committer_load_single_pending_file.failures=0) (store_exists_probe=0) (multipart_upload_abort_under_path_invoked=0) (committer_materialize_file.failures=0) (op_delete=35) (files_copied=0) (op_delete.failures=0) (op_create=35) (op_is_directory=0) (files_copied_bytes=0) (object_multipart_aborted.failures=0) (stream_read_seek_policy_changed=31) (action_file_opened.failures=0) (op_mkdirs.failures=0) (committer_bytes_committed=0) (object_metadata_request=99) (op_xattr_list.failures=0) (committer_commit_job.failures=0) (store_exists_probe.failures=0) (object_list_request=140) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (store_io_retry=0) (object_continue_list_request.failures=0) (stream_read_closed=5) (op_list_files=0) (multipart_upload_completed=0) (op_list_files.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=35) (object_put_request_active=0));
minimums=((op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.min=-1) (object_bulk_delete_request.min=7) (object_delete_request.min=-1) (op_createfile.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.failures.min=-1) (op_glob_status.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_mkdirs.failures.min=-1) (op_create.min=6) (action_http_get_request.min=13) (op_glob_status.min=-1) (store_exists_probe.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (op_create.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_content_summary.min=-1) (op_get_content_summary.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_status.min=-1) (committer_materialize_file.failures.min=-1) (op_is_directory.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_file_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.min=2) (object_put_request.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=3) (op_mkdirs.min=20) (op_abort.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_map.min=-1) (op_delete.min=26) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (action_file_opened.min=10) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=4) (op_is_directory.failures.min=-1) (op_access.min=-1) (multipart_upload_list.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.failures.min=-1) (op_exists.min=-1) (op_is_file.failures.min=-1) (op_access.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_delete.failures.min=-1) (object_put_request.min=39) (object_continue_list_request.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (op_xattr_list.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_head_request.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.min=5) (object_bulk_delete_request.failures.min=-1) (op_rename.min=-1) (delegation_tokens_issued.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.failures.max=-1) (op_glob_status.failures.max=-1) (object_put_request.max=101) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.failures.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_write_queue_duration.max=-1) (op_is_directory.max=-1) (object_multipart_aborted.max=-1) (action_http_get_request.max=50) (op_list_status.max=-1) (op_xattr_get_map.max=-1) (op_is_file.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.max=4) (store_exists_probe.max=-1) (action_file_opened.max=26) (object_multipart_initiated.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_file_status.max=5) (object_list_request.max=233) (stream_read_remote_stream_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_exists.max=-1) (op_mkdirs.max=372) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.max=-1) (op_delete.max=112) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.max=26) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_create.max=53) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_glob_status.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_files.max=-1) (op_xattr_list.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.max=27) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (op_rename.failures.max=-1) (op_access.max=-1) (action_http_head_request.failures.max=-1) (op_rename.max=-1) (op_createfile.failures.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_commit_job.max=-1));
means=((op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=70, sum=2403, mean=34.3286)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=10, mean=2.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=35, sum=1721, mean=49.1714)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=35, sum=447, mean=12.7714)) (object_list_request.mean=(samples=140, sum=1525, mean=10.8929)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=70, sum=985, mean=14.0714)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=35, sum=1632, mean=46.6286)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=99, sum=532, mean=5.3737)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=29, sum=194, mean=6.6897)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=33, sum=648, mean=19.6364)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:12,763 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:12,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,764 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,764 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,764 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=221&ts=1731778692763
2024-11-16 17:38:12,782 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:38:12,783 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,783 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:12,783 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,783 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,783 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=221&ts=1731778692763
2024-11-16 17:38:12,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:12,787 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:12,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:12,787 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:12,787 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000171&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=221&ts=1731778692763
2024-11-16 17:38:12,818 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:12,818 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:12,818 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.031s
2024-11-16 17:38:12,818 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:12,819 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,819 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,819 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,819 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,819 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000172 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000172&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=221&ts=1731778692819
2024-11-16 17:38:12,827 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:12,827 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,828 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:12,829 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-120245925490908747.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:12,830 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-120245925490908747.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_bytes=65536) (op_hsync=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (op_hflush=0) (object_put_request=0) (op_abort=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-120245925490908747.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,831 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,831 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:12,831 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-120245925490908747.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:12,832 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:12,832 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:12,832 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:12,832 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000172 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000172&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=116&ts=1731778692819
2024-11-16 17:38:12,834 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:12,892 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:12,892 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:12,892 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.060s
2024-11-16 17:38:12,893 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-120245925490908747.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:12,893 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-120245925490908747.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,893 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-120245925490908747.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:12,893 [s3a-transfer-leg-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:12,893 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:12,894 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (object_multipart_aborted.failures=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (object_put_request=1) (object_multipart_initiated=0) (op_hsync=0) (stream_write_total_time=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (op_hflush=0) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=60) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=60) (multipart_upload_part_put.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=60, mean=60.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:12,894 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:12,894 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:12,894 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:12,895 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:12,895 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=221&ts=1731778692894
2024-11-16 17:38:12,910 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:12,910 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:12,910 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,910 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:38:12,910 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:12,910 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:38:12,910 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-4200&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=118&ts=1731778692894
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:12,911 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=16101-16200&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000173&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=120&ts=1731778692894
2024-11-16 17:38:12,930 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:38:12,931 [s3a-transfer-leg-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,931 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:38:12,933 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:38:12,933 [s3a-transfer-leg-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:12,934 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read.failures=0) (action_executor_acquired=0) (stream_read_closed=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_fully_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=2) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=1) (stream_read_total_bytes=300) (stream_read_bytes=300) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_version_mismatches=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=3) (stream_read_seek_policy_changed=1) (stream_read_exceptions=0) (action_http_get_request=2) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_close=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=19) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=16) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=20) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=16) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=16, mean=16.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=39, mean=19.5000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:12,934 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:12,934 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:12,934 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:12,935 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=221&ts=1731778692934
2024-11-16 17:38:12,939 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:12,939 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,939 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=221&ts=1731778692934
2024-11-16 17:38:12,960 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:38:12,961 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:12,961 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:12,962 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:12,962 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:12,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:12,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:12,963 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:12,964 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:12,964 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:12,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:12,965 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:12,969 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:12,969 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:12,969 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:12,969 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [222] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=222&ts=1731778692934
2024-11-16 17:38:12,977 [s3a-transfer-leg-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:12,977 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:38:12,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:12,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:12,979 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:12,979 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778692888; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:12,979 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:12,980 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:12,980 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:12,981 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:12,981 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:12,981 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:12,982 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:12,982 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:12,982 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,982 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,982 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:12,982 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,982 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=122&ts=1731778692934
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:12,992 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000174&t0=221&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=122&ts=1731778692934
2024-11-16 17:38:13,004 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:13,004 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:13,004 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:38:13,004 [s3a-transfer-leg-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:38:13,004 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:38:13,004 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.040s
2024-11-16 17:38:13,005 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:13,005 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:13,008 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:13,027 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 45, active threads = 0, queued tasks = 0, completed tasks = 45], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_started=0) (committer_tasks_completed=0) (op_list_status.failures=0) (committer_load_single_pending_file=0) (object_metadata_request=102) (stream_read_seek_bytes_skipped=0) (stream_read_exceptions=0) (files_copied_bytes=0) (stream_read_close_operations=30) (op_create.failures=0) (delegation_tokens_issued.failures=0) (stream_read_operations_incomplete=0) (stream_write_block_uploads_aborted=0) (stream_read_bytes_backwards_on_seek=0) (object_bulk_delete_request=72) (op_get_delegation_token=0) (stream_write_total_time=0) (audit_failure=0) (committer_commits_reverted=0) (stream_read_bytes_discarded_in_abort=0) (object_put_request_completed=72) (committer_commits.failures=0) (stream_read_seek_operations=0) (object_multipart_aborted=0) (object_delete_objects=72) (op_hsync=0) (stream_aborted=0) (op_exists=0) (op_get_file_checksum.failures=0) (object_put_request=72) (object_select_requests=0) (op_xattr_get_named_map=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (op_access.failures=0) (committer_commit_job=0) (op_xattr_get_map=0) (committer_magic_marker_put=0) (audit_access_check_failure=0) (object_bulk_delete_request.failures=0) (op_rename.failures=0) (op_abort.failures=0) (committer_commit_job.failures=0) (op_rename=0) (action_http_get_request.failures=0) (op_delete.failures=0) (op_is_file=0) (stream_read_vectored_incoming_ranges=80) (stream_read_vectored_operations=25) (stream_write_bytes=2359296) (op_xattr_get_map.failures=0) (fake_directories_deleted=36) (op_get_file_status=2) (store_io_retry=0) (stream_read_closed=5) (committer_stage_file_upload.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (delegation_tokens_issued=0) (action_file_opened.failures=0) (op_copy_from_local_file=0) (stream_read_seek_backward_operations=0) (stream_read_bytes=10387) (store_io_request=425) (files_deleted=36) (object_continue_list_request=0) (stream_read_opened=5) (store_exists_probe=0) (stream_read_seek_forward_operations=0) (op_abort=0) (object_multipart_initiated.failures=0) (files_created=36) (object_list_request.failures=0) (op_hflush=0) (op_is_file.failures=0) (op_create_non_recursive=0) (op_openfile=0) (ignored_errors=0) (stream_read_operations=5) (committer_magic_marker_put.failures=0) (action_http_head_request.failures=0) (op_glob_status.failures=0) (op_list_located_status=0) (committer_jobs_completed=0) (audit_span_creation=141) (multipart_upload_completed=0) (committer_materialize_file=0) (object_continue_list_request.failures=0) (committer_stage_file_upload=0) (op_get_content_summary=0) (op_createfile.failures=0) (stream_read_seek_bytes_discarded=0) (op_open=30) (committer_tasks_failed=0) (committer_commits_completed=0) (object_copy_requests=0) (files_copied=0) (committer_bytes_uploaded=0) (op_list_files=0) (multipart_upload_part_put=0) (audit_request_execution=425) (op_xattr_get_named.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_remote_stream_drain=5) (multipart_upload_aborted=0) (op_mkdirs=36) (stream_write_queue_duration.failures=0) (stream_read_unbuffered=2) (directories_deleted=0) (op_get_delegation_token.failures=0) (op_get_content_summary.failures=0) (stream_write_block_uploads=36) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads_committed=0) (op_create=36) (multipart_upload_list.failures=0) (stream_write_total_data=4718592) (op_xattr_get_named=0) (stream_read_vectored_combined_ranges=33) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=34508) (committer_commits_aborted=0) (action_http_get_request=35) (stream_write_queue_duration=0) (op_glob_status=0) (store_io_throttled=0) (fake_directories_created=0) (multipart_upload_list=0) (object_delete_request=0) (stream_read_total_bytes=337067) (stream_read_version_mismatches=0) (op_xattr_get_named_map.failures=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_list.failures=0) (files_delete_rejected=0) (stream_read_fully_operations=1) (committer_magic_files_created=0) (object_put_bytes=2359296) (committer_materialize_file.failures=0) (op_delete=36) (store_exists_probe.failures=0) (object_put_request.failures=0) (action_file_opened=30) (op_access=0) (op_createfile=0) (op_exists.failures=0) (action_executor_acquired.failures=0) (committer_bytes_committed=0) (op_list_status=0) (committer_commits_created=0) (multipart_instantiated=0) (multipart_upload_part_put_bytes=0) (committer_jobs_failed=0) (op_xattr_list=0) (object_list_request=144) (stream_read_seek_policy_changed=32) (stream_read_bytes_discarded_in_close=326680) (op_get_file_status.failures=0) (object_delete_request.failures=0) (action_executor_acquired=0) (directories_created=36) (action_http_head_request=102) (op_is_directory=0) (stream_read_remote_stream_aborted=0) (op_is_directory.failures=0) (op_get_file_checksum=0) (op_copy_from_local_file.failures=0) (op_list_files.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=36) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((object_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_delete.min=26) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.min=-1) (op_mkdirs.min=20) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.min=-1) (op_is_directory.min=-1) (op_get_content_summary.failures.min=-1) (action_http_get_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_delete.failures.min=-1) (committer_materialize_file.min=-1) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_rename.min=-1) (op_list_status.min=-1) (op_glob_status.min=-1) (op_is_file.min=-1) (op_glob_status.failures.min=-1) (op_xattr_list.failures.min=-1) (action_http_head_request.min=2) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (object_multipart_aborted.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (op_access.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.min=-1) (op_abort.min=-1) (stream_read_remote_stream_drain.min=3) (op_exists.failures.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.min=60) (op_create.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_get_request.min=19) (op_get_delegation_token.min=-1) (object_list_request.min=5) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.failures.min=-1) (op_list_status.failures.min=-1) (action_file_opened.min=16) (object_put_request.failures.min=-1) (op_access.min=-1) (op_xattr_get_map.failures.min=-1) (op_create.min=6) (action_file_opened.failures.min=-1) (op_list_files.min=-1) (op_get_file_status.min=4) (op_rename.failures.min=-1) (object_delete_request.min=-1) (object_bulk_delete_request.min=7) (op_copy_from_local_file.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.min=-1));
maximums=((object_put_request.failures.max=-1) (op_createfile.max=-1) (object_bulk_delete_request.failures.max=-1) (op_access.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.max=101) (committer_commit_job.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=27) (op_copy_from_local_file.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_checksum.failures.max=-1) (store_exists_probe.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=4) (object_list_request.max=233) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.max=26) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (object_delete_request.failures.max=-1) (op_rename.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_files.failures.max=-1) (object_continue_list_request.max=-1) (action_executor_acquired.failures.max=-1) (op_exists.max=-1) (op_delete.max=112) (op_is_directory.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_createfile.failures.max=-1) (op_create.max=53) (op_create.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (op_access.failures.max=-1) (action_http_get_request.max=50) (op_abort.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_status.failures.max=-1) (op_exists.failures.max=-1) (op_list_status.max=-1) (op_list_files.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.max=5) (op_rename.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (object_list_request.failures.max=-1) (op_is_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_mkdirs.failures.max=-1) (op_abort.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_content_summary.max=-1) (op_delete.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (action_file_opened.max=26) (op_mkdirs.max=372) (object_multipart_initiated.max=-1) (committer_materialize_file.failures.max=-1) (op_glob_status.max=-1) (op_is_file.max=-1) (stream_write_queue_duration.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1));
means=((op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=30, sum=210, mean=7.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=35, sum=687, mean=19.6286)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=36, sum=1687, mean=46.8611)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=10, mean=2.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=72, sum=2494, mean=34.6389)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=144, sum=1580, mean=10.9722)) (op_create.mean=(samples=36, sum=457, mean=12.6944)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=36, sum=1764, mean=49.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=102, sum=556, mean=5.4510)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=72, sum=1007, mean=13.9861)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:13,028 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:13,028 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,029 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,029 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,030 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,030 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=223&ts=1731778693028
2024-11-16 17:38:13,036 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:13,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,037 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,038 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,038 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=223&ts=1731778693028
2024-11-16 17:38:13,041 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,042 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:13,042 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:13,043 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:13,043 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000175&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=223&ts=1731778693028
2024-11-16 17:38:13,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:13,060 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:13,061 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:38:13,061 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:13,062 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,062 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,063 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,063 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,064 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000176 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000176&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=223&ts=1731778693062
2024-11-16 17:38:13,074 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:13,074 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,075 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:13,076 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13337326301341227130.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:13,077 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13337326301341227130.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request=0) (stream_write_total_time=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (op_abort=0) (op_hflush=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13337326301341227130.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,077 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,077 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:13,078 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13337326301341227130.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:13,080 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:13,080 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:13,081 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:13,081 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:13,081 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000176 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000176&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=123&ts=1731778693062
2024-11-16 17:38:13,136 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:13,136 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:13,136 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.056s
2024-11-16 17:38:13,142 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13337326301341227130.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:13,142 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13337326301341227130.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,142 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13337326301341227130.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,142 [s3a-transfer-leg-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:13,142 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,143 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (op_hflush=0) (op_hsync=0) (object_put_request=1) (op_abort=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (stream_write_total_data=65536) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (op_abort.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=55) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=55) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=55, mean=55.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:13,143 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:13,143 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,144 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,144 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:13,144 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000177 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000177/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000177&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=223&ts=1731778693143
2024-11-16 17:38:13,151 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:13,151 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:13,151 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,153 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_operations=0) (stream_read_block_acquire_read=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=0) (stream_read_prefetch_operations=0) (stream_read_seek_backward_operations=0) (stream_read_close_operations=1) (stream_read_opened=0) (action_http_get_request=0) (stream_read_total_bytes=0) (stream_read_closed=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (action_file_opened=1) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired.failures=0) (stream_read_bytes=0) (stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_fully_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=8) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=8) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:13,154 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:13,154 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,154 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,155 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=223&ts=1731778693154
2024-11-16 17:38:13,159 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,159 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,159 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=223&ts=1731778693154
2024-11-16 17:38:13,166 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:13,166 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:13,167 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:13,167 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:13,167 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:13,167 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:13,167 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:13,167 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:13,167 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:13,168 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:13,168 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:13,168 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:13,168 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:13,168 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:13,168 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,169 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=224&ts=1731778693154
2024-11-16 17:38:13,175 [s3a-transfer-leg-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:13,175 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:13,175 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:13,175 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:13,176 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:13,176 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778693131; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:13,176 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:13,176 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:13,176 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:13,177 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,177 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=125&ts=1731778693154
2024-11-16 17:38:13,178 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:13,189 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,190 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000178&t0=223&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=125&ts=1731778693154
2024-11-16 17:38:13,200 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:13,200 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:13,200 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:38:13,201 [s3a-transfer-leg-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:38:13,201 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:38:13,201 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:38:13,201 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:13,201 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:13,206 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:13,221 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 46, active threads = 0, queued tasks = 0, completed tasks = 46], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((delegation_tokens_issued.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_is_directory=0) (ignored_errors=0) (op_glob_status.failures=0) (store_exists_probe=0) (op_rename.failures=0) (object_delete_request.failures=0) (op_open=31) (delegation_tokens_issued=0) (action_executor_acquired=0) (audit_access_check_failure=0) (committer_tasks_completed=0) (object_metadata_request=105) (stream_read_bytes=10387) (multipart_instantiated=0) (object_put_request_completed=74) (store_exists_probe.failures=0) (action_executor_acquired.failures=0) (action_http_head_request=105) (op_get_file_checksum.failures=0) (stream_write_total_data=4849664) (object_put_request.failures=0) (op_xattr_get_named_map.failures=0) (committer_commits_reverted=0) (stream_write_exceptions_completing_upload=0) (op_is_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_is_file=0) (committer_commits_completed=0) (op_mkdirs.failures=0) (committer_commit_job.failures=0) (op_create=37) (op_list_located_status=0) (committer_materialize_file.failures=0) (op_abort=0) (stream_read_seek_bytes_discarded=0) (object_continue_list_request.failures=0) (op_copy_from_local_file.failures=0) (store_io_retry=0) (committer_commits_aborted=0) (op_xattr_get_named.failures=0) (object_multipart_aborted=0) (op_access.failures=0) (object_multipart_initiated=0) (op_createfile=0) (committer_commit_job=0) (multipart_upload_completed=0) (op_list_files=0) (stream_read_vectored_read_bytes_discarded=34508) (stream_read_bytes_discarded_in_abort=0) (committer_load_single_pending_file=0) (stream_read_seek_backward_operations=0) (op_xattr_get_named=0) (action_http_head_request.failures=0) (stream_read_fully_operations=1) (committer_magic_files_created=0) (stream_read_total_bytes=337067) (fake_directories_deleted=37) (op_create_non_recursive=0) (op_exists=0) (audit_span_creation=145) (committer_stage_file_upload=0) (directories_deleted=0) (store_io_throttled=0) (stream_read_seek_operations=0) (multipart_upload_started=0) (action_http_get_request.failures=0) (multipart_upload_part_put_bytes=0) (object_continue_list_request=0) (object_multipart_aborted.failures=0) (op_get_content_summary=0) (stream_read_bytes_discarded_in_close=326680) (files_copied_bytes=0) (op_glob_status=0) (files_copied=0) (op_xattr_get_map.failures=0) (op_xattr_list.failures=0) (committer_bytes_committed=0) (op_get_content_summary.failures=0) (stream_read_operations_incomplete=0) (op_xattr_get_named_map=0) (stream_write_block_uploads=37) (stream_write_bytes=2424832) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=5) (op_abort.failures=0) (files_created=37) (stream_read_vectored_operations=25) (multipart_upload_list.failures=0) (op_get_file_checksum=0) (stream_read_vectored_incoming_ranges=80) (object_list_request=148) (committer_tasks_failed=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads_committed=0) (op_get_file_status.failures=0) (stream_read_closed=5) (op_get_delegation_token.failures=0) (object_bulk_delete_request=74) (action_http_get_request=35) (committer_magic_marker_put.failures=0) (object_list_request.failures=0) (stream_aborted=0) (stream_read_unbuffered=2) (stream_read_seek_policy_changed=33) (op_exists.failures=0) (audit_request_execution=436) (committer_commits_created=0) (stream_write_queue_duration=0) (multipart_upload_list=0) (object_bulk_delete_request.failures=0) (object_put_bytes=2424832) (object_multipart_initiated.failures=0) (op_access=0) (op_hsync=0) (action_file_opened.failures=0) (object_delete_request=0) (committer_commits.failures=0) (committer_stage_file_upload.failures=0) (object_select_requests=0) (object_copy_requests=0) (op_copy_from_local_file=0) (stream_read_seek_forward_operations=0) (op_list_status=0) (stream_write_exceptions=0) (stream_write_total_time=0) (committer_materialize_file=0) (committer_magic_marker_put=0) (stream_read_vectored_combined_ranges=33) (stream_read_operations=5) (op_list_status.failures=0) (committer_jobs_failed=0) (op_list_files.failures=0) (action_file_opened=31) (files_deleted=37) (op_rename=0) (stream_read_close_operations=31) (stream_read_remote_stream_aborted.failures=0) (object_delete_objects=74) (op_is_directory.failures=0) (stream_write_block_uploads_aborted=0) (directories_created=37) (stream_read_opened=5) (op_get_file_status=2) (store_io_request=436) (committer_jobs_completed=0) (op_createfile.failures=0) (object_put_request=74) (committer_bytes_uploaded=0) (op_delete.failures=0) (fake_directories_created=0) (op_xattr_list=0) (files_delete_rejected=0) (op_hflush=0) (stream_read_exceptions=0) (op_create.failures=0) (op_delete=37) (committer_load_single_pending_file.failures=0) (op_openfile=0) (audit_failure=0) (multipart_upload_aborted=0) (op_mkdirs=37) (op_get_delegation_token=0) (multipart_upload_part_put=0) (op_xattr_get_map=0) (stream_read_remote_stream_aborted=0) (stream_write_queue_duration.failures=0) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=37));
minimums=((op_get_file_status.failures.min=-1) (op_is_directory.min=-1) (op_create.failures.min=-1) (op_rename.min=-1) (op_exists.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.failures.min=-1) (op_createfile.failures.min=-1) (action_http_get_request.min=19) (action_file_opened.failures.min=-1) (op_is_file.min=-1) (op_list_status.min=-1) (store_exists_probe.min=-1) (op_is_file.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_drain.min=3) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.min=-1) (action_file_opened.min=8) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.min=7) (op_get_content_summary.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_map.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.min=-1) (op_createfile.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.min=-1) (object_bulk_delete_request.failures.min=-1) (op_rename.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.min=-1) (op_mkdirs.min=20) (op_xattr_get_named_map.min=-1) (op_list_status.failures.min=-1) (object_put_request.min=55) (object_continue_list_request.failures.min=-1) (op_exists.failures.min=-1) (committer_materialize_file.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (stream_write_queue_duration.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_create.min=6) (committer_materialize_file.failures.min=-1) (object_list_request.min=5) (op_delete.min=26) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.min=2) (op_xattr_list.failures.min=-1) (op_xattr_list.min=-1) (multipart_upload_list.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.failures.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.min=-1) (op_access.min=-1) (op_get_file_status.min=4) (action_http_get_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_access.failures.min=-1));
maximums=((op_get_content_summary.failures.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.failures.max=-1) (action_http_get_request.max=50) (op_glob_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (object_put_request.max=101) (op_xattr_get_map.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.max=-1) (committer_stage_file_upload.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_head_request.max=26) (multipart_upload_list.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_materialize_file.max=-1) (op_create.max=53) (action_file_opened.max=26) (multipart_upload_list.failures.max=-1) (op_delete.max=112) (op_get_content_summary.max=-1) (op_glob_status.max=-1) (op_mkdirs.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.max=-1) (op_get_file_checksum.max=-1) (committer_materialize_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_status.max=5) (op_is_directory.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.max=-1) (object_bulk_delete_request.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1) (op_list_files.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_access.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=372) (stream_read_remote_stream_drain.max=4) (delegation_tokens_issued.max=-1) (op_xattr_get_map.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.max=27) (object_list_request.failures.max=-1) (op_exists.failures.max=-1) (op_abort.max=-1) (op_list_status.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_create.failures.max=-1) (op_createfile.max=-1) (op_abort.failures.max=-1) (stream_write_queue_duration.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.max=-1) (object_list_request.max=233) (op_delete.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.failures.max=-1) (op_exists.max=-1) (object_delete_request.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.failures.max=-1));
means=((object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=31, sum=218, mean=7.0323)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=37, sum=1798, mean=48.5946)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=37, sum=1721, mean=46.5135)) (op_create.mean=(samples=37, sum=471, mean=12.7297)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=105, sum=571, mean=5.4381)) (action_http_get_request.mean=(samples=35, sum=687, mean=19.6286)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=74, sum=1029, mean=13.9054)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=148, sum=1610, mean=10.8784)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=74, sum=2566, mean=34.6757)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=10, mean=2.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:13,222 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:13,222 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,222 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,222 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,222 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,223 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=225&ts=1731778693222
2024-11-16 17:38:13,230 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:13,230 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,231 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=225&ts=1731778693222
2024-11-16 17:38:13,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,236 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:13,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:13,236 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:13,236 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000179&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=225&ts=1731778693222
2024-11-16 17:38:13,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:13,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:13,260 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.024s
2024-11-16 17:38:13,261 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:13,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,261 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,261 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,262 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000180 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000180&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=225&ts=1731778693261
2024-11-16 17:38:13,275 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:38:13,275 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,275 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:13,276 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4685550942566475271.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:13,276 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4685550942566475271.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (object_multipart_aborted=0) (op_abort.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_exceptions=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_put_request=0) (object_multipart_initiated=0) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4685550942566475271.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,277 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,277 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:13,277 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4685550942566475271.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:13,277 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:13,277 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:13,277 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:13,277 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:13,278 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000180 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000180&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=127&ts=1731778693261
2024-11-16 17:38:13,332 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:13,332 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:13,332 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.055s
2024-11-16 17:38:13,333 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4685550942566475271.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:13,333 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4685550942566475271.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,333 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4685550942566475271.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,333 [s3a-transfer-leg-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:13,333 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,334 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (op_abort=0) (stream_write_total_data=65536) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_hsync=0) (object_multipart_initiated=0) (object_put_request=1) (op_abort.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=55) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_put_request.max=55) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_put_request.mean=(samples=1, sum=55, mean=55.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:13,335 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:13,336 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,336 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,336 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:13,336 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000181 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000181&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=225&ts=1731778693336
2024-11-16 17:38:13,340 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:13,340 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:13,340 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,340 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:38:13,340 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:13,340 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:38:13,340 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:38:13,340 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,341 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,341 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:13,341 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000181 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=10-1199&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000181&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=128&ts=1731778693336
2024-11-16 17:38:13,383 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.042s
2024-11-16 17:38:13,383 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:38:13,383 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:38:13,383 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:38:13,383 [s3a-transfer-leg-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,385 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_opened=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=1) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=0) (action_file_opened=1) (stream_read_total_bytes=315) (action_http_get_request=1) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_fully_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes=315) (action_file_opened.failures=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=0) (stream_read_seek_policy_changed=1) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=1) (action_executor_acquired.failures=0) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (action_http_get_request.min=42) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=42) (action_file_opened.max=4) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1));
means=((action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=42, mean=42.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:13,386 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:13,386 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,386 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,387 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=225&ts=1731778693386
2024-11-16 17:38:13,391 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,391 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,391 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=225&ts=1731778693386
2024-11-16 17:38:13,399 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:13,399 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:13,399 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:13,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:13,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:13,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:13,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:13,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:13,403 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:13,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:13,403 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:13,403 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:13,404 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:13,404 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:13,404 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,404 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=226&ts=1731778693386
2024-11-16 17:38:13,409 [s3a-transfer-leg-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:13,410 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:38:13,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:13,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:13,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:13,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778693328; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:13,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:13,410 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:13,410 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:13,411 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,411 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=130&ts=1731778693386
2024-11-16 17:38:13,412 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:13,423 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:13,423 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:13,423 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:38:13,424 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:13,424 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:13,424 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,424 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,424 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:13,424 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,424 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000182&t0=225&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=130&ts=1731778693386
2024-11-16 17:38:13,433 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:13,433 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:13,433 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:38:13,433 [s3a-transfer-leg-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:38:13,433 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:38:13,433 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:38:13,433 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:13,434 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:13,435 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:13,445 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 47, active threads = 0, queued tasks = 0, completed tasks = 47], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((files_delete_rejected=0) (stream_read_fully_operations=1) (committer_jobs_completed=0) (op_get_file_checksum=0) (audit_request_execution=448) (delegation_tokens_issued=0) (committer_stage_file_upload.failures=0) (stream_read_bytes=10702) (directories_created=38) (action_http_get_request=36) (op_glob_status.failures=0) (multipart_upload_list=0) (op_is_directory=0) (op_xattr_list.failures=0) (op_copy_from_local_file=0) (committer_commits_completed=0) (op_create=38) (stream_read_remote_stream_aborted.failures=0) (object_multipart_aborted=0) (object_list_request.failures=0) (committer_materialize_file=0) (stream_read_closed=5) (committer_load_single_pending_file.failures=0) (stream_aborted=0) (files_copied=0) (stream_write_total_time=0) (op_list_files.failures=0) (audit_failure=0) (op_create_non_recursive=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_read_vectored_read_bytes_discarded=35383) (object_continue_list_request=0) (stream_read_unbuffered=2) (stream_read_bytes_discarded_in_close=326680) (stream_read_close_operations=32) (stream_write_queue_duration=0) (op_is_directory.failures=0) (op_hflush=0) (op_openfile=0) (op_get_content_summary.failures=0) (multipart_upload_aborted=0) (fake_directories_created=0) (op_xattr_get_named=0) (action_http_get_request.failures=0) (stream_write_block_uploads=38) (op_glob_status=0) (object_select_requests=0) (committer_commit_job=0) (committer_commits.failures=0) (committer_materialize_file.failures=0) (committer_magic_marker_put=0) (op_xattr_get_map=0) (op_mkdirs=38) (action_file_opened.failures=0) (op_xattr_list=0) (stream_write_total_data=4980736) (committer_commits_reverted=0) (directories_deleted=0) (ignored_errors=0) (multipart_upload_abort_under_path_invoked=0) (object_put_request_completed=76) (object_delete_request.failures=0) (stream_read_total_bytes=337382) (stream_read_seek_bytes_discarded=0) (object_put_bytes=2490368) (stream_read_operations_incomplete=0) (audit_span_creation=149) (object_put_request=76) (stream_read_bytes_discarded_in_abort=0) (op_get_file_status=2) (stream_read_vectored_combined_ranges=34) (op_get_file_checksum.failures=0) (store_io_retry=0) (op_createfile=0) (op_access.failures=0) (store_io_request=448) (store_exists_probe=0) (multipart_upload_part_put_bytes=0) (op_exists.failures=0) (stream_read_operations=5) (op_xattr_get_named_map.failures=0) (audit_access_check_failure=0) (op_get_delegation_token=0) (delegation_tokens_issued.failures=0) (op_get_file_status.failures=0) (committer_stage_file_upload=0) (op_list_status=0) (files_deleted=38) (op_is_file.failures=0) (committer_bytes_committed=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (files_copied_bytes=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named.failures=0) (files_created=38) (stream_read_opened=5) (stream_read_exceptions=0) (op_list_status.failures=0) (action_http_head_request.failures=0) (op_rename.failures=0) (op_delete=38) (op_list_located_status=0) (op_is_file=0) (multipart_upload_started=0) (stream_read_vectored_operations=26) (stream_read_seek_backward_operations=0) (op_get_delegation_token.failures=0) (committer_commits_created=0) (stream_read_version_mismatches=0) (action_file_opened=32) (stream_write_queue_duration.failures=0) (object_delete_objects=76) (object_metadata_request=108) (stream_write_exceptions_completing_upload=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (op_get_content_summary=0) (stream_read_remote_stream_drain.failures=0) (object_continue_list_request.failures=0) (object_multipart_aborted.failures=0) (stream_read_remote_stream_drain=5) (stream_read_vectored_incoming_ranges=84) (object_list_request=152) (stream_read_seek_operations=0) (op_copy_from_local_file.failures=0) (object_multipart_initiated.failures=0) (multipart_instantiated=0) (multipart_upload_list.failures=0) (stream_read_bytes_backwards_on_seek=0) (object_bulk_delete_request=76) (stream_write_bytes=2490368) (committer_commit_job.failures=0) (op_rename=0) (object_delete_request=0) (stream_read_seek_policy_changed=34) (committer_load_single_pending_file=0) (op_xattr_get_map.failures=0) (object_put_request.failures=0) (op_hsync=0) (fake_directories_deleted=38) (op_open=32) (store_exists_probe.failures=0) (committer_tasks_failed=0) (committer_magic_files_created=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named_map=0) (op_access=0) (committer_bytes_uploaded=0) (op_delete.failures=0) (op_exists=0) (op_abort=0) (committer_commits_aborted=0) (committer_jobs_failed=0) (stream_write_block_uploads_committed=0) (action_http_head_request=108) (action_executor_acquired=0) (op_list_files=0) (store_io_throttled=0) (stream_write_exceptions=0) (object_copy_requests=0) (committer_tasks_completed=0) (op_createfile.failures=0) (op_create.failures=0) (op_mkdirs.failures=0) (object_multipart_initiated=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=38));
minimums=((op_rename.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_file_status.min=4) (op_abort.failures.min=-1) (op_xattr_get_map.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_checksum.failures.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_access.min=-1) (op_glob_status.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.failures.min=-1) (op_createfile.failures.min=-1) (op_list_files.min=-1) (multipart_upload_list.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=7) (action_http_head_request.failures.min=-1) (op_is_directory.min=-1) (op_list_status.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_mkdirs.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.failures.min=-1) (op_list_files.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_create.min=6) (stream_read_remote_stream_drain.min=3) (object_multipart_aborted.failures.min=-1) (op_is_directory.failures.min=-1) (op_mkdirs.min=20) (op_copy_from_local_file.min=-1) (action_http_get_request.min=42) (op_get_delegation_token.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.min=2) (op_get_content_summary.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (op_createfile.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_list.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.min=-1) (action_http_get_request.failures.min=-1) (op_exists.min=-1) (action_executor_acquired.min=-1) (op_list_status.failures.min=-1) (action_file_opened.min=4) (object_delete_request.min=-1) (op_delete.min=26) (op_copy_from_local_file.failures.min=-1) (object_put_request.min=55) (op_is_file.min=-1) (committer_commit_job.min=-1) (committer_materialize_file.failures.min=-1) (committer_materialize_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.failures.min=-1) (object_list_request.min=5));
maximums=((action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.max=233) (action_executor_acquired.max=-1) (op_get_delegation_token.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.max=-1) (object_continue_list_request.max=-1) (object_put_request.max=101) (op_rename.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_get_request.max=50) (op_list_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_delete.max=112) (delegation_tokens_issued.failures.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.failures.max=-1) (op_mkdirs.max=372) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_commit_job.max=-1) (op_create.failures.max=-1) (action_file_opened.max=26) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_materialize_file.failures.max=-1) (op_list_status.max=-1) (op_glob_status.failures.max=-1) (op_abort.max=-1) (op_list_files.failures.max=-1) (op_exists.failures.max=-1) (object_bulk_delete_request.max=27) (object_multipart_aborted.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_list.max=-1) (action_http_head_request.max=26) (op_xattr_get_map.failures.max=-1) (op_createfile.max=-1) (op_exists.max=-1) (object_multipart_aborted.max=-1) (op_access.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.max=5) (stream_read_remote_stream_drain.max=4) (op_xattr_list.failures.max=-1) (action_file_opened.failures.max=-1) (object_list_request.failures.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.max=-1) (committer_load_single_pending_file.max=-1) (op_abort.failures.max=-1) (op_access.failures.max=-1) (op_create.max=53));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=76, sum=2645, mean=34.8026)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=32, sum=222, mean=6.9375)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=108, sum=585, mean=5.4167)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=38, sum=1760, mean=46.3158)) (action_http_get_request.mean=(samples=36, sum=729, mean=20.2500)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=38, sum=486, mean=12.7895)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=152, sum=1643, mean=10.8092)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=38, sum=1829, mean=48.1316)) (stream_read_remote_stream_drain.mean=(samples=5, sum=10, mean=2.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=76, sum=1050, mean=13.8158)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:13,446 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:13,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,446 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,446 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=227&ts=1731778693446
2024-11-16 17:38:13,451 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:13,451 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,451 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,451 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,451 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,451 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=227&ts=1731778693446
2024-11-16 17:38:13,453 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,453 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:13,453 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:13,453 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:13,454 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000183&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=227&ts=1731778693446
2024-11-16 17:38:13,470 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:13,470 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:13,470 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.017s
2024-11-16 17:38:13,470 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:13,470 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,471 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,471 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000184 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000184&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=227&ts=1731778693470
2024-11-16 17:38:13,475 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:38:13,476 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,476 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:13,476 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16766777982739528094.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:13,477 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16766777982739528094.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (op_abort.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (object_put_request=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (stream_write_total_data=0) (action_executor_acquired=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (multipart_upload_completed=0) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16766777982739528094.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,477 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,477 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:13,477 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16766777982739528094.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:13,478 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:13,478 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:13,478 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:13,478 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:13,478 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000184 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000184&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=132&ts=1731778693470
2024-11-16 17:38:13,520 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:13,520 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:13,520 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.042s
2024-11-16 17:38:13,521 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16766777982739528094.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:13,521 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16766777982739528094.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,521 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16766777982739528094.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,521 [s3a-transfer-leg-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:13,521 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,522 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed.failures=0) (op_abort.failures=0) (op_abort=0) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (op_hflush=0) (stream_write_total_data=65536) (object_put_request.failures=0) (object_put_request=1) (object_multipart_aborted=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (stream_write_queue_duration=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=42) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=42) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:13,523 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:13,524 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,524 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,524 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:13,524 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000185 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000185&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=227&ts=1731778693524
2024-11-16 17:38:13,531 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:13,531 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:13,531 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,531 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:38:13,531 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:13,531 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:38:13,532 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:38:13,532 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,533 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,533 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:13,533 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000185 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-7998&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000185&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=133&ts=1731778693524
2024-11-16 17:38:13,545 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:38:13,545 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:38:13,545 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:38:13,545 [s3a-transfer-leg-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,546 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=300) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (action_file_opened=1) (stream_read_operations=0) (stream_read_opened=0) (action_http_get_request=1) (stream_read_vectored_incoming_ranges=3) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=1) (action_http_get_request.failures=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=1) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=300) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_prefetch_operations=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_version_mismatches=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=7) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=12) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=12) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=7));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=12, mean=12.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:13,548 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:13,548 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,548 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,548 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=227&ts=1731778693547
2024-11-16 17:38:13,552 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,552 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,553 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=227&ts=1731778693547
2024-11-16 17:38:13,564 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:38:13,564 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:13,564 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:13,564 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:13,564 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:13,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:13,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:13,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:13,564 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:13,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:13,565 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:13,565 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:13,566 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:13,567 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:13,567 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,567 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=228&ts=1731778693547
2024-11-16 17:38:13,573 [s3a-transfer-leg-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:13,573 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:13,573 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:13,573 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:13,573 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:13,573 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778693516; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:13,573 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:13,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:13,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:13,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,574 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=134&ts=1731778693547
2024-11-16 17:38:13,575 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,582 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000186&t0=227&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=134&ts=1731778693547
2024-11-16 17:38:13,593 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:13,593 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:13,593 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:38:13,593 [s3a-transfer-leg-bucket-bounded-pool1-t49] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:38:13,593 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:38:13,593 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:38:13,593 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:13,594 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:13,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:13,606 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 48, active threads = 0, queued tasks = 0, completed tasks = 48], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_named.failures=0) (stream_read_fully_operations=1) (stream_read_vectored_operations=27) (op_xattr_get_named_map=0) (ignored_errors=0) (committer_stage_file_upload.failures=0) (op_glob_status.failures=0) (audit_failure=0) (committer_commits.failures=0) (op_xattr_get_named=0) (committer_magic_marker_put=0) (committer_stage_file_upload=0) (committer_magic_marker_put.failures=0) (op_get_file_checksum=0) (stream_read_exceptions=0) (stream_write_block_uploads_aborted=0) (committer_commits_reverted=0) (committer_tasks_completed=0) (multipart_upload_started=0) (stream_read_total_bytes=337682) (object_multipart_initiated=0) (stream_read_version_mismatches=0) (op_get_delegation_token=0) (committer_tasks_failed=0) (committer_bytes_committed=0) (stream_read_seek_policy_changed=35) (stream_read_unbuffered=2) (op_access.failures=0) (stream_read_operations_incomplete=0) (fake_directories_created=0) (stream_write_block_uploads=39) (object_list_request=156) (object_delete_objects=78) (committer_bytes_uploaded=0) (audit_request_execution=460) (committer_load_single_pending_file=0) (op_hflush=0) (multipart_instantiated=0) (stream_aborted=0) (store_io_throttled=0) (op_xattr_list=0) (op_exists.failures=0) (op_copy_from_local_file=0) (object_bulk_delete_request=78) (stream_write_total_data=5111808) (op_get_content_summary.failures=0) (object_select_requests=0) (stream_write_queue_duration=0) (files_copied_bytes=0) (committer_commits_created=0) (delegation_tokens_issued.failures=0) (object_continue_list_request=0) (op_xattr_get_named_map.failures=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_incoming_ranges=87) (op_xattr_get_map.failures=0) (op_create.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_seek_backward_operations=0) (action_http_head_request=111) (stream_read_remote_stream_aborted.failures=0) (object_delete_request.failures=0) (multipart_upload_list=0) (fake_directories_deleted=39) (object_put_bytes=2555904) (op_xattr_list.failures=0) (action_executor_acquired.failures=0) (action_file_opened=33) (op_get_file_checksum.failures=0) (op_createfile.failures=0) (object_put_request.failures=0) (stream_read_bytes=11002) (op_is_file.failures=0) (delegation_tokens_issued=0) (audit_span_creation=153) (action_http_head_request.failures=0) (stream_read_closed=5) (committer_commit_job.failures=0) (committer_materialize_file=0) (multipart_upload_list.failures=0) (op_hsync=0) (op_list_files=0) (op_createfile=0) (stream_read_vectored_combined_ranges=35) (stream_read_remote_stream_drain.failures=0) (object_delete_request=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_queue_duration.failures=0) (op_create_non_recursive=0) (store_exists_probe=0) (op_abort=0) (op_get_file_status=2) (op_list_status.failures=0) (multipart_upload_aborted=0) (stream_read_close_operations=33) (committer_commits_aborted=0) (object_put_request=78) (stream_read_vectored_read_bytes_discarded=43082) (directories_deleted=0) (op_delete=39) (op_get_file_status.failures=0) (object_multipart_initiated.failures=0) (op_rename=0) (committer_materialize_file.failures=0) (object_list_request.failures=0) (files_delete_rejected=0) (op_is_directory=0) (op_list_files.failures=0) (op_delete.failures=0) (op_mkdirs=39) (op_get_delegation_token.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_create=39) (action_http_get_request.failures=0) (committer_commits_completed=0) (stream_read_seek_operations=0) (op_glob_status=0) (stream_read_operations=5) (op_open=33) (stream_read_seek_bytes_discarded=0) (stream_write_total_time=0) (store_io_retry=0) (stream_write_exceptions_completing_upload=0) (op_mkdirs.failures=0) (op_get_content_summary=0) (op_is_directory.failures=0) (op_xattr_get_map=0) (stream_read_opened=5) (audit_access_check_failure=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (stream_read_seek_forward_operations=0) (committer_jobs_completed=0) (stream_write_block_uploads_committed=0) (object_multipart_aborted.failures=0) (committer_jobs_failed=0) (op_openfile=0) (object_continue_list_request.failures=0) (stream_write_bytes=2555904) (stream_read_seek_bytes_skipped=0) (object_copy_requests=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_read_remote_stream_aborted=0) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file.failures=0) (files_deleted=39) (object_metadata_request=111) (store_io_request=460) (files_created=39) (op_is_file=0) (store_exists_probe.failures=0) (committer_magic_files_created=0) (op_list_located_status=0) (action_file_opened.failures=0) (action_http_get_request=37) (files_copied=0) (object_put_request_completed=78) (stream_read_remote_stream_drain=5) (stream_read_bytes_discarded_in_abort=0) (multipart_upload_part_put=0) (directories_created=39) (op_exists=0) (committer_commit_job=0) (op_abort.failures=0) (op_rename.failures=0) (op_list_status=0) (op_access=0) (stream_read_bytes_discarded_in_close=326680));
gauges=((stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=39));
minimums=((committer_materialize_file.min=-1) (op_list_files.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_list_request.failures.min=-1) (op_create.min=6) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.failures.min=-1) (op_get_file_status.min=4) (object_continue_list_request.min=-1) (op_get_delegation_token.min=-1) (op_is_directory.min=-1) (delegation_tokens_issued.min=-1) (op_access.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.failures.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (op_mkdirs.min=20) (op_xattr_list.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_stage_file_upload.min=-1) (op_access.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.min=7) (op_xattr_get_map.failures.min=-1) (action_http_get_request.min=12) (object_continue_list_request.failures.min=-1) (action_file_opened.min=7) (stream_read_remote_stream_aborted.min=-1) (action_http_head_request.min=2) (object_list_request.min=4) (stream_read_remote_stream_drain.failures.min=-1) (op_is_file.failures.min=-1) (op_glob_status.min=-1) (op_exists.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_content_summary.min=-1) (op_list_files.failures.min=-1) (op_rename.min=-1) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_create.failures.min=-1) (op_createfile.min=-1) (object_put_request.min=42) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.min=3) (op_delete.min=26) (op_xattr_list.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (op_list_status.failures.min=-1) (op_is_directory.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.min=-1) (object_multipart_initiated.min=-1) (action_file_opened.failures.min=-1) (op_list_status.min=-1) (store_exists_probe.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_map.min=-1));
maximums=((object_continue_list_request.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.max=101) (op_list_files.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_status.max=5) (action_http_head_request.max=26) (committer_commit_job.max=-1) (op_get_file_checksum.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=50) (op_copy_from_local_file.max=-1) (op_get_delegation_token.failures.max=-1) (object_put_request.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.max=27) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.max=-1) (op_is_file.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_access.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (op_xattr_list.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_createfile.failures.max=-1) (multipart_upload_list.max=-1) (op_createfile.max=-1) (committer_commit_job.failures.max=-1) (op_rename.max=-1) (op_get_delegation_token.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.max=-1) (op_delete.max=112) (op_create.max=53) (op_xattr_get_named.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.max=233) (committer_materialize_file.max=-1) (stream_read_remote_stream_drain.max=4) (op_xattr_list.max=-1) (committer_materialize_file.failures.max=-1) (delegation_tokens_issued.max=-1) (object_delete_request.failures.max=-1) (op_is_directory.failures.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_mkdirs.max=372) (op_list_status.failures.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.failures.max=-1) (action_http_get_request.failures.max=-1) (op_rename.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=26) (op_get_content_summary.max=-1) (store_exists_probe.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1));
means=((op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=78, sum=2703, mean=34.6538)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=78, sum=1069, mean=13.7051)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=111, sum=598, mean=5.3874)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=39, sum=1859, mean=47.6667)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=33, sum=229, mean=6.9394)) (stream_read_remote_stream_drain.mean=(samples=5, sum=10, mean=2.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=37, sum=741, mean=20.0270)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=39, sum=1784, mean=45.7436)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=156, sum=1668, mean=10.6923)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=39, sum=492, mean=12.6154)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:13,606 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:13,607 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,607 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,607 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,607 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,607 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=229&ts=1731778693606
2024-11-16 17:38:13,612 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:13,612 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,613 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=229&ts=1731778693606
2024-11-16 17:38:13,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,616 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:13,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:13,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:13,616 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000187&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=229&ts=1731778693606
2024-11-16 17:38:13,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:13,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:13,633 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.017s
2024-11-16 17:38:13,633 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:13,634 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,634 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,634 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,634 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,634 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000188 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000188&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=229&ts=1731778693633
2024-11-16 17:38:13,641 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:13,641 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,641 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:13,642 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1964017823980296534.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:13,643 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1964017823980296534.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (op_hsync=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (op_abort=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1964017823980296534.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,643 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,643 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:13,643 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1964017823980296534.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:13,643 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:13,644 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:13,644 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:13,644 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:13,644 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000188 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000188&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=135&ts=1731778693633
2024-11-16 17:38:13,687 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:13,687 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:13,687 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:38:13,688 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1964017823980296534.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:13,688 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1964017823980296534.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,688 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1964017823980296534.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,688 [s3a-transfer-leg-bucket-bounded-pool1-t50] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:13,688 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,689 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (object_put_request.failures=0) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (multipart_upload_part_put=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (op_abort=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (op_hsync=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (op_hflush=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=43));
maximums=((op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_put_request.max=43) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=43, mean=43.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:13,690 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:13,690 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,690 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,690 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:13,691 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=229&ts=1731778693690
2024-11-16 17:38:13,695 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:13,695 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:13,695 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,695 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:13,695 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:13,695 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:38:13,696 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,696 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,696 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:13,696 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=1947-2046&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=143&ts=1731778693690
2024-11-16 17:38:13,697 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:38:13,697 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,697 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,697 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:13,697 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=40960-41983&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=147&ts=1731778693690
2024-11-16 17:38:13,697 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,698 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,698 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:13,698 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=8192-14435&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000189&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=145&ts=1731778693690
2024-11-16 17:38:13,710 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:38:13,710 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:38:13,710 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:38:13,710 [s3a-transfer-leg-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,711 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:38:13,713 [s3a-transfer-leg-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,717 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.021s
2024-11-16 17:38:13,718 [s3a-transfer-leg-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,718 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read=0) (action_executor_acquired=0) (stream_read_version_mismatches=0) (stream_read_bytes=1424) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_exceptions=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_seek_forward_operations=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_incoming_ranges=5) (action_http_get_request.failures=0) (action_http_get_request=3) (stream_read_block_acquire_read=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (stream_read_operations=0) (stream_read_unbuffered=0) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_total_bytes=1424) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_combined_ranges=3) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=12) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=5) (stream_read_prefetch_operations.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=21) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=5) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=47, mean=15.6667)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:13,721 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:13,721 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,722 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,722 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=229&ts=1731778693721
2024-11-16 17:38:13,725 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,725 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,725 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=229&ts=1731778693721
2024-11-16 17:38:13,730 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:13,730 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:13,730 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:13,730 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:13,730 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:13,730 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:13,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:13,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:13,731 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:13,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:13,731 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:13,731 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:13,731 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:13,731 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:13,731 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,731 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [235] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=235&ts=1731778693721
2024-11-16 17:38:13,736 [s3a-transfer-leg-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:13,736 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:38:13,736 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:13,736 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:13,736 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:13,736 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778693677; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:13,736 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:13,736 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:13,737 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:13,737 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:13,737 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:13,737 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:13,737 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:13,737 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:13,737 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,737 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,737 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:13,737 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,738 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=150&ts=1731778693721
2024-11-16 17:38:13,747 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:13,747 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:13,747 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:13,747 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:13,747 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:13,747 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,747 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,748 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:13,748 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,748 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000190&t0=229&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=150&ts=1731778693721
2024-11-16 17:38:13,758 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:38:13,758 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:13,758 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:38:13,758 [s3a-transfer-leg-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:38:13,758 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:38:13,758 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:38:13,758 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:13,758 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:13,759 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:13,770 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 49, active threads = 0, queued tasks = 0, completed tasks = 49], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_write_bytes=2621440) (object_put_request_completed=80) (op_delete=40) (files_delete_rejected=0) (stream_read_total_bytes=339106) (directories_deleted=0) (stream_read_bytes=12426) (delegation_tokens_issued.failures=0) (op_exists.failures=0) (op_xattr_get_map=0) (stream_read_close_operations=34) (object_multipart_aborted=0) (committer_magic_marker_put=0) (object_delete_objects=80) (stream_read_remote_stream_aborted=0) (op_list_status.failures=0) (op_abort.failures=0) (committer_bytes_committed=0) (op_abort=0) (committer_jobs_failed=0) (object_continue_list_request=0) (op_rename.failures=0) (stream_read_seek_bytes_discarded=0) (op_rename=0) (stream_read_vectored_operations=28) (committer_commits_completed=0) (stream_read_exceptions=0) (audit_access_check_failure=0) (stream_read_operations=5) (action_executor_acquired=0) (op_mkdirs=40) (stream_read_closed=5) (directories_created=40) (committer_commit_job=0) (object_put_request=80) (op_xattr_list.failures=0) (stream_read_unbuffered=2) (object_metadata_request=114) (object_delete_request=0) (object_list_request.failures=0) (committer_stage_file_upload=0) (op_hsync=0) (multipart_upload_started=0) (op_list_files.failures=0) (object_bulk_delete_request=80) (object_multipart_aborted.failures=0) (audit_failure=0) (stream_read_remote_stream_drain=5) (stream_read_vectored_incoming_ranges=92) (committer_materialize_file=0) (op_xattr_list=0) (op_get_delegation_token=0) (files_created=40) (store_exists_probe=0) (committer_tasks_failed=0) (op_hflush=0) (committer_commits_reverted=0) (op_is_directory=0) (store_exists_probe.failures=0) (op_get_file_checksum.failures=0) (stream_read_bytes_discarded_in_close=326680) (stream_read_remote_stream_aborted.failures=0) (action_http_head_request=114) (op_access.failures=0) (stream_write_block_uploads_aborted=0) (op_glob_status.failures=0) (action_http_get_request.failures=0) (ignored_errors=0) (fake_directories_created=0) (op_is_file.failures=0) (multipart_upload_aborted=0) (committer_commits.failures=0) (stream_write_exceptions=0) (files_copied=0) (object_list_request=160) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put.failures=0) (object_copy_requests=0) (committer_jobs_completed=0) (stream_write_total_data=5242880) (action_executor_acquired.failures=0) (op_get_content_summary=0) (committer_commits_aborted=0) (committer_stage_file_upload.failures=0) (op_xattr_get_named=0) (op_get_file_status=2) (multipart_upload_part_put=0) (files_deleted=40) (stream_read_seek_forward_operations=0) (multipart_upload_list.failures=0) (object_multipart_initiated=0) (stream_read_fully_operations=1) (op_get_file_status.failures=0) (object_delete_request.failures=0) (object_continue_list_request.failures=0) (committer_materialize_file.failures=0) (action_file_opened.failures=0) (multipart_instantiated=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_map.failures=0) (op_xattr_get_named.failures=0) (op_get_delegation_token.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=40) (files_copied_bytes=0) (action_http_head_request.failures=0) (stream_read_remote_stream_drain.failures=0) (op_delete.failures=0) (multipart_upload_abort_under_path_invoked=0) (object_put_bytes=2621440) (store_io_retry=0) (committer_commit_job.failures=0) (store_io_throttled=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map.failures=0) (op_list_located_status=0) (stream_write_queue_duration.failures=0) (audit_request_execution=474) (object_put_request.failures=0) (op_is_file=0) (op_list_files=0) (stream_read_opened=5) (op_glob_status=0) (object_select_requests=0) (delegation_tokens_issued=0) (committer_bytes_uploaded=0) (op_mkdirs.failures=0) (op_xattr_get_named_map=0) (op_create.failures=0) (op_copy_from_local_file=0) (stream_aborted=0) (action_file_opened=34) (op_copy_from_local_file.failures=0) (op_access=0) (op_createfile=0) (audit_span_creation=157) (stream_write_block_uploads=40) (stream_read_version_mismatches=0) (op_openfile=0) (stream_write_block_uploads_committed=0) (stream_read_operations_incomplete=0) (multipart_upload_part_put_bytes=0) (multipart_upload_list=0) (op_get_file_checksum=0) (op_get_content_summary.failures=0) (committer_magic_files_created=0) (committer_load_single_pending_file.failures=0) (store_io_request=474) (op_is_directory.failures=0) (fake_directories_deleted=40) (stream_read_vectored_read_bytes_discarded=49026) (op_exists=0) (op_open=34) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (op_create=40) (op_createfile.failures=0) (op_create_non_recursive=0) (committer_commits_created=0) (stream_read_seek_backward_operations=0) (stream_write_queue_duration=0) (stream_read_seek_operations=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_combined_ranges=38) (committer_tasks_completed=0) (op_list_status=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_read_seek_policy_changed=36));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=40) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((action_file_opened.min=5) (op_get_delegation_token.min=-1) (committer_commit_job.min=-1) (action_http_head_request.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_status.min=4) (op_copy_from_local_file.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.failures.min=-1) (object_put_request.min=43) (delegation_tokens_issued.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.min=-1) (op_createfile.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.min=-1) (action_executor_acquired.min=-1) (op_get_file_checksum.failures.min=-1) (object_list_request.min=4) (object_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.min=12) (op_xattr_get_named_map.min=-1) (delegation_tokens_issued.min=-1) (multipart_upload_list.min=-1) (object_delete_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=2) (op_mkdirs.min=20) (op_list_status.min=-1) (op_delete.failures.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.min=7) (op_create.min=6) (op_glob_status.failures.min=-1) (op_abort.failures.min=-1) (op_rename.min=-1) (op_abort.min=-1) (action_http_get_request.failures.min=-1) (op_list_files.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.failures.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_content_summary.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.failures.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.min=-1) (object_put_request.failures.min=-1) (stream_read_remote_stream_drain.min=3) (op_exists.failures.min=-1) (object_multipart_aborted.min=-1) (committer_materialize_file.min=-1) (committer_materialize_file.failures.min=-1) (op_access.min=-1) (action_file_opened.failures.min=-1) (op_delete.min=26) (op_is_directory.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_http_head_request.max=26) (op_list_status.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_rename.failures.max=-1) (object_bulk_delete_request.max=27) (object_multipart_initiated.failures.max=-1) (op_create.max=53) (committer_stage_file_upload.failures.max=-1) (op_is_file.max=-1) (object_put_request.failures.max=-1) (op_exists.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.max=372) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (op_is_directory.max=-1) (store_exists_probe.max=-1) (op_list_status.failures.max=-1) (action_http_get_request.max=50) (op_xattr_get_named.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_createfile.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (op_copy_from_local_file.max=-1) (action_file_opened.max=26) (stream_write_queue_duration.max=-1) (action_executor_acquired.failures.max=-1) (op_mkdirs.failures.max=-1) (op_exists.max=-1) (op_xattr_list.max=-1) (committer_magic_marker_put.failures.max=-1) (op_create.failures.max=-1) (store_exists_probe.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_createfile.failures.max=-1) (object_list_request.max=233) (op_is_directory.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.max=-1) (object_put_request.max=101) (stream_read_remote_stream_drain.failures.max=-1) (op_glob_status.max=-1) (committer_materialize_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=4) (stream_read_remote_stream_aborted.max=-1) (op_access.failures.max=-1) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.max=-1) (committer_stage_file_upload.max=-1) (op_delete.failures.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_magic_marker_put.max=-1) (op_access.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.max=5) (object_delete_request.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.max=112) (action_file_opened.failures.max=-1) (op_xattr_get_map.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.max=-1));
means=((committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=114, sum=608, mean=5.3333)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=80, sum=2763, mean=34.5375)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=34, sum=234, mean=6.8824)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=40, sum=501, mean=12.5250)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=40, sum=1888, mean=47.2000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=160, sum=1690, mean=10.5625)) (object_bulk_delete_request.mean=(samples=80, sum=1088, mean=13.6000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=40, sum=1811, mean=45.2750)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=40, sum=788, mean=19.7000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=10, mean=2.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:13,771 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:13,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,771 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,771 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693771
2024-11-16 17:38:13,780 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:13,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,780 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,781 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693771
2024-11-16 17:38:13,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,786 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:13,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:13,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:13,786 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000191&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693771
2024-11-16 17:38:13,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:13,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:13,800 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:38:13,800 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:13,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,800 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,800 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000192 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000192&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693800
2024-11-16 17:38:13,808 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:13,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,808 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:13,809 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7111373097580421138.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:13,809 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7111373097580421138.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (stream_write_total_data=0) (action_executor_acquired=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (object_put_request=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_block_uploads=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (stream_write_total_time=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7111373097580421138.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,809 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,809 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:13,810 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7111373097580421138.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:13,810 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:13,810 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:13,810 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:13,810 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000192 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000192&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=154&ts=1731778693800
2024-11-16 17:38:13,811 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:13,869 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:13,869 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:13,869 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.059s
2024-11-16 17:38:13,869 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7111373097580421138.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:13,869 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7111373097580421138.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,869 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7111373097580421138.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:13,869 [s3a-transfer-leg-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:13,870 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:13,871 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (op_abort=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (op_hflush=0) (object_multipart_initiated.failures=0) (op_hsync=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (multipart_upload_part_put=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (object_put_request=1) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=59) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_put_request.max=59) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=59, mean=59.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:13,871 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:13,872 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:13,872 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:13,872 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:13,872 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693872
2024-11-16 17:38:13,881 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:13,881 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:13,881 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,882 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:38:13,882 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:38:13,882 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,882 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,882 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:38:13,882 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-199&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=157&ts=1731778693872
2024-11-16 17:38:13,883 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:38:13,883 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:38:13,884 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://leg-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:38:13,884 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:13,884 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=100-65535&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000193&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693872
2024-11-16 17:38:13,895 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.013s
2024-11-16 17:38:13,895 [s3a-transfer-leg-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:13,895 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:38:13,895 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:38:13,895 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:38:13,895 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:38:13,895 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:38:13,895 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:38:13,896 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7535 bytes
2024-11-16 17:38:13,896 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:13,896 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8749 bytes
2024-11-16 17:38:13,896 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:38:13,896 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16284 bytes
2024-11-16 17:38:13,896 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:38:13,896 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:38:13,897 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read=0) (stream_read_block_read=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (stream_read_total_bytes=65536) (stream_read_closed=1) (action_executor_acquired.failures=0) (stream_read_opened=1) (action_executor_acquired=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_close_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations=1) (stream_read_vectored_operations=1) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_incoming_ranges=1) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=2) (stream_read_exceptions=0) (stream_read_bytes=200) (stream_read_remote_stream_drain=1) (stream_read_bytes_discarded_in_abort=0) (action_file_opened=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=9) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_get_request.min=11) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=9) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=13) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=9, mean=9.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=24, mean=12.0000)));

2024-11-16 17:38:13,899 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:13,899 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,899 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,899 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693899
2024-11-16 17:38:13,903 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,904 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,904 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=236&ts=1731778693899
2024-11-16 17:38:13,917 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:38:13,917 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:13,918 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:13,918 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:13,918 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:13,919 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:13,919 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:13,920 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:13,920 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:13,921 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:13,921 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:13,922 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:13,922 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:13,923 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:13,923 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,924 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [237] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=237&ts=1731778693899
2024-11-16 17:38:13,938 [s3a-transfer-leg-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:38:13,939 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.016s
2024-11-16 17:38:13,939 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:13,939 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:13,939 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:13,939 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778693862; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:13,939 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:13,939 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:13,939 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:13,939 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:13,939 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,941 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=159&ts=1731778693899
2024-11-16 17:38:13,950 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:13,950 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:13,950 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:38:13,950 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:13,950 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:13,950 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:13,951 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:13,951 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:13,951 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:13,951 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000194&t0=236&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=159&ts=1731778693899
2024-11-16 17:38:13,960 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:13,961 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:38:13,961 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:38:13,961 [s3a-transfer-leg-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:38:13,961 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.022s
2024-11-16 17:38:13,961 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:38:13,961 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:13,961 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:13,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:13,979 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 50, active threads = 0, queued tasks = 0, completed tasks = 50], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_seek_bytes_discarded=0) (files_copied_bytes=0) (store_io_throttled=0) (op_xattr_get_named.failures=0) (directories_deleted=0) (op_list_files.failures=0) (object_continue_list_request.failures=0) (object_put_request.failures=0) (op_glob_status=0) (op_access=0) (multipart_upload_completed=0) (object_select_requests=0) (object_delete_objects=82) (op_get_delegation_token=0) (object_multipart_aborted=0) (committer_load_single_pending_file=0) (committer_bytes_committed=0) (op_createfile=0) (multipart_upload_started=0) (object_put_request=82) (op_openfile=0) (object_continue_list_request=0) (stream_read_exceptions=0) (op_get_content_summary.failures=0) (committer_magic_files_created=0) (committer_tasks_completed=0) (op_delete=41) (stream_write_block_uploads=41) (stream_write_total_time=0) (op_list_files=0) (audit_request_execution=487) (stream_read_seek_operations=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_incoming_ranges=93) (object_list_request=164) (object_multipart_aborted.failures=0) (stream_write_block_uploads_aborted=0) (store_io_request=487) (op_is_directory=0) (stream_write_total_data=5373952) (op_hsync=0) (object_multipart_initiated=0) (stream_read_bytes=12626) (files_delete_rejected=0) (object_delete_request=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named=0) (files_copied=0) (op_access.failures=0) (committer_commit_job=0) (ignored_errors=0) (action_executor_acquired.failures=0) (op_get_file_checksum=0) (op_xattr_list.failures=0) (op_rename=0) (stream_read_bytes_backwards_on_seek=0) (stream_write_queue_duration.failures=0) (op_create=41) (committer_commits_aborted=0) (object_list_request.failures=0) (audit_access_check_failure=0) (committer_magic_marker_put=0) (op_glob_status.failures=0) (multipart_instantiated=0) (op_xattr_list=0) (op_get_content_summary=0) (multipart_upload_part_put_bytes=0) (delegation_tokens_issued.failures=0) (committer_materialize_file.failures=0) (committer_magic_marker_put.failures=0) (audit_failure=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_aborted=0) (op_get_file_status=2) (object_metadata_request=117) (op_get_file_status.failures=0) (op_hflush=0) (stream_read_close_operations=35) (object_put_bytes=2686976) (stream_read_bytes_discarded_in_close=392016) (files_created=41) (store_exists_probe=0) (stream_read_seek_policy_changed=37) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=2) (action_http_get_request=42) (directories_created=41) (op_exists.failures=0) (object_copy_requests=0) (stream_read_closed=6) (multipart_upload_list.failures=0) (op_copy_from_local_file.failures=0) (op_create_non_recursive=0) (op_delete.failures=0) (committer_jobs_failed=0) (store_io_retry=0) (fake_directories_deleted=41) (committer_commit_job.failures=0) (stream_read_version_mismatches=0) (op_is_file=0) (action_executor_acquired=0) (object_delete_request.failures=0) (committer_stage_file_upload=0) (op_mkdirs=41) (committer_tasks_failed=0) (object_bulk_delete_request=82) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (audit_span_creation=161) (op_list_status=0) (stream_write_exceptions=0) (op_list_located_status=0) (stream_write_block_uploads_committed=0) (op_exists=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_total_bytes=404642) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_named_map.failures=0) (op_mkdirs.failures=0) (stream_read_vectored_operations=29) (committer_jobs_completed=0) (committer_commits.failures=0) (committer_bytes_uploaded=0) (action_file_opened=35) (op_open=35) (action_http_head_request=117) (committer_commits_completed=0) (op_get_delegation_token.failures=0) (op_xattr_get_named_map=0) (store_exists_probe.failures=0) (committer_materialize_file=0) (op_rename.failures=0) (object_put_request_completed=82) (stream_read_vectored_combined_ranges=39) (stream_read_operations=6) (op_create.failures=0) (stream_read_vectored_read_bytes_discarded=49026) (op_abort.failures=0) (op_is_file.failures=0) (files_deleted=41) (stream_read_remote_stream_drain=6) (stream_read_fully_operations=2) (committer_commits_reverted=0) (op_abort=0) (stream_read_operations_incomplete=0) (op_xattr_get_map.failures=0) (op_copy_from_local_file=0) (action_http_head_request.failures=0) (multipart_upload_list=0) (stream_write_bytes=2686976) (op_xattr_get_map=0) (action_http_get_request.failures=0) (op_createfile.failures=0) (op_is_directory.failures=0) (op_get_file_checksum.failures=0) (committer_stage_file_upload.failures=0) (fake_directories_created=0) (committer_commits_created=0) (stream_read_opened=6) (delegation_tokens_issued=0) (op_list_status.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_queue_duration=0) (action_file_opened.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=41) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0));
minimums=((op_glob_status.failures.min=-1) (store_exists_probe.min=-1) (op_rename.min=-1) (op_get_file_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.min=-1) (multipart_upload_list.min=-1) (op_createfile.min=-1) (op_create.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.min=4) (committer_magic_marker_put.failures.min=-1) (op_is_directory.failures.min=-1) (op_access.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_list.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.min=-1) (committer_stage_file_upload.failures.min=-1) (object_put_request.min=59) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_http_get_request.min=11) (object_bulk_delete_request.min=7) (op_exists.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.min=-1) (op_create.min=6) (op_get_delegation_token.min=-1) (store_exists_probe.failures.min=-1) (op_delete.min=26) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.min=-1) (op_is_file.min=-1) (action_http_head_request.min=2) (op_get_content_summary.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (object_list_request.failures.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.min=-1) (op_abort.failures.min=-1) (op_access.min=-1) (op_xattr_get_named.failures.min=-1) (stream_write_queue_duration.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_content_summary.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_list.min=-1) (action_file_opened.min=9) (op_glob_status.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.min=4) (op_delete.failures.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.failures.min=-1) (op_mkdirs.min=20) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_status.min=-1) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (action_file_opened.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.failures.min=-1) (op_mkdirs.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_list_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_list_request.max=233) (action_http_get_request.max=50) (op_access.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.failures.max=-1) (delegation_tokens_issued.max=-1) (object_continue_list_request.max=-1) (op_get_content_summary.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_http_head_request.failures.max=-1) (object_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_createfile.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_map.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (action_http_get_request.failures.max=-1) (op_abort.failures.max=-1) (op_create.failures.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.max=-1) (object_put_request.max=101) (op_get_delegation_token.failures.max=-1) (action_file_opened.failures.max=-1) (op_delete.max=112) (op_mkdirs.max=372) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_directory.failures.max=-1) (op_create.max=53) (op_get_file_status.max=5) (committer_materialize_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_list_files.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_abort.max=-1) (committer_commit_job.failures.max=-1) (op_glob_status.max=-1) (object_bulk_delete_request.max=27) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.max=26) (op_list_files.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_access.failures.max=-1) (op_mkdirs.failures.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.max=-1) (op_createfile.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.max=4) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (multipart_upload_list.max=-1) (op_copy_from_local_file.max=-1) (action_http_head_request.max=26) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (op_is_file.max=-1) (object_multipart_initiated.max=-1) (op_exists.max=-1) (op_rename.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_status.max=-1));
means=((op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=812, mean=19.3333)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=117, sum=626, mean=5.3504)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=164, sum=1734, mean=10.5732)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=82, sum=1106, mean=13.4878)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=35, sum=243, mean=6.9429)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=82, sum=2835, mean=34.5732)) (op_mkdirs.mean=(samples=41, sum=1840, mean=44.8780)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=11, mean=1.8333)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=41, sum=510, mean=12.4390)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=41, sum=1930, mean=47.0732)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:13,979 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:13,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:13,980 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:13,980 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=238&ts=1731778693979
2024-11-16 17:38:13,988 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:38:13,988 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,988 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:13,988 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:13,988 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:13,988 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=238&ts=1731778693979
2024-11-16 17:38:13,991 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:13,991 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:13,991 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:13,991 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:13,991 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000195&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=238&ts=1731778693979
2024-11-16 17:38:14,004 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:14,005 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:14,005 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:38:14,005 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:14,005 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,005 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,005 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,005 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,006 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000196 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000196&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=238&ts=1731778694005
2024-11-16 17:38:14,011 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:14,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,011 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:14,012 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-347053486987236859.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:14,013 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-347053486987236859.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (stream_write_block_uploads=0) (op_hsync=0) (object_put_request=0) (op_abort=0) (stream_write_exceptions=0) (op_abort.failures=0) (stream_write_total_data=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (op_hflush=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-347053486987236859.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,013 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,013 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:14,013 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-347053486987236859.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:14,013 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:14,013 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:14,013 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:14,013 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:14,014 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000196 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000196&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=162&ts=1731778694005
2024-11-16 17:38:14,048 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:14,048 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:14,048 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:38:14,048 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-347053486987236859.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:14,048 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-347053486987236859.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,048 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-347053486987236859.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,048 [s3a-transfer-leg-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:14,048 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,049 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (stream_write_total_time=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (op_hsync=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (op_hflush=0) (object_put_request.failures=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (op_abort=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (action_executor_acquired=0) (op_abort.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=35) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=35) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=35, mean=35.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:14,050 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:14,051 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,051 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,051 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:14,052 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [239] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000197 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000197/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000197&t0=239&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=239&ts=1731778694051
2024-11-16 17:38:14,058 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:14,058 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:14,059 [s3a-transfer-leg-bucket-unbounded-pool2-t51] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,059 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:38:14,060 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request=0) (stream_read_operations_incomplete=0) (stream_read_total_bytes=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (action_file_opened=1) (stream_read_close_operations=1) (stream_read_seek_operations=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=0) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_block_read=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (stream_aborted=0) (stream_read_vectored_operations=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_bytes=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=7) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=7) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:14,061 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:14,062 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,062 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,062 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=238&ts=1731778694061
2024-11-16 17:38:14,066 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,066 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,067 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=238&ts=1731778694061
2024-11-16 17:38:14,073 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:14,074 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:14,074 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:14,074 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:14,074 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:14,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:14,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:14,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:14,074 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:14,074 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:14,075 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:14,075 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:14,075 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:14,075 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:14,076 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,076 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [240] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=240&ts=1731778694061
2024-11-16 17:38:14,080 [s3a-transfer-leg-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.004s
2024-11-16 17:38:14,081 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:38:14,081 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:14,081 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:14,081 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:14,081 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778694043; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:14,081 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:14,081 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:14,081 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:14,081 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:14,081 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:14,081 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:14,081 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:14,081 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:14,082 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,082 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,082 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:14,082 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,082 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=164&ts=1731778694061
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:14,095 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,096 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [164] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000198&t0=238&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=164&ts=1731778694061
2024-11-16 17:38:14,106 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:38:14,107 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:38:14,107 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:38:14,107 [s3a-transfer-leg-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.026s
2024-11-16 17:38:14,107 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:38:14,107 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.033s
2024-11-16 17:38:14,107 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:14,107 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:14,108 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:14,122 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 52, active threads = 0, queued tasks = 0, completed tasks = 52], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_put_bytes=2752512) (object_continue_list_request=0) (stream_read_seek_operations=0) (op_list_status=0) (delegation_tokens_issued=0) (files_copied_bytes=0) (stream_read_remote_stream_drain=6) (multipart_upload_list=0) (action_http_get_request.failures=0) (op_create.failures=0) (files_delete_rejected=0) (store_io_request=498) (stream_read_bytes_discarded_in_abort=0) (stream_write_queue_duration.failures=0) (committer_load_single_pending_file.failures=0) (ignored_errors=0) (committer_commits_created=0) (object_delete_request.failures=0) (action_executor_acquired.failures=0) (multipart_upload_started=0) (stream_write_exceptions_completing_upload=0) (object_list_request=168) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (stream_write_bytes=2752512) (op_delete.failures=0) (committer_commits_reverted=0) (multipart_upload_list.failures=0) (op_copy_from_local_file=0) (stream_write_total_time=0) (op_xattr_get_named.failures=0) (object_copy_requests=0) (committer_commits_completed=0) (committer_jobs_completed=0) (stream_read_remote_stream_aborted=0) (committer_stage_file_upload=0) (op_create_non_recursive=0) (op_list_status.failures=0) (delegation_tokens_issued.failures=0) (op_get_delegation_token=0) (action_file_opened.failures=0) (committer_materialize_file.failures=0) (stream_read_vectored_combined_ranges=39) (object_list_request.failures=0) (committer_tasks_completed=0) (stream_read_unbuffered=2) (directories_deleted=0) (op_glob_status=0) (directories_created=42) (store_exists_probe=0) (object_delete_objects=84) (stream_read_seek_forward_operations=0) (op_is_file=0) (op_xattr_get_named_map.failures=0) (object_put_request_completed=84) (stream_read_bytes_discarded_in_close=392016) (stream_read_seek_policy_changed=38) (object_multipart_aborted=0) (stream_write_block_uploads=42) (op_openfile=0) (audit_request_execution=498) (committer_stage_file_upload.failures=0) (stream_read_remote_stream_drain.failures=0) (op_is_directory=0) (audit_access_check_failure=0) (op_createfile=0) (op_get_delegation_token.failures=0) (object_put_request=84) (stream_read_seek_bytes_discarded=0) (action_http_head_request=120) (op_is_directory.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (stream_read_seek_bytes_skipped=0) (stream_write_block_uploads_aborted=0) (stream_read_version_mismatches=0) (committer_jobs_failed=0) (op_createfile.failures=0) (object_bulk_delete_request.failures=0) (store_io_retry=0) (op_xattr_get_named=0) (op_copy_from_local_file.failures=0) (object_put_request.failures=0) (object_bulk_delete_request=84) (op_glob_status.failures=0) (op_mkdirs=42) (op_xattr_get_map.failures=0) (object_delete_request=0) (action_http_get_request=42) (op_delete=42) (committer_load_single_pending_file=0) (op_exists=0) (committer_commit_job.failures=0) (stream_read_bytes=12626) (action_executor_acquired=0) (committer_materialize_file=0) (stream_read_vectored_read_bytes_discarded=49026) (op_list_located_status=0) (stream_read_total_bytes=404642) (stream_read_remote_stream_aborted.failures=0) (object_metadata_request=120) (fake_directories_created=0) (audit_span_creation=165) (committer_commit_job=0) (op_hflush=0) (stream_read_seek_backward_operations=0) (op_get_file_checksum.failures=0) (committer_magic_files_created=0) (stream_read_closed=6) (committer_bytes_uploaded=0) (op_get_file_status.failures=0) (op_get_file_status=2) (store_exists_probe.failures=0) (op_access=0) (stream_aborted=0) (stream_write_total_data=5505024) (committer_commits.failures=0) (op_xattr_list.failures=0) (action_http_head_request.failures=0) (committer_magic_marker_put.failures=0) (stream_read_operations=6) (stream_read_vectored_operations=29) (op_rename.failures=0) (fake_directories_deleted=42) (stream_read_vectored_incoming_ranges=93) (committer_commits_aborted=0) (multipart_instantiated=0) (op_list_files.failures=0) (stream_read_opened=6) (files_copied=0) (object_continue_list_request.failures=0) (op_is_file.failures=0) (committer_magic_marker_put=0) (stream_read_bytes_backwards_on_seek=0) (audit_failure=0) (stream_read_fully_operations=2) (op_xattr_get_named_map=0) (op_open=36) (files_deleted=42) (op_rename=0) (committer_bytes_committed=0) (op_list_files=0) (stream_write_queue_duration=0) (files_created=42) (multipart_upload_part_put_bytes=0) (object_select_requests=0) (object_multipart_initiated=0) (committer_tasks_failed=0) (action_file_opened=36) (op_xattr_list=0) (op_access.failures=0) (stream_read_operations_incomplete=0) (op_get_file_checksum=0) (store_io_throttled=0) (op_xattr_get_map=0) (multipart_upload_completed=0) (stream_write_block_uploads_committed=0) (op_create=42) (op_abort=0) (stream_read_exceptions=0) (op_get_content_summary.failures=0) (op_get_content_summary=0) (op_hsync=0) (op_exists.failures=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_aborted=0) (stream_read_close_operations=36) (op_mkdirs.failures=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=42) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_stage_file_upload.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=7) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_exists.failures.min=-1) (op_list_files.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.failures.min=-1) (action_http_get_request.min=11) (committer_load_single_pending_file.min=-1) (op_xattr_list.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.min=-1) (op_create.min=6) (op_get_delegation_token.min=-1) (op_get_file_status.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named.min=-1) (op_rename.failures.min=-1) (object_put_request.min=35) (action_executor_acquired.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_drain.min=1) (op_mkdirs.failures.min=-1) (committer_commit_job.failures.min=-1) (op_access.min=-1) (op_rename.min=-1) (object_multipart_aborted.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.min=-1) (op_glob_status.min=-1) (object_list_request.min=4) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.min=20) (op_createfile.min=-1) (op_delete.min=26) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.failures.min=-1) (action_http_head_request.min=2) (op_is_file.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.min=-1) (object_bulk_delete_request.min=7) (op_xattr_get_named_map.min=-1) (object_delete_request.min=-1) (object_delete_request.failures.min=-1) (op_access.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_file_status.min=4) (op_is_directory.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.min=-1) (committer_materialize_file.failures.min=-1) (op_list_files.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.min=-1) (op_abort.failures.min=-1) (object_list_request.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.max=27) (op_createfile.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_list_files.failures.max=-1) (action_http_head_request.failures.max=-1) (op_rename.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_put_request.max=101) (op_glob_status.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_status.max=5) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (store_exists_probe.max=-1) (op_glob_status.failures.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (op_is_file.max=-1) (op_get_content_summary.max=-1) (op_access.max=-1) (op_xattr_get_named_map.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.max=4) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.max=-1) (op_rename.failures.max=-1) (op_mkdirs.max=372) (op_mkdirs.failures.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.max=-1) (action_file_opened.max=26) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.failures.max=-1) (op_create.max=53) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.max=-1) (op_create.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.max=-1) (op_delete.max=112) (op_abort.max=-1) (action_executor_acquired.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (op_exists.failures.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.max=233) (action_http_head_request.max=26) (committer_materialize_file.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=50));
means=((committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=42, sum=517, mean=12.3095)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=42, sum=1963, mean=46.7381)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=11, mean=1.8333)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=168, sum=1758, mean=10.4643)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=36, sum=250, mean=6.9444)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=120, sum=640, mean=5.3333)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=42, sum=1866, mean=44.4286)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=42, sum=812, mean=19.3333)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=84, sum=1130, mean=13.4524)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=84, sum=2883, mean=34.3214)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:14,122 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:14,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,122 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,123 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,123 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,123 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=242&ts=1731778694122
2024-11-16 17:38:14,139 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:38:14,139 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,139 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,139 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,139 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,139 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=242&ts=1731778694122
2024-11-16 17:38:14,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,143 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:14,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:14,143 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:14,143 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000199&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=242&ts=1731778694122
2024-11-16 17:38:14,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:14,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:14,166 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:38:14,166 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:14,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,167 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,167 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,168 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000200 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000200&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=242&ts=1731778694167
2024-11-16 17:38:14,172 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:14,172 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,173 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:14,173 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4863829000423787264.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:14,174 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4863829000423787264.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (op_hsync=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (op_abort=0) (stream_write_bytes=65536) (action_executor_acquired=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (op_hflush=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4863829000423787264.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,174 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,174 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:14,174 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4863829000423787264.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:14,175 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:14,175 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:14,175 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:14,175 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000200 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000200&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=166&ts=1731778694167
2024-11-16 17:38:14,176 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:14,212 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:14,212 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:14,213 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.038s
2024-11-16 17:38:14,213 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4863829000423787264.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:14,213 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4863829000423787264.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,213 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4863829000423787264.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,213 [s3a-transfer-leg-bucket-bounded-pool1-t61] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:14,213 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,214 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=1) (object_put_request=1) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (op_abort=0) (action_executor_acquired=0) (stream_write_exceptions=0) (op_abort.failures=0) (op_hflush=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (op_hsync=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=37) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=37) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=37, mean=37.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:14,215 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:14,216 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,216 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,216 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:14,216 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000201 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000201/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000201&t0=243&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=243&ts=1731778694215
2024-11-16 17:38:14,221 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:14,221 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:14,221 [s3a-transfer-leg-bucket-unbounded-pool2-t53] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,221 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:38:14,222 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=0) (action_executor_acquired=0) (stream_read_bytes=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_policy_changed=1) (action_file_opened.failures=0) (stream_read_operations_incomplete=0) (action_http_get_request=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_block_read=0) (stream_read_opened=0) (stream_read_remote_stream_aborted=0) (action_http_get_request.failures=0) (stream_read_operations=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=5) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:14,224 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:14,224 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,224 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,225 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=242&ts=1731778694224
2024-11-16 17:38:14,228 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,228 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,228 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=242&ts=1731778694224
2024-11-16 17:38:14,238 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:38:14,238 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:14,238 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:14,238 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:14,239 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:14,239 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:14,239 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:14,239 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:14,239 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:14,239 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:14,239 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:14,240 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:14,240 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:14,240 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:14,240 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,240 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=244&ts=1731778694224
2024-11-16 17:38:14,258 [s3a-transfer-leg-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:38:14,259 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.019s
2024-11-16 17:38:14,259 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:14,259 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:14,259 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:14,259 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778694209; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:14,260 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:14,260 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:14,260 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:14,260 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:14,260 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:14,260 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:14,261 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:14,261 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:14,261 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,261 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,261 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:14,261 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,261 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=165&ts=1731778694224
2024-11-16 17:38:14,273 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,274 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000202&t0=242&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=165&ts=1731778694224
2024-11-16 17:38:14,288 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:14,288 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:38:14,288 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:38:14,288 [s3a-transfer-leg-bucket-bounded-pool1-t60] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:38:14,288 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:38:14,288 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.049s
2024-11-16 17:38:14,288 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:14,288 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:14,290 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:14,302 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 54, active threads = 0, queued tasks = 0, completed tasks = 54], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_is_directory.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_instantiated=0) (op_xattr_get_named_map.failures=0) (stream_write_exceptions=0) (stream_read_close_operations=37) (action_executor_acquired.failures=0) (op_xattr_get_named.failures=0) (stream_read_seek_bytes_discarded=0) (committer_commits_aborted=0) (op_list_located_status=0) (stream_read_bytes=12626) (op_get_file_status.failures=0) (object_multipart_aborted=0) (object_continue_list_request=0) (stream_read_operations=6) (op_delete.failures=0) (op_copy_from_local_file=0) (committer_stage_file_upload.failures=0) (committer_commits_completed=0) (files_deleted=43) (op_glob_status.failures=0) (stream_write_block_uploads_committed=0) (committer_commit_job.failures=0) (op_mkdirs.failures=0) (op_rename.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_hflush=0) (stream_read_seek_operations=0) (op_list_files.failures=0) (op_create=43) (committer_bytes_uploaded=0) (committer_tasks_completed=0) (stream_write_bytes=2818048) (op_xattr_get_named=0) (stream_read_remote_stream_drain.failures=0) (object_multipart_aborted.failures=0) (action_file_opened=37) (action_http_get_request.failures=0) (op_list_status=0) (audit_span_creation=169) (object_delete_request.failures=0) (committer_materialize_file.failures=0) (object_delete_objects=86) (files_copied_bytes=0) (files_created=43) (stream_read_operations_incomplete=0) (stream_write_total_data=5636096) (stream_read_unbuffered=2) (store_io_request=509) (stream_read_fully_operations=2) (multipart_upload_abort_under_path_invoked=0) (committer_load_single_pending_file=0) (delegation_tokens_issued.failures=0) (stream_write_exceptions_completing_upload=0) (files_delete_rejected=0) (op_createfile=0) (op_mkdirs=43) (store_io_retry=0) (stream_read_seek_forward_operations=0) (committer_materialize_file=0) (audit_request_execution=509) (stream_write_queue_duration.failures=0) (object_put_request=86) (op_get_delegation_token.failures=0) (multipart_upload_list.failures=0) (object_bulk_delete_request=86) (object_multipart_initiated=0) (op_list_status.failures=0) (action_http_head_request.failures=0) (multipart_upload_part_put_bytes=0) (directories_created=43) (op_is_file=0) (stream_read_remote_stream_drain=6) (stream_read_vectored_combined_ranges=39) (object_list_request.failures=0) (op_is_directory=0) (committer_load_single_pending_file.failures=0) (op_is_file.failures=0) (stream_read_remote_stream_aborted=0) (op_openfile=0) (directories_deleted=0) (stream_read_total_bytes=404642) (store_io_throttled=0) (object_continue_list_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_jobs_completed=0) (store_exists_probe=0) (op_access.failures=0) (multipart_upload_aborted=0) (op_xattr_list.failures=0) (stream_read_vectored_read_bytes_discarded=49026) (op_xattr_get_map=0) (stream_read_seek_policy_changed=39) (action_http_get_request=42) (ignored_errors=0) (committer_jobs_failed=0) (stream_read_seek_backward_operations=0) (object_multipart_initiated.failures=0) (stream_read_opened=6) (op_get_content_summary.failures=0) (object_put_request.failures=0) (op_exists=0) (multipart_upload_part_put=0) (op_open=37) (files_copied=0) (object_put_bytes=2818048) (object_copy_requests=0) (stream_read_vectored_operations=29) (action_http_head_request=123) (committer_stage_file_upload=0) (op_hsync=0) (action_executor_acquired=0) (op_abort=0) (op_get_file_checksum=0) (object_bulk_delete_request.failures=0) (object_list_request=172) (op_glob_status=0) (stream_write_block_uploads_aborted=0) (committer_commits.failures=0) (action_file_opened.failures=0) (op_delete=43) (audit_failure=0) (op_get_delegation_token=0) (committer_bytes_committed=0) (object_metadata_request=123) (stream_write_total_time=0) (stream_read_version_mismatches=0) (op_create.failures=0) (op_rename=0) (multipart_upload_list=0) (op_createfile.failures=0) (committer_commit_job=0) (committer_magic_marker_put.failures=0) (op_access=0) (stream_aborted=0) (stream_read_closed=6) (fake_directories_deleted=43) (store_exists_probe.failures=0) (op_xattr_get_map.failures=0) (op_list_files=0) (op_exists.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_get_file_checksum.failures=0) (op_xattr_list=0) (op_get_content_summary=0) (fake_directories_created=0) (stream_write_block_uploads=43) (object_delete_request=0) (stream_read_bytes_discarded_in_close=392016) (delegation_tokens_issued=0) (committer_magic_files_created=0) (committer_commits_reverted=0) (stream_read_vectored_incoming_ranges=93) (stream_read_exceptions=0) (committer_tasks_failed=0) (committer_commits_created=0) (audit_access_check_failure=0) (op_abort.failures=0) (stream_write_queue_duration=0) (op_copy_from_local_file.failures=0) (multipart_upload_completed=0) (object_put_request_completed=86) (multipart_upload_started=0) (op_create_non_recursive=0) (committer_magic_marker_put=0) (op_get_file_status=2) (op_xattr_get_named_map=0) (object_select_requests=0));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=43));
minimums=((op_exists.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_get_file_checksum.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.min=37) (op_list_status.min=-1) (op_rename.min=-1) (op_access.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.min=-1) (action_http_head_request.min=2) (op_abort.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_drain.min=1) (object_delete_request.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.min=-1) (op_is_file.min=-1) (op_xattr_get_map.min=-1) (op_list_files.min=-1) (object_multipart_initiated.failures.min=-1) (committer_commit_job.min=-1) (op_list_status.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_materialize_file.min=-1) (op_create.min=6) (op_delete.failures.min=-1) (object_continue_list_request.min=-1) (object_list_request.min=4) (op_delete.min=26) (op_createfile.failures.min=-1) (delegation_tokens_issued.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_mkdirs.min=20) (op_get_content_summary.failures.min=-1) (op_glob_status.failures.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.failures.min=-1) (object_list_request.failures.min=-1) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_access.min=-1) (op_get_file_status.min=4) (multipart_upload_list.min=-1) (op_abort.failures.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=11) (op_glob_status.min=-1) (op_is_directory.min=-1) (op_xattr_list.min=-1) (action_file_opened.min=5) (op_get_content_summary.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_bulk_delete_request.min=7) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.min=-1));
maximums=((op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.max=-1) (store_exists_probe.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (multipart_upload_list.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.max=-1) (op_createfile.failures.max=-1) (op_access.failures.max=-1) (op_delete.max=112) (committer_load_single_pending_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.max=5) (object_bulk_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_content_summary.failures.max=-1) (op_abort.max=-1) (op_exists.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.max=372) (object_bulk_delete_request.max=27) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (action_http_get_request.max=50) (op_rename.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=53) (op_xattr_list.failures.max=-1) (op_create.failures.max=-1) (action_file_opened.failures.max=-1) (op_mkdirs.failures.max=-1) (action_file_opened.max=26) (object_list_request.max=233) (committer_stage_file_upload.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.failures.max=-1) (op_rename.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_access.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_delete.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_content_summary.max=-1) (store_exists_probe.failures.max=-1) (object_put_request.max=101) (op_xattr_get_named.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_drain.max=4) (committer_stage_file_upload.failures.max=-1) (op_is_file.failures.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.max=-1) (action_http_head_request.max=26) (committer_commit_job.failures.max=-1) (delegation_tokens_issued.max=-1) (object_continue_list_request.max=-1) (object_delete_request.failures.max=-1) (action_http_get_request.failures.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=123, sum=653, mean=5.3089)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (action_file_opened.mean=(samples=37, sum=255, mean=6.8919)) (action_http_get_request.mean=(samples=42, sum=812, mean=19.3333)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=172, sum=1806, mean=10.5000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=43, sum=2012, mean=46.7907)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=43, sum=523, mean=12.1628)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=43, sum=1911, mean=44.4419)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=86, sum=1156, mean=13.4419)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=11, mean=1.8333)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=86, sum=2943, mean=34.2209)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:14,302 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:14,302 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,302 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,303 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,303 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=245&ts=1731778694302
2024-11-16 17:38:14,312 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:14,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,313 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=245&ts=1731778694302
2024-11-16 17:38:14,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,316 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:14,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:14,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:14,316 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000203&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=245&ts=1731778694302
2024-11-16 17:38:14,329 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:14,329 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:14,329 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:38:14,329 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:14,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,330 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,330 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000204 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000204&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=245&ts=1731778694330
2024-11-16 17:38:14,337 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:14,337 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,337 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:14,338 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13287897465359332156.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:14,338 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13287897465359332156.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_initiated=0) (op_hsync=0) (object_put_request=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (op_abort.failures=0) (op_abort=0) (committer_magic_marker_put.failures=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13287897465359332156.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,339 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,339 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:14,339 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13287897465359332156.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:14,339 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:14,339 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:14,339 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:14,339 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:14,339 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [168] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000204 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000204&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=168&ts=1731778694330
2024-11-16 17:38:14,369 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:14,369 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:14,369 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.030s
2024-11-16 17:38:14,369 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13287897465359332156.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:14,369 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13287897465359332156.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,369 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13287897465359332156.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,369 [s3a-transfer-leg-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:14,370 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,370 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (action_executor_acquired=0) (object_put_request=1) (op_hflush=0) (object_put_request.failures=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (op_hsync=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (op_abort=0) (op_abort.failures=0) (object_multipart_aborted=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_aborted.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=30) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=30) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=30, mean=30.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:14,370 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:14,371 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,371 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,371 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:14,372 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=245&ts=1731778694371
2024-11-16 17:38:14,375 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:14,375 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:14,375 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,375 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:14,375 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:14,375 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:14,375 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:14,376 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:14,375 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:14,376 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,376 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:14,376 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=170&ts=1731778694371
2024-11-16 17:38:14,376 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:14,377 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:38:14,377 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:38:14,377 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:14,377 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,377 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:14,377 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [173] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=0-159&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000205&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=173&ts=1731778694371
2024-11-16 17:38:14,388 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:38:14,388 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:14,389 [s3a-transfer-leg-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:14,388 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:38:14,389 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:38:14,389 [s3a-transfer-leg-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:14,391 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=2) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=0) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (stream_read_fully_operations=0) (stream_read_operations=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_bytes=300) (action_file_opened=1) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=0) (action_http_get_request=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_total_bytes=300) (action_file_opened.failures=0) (stream_read_vectored_operations=2) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_incoming_ranges=4) (stream_read_exceptions=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_block_acquire_read=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=11));
maximums=((stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=13) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=24, mean=12.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:14,392 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:14,392 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,392 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,393 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=245&ts=1731778694392
2024-11-16 17:38:14,396 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,396 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,396 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=245&ts=1731778694392
2024-11-16 17:38:14,401 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:14,401 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:14,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:14,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:14,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:14,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:14,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:14,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:14,402 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:14,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:14,403 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:14,403 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:14,403 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:14,403 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:14,404 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,404 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=249&ts=1731778694392
2024-11-16 17:38:14,410 [s3a-transfer-leg-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:14,410 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:14,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:14,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:14,410 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:14,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778694365; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:14,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:14,411 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:14,411 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:14,411 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:14,411 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:14,413 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:14,413 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:14,413 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:14,413 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,413 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,413 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:14,413 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,414 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=31&ts=1731778694392
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,422 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000206&t0=245&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=31&ts=1731778694392
2024-11-16 17:38:14,436 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:14,436 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:38:14,436 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:38:14,436 [s3a-transfer-leg-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:38:14,436 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:38:14,436 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.034s
2024-11-16 17:38:14,436 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:14,436 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:14,437 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:14,448 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 55, active threads = 0, queued tasks = 0, completed tasks = 55], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_operations_incomplete=0) (op_mkdirs=44) (stream_write_block_uploads_aborted=0) (op_exists.failures=0) (op_glob_status=0) (stream_read_vectored_read_bytes_discarded=49046) (object_multipart_initiated.failures=0) (op_open=38) (stream_read_remote_stream_aborted=0) (op_hflush=0) (committer_commits_reverted=0) (op_get_file_status=2) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (op_create_non_recursive=0) (op_createfile=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_combined_ranges=41) (stream_read_bytes_discarded_in_abort=0) (op_list_status.failures=0) (store_io_retry=0) (action_http_head_request=126) (committer_load_single_pending_file=0) (stream_read_seek_policy_changed=40) (object_multipart_initiated=0) (op_delete.failures=0) (object_put_request_completed=88) (stream_write_exceptions_completing_upload=0) (committer_bytes_uploaded=0) (stream_read_bytes_backwards_on_seek=0) (committer_stage_file_upload.failures=0) (audit_access_check_failure=0) (op_get_content_summary.failures=0) (stream_write_total_time=0) (store_exists_probe=0) (multipart_upload_part_put_bytes=0) (action_http_head_request.failures=0) (files_deleted=44) (object_bulk_delete_request=88) (delegation_tokens_issued=0) (directories_deleted=0) (multipart_upload_part_put=0) (object_select_requests=0) (directories_created=44) (object_put_bytes=2883584) (object_put_request=88) (multipart_upload_list=0) (op_glob_status.failures=0) (stream_read_bytes_discarded_in_close=392016) (op_rename=0) (action_executor_acquired=0) (committer_commits.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_started=0) (multipart_upload_aborted=0) (op_xattr_list=0) (op_delete=44) (fake_directories_created=0) (op_abort.failures=0) (stream_read_close_operations=38) (op_xattr_get_named=0) (committer_magic_marker_put=0) (audit_request_execution=522) (op_is_file=0) (op_get_delegation_token.failures=0) (committer_commits_aborted=0) (op_list_status=0) (object_continue_list_request.failures=0) (op_abort=0) (object_delete_request.failures=0) (op_is_directory=0) (op_xattr_get_named_map=0) (committer_jobs_completed=0) (fake_directories_deleted=44) (op_xattr_get_named_map.failures=0) (object_continue_list_request=0) (stream_read_remote_stream_drain.failures=0) (op_access=0) (op_xattr_get_map.failures=0) (committer_commits_completed=0) (op_get_delegation_token=0) (stream_write_queue_duration=0) (stream_read_fully_operations=2) (object_multipart_aborted.failures=0) (store_io_request=522) (stream_write_total_data=5767168) (op_rename.failures=0) (delegation_tokens_issued.failures=0) (stream_write_block_uploads=44) (stream_read_total_bytes=404942) (op_copy_from_local_file=0) (committer_tasks_completed=0) (store_io_throttled=0) (object_delete_objects=88) (action_file_opened=38) (stream_read_closed=6) (op_xattr_list.failures=0) (object_list_request=176) (op_is_file.failures=0) (committer_commit_job.failures=0) (object_copy_requests=0) (committer_materialize_file.failures=0) (stream_write_queue_duration.failures=0) (action_http_get_request=44) (committer_load_single_pending_file.failures=0) (op_mkdirs.failures=0) (op_copy_from_local_file.failures=0) (object_bulk_delete_request.failures=0) (ignored_errors=0) (stream_read_version_mismatches=0) (multipart_upload_list.failures=0) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (op_access.failures=0) (committer_jobs_failed=0) (op_list_located_status=0) (op_xattr_get_named.failures=0) (stream_read_vectored_operations=31) (committer_commits_created=0) (stream_read_operations=6) (stream_read_opened=6) (object_multipart_aborted=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (action_file_opened.failures=0) (committer_magic_marker_put.failures=0) (op_create.failures=0) (object_delete_request=0) (stream_read_unbuffered=2) (files_copied=0) (op_createfile.failures=0) (stream_write_block_uploads_committed=0) (action_http_get_request.failures=0) (object_metadata_request=126) (stream_write_exceptions=0) (multipart_instantiated=0) (op_xattr_get_map=0) (op_get_file_status.failures=0) (files_created=44) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain=6) (multipart_upload_abort_under_path_invoked=0) (op_get_file_checksum.failures=0) (op_get_content_summary=0) (committer_stage_file_upload=0) (committer_materialize_file=0) (op_get_file_checksum=0) (op_list_files.failures=0) (op_hsync=0) (op_exists=0) (object_put_request.failures=0) (audit_span_creation=173) (audit_failure=0) (files_delete_rejected=0) (op_openfile=0) (stream_write_bytes=2883584) (committer_bytes_committed=0) (stream_read_bytes=12926) (op_is_directory.failures=0) (object_list_request.failures=0) (committer_commit_job=0) (store_exists_probe.failures=0) (multipart_upload_completed=0) (committer_magic_files_created=0) (op_create=44) (op_list_files=0) (files_copied_bytes=0) (stream_read_vectored_incoming_ranges=97) (committer_tasks_failed=0));
gauges=((object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=44) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_bulk_delete_request.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=11) (op_copy_from_local_file.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.min=-1) (op_delete.min=26) (op_is_file.failures.min=-1) (op_is_file.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_abort.min=-1) (op_exists.failures.min=-1) (object_put_request.min=30) (op_xattr_list.failures.min=-1) (object_bulk_delete_request.min=7) (op_is_directory.min=-1) (delegation_tokens_issued.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_get_named_map.min=-1) (op_abort.failures.min=-1) (op_delete.failures.min=-1) (op_access.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.min=-1) (op_createfile.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.min=-1) (object_put_request.failures.min=-1) (action_http_head_request.min=2) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.min=-1) (op_xattr_list.min=-1) (op_list_files.min=-1) (op_get_file_status.min=4) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.failures.min=-1) (committer_materialize_file.min=-1) (object_delete_request.failures.min=-1) (op_rename.failures.min=-1) (action_file_opened.failures.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.failures.min=-1) (op_glob_status.min=-1) (action_file_opened.min=4) (op_access.failures.min=-1) (object_list_request.min=4) (object_delete_request.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.min=-1) (op_mkdirs.min=20) (committer_commit_job.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_files.failures.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_magic_marker_put.min=-1) (op_create.min=6) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_exists.min=-1) (op_mkdirs.failures.min=-1));
maximums=((op_list_files.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.max=-1) (op_list_files.failures.max=-1) (action_http_get_request.max=50) (store_exists_probe.max=-1) (op_exists.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (op_glob_status.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_access.failures.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_access.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_list.max=-1) (op_is_file.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.max=-1) (object_put_request.max=101) (op_get_file_checksum.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_mkdirs.max=372) (store_exists_probe.failures.max=-1) (op_create.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_executor_acquired.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.max=112) (op_is_file.failures.max=-1) (op_get_file_status.max=5) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (action_file_opened.max=26) (stream_read_remote_stream_drain.max=4) (op_rename.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_commit_job.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_list.max=-1) (object_delete_request.max=-1) (op_rename.max=-1) (action_http_head_request.max=26) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (object_bulk_delete_request.max=27) (object_multipart_aborted.max=-1) (op_xattr_get_map.max=-1) (object_delete_request.failures.max=-1) (op_createfile.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_status.failures.max=-1) (object_list_request.max=233) (op_get_file_status.failures.max=-1) (op_delete.failures.max=-1) (delegation_tokens_issued.max=-1) (op_create.max=53) (object_list_request.failures.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_glob_status.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.failures.max=-1) (op_copy_from_local_file.failures.max=-1));
means=((store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=126, sum=664, mean=5.2698)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=44, sum=531, mean=12.0682)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=88, sum=1179, mean=13.3977)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=38, sum=259, mean=6.8158)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=44, sum=1939, mean=44.0682)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=88, sum=2986, mean=33.9318)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=836, mean=19.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=11, mean=1.8333)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=176, sum=1833, mean=10.4148)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=44, sum=2046, mean=46.5000)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:14,449 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:14,449 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,449 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,449 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,449 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,449 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=250&ts=1731778694449
2024-11-16 17:38:14,460 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:38:14,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,460 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,461 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,461 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=250&ts=1731778694449
2024-11-16 17:38:14,463 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,463 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:14,463 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:14,463 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:14,463 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000207&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=250&ts=1731778694449
2024-11-16 17:38:14,475 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:14,475 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:14,475 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:38:14,475 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:14,476 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,476 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,476 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,476 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,476 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000208 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000208&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=250&ts=1731778694475
2024-11-16 17:38:14,481 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:14,481 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,482 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:14,482 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16807889114851223560.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:14,483 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16807889114851223560.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_put_request=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (action_executor_acquired=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (op_abort=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (op_hflush=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (stream_write_total_data=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16807889114851223560.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,483 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,483 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:14,483 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16807889114851223560.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:14,483 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:14,483 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:14,483 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:14,483 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:14,483 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000208 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000208&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=36&ts=1731778694475
2024-11-16 17:38:14,553 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:14,554 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:14,554 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.071s
2024-11-16 17:38:14,554 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16807889114851223560.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:14,554 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16807889114851223560.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,554 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16807889114851223560.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,554 [s3a-transfer-leg-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:14,554 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,555 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (object_put_request=1) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (op_abort.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_total_time=0) (op_abort=0) (object_multipart_initiated.failures=0) (op_hflush=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=70) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((op_abort.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=70) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=70, mean=70.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:14,555 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:14,556 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,556 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,556 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:14,556 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [252] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000209 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000209/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000209&t0=252&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=252&ts=1731778694556
2024-11-16 17:38:14,562 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:14,562 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:14,562 [s3a-transfer-leg-bucket-unbounded-pool2-t56] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,562 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:38:14,563 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_closed=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_total_bytes=0) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (stream_read_bytes=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_vectored_operations=0) (stream_read_vectored_incoming_ranges=0) (action_http_get_request=0) (stream_read_close_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0) (action_file_opened=1) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (stream_read_seek_operations=0) (stream_read_seek_forward_operations=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=6) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1));
maximums=((action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:14,564 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:14,565 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,565 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,565 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=250&ts=1731778694564
2024-11-16 17:38:14,567 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,567 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,568 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=250&ts=1731778694564
2024-11-16 17:38:14,573 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:14,573 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:14,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:14,573 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:14,574 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:14,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:14,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:14,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:14,574 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:14,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:14,574 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:14,574 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:14,575 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:14,575 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:14,575 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,575 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [253] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=253&ts=1731778694564
2024-11-16 17:38:14,582 [s3a-transfer-leg-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:38:14,582 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:38:14,582 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:14,582 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:14,582 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:14,582 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778694531; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:14,582 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:14,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:14,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:14,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:14,583 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:14,583 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:14,583 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:14,583 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,583 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,583 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:14,583 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,584 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=38&ts=1731778694564
2024-11-16 17:38:14,585 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.028s
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.028s
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.028s
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,611 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000210&t0=250&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=38&ts=1731778694564
2024-11-16 17:38:14,625 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:38:14,625 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:38:14,626 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:38:14,626 [s3a-transfer-leg-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.043s
2024-11-16 17:38:14,626 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.041s
2024-11-16 17:38:14,626 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.052s
2024-11-16 17:38:14,626 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:14,626 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:14,629 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:38:14,641 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://leg-bucket implemented by S3AFileSystem{uri=s3a://leg-bucket, workingDir=s3a://leg-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@5e2fc42, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='504cae5d-ca4d-4faa-85dd-8e39f1b76dc1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Running, pool size = 57, active threads = 0, queued tasks = 0, completed tasks = 57], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_file_status=2) (multipart_upload_part_put_bytes=0) (object_list_request.failures=0) (audit_access_check_failure=0) (op_get_delegation_token=0) (op_abort=0) (op_abort.failures=0) (stream_read_vectored_incoming_ranges=97) (stream_read_closed=6) (op_get_file_status.failures=0) (op_xattr_get_named.failures=0) (op_mkdirs=45) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (directories_created=45) (op_glob_status=0) (committer_commits.failures=0) (op_xattr_get_named=0) (committer_stage_file_upload=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_instantiated=0) (stream_read_close_operations=39) (action_executor_acquired=0) (object_put_request.failures=0) (op_xattr_list.failures=0) (stream_read_opened=6) (stream_write_exceptions=0) (stream_read_bytes_discarded_in_close=392016) (object_select_requests=0) (op_is_file=0) (audit_request_execution=533) (op_open=39) (op_delete=45) (committer_commit_job=0) (multipart_upload_part_put=0) (op_hsync=0) (committer_magic_marker_put=0) (op_mkdirs.failures=0) (stream_write_block_uploads_aborted=0) (object_metadata_request=129) (object_continue_list_request.failures=0) (stream_write_exceptions_completing_upload=0) (committer_tasks_completed=0) (object_put_request=90) (op_is_directory.failures=0) (store_io_retry=0) (stream_read_unbuffered=2) (op_openfile=0) (committer_load_single_pending_file.failures=0) (op_hflush=0) (object_list_request=180) (stream_read_vectored_operations=31) (stream_read_seek_policy_changed=41) (committer_bytes_committed=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_backward_operations=0) (op_list_status.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=44) (op_rename.failures=0) (stream_write_bytes=2949120) (op_xattr_get_map.failures=0) (stream_write_queue_duration.failures=0) (op_create=45) (committer_load_single_pending_file=0) (stream_read_seek_forward_operations=0) (multipart_upload_list=0) (op_createfile.failures=0) (op_list_located_status=0) (object_multipart_aborted=0) (stream_write_total_time=0) (committer_materialize_file=0) (committer_jobs_completed=0) (multipart_upload_aborted=0) (committer_jobs_failed=0) (op_xattr_list=0) (store_io_throttled=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_total_data=5898240) (op_xattr_get_map=0) (object_bulk_delete_request=90) (op_copy_from_local_file.failures=0) (committer_commit_job.failures=0) (object_copy_requests=0) (stream_aborted=0) (committer_magic_marker_put.failures=0) (action_http_get_request.failures=0) (stream_read_bytes=12926) (op_is_file.failures=0) (delegation_tokens_issued.failures=0) (store_io_request=533) (object_put_bytes=2949120) (op_createfile=0) (object_put_request_completed=90) (object_delete_request.failures=0) (stream_read_vectored_combined_ranges=41) (op_get_file_checksum=0) (committer_commits_reverted=0) (audit_failure=0) (files_deleted=45) (stream_read_bytes_backwards_on_seek=0) (files_copied=0) (op_get_file_checksum.failures=0) (op_exists=0) (op_delete.failures=0) (stream_read_total_bytes=404942) (object_delete_objects=90) (multipart_upload_completed=0) (committer_commits_completed=0) (action_http_head_request=129) (multipart_upload_abort_under_path_invoked=0) (op_create.failures=0) (op_xattr_get_named_map=0) (object_continue_list_request=0) (stream_read_fully_operations=2) (committer_commits_aborted=0) (files_copied_bytes=0) (ignored_errors=0) (committer_materialize_file.failures=0) (committer_stage_file_upload.failures=0) (committer_magic_files_created=0) (committer_tasks_failed=0) (op_exists.failures=0) (op_create_non_recursive=0) (stream_write_block_uploads_committed=0) (op_access.failures=0) (stream_read_exceptions=0) (object_bulk_delete_request.failures=0) (files_created=45) (op_rename=0) (stream_read_vectored_read_bytes_discarded=49046) (op_get_delegation_token.failures=0) (op_copy_from_local_file=0) (audit_span_creation=177) (stream_read_operations=6) (delegation_tokens_issued=0) (multipart_upload_started=0) (object_multipart_initiated=0) (stream_read_seek_bytes_discarded=0) (object_multipart_aborted.failures=0) (op_is_directory=0) (op_list_files=0) (stream_read_remote_stream_aborted.failures=0) (op_list_status=0) (stream_read_remote_stream_drain=6) (multipart_upload_list.failures=0) (object_delete_request=0) (stream_read_operations_incomplete=0) (action_http_head_request.failures=0) (stream_write_queue_duration=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_operations=0) (fake_directories_created=0) (op_glob_status.failures=0) (stream_write_block_uploads=45) (op_list_files.failures=0) (committer_bytes_uploaded=0) (fake_directories_deleted=45) (op_get_content_summary=0) (op_get_content_summary.failures=0) (op_access=0) (store_exists_probe=0) (committer_commits_created=0) (action_file_opened=39) (files_delete_rejected=0) (store_exists_probe.failures=0) (directories_deleted=0));
gauges=((stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=45) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0));
minimums=((op_mkdirs.min=20) (op_is_directory.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_delegation_token.min=-1) (op_create.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.min=-1) (op_create.min=6) (delegation_tokens_issued.failures.min=-1) (object_list_request.min=4) (op_list_status.min=-1) (multipart_upload_list.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_delete.min=26) (action_http_get_request.min=11) (op_xattr_get_map.failures.min=-1) (action_file_opened.min=6) (op_access.failures.min=-1) (op_list_files.min=-1) (op_abort.min=-1) (op_copy_from_local_file.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (action_http_head_request.min=2) (store_exists_probe.failures.min=-1) (store_exists_probe.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.failures.min=-1) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (op_rename.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (action_executor_acquired.min=-1) (op_is_file.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_rename.min=-1) (op_is_directory.min=-1) (op_exists.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (object_list_request.failures.min=-1) (op_createfile.failures.min=-1) (committer_materialize_file.min=-1) (op_delete.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_list.min=-1) (object_bulk_delete_request.min=7) (committer_load_single_pending_file.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=70) (op_glob_status.min=-1) (op_get_file_status.min=4) (op_createfile.min=-1) (op_access.min=-1) (object_multipart_aborted.min=-1) (action_file_opened.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (delegation_tokens_issued.min=-1));
maximums=((action_executor_acquired.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_get_request.max=50) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.failures.max=-1) (object_bulk_delete_request.max=27) (op_xattr_get_named_map.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.max=4) (op_createfile.failures.max=-1) (action_file_opened.failures.max=-1) (object_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named.max=-1) (op_glob_status.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.max=-1) (delegation_tokens_issued.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.max=-1) (object_put_request.max=101) (committer_load_single_pending_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.max=-1) (action_http_head_request.max=26) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_files.max=-1) (op_is_file.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.max=5) (op_rename.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.failures.max=-1) (op_delete.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.max=26) (op_copy_from_local_file.max=-1) (op_create.failures.max=-1) (op_is_directory.failures.max=-1) (op_list_files.failures.max=-1) (op_get_delegation_token.max=-1) (op_rename.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_copy_from_local_file.failures.max=-1) (store_exists_probe.max=-1) (op_mkdirs.max=372) (op_get_file_checksum.max=-1) (committer_magic_marker_put.failures.max=-1) (op_access.max=-1) (object_delete_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_delete.max=112) (op_list_status.failures.max=-1) (op_is_file.max=-1) (committer_materialize_file.failures.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (op_abort.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_create.max=53) (stream_write_queue_duration.failures.max=-1) (op_xattr_list.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_list_request.max=233) (op_is_directory.max=-1) (object_delete_request.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.failures.max=-1));
means=((object_bulk_delete_request.mean=(samples=90, sum=1220, mean=13.5556)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=45, sum=2098, mean=46.6222)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=129, sum=674, mean=5.2248)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=45, sum=538, mean=11.9556)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=39, sum=265, mean=6.7949)) (op_mkdirs.mean=(samples=45, sum=1965, mean=43.6667)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=90, sum=3068, mean=34.0889)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=836, mean=19.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=11, mean=1.8333)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=180, sum=1862, mean=10.3444)));
}}, ClientSideEncryption=false}
2024-11-16 17:38:14,643 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://leg-bucket/test
2024-11-16 17:38:14,643 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,644 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,645 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=254&ts=1731778694643
2024-11-16 17:38:14,653 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:38:14,654 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,654 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:38:14,655 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,655 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,655 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=254&ts=1731778694643
2024-11-16 17:38:14,663 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test
2024-11-16 17:38:14,663 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:38:14,664 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:38:14,664 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:38:14,664 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000211&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=254&ts=1731778694643
2024-11-16 17:38:14,688 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:38:14,688 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag d41d8cd98f00b204e9800998ecf8427e, version null
2024-11-16 17:38:14,689 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.026s
2024-11-16 17:38:14,689 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:38:14,690 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,690 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,690 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,691 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,691 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000212 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000212&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=254&ts=1731778694690
2024-11-16 17:38:14,697 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:38:14,698 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,698 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:38:14,699 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5445850516142122651.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:38:14,700 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=leg-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5445850516142122651.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (op_hflush=0) (object_put_request=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (object_put_request.failures=0) (object_multipart_aborted=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (op_abort=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5445850516142122651.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,700 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,700 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:38:14,700 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5445850516142122651.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:38:14,701 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:38:14,701 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:38:14,701 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:38:14,701 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:38:14,702 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000212 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000212&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=41&ts=1731778694690
2024-11-16 17:38:14,727 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:38:14,728 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:38:14,728 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.027s
2024-11-16 17:38:14,728 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5445850516142122651.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:38:14,728 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5445850516142122651.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,728 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5445850516142122651.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:38:14,728 [s3a-transfer-leg-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:38:14,729 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=leg-bucket}
2024-11-16 17:38:14,730 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (op_hflush=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_total_data=65536) (op_hsync=0) (stream_write_bytes=65536) (object_put_request=1) (op_abort=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=26) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=26) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1));
means=((object_put_request.mean=(samples=1, sum=26, mean=26.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:38:14,731 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:38:14,732 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:38:14,732 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test/vectored_file.txt
2024-11-16 17:38:14,732 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:38:14,733 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000213 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000213&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=254&ts=1731778694732
2024-11-16 17:38:14,736 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:38:14,737 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://leg-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:38:14,737 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://leg-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,738 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:38:14,738 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:38:14,739 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:38:14,739 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://leg-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:38:14,739 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:14,740 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:38:14,740 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:38:14,740 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000213 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&rg=500-899&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000213&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=43&ts=1731778694732
2024-11-16 17:38:14,751 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:38:14,752 [s3a-transfer-leg-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://leg-bucket/test/vectored_file.txt 
2024-11-16 17:38:14,753 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_vectored_combined_ranges=1) (stream_read_block_read.failures=0) (stream_read_seek_operations=0) (stream_read_total_bytes=400) (stream_read_seek_backward_operations=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_seek_bytes_skipped=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_policy_changed=1) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_fully_operations=0) (stream_read_unbuffered=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=3) (action_http_get_request=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=400) (stream_read_prefetch_operations=0) (stream_read_exceptions=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=5) (action_executor_acquired.min=-1) (action_http_get_request.min=11) (action_file_opened.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.max=11) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=5) (action_file_opened.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=11, mean=11.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:38:14,754 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://leg-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:38:14,754 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://leg-bucket/test
2024-11-16 17:38:14,754 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:38:14,755 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=254&ts=1731778694754
2024-11-16 17:38:14,758 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:38:14,758 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,758 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [254] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=254&ts=1731778694754
2024-11-16 17:38:14,764 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:14,764 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:38:14,764 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:38:14,764 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:38:14,764 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:38:14,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://leg-bucket/test - recursive true
2024-11-16 17:38:14,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:38:14,764 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://leg-bucket/test
2024-11-16 17:38:14,764 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:38:14,765 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:38:14,765 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://leg-bucket/test, true)
2024-11-16 17:38:14,765 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:38:14,765 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:38:14,765 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List leg-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:38:14,766 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:38:14,766 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [255] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=255&ts=1731778694754
2024-11-16 17:38:14,771 [s3a-transfer-leg-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:38:14,771 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:38:14,772 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test: test/ size=0
2024-11-16 17:38:14,772 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:38:14,772 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://leg-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:38:14,772 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://leg-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778694723; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=null versionId=null
2024-11-16 17:38:14,772 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:38:14,772 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:38:14,772 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:38:14,772 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:38:14,772 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:38:14,772 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:38:14,772 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:38:14,772 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:38:14,772 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,772 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,772 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:38:14,773 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,773 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=44&ts=1731778694754
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:38:14,782 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] 504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214/?op=op_delete&p1=s3a://leg-bucket/test&pr=runner&ps=1a916462-f153-4b80-ad61-fa17d7d08e1b&ks=1&id=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1-00000214&t0=254&fs=504cae5d-ca4d-4faa-85dd-8e39f1b76dc1&t1=44&ts=1731778694754
2024-11-16 17:38:14,791 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:38:14,791 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:38:14,791 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:38:14,791 [s3a-transfer-leg-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:38:14,791 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:38:14,791 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:38:14,791 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://leg-bucket/test" completed; deleted 2 objects
2024-11-16 17:38:14,791 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:38:14,811 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://leg-bucket is closed
2024-11-16 17:38:14,830 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:38:14,833 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:14,833 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@7b40ad9c[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 58]. Waiting max 30 SECONDS
2024-11-16 17:38:14,833 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:38:14,833 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics1-leg-bucket
2024-11-16 17:38:14,835 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(733)) - Shutting down metrics publisher
2024-11-16 17:38:14,836 [shutdown-hook-0] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:38:14,836 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:14,836 [shutdown-hook-0] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@49508402] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:38:14,838 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_list_located_status=0) (stream_write_block_uploads=46) (multipart_instantiated=0) (stream_write_total_time=0) (stream_read_operations=6) (op_get_file_status=2) (action_http_head_request.failures=0) (committer_tasks_completed=0) (multipart_upload_part_put=0) (op_is_file=0) (committer_commits_reverted=0) (op_hflush=0) (files_delete_rejected=0) (op_is_directory.failures=0) (fake_directories_deleted=46) (committer_magic_marker_put=0) (op_list_files.failures=0) (multipart_upload_list=0) (op_get_file_checksum=0) (audit_span_creation=181) (stream_read_seek_bytes_discarded=0) (committer_stage_file_upload.failures=0) (op_xattr_get_named=0) (stream_read_bytes=13326) (op_list_files=0) (op_create=46) (stream_read_exceptions=0) (stream_read_seek_policy_changed=42) (stream_read_vectored_read_bytes_discarded=49046) (stream_read_seek_bytes_skipped=0) (op_mkdirs.failures=0) (op_rename=0) (store_exists_probe.failures=0) (op_xattr_list.failures=0) (stream_read_closed=6) (stream_write_exceptions=0) (audit_failure=0) (object_continue_list_request.failures=0) (op_get_file_status.failures=0) (multipart_upload_aborted=0) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (object_delete_objects=92) (stream_read_bytes_discarded_in_close=392016) (op_xattr_get_named_map=0) (op_copy_from_local_file=0) (committer_bytes_committed=0) (object_delete_request=0) (op_get_content_summary.failures=0) (stream_read_operations_incomplete=0) (action_file_opened=40) (op_glob_status.failures=0) (multipart_upload_started=0) (op_abort=0) (op_exists=0) (object_copy_requests=0) (op_copy_from_local_file.failures=0) (op_exists.failures=0) (op_glob_status=0) (object_put_request_completed=92) (files_deleted=46) (object_multipart_aborted.failures=0) (op_xattr_get_map.failures=0) (op_rename.failures=0) (committer_commits_created=0) (op_get_file_checksum.failures=0) (committer_materialize_file=0) (action_executor_acquired.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_access.failures=0) (committer_commits_aborted=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=42) (stream_read_unbuffered=2) (committer_stage_file_upload=0) (audit_access_check_failure=0) (delegation_tokens_issued.failures=0) (op_xattr_list=0) (op_openfile=0) (op_create_non_recursive=0) (op_open=40) (delegation_tokens_issued=0) (stream_write_bytes=3014656) (store_io_throttled=0) (stream_read_remote_stream_drain.failures=0) (directories_deleted=0) (stream_read_opened=6) (object_put_request=92) (multipart_upload_part_put_bytes=0) (stream_read_vectored_incoming_ranges=100) (files_copied=0) (committer_load_single_pending_file=0) (stream_read_close_operations=40) (files_copied_bytes=0) (stream_write_total_data=6029312) (stream_read_vectored_operations=32) (fake_directories_created=0) (op_is_directory=0) (action_http_head_request=132) (files_created=46) (object_put_request.failures=0) (committer_jobs_completed=0) (object_select_requests=0) (committer_load_single_pending_file.failures=0) (stream_write_block_uploads_aborted=0) (action_http_get_request=45) (object_delete_request.failures=0) (op_xattr_get_map=0) (object_metadata_request=132) (store_io_retry=0) (op_createfile=0) (op_list_status.failures=0) (stream_read_remote_stream_drain=6) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_aborted=0) (committer_commits_completed=0) (stream_read_remote_stream_aborted.failures=0) (audit_request_execution=545) (store_io_request=545) (op_delete.failures=0) (ignored_errors=0) (object_list_request.failures=0) (object_continue_list_request=0) (committer_commit_job=0) (directories_created=46) (op_xattr_get_named_map.failures=0) (stream_read_seek_operations=0) (stream_read_total_bytes=405342) (op_createfile.failures=0) (committer_magic_marker_put.failures=0) (op_delete=46) (object_bulk_delete_request=92) (op_access=0) (action_file_opened.failures=0) (object_bulk_delete_request.failures=0) (op_hsync=0) (committer_materialize_file.failures=0) (committer_bytes_uploaded=0) (multipart_upload_list.failures=0) (stream_aborted=0) (stream_write_queue_duration=0) (stream_read_seek_forward_operations=0) (store_exists_probe=0) (op_get_content_summary=0) (object_list_request=184) (op_xattr_get_named.failures=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_bytes=3014656) (op_list_status=0) (committer_jobs_failed=0) (action_http_get_request.failures=0) (stream_write_queue_duration.failures=0) (stream_read_fully_operations=2) (committer_commit_job.failures=0) (object_multipart_initiated.failures=0) (op_get_delegation_token.failures=0) (multipart_upload_completed=0) (committer_magic_files_created=0) (op_is_file.failures=0) (object_multipart_aborted=0) (op_get_delegation_token=0) (committer_commits.failures=0) (object_multipart_initiated=0) (op_mkdirs=46) (op_create.failures=0) (committer_tasks_failed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_write_block_uploads_pending=46) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_file_status.min=4) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.min=-1) (object_list_request.failures.min=-1) (op_rename.failures.min=-1) (stream_write_queue_duration.min=-1) (action_file_opened.failures.min=-1) (op_create.min=6) (op_get_delegation_token.min=-1) (op_xattr_get_named.min=-1) (op_mkdirs.min=20) (store_exists_probe.min=-1) (op_xattr_get_named.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.min=-1) (op_xattr_get_map.failures.min=-1) (op_delete.failures.min=-1) (op_access.failures.min=-1) (action_http_get_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.min=1) (object_multipart_aborted.min=-1) (object_bulk_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.min=-1) (op_is_file.min=-1) (op_is_file.failures.min=-1) (op_list_status.min=-1) (op_access.min=-1) (op_create.failures.min=-1) (action_http_head_request.min=2) (object_delete_request.failures.min=-1) (action_file_opened.min=5) (op_xattr_list.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.min=-1) (committer_stage_file_upload.min=-1) (op_list_files.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_abort.min=-1) (op_xattr_get_map.min=-1) (delegation_tokens_issued.min=-1) (multipart_upload_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.failures.min=-1) (committer_magic_marker_put.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_glob_status.min=-1) (op_get_content_summary.failures.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.min=-1) (op_exists.failures.min=-1) (object_put_request.min=26) (object_multipart_initiated.min=-1) (op_xattr_get_named_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.min=-1) (object_bulk_delete_request.min=7) (op_delete.min=26) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.min=11) (stream_read_remote_stream_aborted.min=-1) (object_list_request.min=4) (op_xattr_get_named_map.failures.min=-1));
maximums=((stream_write_queue_duration.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.failures.max=-1) (op_exists.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.max=-1) (op_delete.failures.max=-1) (action_http_head_request.max=26) (op_abort.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_checksum.max=-1) (op_access.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_rename.max=-1) (stream_write_queue_duration.failures.max=-1) (op_mkdirs.max=372) (committer_load_single_pending_file.failures.max=-1) (object_put_request.max=101) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=53) (op_mkdirs.failures.max=-1) (object_list_request.max=233) (store_exists_probe.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (delegation_tokens_issued.max=-1) (op_list_status.max=-1) (object_multipart_initiated.max=-1) (op_xattr_list.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_status.max=5) (action_http_get_request.max=50) (stream_read_remote_stream_drain.max=4) (op_copy_from_local_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_delete_request.max=-1) (op_delete.max=112) (object_list_request.failures.max=-1) (op_createfile.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (op_list_files.max=-1) (op_xattr_get_named.max=-1) (action_executor_acquired.failures.max=-1) (object_bulk_delete_request.max=27) (object_multipart_initiated.failures.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.failures.max=-1) (object_put_request.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.max=-1) (op_abort.failures.max=-1) (op_get_content_summary.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (op_create.failures.max=-1) (op_glob_status.max=-1) (action_file_opened.max=26) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (committer_materialize_file.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named_map.max=-1));
means=((op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=184, sum=1886, mean=10.2500)) (op_delete.mean=(samples=46, sum=2125, mean=46.1957)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=9, mean=4.5000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=45, sum=847, mean=18.8222)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=46, sum=547, mean=11.8913)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=11, mean=1.8333)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=40, sum=270, mean=6.7500)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=92, sum=3118, mean=33.8913)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=92, sum=1238, mean=13.4565)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=46, sum=2011, mean=43.7174)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=132, sum=690, mean=5.2273)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

