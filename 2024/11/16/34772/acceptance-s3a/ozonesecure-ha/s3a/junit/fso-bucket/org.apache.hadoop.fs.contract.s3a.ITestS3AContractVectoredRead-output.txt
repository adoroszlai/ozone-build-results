2024-11-16 17:41:55,181 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:55,540 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:41:55,546 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:41:55,562 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:55,565 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:55,635 [setup] WARN  impl.MetricsConfig (MetricsConfig.java:loadFirst(136)) - Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties
2024-11-16 17:41:55,771 [setup] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:getMetricsSystem(250)) - Metrics system inited org.apache.hadoop.metrics2.impl.MetricsSystemImpl@3bf21af4
2024-11-16 17:41:55,779 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:41:55,780 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:41:55,782 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:41:55,783 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:41:55,784 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:41:55,785 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:41:55,786 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:41:55,790 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:41:55,800 [setup] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:41:55,807 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:41:55,831 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:55,833 [setup] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:55,835 [setup] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:41:55,836 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:41:55,837 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:41:55,847 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:41:55,848 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:41:55,852 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:41:55,853 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:41:56,059 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad]
2024-11-16 17:41:56,059 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad]
2024-11-16 17:41:56,071 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:41:56,229 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:41:56,230 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:41:56,230 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:41:56,230 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:41:56,231 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:41:56,234 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:41:56,235 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:56,306 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:41:56,309 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:41:56,336 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:41:56,338 [setup] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:41:56,546 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:41:56,547 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:41:56,549 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:41:56,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:41:56,557 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:41:56,558 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:41:56,562 [setup] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:41:56,562 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:41:56,564 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:41:56,564 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:41:56,568 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:41:56,570 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:41:56,572 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:41:56,573 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:41:56,574 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:41:56,575 [setup] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:41:56,610 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad], delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_vectored_operations=0) (store_exists_probe=0) (committer_commits_completed=0) (delegation_tokens_issued.failures=0) (stream_read_opened=0) (stream_read_seek_backward_operations=0) (stream_write_block_uploads=0) (multipart_upload_completed=0) (op_is_directory.failures=0) (multipart_upload_abort_under_path_invoked=0) (audit_span_creation=1) (stream_read_remote_stream_drain.failures=0) (multipart_upload_part_put_bytes=0) (store_io_throttled=0) (object_put_bytes=0) (stream_read_fully_operations=0) (multipart_upload_aborted=0) (stream_read_vectored_read_bytes_discarded=0) (object_select_requests=0) (op_rename=0) (action_executor_acquired.failures=0) (files_copied=0) (op_rename.failures=0) (op_exists=0) (stream_read_version_mismatches=0) (stream_write_block_uploads_aborted=0) (op_glob_status.failures=0) (committer_load_single_pending_file=0) (multipart_upload_list.failures=0) (store_io_request=0) (stream_read_seek_operations=0) (object_bulk_delete_request.failures=0) (committer_bytes_uploaded=0) (multipart_upload_part_put=0) (op_hflush=0) (action_http_get_request.failures=0) (object_delete_request=0) (committer_materialize_file=0) (stream_write_queue_duration=0) (object_bulk_delete_request=0) (directories_created=0) (stream_read_seek_bytes_skipped=0) (object_multipart_aborted=0) (op_is_file=0) (op_createfile=0) (op_copy_from_local_file=0) (committer_load_single_pending_file.failures=0) (stream_write_queue_duration.failures=0) (ignored_errors=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened=0) (committer_magic_marker_put.failures=0) (op_xattr_list.failures=0) (stream_read_seek_policy_changed=0) (op_access=0) (op_get_file_checksum.failures=0) (stream_read_closed=0) (op_list_located_status=0) (fake_directories_deleted=0) (op_create.failures=0) (stream_read_operations_incomplete=0) (op_xattr_get_named_map=0) (fake_directories_created=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=0) (action_http_head_request=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_write_exceptions_completing_upload=0) (committer_materialize_file.failures=0) (delegation_tokens_issued=0) (stream_write_total_time=0) (op_list_status=0) (committer_bytes_committed=0) (op_list_status.failures=0) (object_metadata_request=0) (object_multipart_initiated.failures=0) (committer_magic_files_created=0) (op_list_files=0) (stream_read_remote_stream_aborted.failures=0) (object_put_request.failures=0) (object_multipart_initiated=0) (op_mkdirs=0) (directories_deleted=0) (op_hsync=0) (op_abort.failures=0) (op_xattr_list=0) (multipart_instantiated=0) (op_exists.failures=0) (committer_commits_aborted=0) (stream_write_exceptions=0) (object_put_request=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (audit_access_check_failure=0) (committer_commit_job=0) (audit_request_execution=0) (op_get_delegation_token.failures=0) (op_open=0) (object_list_request=0) (op_access.failures=0) (op_get_file_status.failures=0) (op_glob_status=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload.failures=0) (files_delete_rejected=0) (op_get_content_summary=0) (op_create=0) (op_list_files.failures=0) (op_get_delegation_token=0) (action_http_get_request=0) (files_deleted=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_write_bytes=0) (op_createfile.failures=0) (committer_commit_job.failures=0) (committer_jobs_completed=0) (multipart_upload_list=0) (committer_tasks_failed=0) (committer_commits_reverted=0) (op_get_file_checksum=0) (op_xattr_get_named_map.failures=0) (committer_tasks_completed=0) (committer_commits.failures=0) (committer_jobs_failed=0) (op_create_non_recursive=0) (audit_failure=0) (committer_commits_created=0) (stream_read_total_bytes=0) (op_is_directory=0) (op_xattr_get_map=0) (op_get_content_summary.failures=0) (multipart_upload_started=0) (op_openfile=0) (object_delete_objects=0) (stream_read_bytes=0) (stream_read_seek_forward_operations=0) (op_is_file.failures=0) (op_abort=0) (object_copy_requests=0) (op_delete=0) (object_continue_list_request=0) (files_created=0) (op_xattr_get_named.failures=0) (stream_read_vectored_combined_ranges=0) (object_continue_list_request.failures=0) (object_delete_request.failures=0) (op_get_file_status=0) (stream_read_close_operations=0) (action_http_head_request.failures=0) (op_xattr_get_named=0) (stream_write_block_uploads_committed=0) (op_copy_from_local_file.failures=0) (store_io_retry=0) (store_exists_probe.failures=0) (op_mkdirs.failures=0) (op_xattr_get_map.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (object_put_request_completed=0) (op_delete.failures=0) (object_list_request.failures=0) (committer_stage_file_upload=0) (action_file_opened.failures=0) (files_copied_bytes=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0));
minimums=((committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_glob_status.min=-1) (object_put_request.min=-1) (op_rename.min=-1) (op_get_content_summary.min=-1) (object_delete_request.min=-1) (op_mkdirs.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_access.min=-1) (committer_materialize_file.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (action_http_get_request.failures.min=-1) (object_list_request.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.min=-1) (op_xattr_get_named_map.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_list.min=-1) (multipart_upload_list.failures.min=-1) (op_list_files.min=-1) (op_rename.failures.min=-1) (op_get_file_status.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.min=-1) (delegation_tokens_issued.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.min=-1) (op_delete.min=-1) (object_bulk_delete_request.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.min=-1) (stream_write_queue_duration.min=-1) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_initiated.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_commit_job.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.min=-1) (store_exists_probe.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (op_abort.min=-1) (op_list_files.failures.min=-1) (op_createfile.min=-1) (op_mkdirs.min=-1) (op_get_file_checksum.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=-1) (multipart_upload_list.min=-1) (op_create.min=-1) (object_multipart_initiated.failures.min=-1) (op_exists.min=-1));
maximums=((op_createfile.max=-1) (op_rename.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.max=-1) (op_copy_from_local_file.failures.max=-1) (op_delete.max=-1) (op_get_file_checksum.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.max=-1) (op_glob_status.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.max=-1) (op_list_files.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_stage_file_upload.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.failures.max=-1) (op_glob_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_mkdirs.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_list.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.max=-1) (object_continue_list_request.max=-1) (op_is_file.failures.max=-1) (object_delete_request.max=-1) (op_is_file.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_create.failures.max=-1) (op_is_directory.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_get_request.max=-1) (object_delete_request.failures.max=-1) (object_bulk_delete_request.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_map.max=-1) (op_exists.max=-1) (committer_materialize_file.max=-1) (op_access.max=-1) (object_put_request.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_head_request.max=-1) (op_create.max=-1) (multipart_upload_list.max=-1) (op_is_directory.failures.max=-1) (op_get_file_status.max=-1) (op_delete.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_list_status.max=-1) (object_list_request.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_commit_job.max=-1));
means=((op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:56,620 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:56,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:56,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:56,625 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:56,626 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:56,628 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=16&ts=1731778916619
2024-11-16 17:41:56,640 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:41:56,659 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.019s
2024-11-16 17:41:56,660 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:41:56,661 [setup] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:41:56,813 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.186s
2024-11-16 17:41:56,814 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:56,814 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:56,815 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:56,817 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:56,818 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=16&ts=1731778916619
2024-11-16 17:41:56,830 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:56,832 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:56,840 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:56,840 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:56,841 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000005&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=16&ts=1731778916619
2024-11-16 17:41:56,917 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:56,918 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:56,918 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.086s
2024-11-16 17:41:56,919 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:56,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:56,925 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:56,925 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:56,926 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:56,927 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000006 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000006&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=16&ts=1731778916922
2024-11-16 17:41:56,941 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:41:56,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:56,949 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:56,984 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10095867086101231084.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:56,990 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10095867086101231084.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (object_put_request=0) (stream_write_block_uploads=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (op_hflush=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (stream_write_total_data=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (multipart_upload_completed=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10095867086101231084.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:56,992 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:56,992 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:56,993 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10095867086101231084.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:57,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:57,006 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:57,006 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:57,007 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:57,007 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000006 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000006/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000006&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=31&ts=1731778916922
2024-11-16 17:41:57,078 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:57,078 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:57,079 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.073s
2024-11-16 17:41:57,081 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10095867086101231084.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:57,082 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10095867086101231084.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,083 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10095867086101231084.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,083 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:57,085 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:57,098 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (stream_write_total_data=65536) (stream_write_block_uploads=1) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (op_hflush=0) (stream_write_total_time=0) (op_abort.failures=0) (op_abort=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (object_put_request.failures=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (object_put_request=1) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=65) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_put_request.max=65) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=65, mean=65.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:57,104 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:57,106 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:41:57,106 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:41:57,109 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:57,110 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:57,113 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:41:57,114 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:41:57,114 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:41:57,114 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:41:57,114 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:41:57,115 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:41:57,115 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:41:57,115 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:41:57,115 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:41:57,115 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:41:57,116 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='21dfc7b5-83a3-401f-80a5-e4aed89a25c5', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:57,116 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='21dfc7b5-83a3-401f-80a5-e4aed89a25c5', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:57,116 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='21dfc7b5-83a3-401f-80a5-e4aed89a25c5', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:41:57,117 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:41:57,117 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:41:57,117 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:41:57,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:41:57,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:41:57,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:41:57,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f35c911]
2024-11-16 17:41:57,118 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f35c911]
2024-11-16 17:41:57,119 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:41:57,119 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:41:57,119 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:41:57,120 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:41:57,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:41:57,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:41:57,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:41:57,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:57,121 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:41:57,122 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:41:57,123 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:41:57,123 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:41:57,125 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:41:57,126 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:41:57,127 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:41:57,127 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:41:57,129 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:41:57,130 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:41:57,130 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:41:57,130 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:41:57,131 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:41:57,131 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:41:57,131 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:41:57,132 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:41:57,132 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:41:57,133 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:41:57,133 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:41:57,133 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:41:57,140 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:57,140 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,140 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:57,141 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] 21dfc7b5-83a3-401f-80a5-e4aed89a25c5-00000009 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/21dfc7b5-83a3-401f-80a5-e4aed89a25c5-00000009/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=21dfc7b5-83a3-401f-80a5-e4aed89a25c5-00000009&t0=16&fs=21dfc7b5-83a3-401f-80a5-e4aed89a25c5&t1=16&ts=1731778917139
2024-11-16 17:41:57,141 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:41:57,142 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:41:57,142 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:41:57,142 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:41:57,149 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:57,151 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:57,154 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:57,194 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_bytes=0) (stream_read_block_acquire_read=0) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_aborted=0) (action_file_opened=1) (stream_read_closed=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_opened=0) (stream_aborted=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=0) (stream_read_seek_policy_changed=1) (stream_read_block_read.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_close_operations=1) (action_executor_acquired=0) (stream_read_total_bytes=0) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_prefetch_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=0) (stream_read_vectored_operations=0) (action_executor_acquired.failures=0) (stream_read_unbuffered=0) (stream_read_vectored_incoming_ranges=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.min=10) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=10) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:57,199 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:41:57,201 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:41:57,202 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:57,203 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@34595ad0[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:41:57,203 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:57,204 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics2-fso-bucket
2024-11-16 17:41:57,204 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:41:57,205 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f35c911] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:57,206 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@6f35c911] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:57,214 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((fake_directories_deleted=0) (object_continue_list_request.failures=0) (op_abort=0) (stream_read_remote_stream_aborted=0) (multipart_instantiated=0) (object_bulk_delete_request.failures=0) (files_created=0) (files_copied_bytes=0) (op_xattr_get_map.failures=0) (op_open=1) (stream_aborted=0) (stream_write_queue_duration=0) (multipart_upload_abort_under_path_invoked=0) (op_hsync=0) (committer_magic_files_created=0) (op_xattr_list.failures=0) (stream_read_closed=0) (op_create=0) (object_select_requests=0) (op_mkdirs=0) (op_list_status.failures=0) (object_put_request.failures=0) (object_list_request=0) (action_http_head_request.failures=0) (stream_write_bytes=0) (stream_read_seek_backward_operations=0) (committer_jobs_failed=0) (op_hflush=0) (committer_commits_reverted=0) (op_xattr_get_named.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain.failures=0) (op_list_files.failures=0) (op_glob_status.failures=0) (multipart_upload_aborted=0) (stream_write_block_uploads=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_abort=0) (op_is_file.failures=0) (stream_read_unbuffered=0) (store_exists_probe.failures=0) (committer_magic_marker_put.failures=0) (committer_tasks_completed=0) (stream_read_vectored_combined_ranges=0) (op_get_file_status=0) (op_is_directory.failures=0) (op_access.failures=0) (committer_stage_file_upload.failures=0) (op_openfile=0) (stream_read_seek_policy_changed=1) (op_create_non_recursive=0) (delegation_tokens_issued=0) (stream_write_block_uploads_aborted=0) (action_http_get_request.failures=0) (op_xattr_list=0) (committer_jobs_completed=0) (ignored_errors=0) (committer_commits_aborted=0) (stream_write_exceptions_completing_upload=0) (object_copy_requests=0) (object_metadata_request=1) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_started=0) (multipart_upload_part_put_bytes=0) (audit_access_check_failure=0) (audit_request_execution=1) (object_multipart_aborted=0) (files_copied=0) (stream_read_seek_bytes_discarded=0) (committer_commits_created=0) (committer_bytes_committed=0) (object_continue_list_request=0) (store_io_request=1) (op_rename.failures=0) (stream_read_operations_incomplete=0) (op_exists.failures=0) (stream_read_vectored_incoming_ranges=0) (op_xattr_get_named=0) (action_file_opened=1) (delegation_tokens_issued.failures=0) (object_put_request_completed=0) (committer_commit_job=0) (object_put_bytes=0) (op_exists=0) (op_xattr_get_map=0) (committer_commits_completed=0) (op_copy_from_local_file=0) (stream_read_bytes=0) (op_rename=0) (action_http_head_request=1) (committer_commits.failures=0) (op_createfile=0) (directories_deleted=0) (op_get_content_summary=0) (stream_read_version_mismatches=0) (op_delete.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_get_delegation_token.failures=0) (committer_load_single_pending_file=0) (audit_span_creation=2) (committer_materialize_file=0) (stream_read_total_bytes=0) (committer_commit_job.failures=0) (op_glob_status=0) (stream_write_total_data=0) (multipart_upload_list.failures=0) (audit_failure=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (committer_materialize_file.failures=0) (store_io_throttled=0) (op_createfile.failures=0) (op_list_status=0) (op_is_file=0) (stream_write_block_uploads_committed=0) (stream_read_fully_operations=0) (action_http_get_request=0) (committer_bytes_uploaded=0) (op_get_file_checksum.failures=0) (op_access=0) (committer_stage_file_upload=0) (op_xattr_get_named_map.failures=0) (object_multipart_initiated=0) (directories_created=0) (stream_read_remote_stream_drain=0) (committer_load_single_pending_file.failures=0) (op_create.failures=0) (committer_tasks_failed=0) (object_multipart_aborted.failures=0) (object_bulk_delete_request=0) (op_xattr_get_named_map=0) (store_exists_probe=0) (action_executor_acquired.failures=0) (op_get_content_summary.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (op_is_directory=0) (stream_read_operations=0) (op_list_located_status=0) (stream_read_seek_forward_operations=0) (object_multipart_initiated.failures=0) (stream_read_close_operations=1) (stream_write_total_time=0) (object_delete_request.failures=0) (store_io_retry=0) (stream_write_queue_duration.failures=0) (object_delete_request=0) (files_deleted=0) (action_file_opened.failures=0) (op_delete=0) (stream_read_vectored_operations=0) (multipart_upload_list=0) (op_abort.failures=0) (stream_read_opened=0) (op_get_file_status.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_write_exceptions=0) (op_get_delegation_token=0) (object_put_request=0) (files_delete_rejected=0) (fake_directories_created=0) (op_mkdirs.failures=0) (object_delete_objects=0) (object_list_request.failures=0) (op_copy_from_local_file.failures=0) (op_list_files=0) (stream_read_vectored_read_bytes_discarded=0) (op_get_file_checksum=0) (stream_read_seek_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((op_get_file_status.failures.min=-1) (op_delete.min=-1) (op_get_file_checksum.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_map.failures.min=-1) (op_access.min=-1) (multipart_upload_list.min=-1) (op_glob_status.failures.min=-1) (action_file_opened.min=10) (op_xattr_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (op_list_files.failures.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_drain.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (op_rename.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_get_file_status.min=-1) (object_put_request.failures.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.min=-1) (op_create.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_list.failures.min=-1) (action_http_get_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_create.min=-1) (committer_materialize_file.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_delegation_token.min=-1) (op_is_file.min=-1) (store_exists_probe.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_status.failures.min=-1) (op_delete.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (op_copy_from_local_file.failures.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.min=-1) (op_mkdirs.min=-1) (op_xattr_get_named.min=-1) (op_is_directory.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_list_request.min=-1) (object_put_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_glob_status.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.failures.min=-1) (delegation_tokens_issued.min=-1) (object_delete_request.min=-1) (object_bulk_delete_request.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.min=8) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_list.max=-1) (object_multipart_initiated.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.failures.max=-1) (object_put_request.max=-1) (op_mkdirs.max=-1) (op_delete.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.max=-1) (object_list_request.failures.max=-1) (op_rename.max=-1) (op_is_file.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_list_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.failures.max=-1) (op_exists.failures.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_named.max=-1) (op_create.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_status.max=-1) (delegation_tokens_issued.max=-1) (op_list_files.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_head_request.max=8) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.max=-1) (op_createfile.max=-1) (op_delete.max=-1) (store_exists_probe.failures.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_content_summary.failures.max=-1) (op_is_directory.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_file_status.max=-1) (op_access.failures.max=-1) (object_bulk_delete_request.max=-1) (store_exists_probe.max=-1) (committer_materialize_file.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_list.max=-1) (op_list_files.failures.max=-1) (op_xattr_list.failures.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_file_opened.max=10) (object_bulk_delete_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_delete_request.max=-1) (op_get_delegation_token.max=-1) (op_exists.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_glob_status.max=-1) (op_create.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.max=-1) (committer_materialize_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (action_http_get_request.max=-1) (op_abort.failures.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_drain.max=-1) (op_get_file_status.failures.max=-1));
means=((op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=8, mean=8.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:57,217 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:57,218 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,218 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:57,219 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=16&ts=1731778917215
2024-11-16 17:41:57,226 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,226 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,227 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [16] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=16&ts=1731778917215
2024-11-16 17:41:57,251 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.025s
2024-11-16 17:41:57,252 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:57,252 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:57,252 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:57,253 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:57,255 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:57,255 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:57,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:57,256 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:57,257 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:57,257 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:57,258 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:57,260 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:57,260 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:57,261 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,263 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [35] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=35&ts=1731778917215
2024-11-16 17:41:57,277 [s3a-transfer-fso-bucket-unbounded-pool2-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:41:57,278 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.018s
2024-11-16 17:41:57,279 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:57,279 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:57,280 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:57,281 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778917060; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:57,281 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:57,284 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:57,286 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:57,288 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:57,289 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:57,290 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:57,291 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:57,293 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:57,293 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:57,294 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:57,294 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:57,295 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:57,298 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=36&ts=1731778917215
2024-11-16 17:41:57,327 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.031s
2024-11-16 17:41:57,327 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.034s
2024-11-16 17:41:57,327 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.035s
2024-11-16 17:41:57,328 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:57,328 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:57,328 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:57,328 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:57,328 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:57,328 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:57,329 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000010&t0=16&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=36&ts=1731778917215
2024-11-16 17:41:57,339 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:41:57,340 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:41:57,341 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:41:57,341 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.051s
2024-11-16 17:41:57,342 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.052s
2024-11-16 17:41:57,342 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.086s
2024-11-16 17:41:57,342 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:57,342 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:57,354 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:57,398 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_initiated=0) (op_xattr_get_map=0) (stream_read_seek_policy_changed=0) (files_deleted=1) (op_hsync=0) (op_is_directory=0) (committer_bytes_uploaded=0) (object_delete_request.failures=0) (committer_commits_reverted=0) (audit_request_execution=10) (stream_read_operations=0) (delegation_tokens_issued=0) (op_copy_from_local_file=0) (op_get_content_summary=0) (committer_commit_job=0) (op_mkdirs=1) (stream_read_version_mismatches=0) (op_create.failures=0) (op_delete=1) (object_put_request=2) (multipart_upload_started=0) (fake_directories_created=0) (op_xattr_get_named=0) (stream_read_seek_bytes_discarded=0) (stream_write_queue_duration.failures=0) (committer_jobs_failed=0) (op_list_files=0) (op_get_delegation_token.failures=0) (op_glob_status=0) (stream_write_bytes=65536) (op_hflush=0) (files_delete_rejected=0) (object_delete_objects=2) (op_open=0) (committer_load_single_pending_file.failures=0) (op_get_delegation_token=0) (action_file_opened=0) (stream_write_exceptions_completing_upload=0) (op_is_directory.failures=0) (object_delete_request=0) (stream_read_opened=0) (stream_read_close_operations=0) (op_create_non_recursive=0) (audit_access_check_failure=0) (op_list_files.failures=0) (op_glob_status.failures=0) (stream_aborted=0) (op_access.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_named_map.failures=0) (multipart_upload_completed=0) (stream_read_closed=0) (op_list_located_status=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (object_put_request.failures=0) (multipart_upload_list=0) (op_xattr_get_named.failures=0) (op_xattr_get_map.failures=0) (committer_commits.failures=0) (multipart_upload_list.failures=0) (files_copied=0) (stream_read_vectored_operations=0) (object_multipart_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_write_queue_duration=0) (op_xattr_get_named_map=0) (multipart_upload_part_put_bytes=0) (stream_read_operations_incomplete=0) (stream_read_bytes=0) (op_abort=0) (audit_failure=0) (committer_tasks_failed=0) (stream_write_block_uploads_committed=0) (committer_stage_file_upload.failures=0) (op_xattr_list.failures=0) (op_createfile=0) (fake_directories_deleted=1) (object_put_request_completed=2) (store_exists_probe.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_aborted.failures=0) (committer_tasks_completed=0) (op_list_status.failures=0) (op_mkdirs.failures=0) (op_abort.failures=0) (op_xattr_list=0) (store_io_retry=0) (multipart_instantiated=0) (object_select_requests=0) (object_continue_list_request.failures=0) (object_put_bytes=65536) (ignored_errors=0) (store_io_throttled=0) (committer_stage_file_upload=0) (stream_write_block_uploads=1) (op_delete.failures=0) (committer_load_single_pending_file=0) (multipart_upload_abort_under_path_invoked=0) (object_bulk_delete_request.failures=0) (committer_magic_marker_put.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_is_file.failures=0) (op_list_status=0) (audit_span_creation=4) (committer_commits_aborted=0) (action_file_opened.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (stream_read_vectored_incoming_ranges=0) (action_http_head_request.failures=0) (stream_read_remote_stream_drain.failures=0) (directories_created=1) (stream_read_bytes_discarded_in_close=0) (object_list_request.failures=0) (committer_magic_files_created=0) (committer_bytes_committed=0) (op_get_content_summary.failures=0) (files_copied_bytes=0) (op_copy_from_local_file.failures=0) (object_copy_requests=0) (committer_magic_marker_put=0) (op_openfile=0) (stream_write_total_data=131072) (op_get_file_checksum.failures=0) (committer_materialize_file=0) (op_get_file_status=0) (committer_commit_job.failures=0) (stream_read_remote_stream_aborted=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (committer_jobs_completed=0) (store_exists_probe=0) (op_exists=0) (op_get_file_status.failures=0) (object_bulk_delete_request=2) (op_get_file_checksum=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (op_exists.failures=0) (stream_write_block_uploads_aborted=0) (store_io_request=10) (stream_read_total_bytes=0) (op_rename.failures=0) (delegation_tokens_issued.failures=0) (multipart_upload_aborted=0) (files_created=1) (op_access=0) (object_continue_list_request=0) (action_http_get_request.failures=0) (stream_read_fully_operations=0) (action_http_get_request=0) (committer_commits_completed=0) (action_executor_acquired=0) (op_createfile.failures=0) (directories_deleted=0) (stream_write_total_time=0) (object_multipart_aborted=0) (committer_commits_created=0) (stream_read_vectored_read_bytes_discarded=0) (object_metadata_request=2) (op_is_file=0) (action_http_head_request=2) (op_create=1) (stream_read_seek_backward_operations=0) (op_rename=0) (object_list_request=4));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=1) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0));
minimums=((committer_commit_job.min=-1) (op_delete.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_named_map.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (object_multipart_initiated.min=-1) (op_mkdirs.min=300) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_mkdirs.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (op_create.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.min=-1) (op_get_file_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_abort.failures.min=-1) (op_glob_status.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.min=-1) (op_is_directory.failures.min=-1) (op_get_file_status.min=-1) (committer_load_single_pending_file.min=-1) (op_glob_status.failures.min=-1) (action_file_opened.min=-1) (op_xattr_list.failures.min=-1) (action_http_head_request.min=7) (object_list_request.min=14) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_checksum.min=-1) (op_delete.min=87) (op_get_delegation_token.failures.min=-1) (object_delete_request.failures.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=-1) (object_bulk_delete_request.min=11) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_files.failures.min=-1) (object_put_request.min=65) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (op_is_file.min=-1) (action_executor_acquired.failures.min=-1) (op_exists.failures.min=-1) (op_access.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_createfile.failures.min=-1) (op_create.min=62) (op_list_status.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_map.min=-1) (op_rename.min=-1) (store_exists_probe.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.failures.min=-1) (op_is_file.failures.min=-1) (op_exists.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named.min=-1));
maximums=((op_get_file_status.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_http_get_request.failures.max=-1) (object_put_request.max=77) (committer_materialize_file.failures.max=-1) (multipart_upload_list.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_named.max=-1) (object_bulk_delete_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_copy_from_local_file.max=-1) (op_is_file.max=-1) (op_rename.max=-1) (action_http_head_request.max=12) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.max=-1) (action_http_get_request.max=-1) (action_file_opened.failures.max=-1) (op_list_files.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.max=-1) (op_get_file_checksum.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_file_opened.max=-1) (op_mkdirs.max=300) (op_access.max=-1) (op_create.max=62) (action_http_head_request.failures.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.max=-1) (object_list_request.failures.max=-1) (op_abort.failures.max=-1) (op_delete.failures.max=-1) (op_abort.max=-1) (op_get_file_checksum.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.failures.max=-1) (op_exists.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_status.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_content_summary.max=-1) (op_get_file_status.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.max=-1) (op_mkdirs.failures.max=-1) (object_bulk_delete_request.max=26) (object_multipart_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (object_continue_list_request.max=-1) (op_xattr_list.max=-1) (op_glob_status.max=-1) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_map.max=-1) (object_list_request.max=185) (op_createfile.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.failures.max=-1) (op_access.failures.max=-1) (op_is_directory.max=-1) (op_glob_status.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.failures.max=-1) (op_create.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_named.failures.max=-1) (op_delete.max=87) (op_createfile.max=-1) (op_list_files.failures.max=-1) (delegation_tokens_issued.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=1, sum=87, mean=87.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=1, sum=62, mean=62.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=1, sum=300, mean=300.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=2, sum=37, mean=18.5000)) (object_put_request.mean=(samples=2, sum=142, mean=71.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=4, sum=237, mean=59.2500)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=2, sum=19, mean=9.5000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:57,403 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:57,404 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:57,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,407 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,407 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,408 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=37&ts=1731778917403
2024-11-16 17:41:57,422 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:41:57,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:57,423 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:57,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:57,425 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=37&ts=1731778917403
2024-11-16 17:41:57,432 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:57,433 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:57,433 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:57,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:57,434 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000011&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=37&ts=1731778917403
2024-11-16 17:41:57,442 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:57,443 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:57,443 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:41:57,444 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:57,445 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:57,445 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,446 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,447 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,447 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000012 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000012&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=37&ts=1731778917445
2024-11-16 17:41:57,463 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:41:57,463 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,464 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:57,466 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1265642348462106279.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:57,468 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1265642348462106279.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (op_abort=0) (stream_write_total_data=0) (op_hflush=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1265642348462106279.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,469 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:57,469 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:57,470 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1265642348462106279.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:57,471 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:57,471 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:57,472 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:57,472 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:57,472 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000012 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000012/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000012&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=38&ts=1731778917445
2024-11-16 17:41:57,515 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:57,515 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:57,515 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.044s
2024-11-16 17:41:57,516 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1265642348462106279.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:57,516 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1265642348462106279.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,516 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1265642348462106279.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,516 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:57,517 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:57,519 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_put_request=1) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (op_hsync=0) (op_abort=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (stream_write_exceptions=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (op_hflush=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_put_request.min=43) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=43) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=43, mean=43.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:57,519 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:57,520 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:41:57,520 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:41:57,522 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:57,522 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:57,525 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:41:57,525 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:41:57,526 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:41:57,526 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:41:57,526 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:41:57,526 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:41:57,526 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:41:57,526 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:41:57,526 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:41:57,527 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:41:57,527 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='71199846-c90a-4212-b108-7dd57a0a22c7', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:57,528 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='71199846-c90a-4212-b108-7dd57a0a22c7', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:57,528 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='71199846-c90a-4212-b108-7dd57a0a22c7', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:41:57,528 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:41:57,528 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:41:57,530 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:41:57,530 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:41:57,530 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:41:57,531 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:41:57,531 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1e570348]
2024-11-16 17:41:57,531 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1e570348]
2024-11-16 17:41:57,531 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:41:57,531 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:41:57,532 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:41:57,532 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:41:57,532 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:41:57,532 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:41:57,532 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:41:57,533 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:57,536 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:41:57,536 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:41:57,536 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:41:57,537 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:41:57,539 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:41:57,539 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:41:57,539 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:41:57,539 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:41:57,539 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:41:57,539 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 65536
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:41:57,540 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:41:57,541 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:41:57,541 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:41:57,544 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:57,544 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,544 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:57,545 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] 71199846-c90a-4212-b108-7dd57a0a22c7-00000015 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/71199846-c90a-4212-b108-7dd57a0a22c7-00000015/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=71199846-c90a-4212-b108-7dd57a0a22c7-00000015&t0=37&fs=71199846-c90a-4212-b108-7dd57a0a22c7&t1=37&ts=1731778917544
2024-11-16 17:41:57,545 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:41:57,545 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:41:57,545 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:41:57,546 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:41:57,551 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:57,552 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:57,552 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:57,557 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_read_vectored_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_total_bytes=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_closed=0) (stream_read_bytes_discarded_in_close=0) (stream_read_unbuffered=0) (stream_read_close_operations=1) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_block_acquire_read=0) (action_executor_acquired=0) (action_http_get_request=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_drain=0) (stream_read_opened=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_block_read=0) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=8));
maximums=((stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=8) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:57,560 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:41:57,561 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:41:57,561 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:57,561 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@63a3b1bd[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:41:57,561 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:57,561 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics3-fso-bucket
2024-11-16 17:41:57,562 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:41:57,562 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1e570348] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:57,562 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@1e570348] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:57,569 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((committer_commit_job.failures=0) (committer_commits_created=0) (op_mkdirs=0) (stream_read_bytes_backwards_on_seek=0) (committer_bytes_uploaded=0) (stream_read_exceptions=0) (committer_materialize_file=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain.failures=0) (object_bulk_delete_request=0) (object_put_bytes=0) (object_list_request=0) (committer_load_single_pending_file=0) (multipart_upload_completed=0) (op_get_content_summary.failures=0) (op_xattr_get_named=0) (stream_read_vectored_read_bytes_discarded=0) (committer_tasks_failed=0) (stream_read_close_operations=1) (op_xattr_get_named.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted=0) (committer_load_single_pending_file.failures=0) (stream_read_operations_incomplete=0) (multipart_upload_part_put=0) (directories_created=0) (committer_commit_job=0) (op_xattr_get_map.failures=0) (object_copy_requests=0) (committer_magic_marker_put=0) (store_io_request=1) (store_exists_probe=0) (action_http_head_request.failures=0) (stream_read_seek_policy_changed=1) (op_hflush=0) (stream_read_bytes=0) (op_get_delegation_token.failures=0) (fake_directories_deleted=0) (op_rename=0) (action_executor_acquired=0) (op_glob_status=0) (files_copied=0) (files_copied_bytes=0) (object_multipart_initiated.failures=0) (object_continue_list_request.failures=0) (multipart_upload_part_put_bytes=0) (multipart_upload_list.failures=0) (op_list_files.failures=0) (stream_read_operations=0) (object_put_request.failures=0) (multipart_instantiated=0) (stream_read_bytes_discarded_in_close=0) (op_is_directory.failures=0) (op_get_content_summary=0) (op_create.failures=0) (fake_directories_created=0) (committer_tasks_completed=0) (op_is_file.failures=0) (delegation_tokens_issued.failures=0) (audit_failure=0) (committer_jobs_completed=0) (op_xattr_list=0) (op_access=0) (action_file_opened=1) (stream_write_queue_duration.failures=0) (stream_write_exceptions_completing_upload=0) (op_delete=0) (directories_deleted=0) (op_exists.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_operations=0) (multipart_upload_started=0) (object_bulk_delete_request.failures=0) (object_metadata_request=1) (stream_write_exceptions=0) (delegation_tokens_issued=0) (object_continue_list_request=0) (op_get_file_checksum=0) (op_rename.failures=0) (action_file_opened.failures=0) (files_delete_rejected=0) (stream_write_total_time=0) (op_create_non_recursive=0) (stream_write_total_data=0) (stream_read_closed=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain=0) (store_io_throttled=0) (audit_access_check_failure=0) (action_http_get_request=0) (multipart_upload_aborted=0) (op_xattr_list.failures=0) (stream_read_total_bytes=0) (stream_read_unbuffered=0) (op_open=1) (stream_write_block_uploads_committed=0) (multipart_upload_list=0) (committer_jobs_failed=0) (op_copy_from_local_file=0) (op_is_directory=0) (op_copy_from_local_file.failures=0) (stream_write_queue_duration=0) (audit_request_execution=1) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_delete_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (audit_span_creation=2) (op_createfile.failures=0) (action_http_get_request.failures=0) (stream_write_bytes=0) (op_list_status=0) (ignored_errors=0) (stream_write_block_uploads_aborted=0) (op_exists=0) (stream_read_vectored_combined_ranges=0) (committer_materialize_file.failures=0) (committer_commits_reverted=0) (committer_commits_completed=0) (stream_read_vectored_incoming_ranges=0) (committer_commits_aborted=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (op_is_file=0) (store_exists_probe.failures=0) (op_get_file_checksum.failures=0) (object_list_request.failures=0) (files_deleted=0) (committer_bytes_committed=0) (committer_stage_file_upload.failures=0) (stream_write_block_uploads=0) (stream_read_vectored_operations=0) (stream_aborted=0) (object_multipart_aborted=0) (stream_read_version_mismatches=0) (object_put_request=0) (op_list_located_status=0) (store_io_retry=0) (op_openfile=0) (op_hsync=0) (files_created=0) (op_get_file_status=0) (op_get_file_status.failures=0) (op_delete.failures=0) (stream_read_seek_bytes_skipped=0) (op_list_status.failures=0) (op_xattr_get_named_map=0) (op_glob_status.failures=0) (stream_read_opened=0) (committer_stage_file_upload=0) (stream_read_seek_backward_operations=0) (object_select_requests=0) (stream_read_bytes_discarded_in_abort=0) (op_abort=0) (op_access.failures=0) (object_delete_objects=0) (committer_magic_marker_put.failures=0) (action_http_head_request=1) (op_xattr_get_named_map.failures=0) (op_createfile=0) (stream_read_fully_operations=0) (op_xattr_get_map=0) (committer_commits.failures=0) (object_delete_request=0) (object_put_request_completed=0) (op_get_delegation_token=0) (committer_magic_files_created=0) (op_create=0) (op_list_files=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0));
minimums=((op_is_file.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.min=-1) (object_bulk_delete_request.failures.min=-1) (action_file_opened.min=8) (op_xattr_list.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.min=-1) (op_exists.min=-1) (action_http_get_request.min=-1) (op_glob_status.failures.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.failures.min=-1) (op_abort.min=-1) (op_list_status.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.min=-1) (op_get_file_status.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.min=7) (op_get_file_status.failures.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.failures.min=-1) (multipart_upload_list.min=-1) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (op_list_files.min=-1) (object_list_request.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (op_xattr_list.min=-1) (op_create.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_directory.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.failures.min=-1) (op_access.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_commit_job.min=-1) (object_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (op_rename.failures.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.min=-1) (op_delete.min=-1) (committer_materialize_file.failures.min=-1) (object_delete_request.min=-1) (op_glob_status.min=-1) (object_continue_list_request.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1));
maximums=((op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.max=-1) (op_glob_status.max=-1) (store_exists_probe.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.max=-1) (object_list_request.max=-1) (committer_materialize_file.failures.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_head_request.max=7) (delegation_tokens_issued.max=-1) (op_get_file_status.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_list.max=-1) (op_access.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_rename.max=-1) (op_get_file_checksum.failures.max=-1) (object_delete_request.failures.max=-1) (op_abort.max=-1) (op_mkdirs.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (object_bulk_delete_request.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_delegation_token.max=-1) (op_createfile.failures.max=-1) (op_create.max=-1) (op_copy_from_local_file.max=-1) (op_is_file.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.max=-1) (op_abort.failures.max=-1) (op_exists.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_bulk_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (op_create.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_glob_status.failures.max=-1) (op_list_files.max=-1) (action_executor_acquired.failures.max=-1) (committer_commit_job.failures.max=-1) (op_list_status.failures.max=-1) (object_put_request.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.max=-1) (op_delete.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named.failures.max=-1) (action_file_opened.max=8) (action_http_head_request.failures.max=-1) (op_access.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (op_delete.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_list.max=-1) (op_list_files.failures.max=-1) (object_multipart_aborted.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (object_list_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.max=-1) (op_is_directory.failures.max=-1) (object_delete_request.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:57,570 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:57,570 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,570 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:57,571 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=37&ts=1731778917570
2024-11-16 17:41:57,578 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,578 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,578 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [37] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=37&ts=1731778917570
2024-11-16 17:41:57,595 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:41:57,595 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:57,595 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:57,595 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:57,595 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:57,595 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:57,595 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:57,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:57,596 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:57,596 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:57,596 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:57,596 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:57,599 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:57,599 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:57,599 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,604 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [40] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=40&ts=1731778917570
2024-11-16 17:41:57,617 [s3a-transfer-fso-bucket-unbounded-pool2-t2] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:41:57,617 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.019s
2024-11-16 17:41:57,618 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:57,618 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:57,618 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:57,618 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778917510; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:57,618 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:57,619 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:57,619 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:57,619 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:57,620 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:57,620 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:57,620 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:57,621 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:57,621 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:57,621 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:57,621 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:57,622 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:57,626 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=41&ts=1731778917570
2024-11-16 17:41:57,636 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:41:57,636 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:41:57,636 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:41:57,636 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:57,636 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:57,636 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:57,636 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:57,637 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:57,637 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:57,637 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000016&t0=37&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=41&ts=1731778917570
2024-11-16 17:41:57,647 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:41:57,647 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:41:57,647 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:41:57,647 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:41:57,648 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:41:57,648 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.052s
2024-11-16 17:41:57,648 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:57,648 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:57,650 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:57,667 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_exists.failures=0) (object_select_requests=0) (stream_read_total_bytes=0) (op_list_located_status=0) (action_executor_acquired.failures=0) (fake_directories_created=0) (committer_bytes_committed=0) (object_delete_request=0) (files_copied=0) (op_openfile=0) (op_copy_from_local_file=0) (stream_read_close_operations=0) (stream_read_vectored_incoming_ranges=0) (object_put_bytes=131072) (op_list_status=0) (stream_read_vectored_read_bytes_discarded=0) (op_get_delegation_token.failures=0) (object_bulk_delete_request.failures=0) (stream_write_bytes=131072) (op_xattr_get_named.failures=0) (committer_stage_file_upload.failures=0) (multipart_upload_list.failures=0) (multipart_upload_completed=0) (stream_read_seek_bytes_skipped=0) (op_get_file_checksum=0) (committer_tasks_failed=0) (store_io_request=20) (stream_read_bytes=0) (object_bulk_delete_request=4) (op_createfile.failures=0) (stream_read_remote_stream_drain=0) (op_xattr_get_named=0) (committer_load_single_pending_file=0) (op_delete.failures=0) (files_deleted=2) (committer_materialize_file.failures=0) (op_copy_from_local_file.failures=0) (op_is_directory.failures=0) (op_hflush=0) (op_xattr_get_named_map.failures=0) (committer_commits_reverted=0) (audit_span_creation=7) (committer_stage_file_upload=0) (op_create.failures=0) (committer_commits_created=0) (multipart_instantiated=0) (files_copied_bytes=0) (object_list_request=8) (stream_read_remote_stream_drain.failures=0) (delegation_tokens_issued=0) (object_delete_objects=4) (stream_read_seek_forward_operations=0) (object_continue_list_request.failures=0) (committer_commits_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration.failures=0) (op_is_file=0) (stream_read_exceptions=0) (action_http_get_request=0) (op_list_files.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (op_get_content_summary=0) (op_get_delegation_token=0) (op_rename.failures=0) (audit_request_execution=20) (op_access=0) (audit_access_check_failure=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (fake_directories_deleted=2) (object_copy_requests=0) (delegation_tokens_issued.failures=0) (committer_magic_files_created=0) (files_delete_rejected=0) (committer_commit_job=0) (op_get_file_status=0) (stream_read_operations=0) (op_get_file_status.failures=0) (stream_write_block_uploads_committed=0) (op_is_file.failures=0) (stream_read_remote_stream_aborted=0) (committer_jobs_completed=0) (stream_aborted=0) (committer_commits.failures=0) (directories_deleted=0) (op_abort.failures=0) (stream_read_bytes_discarded_in_close=0) (multipart_upload_abort_under_path_invoked=0) (object_continue_list_request=0) (committer_jobs_failed=0) (stream_read_opened=0) (stream_read_seek_operations=0) (op_get_file_checksum.failures=0) (action_http_head_request=4) (stream_read_version_mismatches=0) (action_http_head_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=0) (ignored_errors=0) (audit_failure=0) (op_xattr_list=0) (op_glob_status.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_open=0) (multipart_upload_started=0) (committer_tasks_completed=0) (op_list_files=0) (object_multipart_initiated=0) (object_delete_request.failures=0) (op_createfile=0) (op_delete=2) (op_is_directory=0) (op_create_non_recursive=0) (committer_materialize_file=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened=0) (directories_created=2) (stream_write_block_uploads_aborted=0) (store_exists_probe.failures=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (op_xattr_get_named_map=0) (object_metadata_request=4) (op_exists=0) (op_list_status.failures=0) (op_xattr_get_map.failures=0) (committer_magic_marker_put=0) (op_create=2) (op_get_content_summary.failures=0) (store_exists_probe=0) (object_put_request.failures=0) (object_put_request=4) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list.failures=0) (op_rename=0) (object_put_request_completed=4) (committer_bytes_uploaded=0) (committer_load_single_pending_file.failures=0) (action_http_get_request.failures=0) (multipart_upload_list=0) (stream_read_fully_operations=0) (op_glob_status=0) (stream_read_unbuffered=0) (stream_write_total_data=262144) (store_io_retry=0) (multipart_upload_aborted=0) (op_abort=0) (stream_read_vectored_combined_ranges=0) (op_mkdirs=2) (object_list_request.failures=0) (op_hsync=0) (files_created=2) (stream_read_seek_policy_changed=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_map=0) (committer_commits_completed=0) (committer_commit_job.failures=0) (op_mkdirs.failures=0) (op_access.failures=0) (store_io_throttled=0) (stream_write_block_uploads=2));
gauges=((stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_pending=2) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0));
minimums=((op_xattr_list.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named.min=-1) (op_delete.failures.min=-1) (multipart_upload_list.min=-1) (action_file_opened.min=-1) (committer_stage_file_upload.min=-1) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_list_status.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=41) (op_createfile.failures.min=-1) (op_createfile.min=-1) (object_continue_list_request.failures.min=-1) (op_get_content_summary.min=-1) (op_get_delegation_token.min=-1) (op_list_files.min=-1) (object_delete_request.min=-1) (object_list_request.min=13) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.min=43) (op_access.failures.min=-1) (op_delete.min=53) (store_exists_probe.min=-1) (op_create.min=21) (object_continue_list_request.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_get_request.failures.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.failures.min=-1) (committer_commit_job.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_drain.min=-1) (op_is_file.min=-1) (object_multipart_initiated.min=-1) (op_mkdirs.failures.min=-1) (op_list_status.failures.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=-1) (action_http_head_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_is_directory.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.min=7) (op_rename.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.min=9) (op_get_file_checksum.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.min=-1) (committer_materialize_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_create.failures.min=-1));
maximums=((op_is_directory.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_stage_file_upload.max=-1) (action_http_get_request.max=-1) (object_list_request.failures.max=-1) (object_list_request.max=185) (op_delete.failures.max=-1) (op_access.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.max=-1) (op_rename.max=-1) (op_access.max=-1) (op_mkdirs.max=300) (store_exists_probe.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.failures.max=-1) (action_file_opened.max=-1) (op_list_status.max=-1) (committer_magic_marker_put.max=-1) (op_get_delegation_token.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.failures.max=-1) (op_delete.max=87) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (committer_materialize_file.failures.max=-1) (op_get_delegation_token.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.max=12) (op_xattr_get_named_map.max=-1) (multipart_upload_list.failures.max=-1) (op_is_file.max=-1) (op_glob_status.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=77) (op_exists.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.failures.max=-1) (op_create.max=62) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.max=-1) (action_file_opened.failures.max=-1) (delegation_tokens_issued.max=-1) (op_createfile.failures.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.max=-1) (object_continue_list_request.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.max=26) (op_create.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (object_multipart_aborted.max=-1));
means=((op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=4, sum=193, mean=48.2500)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=4, sum=35, mean=8.7500)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=8, sum=300, mean=37.5000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=4, sum=60, mean=15.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=2, sum=341, mean=170.5000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=2, sum=140, mean=70.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=2, sum=83, mean=41.5000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:57,668 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:57,669 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:57,669 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,669 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,669 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,670 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917668
2024-11-16 17:41:57,686 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:41:57,686 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:57,687 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:57,687 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,687 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:57,687 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917668
2024-11-16 17:41:57,691 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:57,692 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:57,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:57,692 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:57,692 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000017&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917668
2024-11-16 17:41:57,701 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:57,701 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:57,702 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:41:57,702 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:57,703 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:57,703 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,703 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,703 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,703 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000018 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000018&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917702
2024-11-16 17:41:57,713 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:41:57,714 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,714 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:57,714 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4409095740416366173.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:57,718 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4409095740416366173.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated=0) (stream_write_block_uploads=0) (stream_write_queue_duration=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0) (multipart_upload_completed=0) (object_put_request=0) (op_abort.failures=0) (stream_write_total_data=0) (stream_write_exceptions=0) (op_abort=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4409095740416366173.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,718 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:57,718 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:57,718 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4409095740416366173.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:57,720 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:57,720 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:57,721 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:57,721 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:57,721 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000018 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000018/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000018&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=43&ts=1731778917702
2024-11-16 17:41:57,769 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:57,769 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:57,770 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.050s
2024-11-16 17:41:57,770 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4409095740416366173.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:57,770 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4409095740416366173.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,770 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4409095740416366173.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:57,770 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:57,770 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:57,772 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (stream_write_total_time=0) (object_put_request=1) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (op_abort=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=47));
maximums=((object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=47) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=47, mean=47.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:57,772 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:57,774 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:57,774 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,775 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:57,775 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000019 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000019/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000019&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917774
2024-11-16 17:41:57,780 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:57,780 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:57,780 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:57,780 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:57,783 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:57,784 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:41:57,789 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:57,789 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:57,791 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:41:57,793 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:57,793 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_opened=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations=0) (stream_read_block_read.failures=0) (stream_read_seek_policy_changed=1) (action_http_get_request=0) (stream_read_unbuffered=0) (action_file_opened=1) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_version_mismatches=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (stream_read_total_bytes=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (stream_read_vectored_operations=1) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=2) (action_executor_acquired=0) (stream_aborted=0) (stream_read_seek_operations=0) (stream_read_operations_incomplete=0) (stream_read_bytes=0) (action_executor_acquired.failures=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=6) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=6) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:57,800 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:57,801 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,802 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:57,802 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000020 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000020&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917800
2024-11-16 17:41:57,810 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:57,810 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:57,810 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:57,811 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:57,811 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:57,811 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:41:57,813 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:57,813 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:57,816 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:57,817 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:57,817 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000020 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000020/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000020&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=45&ts=1731778917800
2024-11-16 17:41:57,843 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.026s
2024-11-16 17:41:57,845 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:41:57,846 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:57,848 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_total_bytes=150) (stream_read_bytes_backwards_on_seek=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_exceptions=0) (stream_read_remote_stream_drain=0) (stream_read_operations=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (action_http_get_request=1) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_unbuffered=0) (stream_read_vectored_incoming_ranges=2) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes=150) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=10) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (stream_read_opened=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=10) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=28));
maximums=((stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=28) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=10) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=28, mean=28.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:57,854 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:57,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,855 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:57,856 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917854
2024-11-16 17:41:57,862 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,862 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,863 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [42] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=42&ts=1731778917854
2024-11-16 17:41:57,874 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:41:57,875 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:57,877 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:57,877 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:57,877 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:57,878 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:57,878 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:57,878 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:57,879 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:57,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:57,879 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:57,879 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:57,883 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:57,884 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:57,884 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,885 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [46] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=46&ts=1731778917854
2024-11-16 17:41:57,900 [s3a-transfer-fso-bucket-unbounded-pool2-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:41:57,901 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.018s
2024-11-16 17:41:57,901 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:57,902 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:57,902 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:57,902 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778917762; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:57,902 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:57,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:57,902 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:57,903 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:57,904 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:57,904 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:57,904 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:57,905 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:57,905 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:57,905 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:57,905 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:57,905 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:57,906 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=47&ts=1731778917854
2024-11-16 17:41:57,919 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:41:57,919 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:41:57,919 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:41:57,919 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:57,919 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:57,920 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:57,920 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:57,920 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:57,920 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:57,920 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000021&t0=42&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=47&ts=1731778917854
2024-11-16 17:41:57,932 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:41:57,932 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:41:57,933 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.014s
2024-11-16 17:41:57,933 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.029s
2024-11-16 17:41:57,933 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:41:57,933 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.054s
2024-11-16 17:41:57,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:57,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:57,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:57,956 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((audit_failure=0) (multipart_upload_list.failures=0) (op_access=0) (audit_request_execution=33) (multipart_upload_aborted=0) (op_xattr_get_map=0) (object_put_bytes=196608) (committer_jobs_completed=0) (op_create_non_recursive=0) (op_list_status.failures=0) (stream_write_block_uploads=3) (directories_created=3) (stream_write_block_uploads_aborted=0) (stream_read_seek_bytes_discarded=0) (files_deleted=3) (object_put_request.failures=0) (multipart_upload_list=0) (files_delete_rejected=0) (committer_stage_file_upload.failures=0) (op_glob_status.failures=0) (committer_load_single_pending_file=0) (stream_write_queue_duration=0) (committer_tasks_completed=0) (op_list_located_status=0) (stream_write_queue_duration.failures=0) (committer_load_single_pending_file.failures=0) (action_http_get_request=1) (op_createfile.failures=0) (stream_write_bytes=196608) (committer_bytes_committed=0) (op_xattr_get_named=0) (op_create.failures=0) (op_copy_from_local_file=0) (stream_read_vectored_combined_ranges=2) (committer_commit_job=0) (op_mkdirs=3) (stream_read_fully_operations=0) (object_list_request.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_bytes_discarded_in_close=0) (op_xattr_get_named_map.failures=0) (object_multipart_initiated.failures=0) (object_list_request=12) (op_list_status=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=2) (op_abort.failures=0) (op_createfile=0) (op_get_content_summary.failures=0) (store_exists_probe=0) (op_get_delegation_token.failures=0) (op_get_file_status.failures=0) (action_executor_acquired.failures=0) (fake_directories_deleted=3) (action_http_get_request.failures=0) (object_copy_requests=0) (object_put_request=6) (stream_read_operations_incomplete=0) (object_multipart_initiated=0) (action_file_opened=2) (stream_write_exceptions=0) (committer_commits_reverted=0) (stream_read_bytes_backwards_on_seek=0) (object_multipart_aborted=0) (op_access.failures=0) (stream_aborted=0) (op_xattr_list=0) (committer_commits.failures=0) (object_select_requests=0) (op_create=3) (op_glob_status=0) (object_metadata_request=8) (committer_commit_job.failures=0) (stream_read_remote_stream_aborted.failures=0) (committer_commits_aborted=0) (op_exists=0) (stream_read_remote_stream_drain.failures=0) (committer_stage_file_upload=0) (stream_read_seek_operations=0) (store_io_retry=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain=0) (multipart_upload_abort_under_path_invoked=0) (op_delete=3) (op_get_file_checksum=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_vectored_operations=2) (action_http_head_request.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (ignored_errors=0) (delegation_tokens_issued=0) (stream_read_exceptions=0) (object_continue_list_request=0) (stream_write_exceptions_completing_upload=0) (action_http_head_request=8) (files_copied_bytes=0) (stream_read_bytes_discarded_in_abort=0) (op_rename.failures=0) (op_is_file.failures=0) (store_exists_probe.failures=0) (op_get_file_checksum.failures=0) (stream_read_seek_backward_operations=0) (multipart_upload_started=0) (op_list_files=0) (multipart_upload_part_put_bytes=0) (op_xattr_list.failures=0) (stream_write_block_uploads_committed=0) (op_get_content_summary=0) (fake_directories_created=0) (op_hsync=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=150) (op_get_delegation_token=0) (op_abort=0) (committer_magic_files_created=0) (committer_commits_completed=0) (stream_read_operations=0) (op_get_file_status=0) (op_hflush=0) (multipart_upload_part_put=0) (audit_access_check_failure=0) (object_put_request_completed=6) (op_xattr_get_named_map=0) (object_bulk_delete_request.failures=0) (object_delete_request.failures=0) (committer_materialize_file=0) (op_is_directory.failures=0) (stream_read_total_bytes=150) (committer_jobs_failed=0) (op_rename=0) (committer_magic_marker_put.failures=0) (committer_bytes_uploaded=0) (audit_span_creation=12) (stream_read_seek_policy_changed=2) (stream_read_seek_bytes_skipped=0) (committer_magic_marker_put=0) (files_copied=0) (directories_deleted=0) (object_delete_request=0) (op_is_file=0) (stream_read_closed=0) (op_is_directory=0) (multipart_instantiated=0) (stream_write_total_data=393216) (action_file_opened.failures=0) (delegation_tokens_issued.failures=0) (object_bulk_delete_request=6) (object_continue_list_request.failures=0) (op_exists.failures=0) (stream_read_opened=0) (stream_read_unbuffered=0) (files_created=3) (op_xattr_get_named.failures=0) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (op_openfile=0) (stream_write_total_time=0) (op_list_files.failures=0) (store_io_request=33) (op_delete.failures=0) (store_io_throttled=0) (committer_commits_created=0) (op_open=2) (multipart_upload_completed=0) (object_delete_objects=6) (stream_read_version_mismatches=0) (committer_tasks_failed=0) (op_xattr_get_map.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=3));
minimums=((stream_read_remote_stream_drain.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.min=47) (op_rename.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.failures.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=34) (op_is_file.min=-1) (object_delete_request.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=28) (object_list_request.min=10) (op_access.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.min=-1) (op_rename.failures.min=-1) (object_bulk_delete_request.min=9) (op_get_content_summary.min=-1) (action_file_opened.min=10) (op_list_files.failures.min=-1) (op_createfile.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_checksum.min=-1) (op_createfile.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_create.min=13) (op_copy_from_local_file.min=-1) (action_http_head_request.min=4) (delegation_tokens_issued.failures.min=-1) (multipart_upload_list.min=-1) (op_is_directory.min=-1) (op_exists.failures.min=-1) (op_get_file_status.failures.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_aborted.min=-1) (op_copy_from_local_file.failures.min=-1) (object_delete_request.failures.min=-1) (op_access.min=-1) (op_get_file_checksum.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_load_single_pending_file.min=-1) (object_put_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (action_file_opened.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_status.min=-1) (op_get_delegation_token.min=-1) (delegation_tokens_issued.min=-1) (op_delete.min=53) (op_list_files.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.failures.min=-1) (op_create.failures.min=-1) (committer_commit_job.min=-1) (op_delete.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_executor_acquired.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.min=-1));
maximums=((op_exists.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (op_list_status.failures.max=-1) (op_create.max=62) (stream_write_queue_duration.max=-1) (object_multipart_aborted.max=-1) (action_http_head_request.max=12) (op_is_file.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.max=-1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_map.max=-1) (op_exists.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.max=-1) (op_createfile.failures.max=-1) (op_access.max=-1) (op_mkdirs.max=300) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.max=77) (op_access.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.max=-1) (op_list_files.failures.max=-1) (action_file_opened.max=10) (op_get_delegation_token.failures.max=-1) (object_bulk_delete_request.max=26) (object_list_request.failures.max=-1) (op_abort.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=185) (action_executor_acquired.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_list_files.max=-1) (op_mkdirs.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_list.max=-1) (committer_commit_job.max=-1) (action_file_opened.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.max=28) (committer_magic_marker_put.failures.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_list.max=-1) (op_is_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.max=-1) (op_rename.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_named.max=-1) (object_bulk_delete_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_list_status.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_delete.max=87) (object_put_request.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.failures.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_create.failures.max=-1));
means=((store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=8, sum=59, mean=7.3750)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=3, sum=375, mean=125.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=6, sum=249, mean=41.5000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=3, sum=96, mean=32.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=28, mean=28.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=12, sum=353, mean=29.4167)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=3, sum=195, mean=65.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=6, sum=86, mean=14.3333)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=16, mean=8.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:57,958 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:57,959 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:57,962 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,963 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,963 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,965 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=48&ts=1731778917958
2024-11-16 17:41:57,974 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:41:57,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:57,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:57,975 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:57,976 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:57,976 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=48&ts=1731778917958
2024-11-16 17:41:57,980 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:57,981 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:57,981 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:57,981 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:57,982 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000022&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=48&ts=1731778917958
2024-11-16 17:41:57,991 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:57,991 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:57,992 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:41:57,992 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:57,993 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:57,993 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:57,993 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:57,993 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:57,994 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000023 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000023&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=48&ts=1731778917992
2024-11-16 17:41:58,002 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:41:58,003 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,003 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:58,004 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1958181979146392690.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:58,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1958181979146392690.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (op_hsync=0) (op_hflush=0) (multipart_upload_completed=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_put_request=0) (op_abort=0) (op_abort.failures=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_total_time=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_total_data=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1958181979146392690.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,005 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:58,005 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:58,005 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1958181979146392690.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:58,006 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:58,006 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:58,007 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:58,007 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:58,007 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000023 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000023/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000023&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=49&ts=1731778917992
2024-11-16 17:41:58,043 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:58,044 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:58,044 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.038s
2024-11-16 17:41:58,044 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1958181979146392690.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:58,044 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1958181979146392690.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,044 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1958181979146392690.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,044 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:58,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:58,046 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_bytes=65536) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (object_put_request=1) (object_multipart_initiated=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (op_hsync=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (op_hflush=0) (op_abort=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=36) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=36) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=36, mean=36.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:58,047 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:58,048 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:58,048 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,048 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:58,048 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000024 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000024&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=48&ts=1731778918048
2024-11-16 17:41:58,052 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:58,053 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:58,053 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,053 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:58,053 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:58,053 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:41:58,054 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:58,055 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (action_file_opened.failures=0) (stream_read_operations=0) (stream_read_vectored_incoming_ranges=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_combined_ranges=1) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=0) (stream_aborted=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read=0) (stream_read_seek_forward_operations=0) (stream_read_opened=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=1) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=0) (stream_read_closed=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_total_bytes=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (action_http_get_request=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=1) (stream_read_block_read.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=4) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:58,056 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:41:58,057 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,058 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:41:58,058 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:58,058 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,058 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:58,058 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:41:58,059 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:58,059 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,059 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,059 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,066 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:58,067 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000024 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000024/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000024&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=51&ts=1731778918048
2024-11-16 17:41:58,080 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:41:58,081 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:41:58,082 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,082 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request=1) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=150) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=2) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_block_read.failures=0) (stream_read_closed=0) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_drain=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_opened=0) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=2) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_bytes_discarded_in_close=0) (stream_read_operations_incomplete=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=2) (stream_read_total_bytes=150) (stream_read_unbuffered=1) (stream_read_prefetch_operations=0));
gauges=((stream_read_gauge_input_policy=1) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=15) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=4));
maximums=((action_file_opened.max=4) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=15) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=15, mean=15.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:58,084 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:58,084 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:58,084 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:58,084 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=48&ts=1731778918084
2024-11-16 17:41:58,092 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:58,092 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,092 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [48] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=48&ts=1731778918084
2024-11-16 17:41:58,108 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.016s
2024-11-16 17:41:58,109 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:58,109 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:58,109 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:58,110 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:58,111 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:58,111 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:58,111 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:58,112 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:58,112 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:58,113 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:58,113 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:58,114 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:58,115 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:58,115 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,116 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [52] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=52&ts=1731778918084
2024-11-16 17:41:58,133 [s3a-transfer-fso-bucket-unbounded-pool2-t4] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:41:58,134 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.020s
2024-11-16 17:41:58,134 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:58,134 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:58,134 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:58,135 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778918038; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:58,135 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:58,135 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:58,135 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:58,136 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:58,136 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:58,136 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:58,137 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:58,137 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:58,137 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:58,137 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:58,137 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:58,137 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:58,137 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=53&ts=1731778918084
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:58,150 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:58,151 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:58,151 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000025&t0=48&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=53&ts=1731778918084
2024-11-16 17:41:58,163 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:41:58,163 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.013s
2024-11-16 17:41:58,163 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:41:58,163 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:41:58,164 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:41:58,164 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.052s
2024-11-16 17:41:58,164 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:58,164 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:58,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:58,184 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 4, active threads = 0, queued tasks = 0, completed tasks = 4], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_started=0) (committer_materialize_file=0) (stream_read_remote_stream_aborted=0) (op_xattr_get_map=0) (op_get_file_checksum.failures=0) (op_list_files=0) (store_io_request=45) (delegation_tokens_issued=0) (op_access=0) (stream_read_seek_operations=0) (op_is_directory=0) (object_put_request_completed=8) (committer_bytes_committed=0) (action_http_get_request=2) (op_open=3) (stream_read_vectored_read_bytes_discarded=20) (stream_read_bytes_backwards_on_seek=0) (store_io_throttled=0) (stream_write_exceptions=0) (op_is_file=0) (stream_read_close_operations=3) (committer_load_single_pending_file=0) (stream_write_block_uploads_committed=0) (stream_read_bytes=300) (multipart_upload_list=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (op_get_delegation_token.failures=0) (delegation_tokens_issued.failures=0) (op_createfile.failures=0) (object_delete_objects=8) (op_get_file_status.failures=0) (op_xattr_get_named_map.failures=0) (object_multipart_initiated=0) (committer_tasks_failed=0) (stream_read_seek_backward_operations=0) (op_hsync=0) (committer_stage_file_upload.failures=0) (object_select_requests=0) (committer_commits_created=0) (stream_write_block_uploads_aborted=0) (multipart_upload_part_put_bytes=0) (committer_commits_reverted=0) (object_metadata_request=11) (op_glob_status=0) (committer_tasks_completed=0) (object_multipart_aborted=0) (committer_jobs_completed=0) (action_http_head_request.failures=0) (op_rename=0) (op_create.failures=0) (committer_commits_aborted=0) (stream_read_seek_forward_operations=0) (stream_write_bytes=262144) (stream_write_exceptions_completing_upload=0) (object_bulk_delete_request.failures=0) (op_access.failures=0) (op_rename.failures=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened=3) (files_delete_rejected=0) (op_list_files.failures=0) (committer_commit_job=0) (stream_read_closed=0) (stream_read_opened=0) (object_list_request.failures=0) (op_list_status=0) (object_put_bytes=262144) (stream_read_remote_stream_drain=0) (multipart_upload_aborted=0) (op_get_content_summary.failures=0) (files_deleted=4) (op_copy_from_local_file=0) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_bulk_delete_request=8) (stream_write_total_time=0) (stream_read_seek_bytes_discarded=0) (op_list_status.failures=0) (op_xattr_get_named.failures=0) (object_delete_request.failures=0) (op_create=4) (committer_bytes_uploaded=0) (stream_read_vectored_operations=4) (store_exists_probe.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_write_queue_duration.failures=0) (store_io_retry=0) (audit_failure=0) (op_abort.failures=0) (committer_stage_file_upload=0) (op_hflush=0) (op_xattr_get_map.failures=0) (op_exists.failures=0) (op_get_file_checksum=0) (op_get_delegation_token=0) (stream_read_vectored_incoming_ranges=8) (audit_request_execution=45) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_read_seek_policy_changed=4) (stream_read_operations=0) (op_create_non_recursive=0) (object_delete_request=0) (stream_read_seek_bytes_skipped=0) (fake_directories_created=0) (stream_write_total_data=524288) (committer_magic_files_created=0) (multipart_upload_list.failures=0) (files_copied_bytes=0) (stream_aborted=0) (op_exists=0) (action_executor_acquired.failures=0) (audit_access_check_failure=0) (op_get_content_summary=0) (store_exists_probe=0) (op_openfile=0) (object_list_request=16) (op_glob_status.failures=0) (stream_read_total_bytes=300) (op_abort=0) (op_is_file.failures=0) (fake_directories_deleted=4) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_part_put=0) (op_is_directory.failures=0) (op_xattr_get_named_map=0) (multipart_upload_completed=0) (committer_commits.failures=0) (committer_magic_marker_put.failures=0) (object_put_request=8) (op_xattr_list.failures=0) (op_mkdirs=4) (object_copy_requests=0) (committer_commits_completed=0) (action_executor_acquired=0) (op_delete=4) (stream_read_unbuffered=1) (op_get_file_status=0) (object_continue_list_request.failures=0) (object_put_request.failures=0) (action_file_opened.failures=0) (multipart_instantiated=0) (ignored_errors=0) (op_delete.failures=0) (op_list_located_status=0) (stream_read_fully_operations=0) (committer_materialize_file.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_version_mismatches=0) (op_createfile=0) (op_xattr_get_named=0) (committer_commit_job.failures=0) (op_xattr_list=0) (op_copy_from_local_file.failures=0) (directories_deleted=0) (audit_span_creation=16) (files_copied=0) (directories_created=4) (op_mkdirs.failures=0) (action_http_head_request=11) (stream_read_vectored_combined_ranges=4) (object_continue_list_request=0) (committer_jobs_failed=0) (stream_write_block_uploads=4) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (files_created=4));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=4) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0));
minimums=((action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.min=4) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.failures.min=-1) (op_access.failures.min=-1) (object_put_request.min=36) (op_get_content_summary.failures.min=-1) (action_http_get_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_magic_marker_put.min=-1) (object_list_request.failures.min=-1) (op_get_file_status.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.min=-1) (object_bulk_delete_request.min=9) (op_is_directory.min=-1) (object_delete_request.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (op_mkdirs.failures.min=-1) (op_exists.failures.min=-1) (op_glob_status.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.failures.min=-1) (op_rename.failures.min=-1) (op_createfile.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_initiated.min=-1) (object_list_request.min=8) (object_multipart_initiated.failures.min=-1) (op_list_files.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.failures.min=-1) (multipart_upload_list.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.min=-1) (committer_commit_job.min=-1) (action_executor_acquired.min=-1) (op_list_status.failures.min=-1) (op_mkdirs.min=34) (op_abort.failures.min=-1) (action_file_opened.min=4) (op_xattr_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.min=-1) (op_copy_from_local_file.min=-1) (stream_read_remote_stream_drain.min=-1) (op_get_file_checksum.failures.min=-1) (object_put_request.failures.min=-1) (op_exists.min=-1) (op_create.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_get_request.min=15) (op_list_files.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_rename.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.min=-1) (object_multipart_aborted.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_list_status.min=-1) (op_create.min=11) (store_exists_probe.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.failures.min=-1) (op_delete.min=53) (committer_load_single_pending_file.failures.min=-1) (op_abort.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.min=-1));
maximums=((op_xattr_get_named.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.failures.max=-1) (op_abort.failures.max=-1) (object_delete_request.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.max=28) (action_file_opened.max=10) (object_put_request.failures.max=-1) (op_rename.max=-1) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_glob_status.failures.max=-1) (action_http_head_request.max=12) (object_list_request.max=185) (op_xattr_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_bulk_delete_request.max=26) (op_create.failures.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.max=-1) (op_access.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_file_opened.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_create.max=62) (op_delete.max=87) (object_delete_request.max=-1) (op_is_file.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_rename.failures.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_status.max=-1) (store_exists_probe.max=-1) (delegation_tokens_issued.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.failures.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.failures.max=-1) (op_abort.max=-1) (op_get_content_summary.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.max=-1) (object_put_request.max=77) (object_continue_list_request.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.max=-1) (op_is_file.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_checksum.max=-1) (op_list_files.failures.max=-1) (op_list_status.max=-1) (committer_materialize_file.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.max=300) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (op_get_content_summary.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=16, sum=404, mean=25.2500)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=8, sum=294, mean=36.7500)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=4, sum=249, mean=62.2500)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=8, sum=111, mean=13.8750)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=11, sum=75, mean=6.8182)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=4, sum=409, mean=102.2500)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=43, mean=21.5000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=4, sum=107, mean=26.7500)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=20, mean=6.6667)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:58,185 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:58,186 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:58,186 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:58,186 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:58,186 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,186 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=54&ts=1731778918185
2024-11-16 17:41:58,193 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:41:58,193 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:58,194 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:58,194 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:58,194 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:58,194 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=54&ts=1731778918185
2024-11-16 17:41:58,198 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:58,199 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:58,199 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:58,199 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:58,200 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000026&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=54&ts=1731778918185
2024-11-16 17:41:58,208 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:58,209 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:58,209 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:41:58,209 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:58,210 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:58,210 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,210 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:58,210 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,210 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000027 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000027&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=54&ts=1731778918210
2024-11-16 17:41:58,218 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:41:58,219 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,219 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:58,220 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18341934226954845792.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:58,222 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18341934226954845792.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_block_uploads=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (op_hsync=0) (stream_write_exceptions=0) (op_hflush=0) (stream_write_total_time=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (object_put_request=0) (action_executor_acquired.failures=0) (op_abort=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18341934226954845792.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,222 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:58,222 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:58,223 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18341934226954845792.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:58,224 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:58,224 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:58,225 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:58,225 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:58,225 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [55] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000027 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000027/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000027&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=55&ts=1731778918210
2024-11-16 17:41:58,259 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:58,259 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:58,260 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:41:58,260 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18341934226954845792.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:58,260 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18341934226954845792.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,260 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-18341934226954845792.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,260 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:58,265 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:58,267 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (op_hsync=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_put_request=1) (committer_magic_marker_put=0) (object_put_request.failures=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=1) (op_abort=0) (stream_write_total_time=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=34) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=34) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=34, mean=34.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:58,268 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:58,268 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:41:58,269 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:41:58,271 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:58,272 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:58,276 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:41:58,277 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:41:58,277 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:41:58,278 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:41:58,278 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:41:58,279 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:41:58,279 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:41:58,280 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:41:58,280 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:41:58,281 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:41:58,282 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='bf902d8b-f7a7-4840-8525-2aed70fa509f', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:58,282 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='bf902d8b-f7a7-4840-8525-2aed70fa509f', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:58,282 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='bf902d8b-f7a7-4840-8525-2aed70fa509f', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:41:58,282 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:41:58,282 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:41:58,282 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:41:58,283 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:41:58,283 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:41:58,283 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:41:58,283 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5c78fbe6]
2024-11-16 17:41:58,283 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5c78fbe6]
2024-11-16 17:41:58,283 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:41:58,284 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:41:58,284 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:41:58,284 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:41:58,284 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:41:58,284 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:41:58,284 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:41:58,284 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:58,285 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:41:58,285 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:41:58,285 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:41:58,285 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:41:58,289 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:41:58,289 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:41:58,289 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:41:58,290 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:41:58,291 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:41:58,291 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:41:58,291 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:41:58,291 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:41:58,292 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:58,292 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,292 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:58,293 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] bf902d8b-f7a7-4840-8525-2aed70fa509f-00000030 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/bf902d8b-f7a7-4840-8525-2aed70fa509f-00000030/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=bf902d8b-f7a7-4840-8525-2aed70fa509f-00000030&t0=54&fs=bf902d8b-f7a7-4840-8525-2aed70fa509f&t1=54&ts=1731778918292
2024-11-16 17:41:58,293 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:41:58,294 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:41:58,294 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:41:58,294 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:41:58,314 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:58,321 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778918000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:58,333 [s3a-transfer-fso-bucket-unbounded-pool9-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:58,337 [s3a-transfer-fso-bucket-unbounded-pool9-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,342 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:41:58,342 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:58,342 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:41:58,349 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:41:58,349 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:41:58,350 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:58,350 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:41:58,351 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,351 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,352 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:58,353 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [58] bf902d8b-f7a7-4840-8525-2aed70fa509f-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/bf902d8b-f7a7-4840-8525-2aed70fa509f-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-1099&id=bf902d8b-f7a7-4840-8525-2aed70fa509f-00000031&t0=57&fs=bf902d8b-f7a7-4840-8525-2aed70fa509f&t1=58&ts=1731778918333
2024-11-16 17:41:58,357 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:41:58,358 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,363 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,364 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:58,365 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [59] bf902d8b-f7a7-4840-8525-2aed70fa509f-00000031 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/bf902d8b-f7a7-4840-8525-2aed70fa509f-00000031/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-1099&id=bf902d8b-f7a7-4840-8525-2aed70fa509f-00000031&t0=57&fs=bf902d8b-f7a7-4840-8525-2aed70fa509f&t1=59&ts=1731778918333
2024-11-16 17:41:58,384 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:41:58,385 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.033s
2024-11-16 17:41:58,385 [s3a-transfer-fso-bucket-bounded-pool8-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,386 [s3a-transfer-fso-bucket-bounded-pool8-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,393 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_opened=0) (stream_read_total_bytes=2000) (stream_read_closed=0) (action_file_opened=1) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0) (action_executor_acquired.failures=0) (action_http_get_request=2) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=2) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (stream_read_bytes=2000) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain.failures=0) (action_executor_acquired=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=2) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_close=0) (stream_read_exceptions=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_incoming_ranges=4) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=0) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=21) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=33) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=54, mean=27.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:58,398 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:41:58,407 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:41:58,408 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:58,408 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@4d90428a[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:41:58,409 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:58,409 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics4-fso-bucket
2024-11-16 17:41:58,409 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:41:58,409 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5c78fbe6] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:58,409 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@5c78fbe6] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:58,412 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((object_list_request=0) (multipart_upload_started=0) (ignored_errors=0) (op_get_content_summary=0) (stream_read_close_operations=1) (object_delete_objects=0) (files_copied_bytes=0) (multipart_instantiated=0) (op_access.failures=0) (stream_write_total_data=0) (audit_access_check_failure=0) (committer_tasks_failed=0) (committer_commits_aborted=0) (stream_write_block_uploads_aborted=0) (committer_jobs_failed=0) (op_is_directory.failures=0) (op_createfile=0) (stream_read_remote_stream_aborted=0) (multipart_upload_part_put_bytes=0) (op_xattr_list.failures=0) (object_bulk_delete_request=0) (object_delete_request.failures=0) (stream_read_operations_incomplete=0) (multipart_upload_list=0) (op_rename.failures=0) (op_xattr_get_named_map.failures=0) (store_io_request=3) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (op_glob_status=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_skipped=0) (op_is_directory=0) (op_list_files.failures=0) (op_get_file_checksum=0) (fake_directories_deleted=0) (op_list_files=0) (object_multipart_aborted.failures=0) (stream_read_fully_operations=0) (op_xattr_get_named_map=0) (stream_read_bytes_discarded_in_abort=0) (files_created=0) (stream_read_seek_operations=0) (committer_commits_created=0) (committer_commit_job=0) (object_copy_requests=0) (op_openfile=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_unbuffered=0) (op_create.failures=0) (op_get_file_checksum.failures=0) (stream_write_block_uploads_committed=0) (files_deleted=0) (op_copy_from_local_file.failures=0) (object_put_request=0) (action_file_opened=1) (op_delete.failures=0) (committer_stage_file_upload.failures=0) (op_mkdirs.failures=0) (delegation_tokens_issued=0) (action_http_get_request=2) (committer_load_single_pending_file=0) (action_executor_acquired=0) (multipart_upload_completed=0) (op_create_non_recursive=0) (op_xattr_get_named=0) (op_delete=0) (stream_read_bytes=2000) (op_get_file_status.failures=0) (audit_failure=0) (stream_read_operations=0) (op_get_file_status=1) (op_create=0) (op_is_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_exists=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list=0) (action_http_get_request.failures=0) (store_io_retry=0) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_close=0) (committer_magic_files_created=0) (op_hsync=0) (audit_request_execution=3) (stream_read_opened=0) (stream_read_closed=0) (object_metadata_request=1) (object_continue_list_request=0) (committer_jobs_completed=0) (stream_read_vectored_incoming_ranges=4) (object_put_bytes=0) (object_multipart_aborted=0) (committer_commit_job.failures=0) (op_get_delegation_token=0) (committer_magic_marker_put.failures=0) (op_rename=0) (committer_commits.failures=0) (multipart_upload_part_put=0) (stream_read_seek_policy_changed=1) (stream_read_seek_backward_operations=0) (committer_bytes_committed=0) (files_copied=0) (store_io_throttled=0) (audit_span_creation=3) (stream_write_exceptions=0) (committer_commits_reverted=0) (directories_deleted=0) (object_bulk_delete_request.failures=0) (op_open=1) (delegation_tokens_issued.failures=0) (committer_bytes_uploaded=0) (op_copy_from_local_file=0) (object_multipart_initiated.failures=0) (committer_load_single_pending_file.failures=0) (op_list_located_status=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain=0) (op_xattr_get_named.failures=0) (stream_write_total_time=0) (op_get_delegation_token.failures=0) (op_glob_status.failures=0) (object_multipart_initiated=0) (store_exists_probe=0) (op_abort=0) (stream_write_queue_duration=0) (op_hflush=0) (stream_read_vectored_operations=2) (multipart_upload_list.failures=0) (committer_materialize_file.failures=0) (op_xattr_get_map.failures=0) (stream_write_queue_duration.failures=0) (action_file_opened.failures=0) (object_put_request_completed=0) (files_delete_rejected=0) (action_http_head_request.failures=0) (op_list_status.failures=0) (object_select_requests=0) (object_continue_list_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (store_exists_probe.failures=0) (op_mkdirs=0) (stream_write_bytes=0) (object_delete_request=0) (stream_aborted=0) (committer_tasks_completed=0) (op_exists.failures=0) (fake_directories_created=0) (stream_read_version_mismatches=0) (op_access=0) (stream_read_vectored_read_bytes_discarded=0) (op_get_content_summary.failures=0) (object_list_request.failures=0) (op_list_status=0) (stream_read_seek_forward_operations=0) (action_http_head_request=1) (stream_read_exceptions=0) (stream_read_total_bytes=2000) (committer_stage_file_upload=0) (committer_magic_marker_put=0) (op_createfile.failures=0) (stream_read_vectored_combined_ranges=2) (op_xattr_get_map=0) (object_put_request.failures=0) (directories_created=0) (op_abort.failures=0) (op_is_file=0) (committer_commits_completed=0) (committer_materialize_file=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_xattr_get_map.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.failures.min=-1) (op_xattr_list.min=-1) (op_create.failures.min=-1) (op_xattr_list.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (committer_materialize_file.min=-1) (op_is_file.min=-1) (op_list_files.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_access.min=-1) (op_list_files.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_load_single_pending_file.min=-1) (op_rename.min=-1) (action_file_opened.min=0) (object_multipart_initiated.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.min=23) (action_executor_acquired.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (multipart_upload_list.min=-1) (object_put_request.min=-1) (delegation_tokens_issued.min=-1) (op_is_file.failures.min=-1) (committer_stage_file_upload.min=-1) (op_glob_status.min=-1) (op_rename.failures.min=-1) (op_delete.min=-1) (object_put_request.failures.min=-1) (op_is_directory.min=-1) (op_createfile.failures.min=-1) (action_executor_acquired.min=-1) (op_createfile.min=-1) (object_bulk_delete_request.min=-1) (op_exists.failures.min=-1) (store_exists_probe.min=-1) (committer_magic_marker_put.min=-1) (op_delete.failures.min=-1) (action_http_head_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_mkdirs.min=-1) (object_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.min=-1) (object_list_request.min=-1) (op_create.min=-1) (stream_write_queue_duration.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.min=-1) (op_get_delegation_token.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.min=-1) (op_access.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_delete_request.min=-1) (op_mkdirs.failures.min=-1) (action_http_get_request.min=21) (action_http_head_request.min=22));
maximums=((object_bulk_delete_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_put_request.max=-1) (action_http_head_request.max=22) (multipart_upload_list.failures.max=-1) (op_is_directory.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_get_request.max=33) (op_get_file_checksum.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_file_status.max=23) (object_multipart_aborted.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_createfile.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.max=-1) (op_access.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.max=-1) (op_exists.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (op_create.failures.max=-1) (op_access.failures.max=-1) (op_glob_status.max=-1) (op_delete.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.failures.max=-1) (op_create.max=-1) (op_mkdirs.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_aborted.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_files.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_bulk_delete_request.max=-1) (op_mkdirs.failures.max=-1) (op_glob_status.failures.max=-1) (op_rename.max=-1) (op_delete.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_list.max=-1) (op_is_file.failures.max=-1) (op_xattr_get_map.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_get_content_summary.max=-1) (op_get_file_checksum.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (delegation_tokens_issued.failures.max=-1) (op_is_file.max=-1) (op_createfile.failures.max=-1) (op_abort.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_status.failures.max=-1) (delegation_tokens_issued.max=-1) (action_file_opened.max=0));
means=((object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=22, mean=22.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=23, mean=23.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=54, mean=27.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:58,413 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:58,413 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:58,413 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:58,414 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=54&ts=1731778918412
2024-11-16 17:41:58,421 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:58,421 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,422 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [54] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=54&ts=1731778918412
2024-11-16 17:41:58,438 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:41:58,438 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:58,438 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:58,439 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:58,439 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:58,439 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:58,439 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:58,439 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:58,440 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:58,440 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:58,440 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:58,440 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:58,441 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:58,441 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:58,441 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,442 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [62] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=62&ts=1731778918412
2024-11-16 17:41:58,453 [s3a-transfer-fso-bucket-unbounded-pool2-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:41:58,453 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:41:58,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:58,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:58,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:58,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778918253; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:58,454 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:58,454 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:58,455 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:58,455 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:58,465 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:58,466 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=63&ts=1731778918412
2024-11-16 17:41:58,488 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:41:58,488 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.022s
2024-11-16 17:41:58,490 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.022s
2024-11-16 17:41:58,490 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:58,490 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:58,490 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:58,490 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:58,490 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:58,490 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:58,491 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000032&t0=54&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=63&ts=1731778918412
2024-11-16 17:41:58,510 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.020s
2024-11-16 17:41:58,510 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.020s
2024-11-16 17:41:58,510 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.020s
2024-11-16 17:41:58,511 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.045s
2024-11-16 17:41:58,511 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.046s
2024-11-16 17:41:58,511 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.071s
2024-11-16 17:41:58,511 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:58,511 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:58,519 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:58,548 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 5, active threads = 0, queued tasks = 0, completed tasks = 5], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_opened=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_map=0) (store_io_retry=0) (ignored_errors=0) (store_exists_probe.failures=0) (committer_tasks_failed=0) (op_hflush=0) (audit_access_check_failure=0) (stream_write_block_uploads=5) (stream_read_vectored_combined_ranges=4) (files_deleted=5) (committer_bytes_uploaded=0) (op_glob_status.failures=0) (store_io_throttled=0) (stream_read_remote_stream_drain=0) (committer_commits_aborted=0) (action_http_head_request=13) (action_http_get_request=2) (object_delete_request=0) (stream_read_vectored_read_bytes_discarded=20) (multipart_instantiated=0) (audit_request_execution=55) (committer_bytes_committed=0) (op_createfile.failures=0) (op_is_directory=0) (object_put_request=10) (committer_stage_file_upload.failures=0) (committer_commit_job.failures=0) (committer_jobs_completed=0) (stream_read_version_mismatches=0) (stream_write_exceptions=0) (op_abort.failures=0) (op_xattr_get_named=0) (committer_commits_completed=0) (object_bulk_delete_request=10) (op_is_file.failures=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_close=0) (object_continue_list_request=0) (op_get_file_checksum.failures=0) (committer_tasks_completed=0) (op_delete=5) (committer_commit_job=0) (committer_load_single_pending_file=0) (multipart_upload_part_put=0) (stream_read_unbuffered=1) (object_multipart_initiated.failures=0) (stream_read_close_operations=3) (committer_materialize_file=0) (stream_read_seek_operations=0) (stream_read_bytes_backwards_on_seek=0) (op_xattr_get_named.failures=0) (object_delete_objects=10) (op_create_non_recursive=0) (stream_write_exceptions_completing_upload=0) (stream_read_fully_operations=0) (op_xattr_list=0) (op_get_content_summary.failures=0) (op_copy_from_local_file.failures=0) (op_get_file_status=0) (op_list_status.failures=0) (object_multipart_aborted=0) (op_get_delegation_token=0) (op_rename.failures=0) (stream_aborted=0) (files_copied_bytes=0) (op_get_file_checksum=0) (op_xattr_get_named_map=0) (op_copy_from_local_file=0) (stream_read_seek_backward_operations=0) (object_continue_list_request.failures=0) (stream_write_queue_duration.failures=0) (audit_failure=0) (stream_write_bytes=327680) (object_multipart_initiated=0) (stream_read_operations=0) (committer_commits_created=0) (stream_read_total_bytes=300) (stream_read_seek_bytes_discarded=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put_bytes=0) (op_openfile=0) (stream_write_total_time=0) (object_list_request.failures=0) (object_multipart_aborted.failures=0) (op_get_content_summary=0) (stream_read_remote_stream_aborted=0) (committer_commits.failures=0) (object_delete_request.failures=0) (committer_load_single_pending_file.failures=0) (multipart_upload_aborted=0) (op_create=5) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired.failures=0) (op_list_files.failures=0) (fake_directories_deleted=5) (stream_read_vectored_incoming_ranges=8) (op_access=0) (files_created=5) (stream_write_queue_duration=0) (op_createfile=0) (committer_jobs_failed=0) (audit_span_creation=19) (op_rename=0) (op_hsync=0) (committer_materialize_file.failures=0) (object_put_request.failures=0) (stream_read_operations_incomplete=0) (op_list_status=0) (op_xattr_get_named_map.failures=0) (action_file_opened=3) (stream_write_block_uploads_aborted=0) (committer_stage_file_upload=0) (op_access.failures=0) (object_copy_requests=0) (op_glob_status=0) (committer_magic_files_created=0) (object_metadata_request=13) (stream_write_total_data=655360) (op_open=3) (object_list_request=20) (stream_write_block_uploads_committed=0) (action_http_head_request.failures=0) (op_create.failures=0) (object_put_request_completed=10) (op_abort=0) (committer_commits_reverted=0) (committer_magic_marker_put=0) (op_get_delegation_token.failures=0) (op_get_file_status.failures=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_started=0) (stream_read_closed=0) (object_bulk_delete_request.failures=0) (op_is_directory.failures=0) (stream_read_exceptions=0) (files_copied=0) (op_delete.failures=0) (stream_read_bytes=300) (stream_read_remote_stream_drain.failures=0) (store_io_request=55) (delegation_tokens_issued=0) (op_list_files=0) (stream_read_vectored_operations=4) (object_put_bytes=327680) (action_http_get_request.failures=0) (op_exists=0) (directories_deleted=0) (op_xattr_get_map.failures=0) (stream_read_seek_policy_changed=4) (delegation_tokens_issued.failures=0) (multipart_upload_completed=0) (op_mkdirs=5) (store_exists_probe=0) (multipart_upload_list=0) (object_select_requests=0) (stream_read_seek_forward_operations=0) (directories_created=5) (op_list_located_status=0) (multipart_upload_list.failures=0) (op_is_file=0) (op_xattr_list.failures=0) (op_exists.failures=0) (op_mkdirs.failures=0) (fake_directories_created=0) (files_delete_rejected=0));
gauges=((object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_write_block_uploads_pending=5) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0));
minimums=((delegation_tokens_issued.min=-1) (action_http_head_request.min=4) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_directory.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_list_request.min=7) (op_rename.failures.min=-1) (action_http_head_request.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_named.failures.min=-1) (store_exists_probe.failures.min=-1) (op_glob_status.min=-1) (action_http_get_request.min=15) (object_multipart_aborted.failures.min=-1) (op_is_directory.min=-1) (op_delete.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_list.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.min=-1) (op_get_delegation_token.failures.min=-1) (op_createfile.failures.min=-1) (op_exists.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.failures.min=-1) (object_continue_list_request.min=-1) (op_list_status.min=-1) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.min=-1) (object_put_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_rename.min=-1) (op_get_file_checksum.min=-1) (multipart_upload_list.min=-1) (op_copy_from_local_file.min=-1) (object_delete_request.failures.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_files.failures.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.failures.min=-1) (object_bulk_delete_request.min=9) (op_access.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.min=-1) (op_get_file_status.min=-1) (object_put_request.min=34) (op_list_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.min=-1) (object_multipart_aborted.min=-1) (op_create.min=10) (op_delete.min=53) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_map.min=-1) (op_create.failures.min=-1) (op_mkdirs.min=24) (object_multipart_initiated.min=-1) (op_get_file_checksum.failures.min=-1) (op_mkdirs.failures.min=-1) (op_createfile.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_delegation_token.min=-1) (action_file_opened.min=4));
maximums=((action_http_head_request.failures.max=-1) (op_glob_status.failures.max=-1) (op_createfile.failures.max=-1) (op_exists.failures.max=-1) (committer_materialize_file.max=-1) (op_delete.max=87) (action_http_head_request.max=12) (delegation_tokens_issued.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_access.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (object_multipart_aborted.max=-1) (op_is_directory.max=-1) (action_file_opened.max=10) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.max=-1) (op_delete.failures.max=-1) (op_exists.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=62) (committer_materialize_file.failures.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_list_files.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_stage_file_upload.max=-1) (object_bulk_delete_request.failures.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.failures.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=28) (op_get_delegation_token.max=-1) (object_continue_list_request.failures.max=-1) (op_get_file_status.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_list_request.failures.max=-1) (op_abort.failures.max=-1) (op_access.max=-1) (object_bulk_delete_request.max=26) (op_xattr_get_map.failures.max=-1) (op_create.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_file.failures.max=-1) (op_createfile.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_status.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_is_file.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.failures.max=-1) (object_put_request.max=77) (op_get_content_summary.failures.max=-1) (object_multipart_initiated.max=-1) (object_list_request.max=185) (action_file_opened.failures.max=-1) (object_delete_request.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_map.max=-1) (op_abort.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_mkdirs.max=300) (op_get_file_checksum.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (op_xattr_list.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=10, sum=336, mean=33.6000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=13, sum=86, mean=6.6154)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=43, mean=21.5000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=20, sum=447, mean=22.3500)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=5, sum=433, mean=86.6000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=5, sum=117, mean=23.4000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=5, sum=322, mean=64.4000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=20, mean=6.6667)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=10, sum=151, mean=15.1000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:58,549 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:58,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:58,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:58,550 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:58,550 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,550 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=64&ts=1731778918549
2024-11-16 17:41:58,560 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:41:58,561 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:58,561 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:58,561 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:58,561 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:58,561 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=64&ts=1731778918549
2024-11-16 17:41:58,573 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:58,573 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:58,573 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:58,574 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:58,574 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000033&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=64&ts=1731778918549
2024-11-16 17:41:58,585 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:58,586 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:58,586 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:41:58,587 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:58,588 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:58,588 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,589 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:58,589 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,590 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000034 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000034&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=64&ts=1731778918587
2024-11-16 17:41:58,615 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.026s
2024-11-16 17:41:58,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,617 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:58,618 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13103278905958352418.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:58,620 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13103278905958352418.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (stream_write_exceptions=0) (op_abort=0) (action_executor_acquired.failures=0) (op_hsync=0) (stream_write_total_time=0) (action_executor_acquired=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (stream_write_queue_duration=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_initiated=0) (object_put_request=0) (object_multipart_aborted=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13103278905958352418.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,620 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:58,621 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:58,621 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13103278905958352418.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:58,622 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:58,623 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:58,623 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:58,624 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:58,624 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000034 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000034/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000034&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=65&ts=1731778918587
2024-11-16 17:41:58,701 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:58,702 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:58,702 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.079s
2024-11-16 17:41:58,703 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13103278905958352418.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:58,703 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13103278905958352418.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,703 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-13103278905958352418.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:58,703 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:58,704 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:58,705 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_put_request=1) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_hsync=0) (multipart_upload_completed.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (action_executor_acquired=0) (op_abort=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (committer_magic_marker_put=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=77) (op_abort.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=77) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=77, mean=77.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:58,705 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:58,707 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:41:58,707 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:41:58,710 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:58,710 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:58,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:41:58,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:41:58,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:41:58,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:41:58,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:41:58,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:41:58,713 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:41:58,721 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:41:58,721 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:41:58,722 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:41:58,722 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='b7d81f7b-f14a-482a-b1c5-dd4a0636afa1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:58,726 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='b7d81f7b-f14a-482a-b1c5-dd4a0636afa1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:41:58,726 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='b7d81f7b-f14a-482a-b1c5-dd4a0636afa1', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:41:58,726 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:41:58,727 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:41:58,727 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:41:58,727 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:41:58,728 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:41:58,728 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:41:58,729 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f200f75]
2024-11-16 17:41:58,729 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f200f75]
2024-11-16 17:41:58,729 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:41:58,730 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:41:58,730 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:41:58,730 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:41:58,731 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:41:58,731 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:41:58,731 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:41:58,732 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:41:58,732 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:41:58,732 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:41:58,732 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:41:58,733 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:41:58,735 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:41:58,735 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:41:58,736 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:41:58,736 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:41:58,736 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:41:58,736 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:41:58,737 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:41:58,737 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:41:58,737 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:41:58,737 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:58,738 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,739 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:58,739 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000037 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000037/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000037&t0=64&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=64&ts=1731778918738
2024-11-16 17:41:58,739 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:41:58,739 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:41:58,739 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:41:58,739 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:41:58,752 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:58,753 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778918000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:58,755 [s3a-transfer-fso-bucket-unbounded-pool11-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:58,755 [s3a-transfer-fso-bucket-unbounded-pool11-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,755 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:41:58,756 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:58,756 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:41:58,758 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,759 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,760 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:58,760 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [68] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038&t0=67&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=68&ts=1731778918754
2024-11-16 17:41:58,765 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,765 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,765 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:58,765 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [69] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-14435&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038&t0=67&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=69&ts=1731778918754
2024-11-16 17:41:58,770 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:41:58,778 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,779 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,779 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:58,780 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [71] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000038&t0=67&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=71&ts=1731778918754
2024-11-16 17:41:58,788 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.029s
2024-11-16 17:41:58,788 [s3a-transfer-fso-bucket-bounded-pool10-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,797 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.032s
2024-11-16 17:41:58,798 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:41:58,799 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:41:58,799 [s3a-transfer-fso-bucket-bounded-pool10-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,804 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.025s
2024-11-16 17:41:58,807 [s3a-transfer-fso-bucket-bounded-pool10-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:58,809 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=26));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=33));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=88, mean=29.3333)));

2024-11-16 17:41:58,809 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request=3) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=0) (stream_read_bytes=1424) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read.failures=0) (stream_read_closed=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_seek_operations=0) (stream_read_total_bytes=1424) (stream_read_vectored_operations=1) (stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (action_http_get_request.failures=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_close_operations=1) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_incoming_ranges=5) (stream_read_vectored_combined_ranges=3));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_file_opened.min=0) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=26) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1));
maximums=((action_file_opened.max=0) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=33) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=88, mean=29.3333)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:58,812 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778918000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:58,814 [s3a-transfer-fso-bucket-unbounded-pool11-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:58,814 [s3a-transfer-fso-bucket-unbounded-pool11-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,816 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:41:58,817 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:41:58,818 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,818 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=10240-65535&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039&t0=74&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=64&ts=1731778918814
2024-11-16 17:41:58,836 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.020s
2024-11-16 17:41:58,838 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:41:58,838 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:41:58,838 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:41:58,839 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:41:58,839 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:41:58,840 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:41:58,840 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:58,841 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://fso-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:41:58,842 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:41:58,842 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,842 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-8291&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039&t0=74&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=64&ts=1731778918814
2024-11-16 17:41:58,853 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.015s
2024-11-16 17:41:58,853 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:41:58,853 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:41:58,854 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:41:58,854 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:41:58,854 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:41:58,854 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:41:58,854 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:41:58,855 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,855 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=14336-14435&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039&t0=74&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=64&ts=1731778918814
2024-11-16 17:41:58,866 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.012s
2024-11-16 17:41:58,867 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:41:58,867 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:41:58,868 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:41:58,868 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:41:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:41:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:41:58,869 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:41:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,870 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039&t0=74&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=64&ts=1731778918814
2024-11-16 17:41:58,883 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.015s
2024-11-16 17:41:58,883 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:41:58,884 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:41:58,884 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:41:58,885 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:41:58,885 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:41:58,886 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:41:58,886 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:41:58,887 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:58,888 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1-00000039&t0=74&fs=b7d81f7b-f14a-482a-b1c5-dd4a0636afa1&t1=64&ts=1731778918814
2024-11-16 17:41:58,900 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.016s
2024-11-16 17:41:58,900 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:41:58,901 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:41:58,904 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=11)
(stream_read_remote_stream_aborted.min=2)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=18)
(stream_read_remote_stream_aborted.max=2)
(stream_read_remote_stream_drain.max=1));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=65, mean=13.0000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=2, mean=2.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=1, mean=0.3333)));

2024-11-16 17:41:58,905 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:41:58,905 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:41:58,906 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:41:58,907 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=0) (stream_read_seek_backward_operations=2) (stream_read_seek_operations=4) (stream_read_closed=4) (stream_aborted=1) (stream_read_total_bytes=1424) (stream_read_fully_operations=5) (stream_read_operations=5) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_policy_changed=2) (stream_read_remote_stream_drain=4) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_backwards_on_seek=14637) (stream_read_bytes=1424) (stream_read_operations_incomplete=0) (stream_read_vectored_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request=5) (stream_read_version_mismatches=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted=1) (stream_read_seek_bytes_skipped=44957) (action_http_get_request.failures=0) (stream_read_opened=5) (stream_read_seek_forward_operations=2) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_block_acquire_read=0) (action_file_opened=1) (action_executor_acquired.failures=0) (stream_read_unbuffered=0) (stream_read_block_read=0) (stream_read_prefetch_operations.failures=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=1) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_aborted.min=2) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.min=0) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=11) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=0) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=2) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=18));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=2, mean=0.5000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=65, mean=13.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=2, mean=2.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:58,910 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:41:58,915 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:41:58,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:58,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@1dceee91[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:41:58,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:41:58,916 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics5-fso-bucket
2024-11-16 17:41:58,917 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:41:58,917 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f200f75] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:58,917 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@f200f75] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:41:58,919 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : direct]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_vectored_combined_ranges=3) (fake_directories_created=0) (op_xattr_list.failures=0) (action_file_opened=2) (object_delete_request.failures=0) (object_multipart_initiated.failures=0) (op_is_file=0) (stream_read_seek_bytes_skipped=44957) (committer_tasks_completed=0) (stream_read_total_bytes=2848) (multipart_upload_aborted=0) (stream_write_block_uploads=0) (op_create.failures=0) (op_hflush=0) (stream_read_bytes_discarded_in_abort=55196) (committer_load_single_pending_file.failures=0) (committer_magic_marker_put=0) (delegation_tokens_issued.failures=0) (object_continue_list_request=0) (object_put_bytes=0) (multipart_upload_abort_under_path_invoked=0) (multipart_upload_completed=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (op_copy_from_local_file=0) (committer_bytes_uploaded=0) (op_list_files=0) (committer_commits_reverted=0) (files_copied_bytes=0) (committer_jobs_completed=0) (committer_commit_job=0) (op_list_files.failures=0) (files_copied=0) (multipart_upload_started=0) (stream_read_seek_backward_operations=2) (op_create=0) (op_access=0) (stream_read_closed=4) (stream_read_bytes_discarded_in_close=0) (stream_read_operations=5) (object_list_request=0) (op_createfile=0) (op_mkdirs.failures=0) (op_xattr_get_map=0) (op_get_delegation_token=0) (object_multipart_aborted.failures=0) (store_io_throttled=0) (op_exists=0) (object_bulk_delete_request=0) (op_get_file_status.failures=0) (op_xattr_get_named_map=0) (op_is_file.failures=0) (object_multipart_aborted=0) (object_continue_list_request.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (committer_commits_aborted=0) (multipart_upload_part_put=0) (stream_read_unbuffered=0) (audit_failure=0) (stream_read_seek_policy_changed=3) (stream_aborted=1) (op_get_content_summary.failures=0) (op_is_directory=0) (op_get_file_checksum=0) (stream_read_seek_operations=4) (fake_directories_deleted=0) (action_http_get_request.failures=0) (committer_tasks_failed=0) (stream_write_queue_duration=0) (op_exists.failures=0) (store_io_request=9) (multipart_upload_list=0) (op_xattr_get_named_map.failures=0) (object_put_request_completed=0) (multipart_upload_part_put_bytes=0) (op_abort=0) (stream_write_total_data=0) (stream_write_queue_duration.failures=0) (op_list_status=0) (files_deleted=0) (committer_commit_job.failures=0) (op_get_file_status=1) (op_createfile.failures=0) (object_delete_objects=0) (committer_commits_completed=0) (op_openfile=0) (committer_materialize_file.failures=0) (op_access.failures=0) (stream_read_remote_stream_drain.failures=0) (op_copy_from_local_file.failures=0) (action_http_head_request=1) (op_rename=0) (op_is_directory.failures=0) (object_bulk_delete_request.failures=0) (committer_load_single_pending_file=0) (op_xattr_get_map.failures=0) (stream_read_close_operations=2) (directories_created=0) (store_io_retry=0) (stream_read_remote_stream_aborted=1) (ignored_errors=0) (stream_read_remote_stream_drain=4) (committer_magic_files_created=0) (op_glob_status.failures=0) (stream_read_seek_bytes_discarded=0) (object_list_request.failures=0) (files_created=0) (stream_read_operations_incomplete=0) (stream_write_block_uploads_committed=0) (committer_jobs_failed=0) (op_glob_status=0) (stream_read_seek_forward_operations=2) (object_select_requests=0) (files_delete_rejected=0) (stream_read_bytes=2848) (op_rename.failures=0) (op_get_content_summary=0) (store_exists_probe=0) (object_multipart_initiated=0) (committer_stage_file_upload=0) (op_xattr_get_named.failures=0) (stream_read_version_mismatches=0) (committer_materialize_file=0) (op_list_located_status=0) (action_file_opened.failures=0) (stream_write_bytes=0) (stream_write_block_uploads_aborted=0) (op_xattr_list=0) (stream_read_remote_stream_aborted.failures=0) (op_delete.failures=0) (multipart_upload_list.failures=0) (directories_deleted=0) (op_mkdirs=0) (audit_access_check_failure=0) (op_xattr_get_named=0) (stream_read_exceptions=0) (object_copy_requests=0) (op_get_file_checksum.failures=0) (committer_bytes_committed=0) (object_delete_request=0) (op_abort.failures=0) (op_create_non_recursive=0) (op_delete=0) (stream_read_vectored_incoming_ranges=5) (op_get_delegation_token.failures=0) (action_executor_acquired.failures=0) (op_open=2) (action_http_head_request.failures=0) (op_list_status.failures=0) (committer_stage_file_upload.failures=0) (op_hsync=0) (object_metadata_request=1) (committer_commits_created=0) (stream_read_fully_operations=5) (audit_request_execution=9) (multipart_instantiated=0) (action_executor_acquired=0) (delegation_tokens_issued=0) (audit_span_creation=4) (stream_write_exceptions_completing_upload=0) (stream_read_opened=5) (committer_commits.failures=0) (object_put_request=0) (stream_read_bytes_backwards_on_seek=14637) (action_http_get_request=8) (stream_write_exceptions=0) (stream_write_total_time=0) (stream_read_vectored_operations=1) (store_exists_probe.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=0) (client_side_encryption_enabled=0));
minimums=((op_access.failures.min=-1) (action_http_head_request.min=13) (object_multipart_aborted.min=-1) (op_get_delegation_token.min=-1) (op_list_files.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=-1) (op_copy_from_local_file.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_glob_status.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.min=-1) (object_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (op_abort.failures.min=-1) (op_createfile.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.min=2) (op_list_status.min=-1) (op_xattr_get_named_map.min=-1) (action_file_opened.min=0) (multipart_upload_list.min=-1) (action_http_get_request.failures.min=-1) (op_is_directory.failures.min=-1) (object_delete_request.min=-1) (op_exists.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_map.min=-1) (object_put_request.failures.min=-1) (op_is_file.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_status.min=14) (op_xattr_list.min=-1) (op_rename.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.failures.min=-1) (op_mkdirs.min=-1) (op_exists.min=-1) (object_continue_list_request.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_access.min=-1) (op_get_content_summary.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_mkdirs.failures.min=-1) (op_is_file.failures.min=-1) (op_is_directory.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=-1) (store_exists_probe.min=-1) (object_continue_list_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_abort.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_drain.min=0) (committer_commit_job.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_files.min=-1) (op_glob_status.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_list.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.min=-1) (object_list_request.min=-1) (object_multipart_initiated.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.min=-1) (op_delete.failures.min=-1) (op_create.failures.min=-1) (action_http_get_request.min=11) (committer_magic_marker_put.min=-1) (op_create.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_glob_status.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_drain.max=1) (multipart_upload_list.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_initiated.max=-1) (store_exists_probe.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.max=33) (op_list_status.max=-1) (action_file_opened.failures.max=-1) (op_access.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_files.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.max=-1) (object_put_request.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_aborted.max=2) (op_abort.failures.max=-1) (op_mkdirs.max=-1) (committer_stage_file_upload.failures.max=-1) (object_continue_list_request.max=-1) (object_multipart_aborted.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_delegation_token.max=-1) (op_abort.max=-1) (stream_write_queue_duration.failures.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_file.max=-1) (action_executor_acquired.failures.max=-1) (op_create.max=-1) (op_xattr_get_map.failures.max=-1) (committer_commit_job.max=-1) (committer_load_single_pending_file.max=-1) (delegation_tokens_issued.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.failures.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.max=-1) (op_exists.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.max=13) (committer_materialize_file.max=-1) (object_put_request.failures.max=-1) (action_file_opened.max=0) (op_get_file_status.max=14) (op_access.failures.max=-1) (object_bulk_delete_request.max=-1) (op_get_content_summary.max=-1) (object_list_request.max=-1) (action_http_head_request.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (multipart_upload_list.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named.max=-1) (committer_stage_file_upload.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.failures.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (object_delete_request.max=-1) (op_createfile.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_status.failures.max=-1) (stream_write_queue_duration.max=-1) (op_rename.max=-1) (op_glob_status.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_createfile.max=-1));
means=((op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=153, mean=19.1250)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=13, mean=13.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=2, mean=2.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=14, mean=14.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=2, mean=0.5000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:58,920 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:58,920 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:58,920 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:58,921 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=64&ts=1731778918920
2024-11-16 17:41:58,926 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:58,926 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,926 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [64] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=64&ts=1731778918920
2024-11-16 17:41:58,934 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:41:58,936 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:58,936 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:58,937 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:58,937 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:58,937 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:58,938 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:58,938 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:58,939 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:58,939 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:58,939 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:58,940 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:58,940 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:58,940 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:58,941 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:58,941 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [76] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=76&ts=1731778918920
2024-11-16 17:41:58,956 [s3a-transfer-fso-bucket-unbounded-pool2-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:41:58,956 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.016s
2024-11-16 17:41:58,957 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:58,957 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:58,958 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:58,958 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778918689; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:58,958 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:58,959 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:58,959 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:58,960 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:58,960 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:58,961 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:58,961 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:58,962 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:58,962 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:58,962 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:58,963 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:58,963 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:58,964 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=77&ts=1731778918920
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.017s
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:58,979 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:58,980 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000040&t0=64&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=77&ts=1731778918920
2024-11-16 17:41:59,000 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.021s
2024-11-16 17:41:59,000 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.021s
2024-11-16 17:41:59,000 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.021s
2024-11-16 17:41:59,000 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.039s
2024-11-16 17:41:59,000 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.040s
2024-11-16 17:41:59,000 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.061s
2024-11-16 17:41:59,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:59,000 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:59,002 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:59,025 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 6, active threads = 0, queued tasks = 0, completed tasks = 6], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_aborted=0) (op_is_file.failures=0) (stream_write_exceptions=0) (stream_read_opened=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=4) (op_hflush=0) (stream_read_seek_backward_operations=0) (stream_write_total_time=0) (op_hsync=0) (multipart_upload_part_put=0) (op_get_file_status.failures=0) (op_is_directory.failures=0) (stream_read_unbuffered=1) (stream_read_vectored_combined_ranges=4) (committer_load_single_pending_file=0) (audit_failure=0) (committer_tasks_completed=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_read_seek_forward_operations=0) (files_deleted=6) (object_list_request.failures=0) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file.failures=0) (object_multipart_initiated.failures=0) (op_openfile=0) (action_http_head_request=15) (committer_commits_reverted=0) (object_delete_request=0) (store_io_request=65) (audit_request_execution=65) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_close=0) (committer_commits_aborted=0) (action_executor_acquired=0) (ignored_errors=0) (op_xattr_list.failures=0) (committer_stage_file_upload.failures=0) (stream_read_seek_operations=0) (action_file_opened=3) (directories_created=6) (object_metadata_request=15) (object_put_request_completed=12) (multipart_upload_part_put_bytes=0) (action_executor_acquired.failures=0) (op_get_delegation_token=0) (committer_jobs_completed=0) (action_http_get_request.failures=0) (op_xattr_get_named_map=0) (op_get_content_summary=0) (fake_directories_created=0) (op_rename.failures=0) (object_list_request=24) (committer_commits.failures=0) (op_xattr_get_named.failures=0) (committer_commits_completed=0) (object_put_request.failures=0) (op_is_file=0) (op_delete.failures=0) (op_open=3) (action_file_opened.failures=0) (committer_magic_files_created=0) (multipart_upload_list.failures=0) (store_exists_probe=0) (op_xattr_get_named_map.failures=0) (committer_jobs_failed=0) (multipart_upload_started=0) (multipart_upload_abort_under_path_invoked=0) (op_mkdirs.failures=0) (stream_write_block_uploads_aborted=0) (action_http_head_request.failures=0) (op_mkdirs=6) (files_copied=0) (stream_read_vectored_read_bytes_discarded=20) (op_createfile.failures=0) (op_glob_status=0) (op_delete=6) (committer_bytes_uploaded=0) (multipart_upload_list=0) (op_glob_status.failures=0) (stream_read_total_bytes=300) (directories_deleted=0) (audit_span_creation=22) (committer_tasks_failed=0) (stream_read_version_mismatches=0) (op_copy_from_local_file=0) (op_rename=0) (files_created=6) (stream_read_seek_policy_changed=4) (multipart_instantiated=0) (op_exists=0) (store_io_throttled=0) (op_create=6) (op_createfile=0) (stream_read_closed=0) (fake_directories_deleted=6) (stream_write_queue_duration=0) (stream_write_queue_duration.failures=0) (delegation_tokens_issued.failures=0) (committer_materialize_file.failures=0) (store_exists_probe.failures=0) (audit_access_check_failure=0) (object_bulk_delete_request.failures=0) (op_list_status=0) (op_is_directory=0) (op_list_files=0) (op_abort.failures=0) (stream_read_operations_incomplete=0) (op_get_delegation_token.failures=0) (committer_materialize_file=0) (op_xattr_get_map=0) (object_bulk_delete_request=12) (op_get_file_status=0) (object_multipart_aborted=0) (object_select_requests=0) (files_copied_bytes=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=300) (stream_read_fully_operations=0) (stream_read_exceptions=0) (committer_bytes_committed=0) (op_xattr_get_named=0) (op_access.failures=0) (stream_aborted=0) (stream_write_bytes=393216) (stream_read_bytes_discarded_in_abort=0) (stream_write_total_data=786432) (stream_read_seek_bytes_discarded=0) (stream_read_seek_bytes_skipped=0) (object_copy_requests=0) (committer_commits_created=0) (op_xattr_list=0) (stream_read_remote_stream_aborted.failures=0) (op_get_file_checksum=0) (stream_read_vectored_incoming_ranges=8) (object_delete_request.failures=0) (op_list_files.failures=0) (op_list_located_status=0) (op_create.failures=0) (stream_write_block_uploads_committed=0) (stream_write_exceptions_completing_upload=0) (stream_read_remote_stream_drain=0) (committer_commit_job.failures=0) (op_list_status.failures=0) (object_put_request=12) (delegation_tokens_issued=0) (stream_write_block_uploads=6) (committer_stage_file_upload=0) (stream_read_close_operations=3) (multipart_upload_completed=0) (op_get_content_summary.failures=0) (op_access=0) (op_create_non_recursive=0) (committer_commit_job=0) (committer_magic_marker_put.failures=0) (action_http_get_request=2) (object_put_bytes=393216) (op_abort=0) (object_continue_list_request.failures=0) (object_continue_list_request=0) (op_xattr_get_map.failures=0) (object_delete_objects=12) (object_multipart_initiated=0) (store_io_retry=0) (stream_read_operations=0) (op_get_file_checksum.failures=0) (files_delete_rejected=0) (op_exists.failures=0));
gauges=((stream_write_block_uploads_pending=6) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_map.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_delegation_token.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_list.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.min=15) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.min=4) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_glob_status.min=-1) (op_xattr_list.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (op_mkdirs.min=24) (op_rename.failures.min=-1) (store_exists_probe.failures.min=-1) (op_glob_status.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.min=-1) (op_exists.failures.min=-1) (op_get_delegation_token.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.failures.min=-1) (op_rename.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.min=9) (action_file_opened.min=4) (op_get_file_status.failures.min=-1) (op_is_file.min=-1) (object_delete_request.failures.min=-1) (object_list_request.min=7) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.min=53) (op_list_status.failures.min=-1) (op_is_directory.min=-1) (action_http_head_request.failures.min=-1) (op_get_file_status.min=-1) (op_create.min=10) (object_continue_list_request.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (action_http_get_request.failures.min=-1) (op_list_files.failures.min=-1) (op_list_status.min=-1) (object_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_get_content_summary.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_put_request.min=77) (op_access.min=-1) (object_delete_request.min=-1) (op_is_directory.failures.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named.min=-1) (op_exists.min=-1) (committer_materialize_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_bulk_delete_request.failures.min=-1));
maximums=((op_createfile.failures.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_head_request.max=12) (action_executor_acquired.failures.max=-1) (op_createfile.max=-1) (object_list_request.max=185) (op_xattr_get_named_map.max=-1) (op_get_file_status.max=-1) (op_exists.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.failures.max=-1) (action_executor_acquired.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.max=-1) (action_http_get_request.max=28) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.max=-1) (object_multipart_initiated.failures.max=-1) (store_exists_probe.max=-1) (delegation_tokens_issued.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_access.max=-1) (object_continue_list_request.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_delete.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_glob_status.failures.max=-1) (op_abort.max=-1) (op_access.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.max=300) (op_list_files.max=-1) (object_put_request.max=77) (op_list_status.max=-1) (op_copy_from_local_file.max=-1) (object_delete_request.max=-1) (object_bulk_delete_request.max=26) (op_is_directory.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.failures.max=-1) (op_exists.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (action_file_opened.failures.max=-1) (object_list_request.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_create.max=62) (op_delete.max=87) (op_rename.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.failures.max=-1) (action_file_opened.max=10) (op_glob_status.max=-1) (op_get_delegation_token.max=-1) (object_delete_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.failures.max=-1));
means=((multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=15, sum=104, mean=6.9333)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=6, sum=471, mean=78.5000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=3, sum=20, mean=6.6667)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=6, sum=386, mean=64.3333)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=12, sum=187, mean=15.5833)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=12, sum=424, mean=35.3333)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=24, sum=505, mean=21.0417)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=43, mean=21.5000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=6, sum=148, mean=24.6667)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:59,026 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:59,026 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,026 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,026 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,026 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,026 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919026
2024-11-16 17:41:59,034 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:41:59,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,034 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,035 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919026
2024-11-16 17:41:59,038 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,038 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:59,038 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:59,038 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:59,039 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000041&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919026
2024-11-16 17:41:59,049 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:59,050 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:59,050 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:41:59,051 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:59,051 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,052 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,052 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,053 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,053 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000042 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000042&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919051
2024-11-16 17:41:59,065 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:41:59,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,066 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:59,066 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4764670470715927561.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:59,070 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4764670470715927561.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (op_abort=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (op_abort.failures=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (op_hflush=0) (stream_write_total_time=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4764670470715927561.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,070 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,071 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:59,071 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4764670470715927561.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:59,072 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:59,072 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:59,072 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:59,072 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:59,073 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000042 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000042/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000042&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=79&ts=1731778919051
2024-11-16 17:41:59,114 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:59,115 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:59,115 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:41:59,115 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4764670470715927561.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:59,115 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4764670470715927561.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,115 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4764670470715927561.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,116 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:59,116 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,118 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (object_put_request.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (op_hsync=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (op_abort=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=42) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_put_request.max=42) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:59,119 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:59,120 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,120 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,120 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:59,120 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919120
2024-11-16 17:41:59,131 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:59,131 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:59,132 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,132 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:59,132 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:59,132 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:41:59,133 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:41:59,134 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:41:59,134 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:41:59,134 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,134 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,134 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,135 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:59,135 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=80&ts=1731778919120
2024-11-16 17:41:59,135 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-65535&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000043&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919120
2024-11-16 17:41:59,158 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.024s
2024-11-16 17:41:59,158 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:41:59,158 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:41:59,161 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.026s
2024-11-16 17:41:59,161 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:41:59,167 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,167 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:41:59,167 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:41:59,167 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:41:59,167 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7442 bytes
2024-11-16 17:41:59,167 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:41:59,167 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:41:59,167 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:41:59,168 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8742 bytes
2024-11-16 17:41:59,168 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:41:59,168 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:41:59,169 [JUnit-testNormalReadAfterVectoredRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=65336) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=1) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_exceptions=0) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=0) (stream_read_block_read=0) (action_http_get_request=2) (stream_read_opened=1) (stream_read_total_bytes=65686) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=350) (stream_read_version_mismatches=0) (stream_read_remote_stream_drain=1) (action_executor_acquired.failures=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=2) (stream_read_block_read.failures=0) (stream_read_seek_policy_changed=1) (stream_read_operations=1) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (action_http_get_request.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_prefetch_operations=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read=0) (stream_read_vectored_operations=1) (stream_read_closed=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=11) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=23) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=11) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=27) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=50, mean=25.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=11, mean=11.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:59,171 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:59,171 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,171 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,172 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919171
2024-11-16 17:41:59,177 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,177 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,178 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [78] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=78&ts=1731778919171
2024-11-16 17:41:59,201 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.024s
2024-11-16 17:41:59,201 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:59,201 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:59,201 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:59,201 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:59,201 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:59,201 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:59,201 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:59,201 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:59,201 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:59,202 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:59,202 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:59,205 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:59,205 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:59,206 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,206 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [81] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=81&ts=1731778919171
2024-11-16 17:41:59,215 [s3a-transfer-fso-bucket-unbounded-pool2-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:41:59,215 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:41:59,215 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:59,216 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:59,216 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:59,216 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778919110; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:59,216 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:59,216 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:59,216 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:59,216 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:59,217 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:59,217 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:59,217 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:59,217 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:59,217 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,217 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,217 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:59,217 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,218 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=82&ts=1731778919171
2024-11-16 17:41:59,230 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,231 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000044&t0=78&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=82&ts=1731778919171
2024-11-16 17:41:59,240 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:41:59,240 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:41:59,240 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:41:59,240 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:41:59,240 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:41:59,241 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.040s
2024-11-16 17:41:59,241 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:59,241 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:59,242 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:59,258 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 7, active threads = 0, queued tasks = 0, completed tasks = 7], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_get_named_map=0) (op_get_file_checksum=0) (op_xattr_get_map=0) (committer_magic_marker_put.failures=0) (committer_stage_file_upload.failures=0) (multipart_upload_part_put_bytes=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_aborted=0) (directories_deleted=0) (stream_read_seek_forward_operations=0) (stream_write_total_data=917504) (stream_write_total_time=0) (op_list_located_status=0) (op_list_files=0) (stream_read_operations_incomplete=0) (op_get_delegation_token=0) (op_mkdirs=7) (committer_bytes_uploaded=0) (op_list_status=0) (op_is_directory=0) (committer_materialize_file=0) (store_io_retry=0) (audit_request_execution=78) (object_delete_request=0) (stream_read_opened=1) (multipart_upload_list.failures=0) (op_hsync=0) (object_put_request=14) (stream_read_closed=1) (files_copied=0) (op_is_file.failures=0) (files_copied_bytes=0) (op_is_file=0) (object_select_requests=0) (action_http_head_request=18) (object_list_request.failures=0) (stream_read_close_operations=4) (op_open=4) (action_file_opened.failures=0) (op_create_non_recursive=0) (action_executor_acquired=0) (delegation_tokens_issued=0) (op_exists.failures=0) (stream_read_vectored_operations=5) (stream_read_version_mismatches=0) (action_http_get_request.failures=0) (committer_commit_job=0) (committer_stage_file_upload=0) (files_created=7) (op_get_file_status.failures=0) (op_exists=0) (action_file_opened=4) (committer_commits_completed=0) (op_create=7) (object_bulk_delete_request.failures=0) (op_glob_status=0) (op_copy_from_local_file=0) (store_exists_probe.failures=0) (op_is_directory.failures=0) (stream_read_vectored_read_bytes_discarded=30) (op_delete.failures=0) (files_deleted=7) (op_delete=7) (object_multipart_aborted=0) (committer_jobs_failed=0) (object_put_request.failures=0) (committer_magic_files_created=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=458752) (op_openfile=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (committer_bytes_committed=0) (stream_read_fully_operations=0) (stream_write_block_uploads=7) (fake_directories_deleted=7) (stream_aborted=0) (stream_read_vectored_incoming_ranges=10) (op_xattr_list=0) (stream_read_vectored_combined_ranges=5) (stream_read_seek_backward_operations=0) (op_list_status.failures=0) (stream_read_unbuffered=1) (committer_materialize_file.failures=0) (stream_write_queue_duration=0) (committer_load_single_pending_file=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_bulk_delete_request=14) (action_http_head_request.failures=0) (object_delete_request.failures=0) (stream_read_total_bytes=65986) (op_abort=0) (object_list_request=28) (object_put_request_completed=14) (action_http_get_request=4) (op_xattr_get_named=0) (op_list_files.failures=0) (object_copy_requests=0) (committer_commits_reverted=0) (multipart_upload_started=0) (stream_read_exceptions=0) (committer_commits_created=0) (op_createfile.failures=0) (committer_commits_aborted=0) (op_createfile=0) (stream_read_remote_stream_drain=1) (stream_write_queue_duration.failures=0) (multipart_upload_list=0) (committer_commit_job.failures=0) (committer_commits.failures=0) (committer_tasks_completed=0) (stream_read_seek_policy_changed=5) (audit_access_check_failure=0) (committer_load_single_pending_file.failures=0) (op_get_content_summary=0) (store_exists_probe=0) (op_get_file_status=0) (stream_read_seek_operations=0) (ignored_errors=0) (stream_read_bytes_discarded_in_close=65336) (fake_directories_created=0) (directories_created=7) (stream_write_block_uploads_aborted=0) (audit_failure=0) (object_continue_list_request.failures=0) (files_delete_rejected=0) (op_xattr_get_map.failures=0) (op_rename=0) (stream_read_remote_stream_drain.failures=0) (op_access.failures=0) (object_multipart_initiated.failures=0) (op_xattr_get_named.failures=0) (multipart_instantiated=0) (op_rename.failures=0) (object_continue_list_request=0) (committer_tasks_failed=0) (committer_jobs_completed=0) (op_glob_status.failures=0) (op_abort.failures=0) (op_create.failures=0) (audit_span_creation=26) (stream_read_bytes_discarded_in_abort=0) (stream_write_block_uploads_committed=0) (store_io_request=78) (op_get_file_checksum.failures=0) (stream_read_bytes=650) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file.failures=0) (store_io_throttled=0) (op_xattr_get_named_map.failures=0) (multipart_upload_aborted=0) (op_mkdirs.failures=0) (object_multipart_aborted.failures=0) (delegation_tokens_issued.failures=0) (stream_read_operations=1) (object_delete_objects=14) (op_hflush=0) (op_get_content_summary.failures=0) (op_access=0) (object_put_bytes=458752) (object_metadata_request=18) (op_xattr_list.failures=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=7) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0));
minimums=((object_continue_list_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_is_directory.min=-1) (op_access.min=-1) (op_create.min=10) (op_get_file_checksum.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.min=-1) (object_delete_request.failures.min=-1) (op_abort.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_list.failures.min=-1) (op_createfile.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (op_mkdirs.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.min=-1) (op_glob_status.min=-1) (committer_commit_job.min=-1) (store_exists_probe.failures.min=-1) (action_http_head_request.min=4) (action_http_get_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_mkdirs.min=24) (store_exists_probe.min=-1) (op_delete.min=40) (op_list_files.min=-1) (object_put_request.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.min=7) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_list.min=-1) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_createfile.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_list_request.failures.min=-1) (op_list_status.failures.min=-1) (action_file_opened.min=11) (object_delete_request.min=-1) (object_continue_list_request.min=-1) (object_put_request.min=42) (op_get_delegation_token.failures.min=-1) (op_get_delegation_token.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_map.min=-1) (op_exists.min=-1) (op_access.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_map.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_rename.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.min=9) (object_multipart_aborted.min=-1) (op_exists.failures.min=-1) (op_list_status.min=-1) (op_get_file_status.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_create.failures.min=-1) (multipart_upload_list.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_file_opened.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.min=-1) (op_copy_from_local_file.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_get_request.min=23) (op_is_file.failures.min=-1));
maximums=((committer_load_single_pending_file.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_list_request.max=185) (committer_load_single_pending_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (op_delete.failures.max=-1) (op_create.max=62) (op_get_file_checksum.failures.max=-1) (op_get_file_status.max=-1) (op_copy_from_local_file.failures.max=-1) (op_createfile.max=-1) (op_get_file_status.failures.max=-1) (op_is_directory.max=-1) (action_http_get_request.max=28) (op_access.max=-1) (op_list_status.max=-1) (op_access.failures.max=-1) (object_bulk_delete_request.max=26) (op_list_files.failures.max=-1) (op_mkdirs.max=300) (committer_magic_marker_put.failures.max=-1) (op_exists.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.failures.max=-1) (op_is_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.max=-1) (action_executor_acquired.failures.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.max=-1) (op_create.failures.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named_map.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (action_http_head_request.max=12) (action_http_get_request.failures.max=-1) (op_rename.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (object_put_request.failures.max=-1) (op_is_file.max=-1) (stream_read_remote_stream_drain.max=1) (committer_stage_file_upload.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.max=-1) (op_xattr_list.max=-1) (op_get_file_checksum.max=-1) (object_put_request.max=77) (op_copy_from_local_file.max=-1) (op_get_delegation_token.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.max=-1) (action_file_opened.max=11) (op_rename.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.failures.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_aborted.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_delete.max=87));
means=((op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=7, sum=426, mean=60.8571)) (op_create.mean=(samples=7, sum=163, mean=23.2857)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=93, mean=23.2500)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=7, sum=496, mean=70.8571)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=28, sum=558, mean=19.9286)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=4, sum=31, mean=7.7500)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=18, sum=125, mean=6.9444)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=14, sum=208, mean=14.8571)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=14, sum=476, mean=34.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:59,259 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:59,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,260 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,261 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,261 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=83&ts=1731778919259
2024-11-16 17:41:59,270 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:41:59,270 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,271 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,271 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,271 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,271 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=83&ts=1731778919259
2024-11-16 17:41:59,274 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,274 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:59,275 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:59,275 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:59,275 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000045&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=83&ts=1731778919259
2024-11-16 17:41:59,283 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:59,284 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:59,284 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:41:59,284 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:59,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,285 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,286 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000046 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000046&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=83&ts=1731778919285
2024-11-16 17:41:59,292 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:41:59,292 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,292 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:59,293 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11384714169514227099.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:59,294 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11384714169514227099.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_block_uploads=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (op_abort.failures=0) (object_multipart_aborted=0) (op_hflush=0) (multipart_upload_completed=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_multipart_aborted.failures=0) (op_hsync=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (op_abort=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11384714169514227099.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,294 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,294 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:59,294 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11384714169514227099.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:59,295 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:59,295 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:59,295 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:59,295 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:59,295 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000046 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000046/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000046&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=84&ts=1731778919285
2024-11-16 17:41:59,317 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:59,317 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:59,318 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.023s
2024-11-16 17:41:59,318 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11384714169514227099.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:59,318 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11384714169514227099.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,318 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11384714169514227099.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,318 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:59,319 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,320 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (action_executor_acquired=0) (op_abort=0) (stream_write_queue_duration=0) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_put_request=1) (action_executor_acquired.failures=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=22) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=22) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=22, mean=22.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:59,321 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:59,329 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,329 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,330 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:59,330 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [85] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000047 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000047/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000047&t0=85&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=85&ts=1731778919329
2024-11-16 17:41:59,334 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:59,334 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:59,334 [s3a-transfer-fso-bucket-unbounded-pool2-t8] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,334 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:41:59,336 [JUnit-testNegativeLengthRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_vectored_read_bytes_discarded=0) (action_executor_acquired=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_seek_forward_operations=0) (stream_read_opened=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_version_mismatches=0) (stream_read_operations=0) (stream_read_total_bytes=0) (stream_read_unbuffered=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (stream_read_vectored_operations=0) (stream_read_block_read.failures=0) (stream_read_closed=0) (action_file_opened=1) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0) (action_http_get_request=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=5) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=5) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:59,338 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:59,338 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,338 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,338 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=83&ts=1731778919337
2024-11-16 17:41:59,341 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,341 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,341 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [83] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=83&ts=1731778919337
2024-11-16 17:41:59,347 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:41:59,347 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:59,347 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:59,347 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:59,347 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:59,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:59,347 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:59,348 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:59,348 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:59,348 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:59,348 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:59,348 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:59,348 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:59,348 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:59,348 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,348 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [86] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=86&ts=1731778919337
2024-11-16 17:41:59,356 [s3a-transfer-fso-bucket-unbounded-pool2-t9] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:41:59,357 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:41:59,358 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:59,358 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:59,358 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:59,358 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778919313; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:59,358 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:59,358 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:59,358 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:59,359 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:59,359 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:59,359 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:59,359 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:59,359 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:59,359 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,359 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,359 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:59,360 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,360 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=87&ts=1731778919337
2024-11-16 17:41:59,368 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:41:59,368 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:41:59,368 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.009s
2024-11-16 17:41:59,369 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:59,369 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:59,369 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,369 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,369 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:59,369 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,369 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000048&t0=83&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=87&ts=1731778919337
2024-11-16 17:41:59,377 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:41:59,377 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:41:59,378 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:41:59,378 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:41:59,378 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:41:59,378 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:41:59,378 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:59,378 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:59,380 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:59,394 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_part_put_bytes=0) (committer_bytes_uploaded=0) (stream_write_total_data=1048576) (multipart_upload_list=0) (stream_read_vectored_incoming_ranges=10) (op_list_located_status=0) (op_exists.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads_aborted=0) (op_create_non_recursive=0) (stream_read_seek_forward_operations=0) (op_delete.failures=0) (op_glob_status.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_abort_under_path_invoked=0) (object_multipart_initiated=0) (committer_bytes_committed=0) (op_create.failures=0) (stream_read_fully_operations=0) (stream_write_queue_duration=0) (stream_read_bytes=650) (action_executor_acquired.failures=0) (stream_read_unbuffered=1) (op_open=5) (action_http_head_request.failures=0) (stream_read_opened=1) (stream_read_vectored_read_bytes_discarded=30) (op_get_file_checksum.failures=0) (op_mkdirs.failures=0) (op_rename.failures=0) (op_list_files=0) (stream_read_remote_stream_drain=1) (op_get_file_status=0) (op_exists=0) (object_list_request=32) (files_copied=0) (op_mkdirs=8) (committer_load_single_pending_file=0) (stream_write_exceptions_completing_upload=0) (stream_read_vectored_combined_ranges=5) (object_multipart_aborted=0) (committer_magic_files_created=0) (committer_commits.failures=0) (op_xattr_get_named_map.failures=0) (op_rename=0) (directories_deleted=0) (committer_jobs_completed=0) (object_put_request=16) (op_delete=8) (action_http_get_request=4) (audit_access_check_failure=0) (object_put_bytes=524288) (op_get_delegation_token=0) (committer_materialize_file=0) (stream_read_bytes_discarded_in_close=65336) (stream_read_seek_bytes_skipped=0) (files_deleted=8) (object_bulk_delete_request=16) (op_abort.failures=0) (op_access.failures=0) (stream_read_close_operations=5) (audit_span_creation=30) (files_copied_bytes=0) (store_io_throttled=0) (op_list_status=0) (stream_read_exceptions=0) (object_copy_requests=0) (object_list_request.failures=0) (stream_read_seek_backward_operations=0) (committer_stage_file_upload.failures=0) (op_glob_status=0) (stream_read_remote_stream_aborted.failures=0) (op_get_content_summary.failures=0) (multipart_upload_completed=0) (op_hsync=0) (op_is_directory=0) (action_http_head_request=21) (files_delete_rejected=0) (op_get_delegation_token.failures=0) (stream_read_vectored_operations=5) (action_file_opened=5) (op_xattr_get_map=0) (object_delete_objects=16) (directories_created=8) (audit_request_execution=89) (stream_read_remote_stream_aborted=0) (committer_commits_completed=0) (fake_directories_deleted=8) (stream_read_version_mismatches=0) (committer_commits_created=0) (op_copy_from_local_file.failures=0) (committer_stage_file_upload=0) (delegation_tokens_issued=0) (op_openfile=0) (op_list_files.failures=0) (op_abort=0) (store_exists_probe.failures=0) (stream_read_operations=1) (stream_write_block_uploads_committed=0) (stream_read_seek_policy_changed=6) (committer_commits_aborted=0) (store_io_retry=0) (op_list_status.failures=0) (op_xattr_list.failures=0) (committer_commit_job=0) (op_xattr_list=0) (op_xattr_get_named.failures=0) (delegation_tokens_issued.failures=0) (committer_materialize_file.failures=0) (stream_write_bytes=524288) (op_xattr_get_map.failures=0) (committer_magic_marker_put.failures=0) (stream_read_operations_incomplete=0) (object_put_request.failures=0) (stream_read_seek_operations=0) (op_xattr_get_named=0) (stream_read_total_bytes=65986) (object_metadata_request=21) (committer_jobs_failed=0) (stream_read_closed=1) (ignored_errors=0) (stream_read_bytes_backwards_on_seek=0) (fake_directories_created=0) (stream_write_queue_duration.failures=0) (object_bulk_delete_request.failures=0) (multipart_upload_list.failures=0) (action_file_opened.failures=0) (op_create=8) (committer_tasks_failed=0) (stream_read_remote_stream_drain.failures=0) (op_copy_from_local_file=0) (action_executor_acquired=0) (stream_aborted=0) (object_delete_request.failures=0) (audit_failure=0) (object_continue_list_request=0) (multipart_upload_part_put=0) (multipart_upload_started=0) (op_hflush=0) (op_createfile.failures=0) (op_access=0) (object_select_requests=0) (op_is_file=0) (object_continue_list_request.failures=0) (object_delete_request=0) (op_get_file_checksum=0) (stream_read_bytes_discarded_in_abort=0) (files_created=8) (committer_commit_job.failures=0) (stream_write_block_uploads=8) (op_createfile=0) (stream_write_total_time=0) (multipart_upload_aborted=0) (committer_commits_reverted=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (committer_load_single_pending_file.failures=0) (committer_tasks_completed=0) (op_get_content_summary=0) (op_is_file.failures=0) (op_is_directory.failures=0) (op_get_file_status.failures=0) (action_http_get_request.failures=0) (store_exists_probe=0) (multipart_instantiated=0) (store_io_request=89) (object_put_request_completed=16) (op_xattr_get_named_map=0) (stream_read_seek_bytes_discarded=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=8) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0));
minimums=((op_copy_from_local_file.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_put_request.min=22) (object_multipart_initiated.min=-1) (op_get_file_status.min=-1) (action_http_get_request.min=23) (op_exists.failures.min=-1) (object_delete_request.failures.min=-1) (op_access.min=-1) (op_delete.min=31) (op_delete.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.failures.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_map.min=-1) (object_put_request.failures.min=-1) (multipart_upload_list.min=-1) (object_list_request.min=6) (op_is_directory.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_xattr_list.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_list.min=-1) (committer_stage_file_upload.min=-1) (op_list_status.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_head_request.min=3) (op_is_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_abort.min=-1) (op_get_content_summary.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_create.min=8) (op_is_directory.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_list_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_createfile.min=-1) (op_get_file_checksum.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (delegation_tokens_issued.min=-1) (op_get_file_checksum.min=-1) (object_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (committer_commit_job.min=-1) (action_http_head_request.failures.min=-1) (op_access.failures.min=-1) (op_mkdirs.min=24) (committer_stage_file_upload.failures.min=-1) (action_file_opened.min=5) (op_rename.min=-1) (op_list_files.min=-1) (op_is_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_list_status.min=-1) (object_bulk_delete_request.min=8) (store_exists_probe.failures.min=-1) (op_abort.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_continue_list_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.failures.min=-1) (op_list_files.failures.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_glob_status.min=-1));
maximums=((delegation_tokens_issued.max=-1) (object_put_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_status.max=-1) (op_exists.max=-1) (op_is_file.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (action_file_opened.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (op_createfile.failures.max=-1) (store_exists_probe.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_list.failures.max=-1) (action_http_get_request.max=28) (committer_load_single_pending_file.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.max=12) (op_abort.max=-1) (op_delete.max=87) (object_multipart_initiated.max=-1) (op_copy_from_local_file.max=-1) (committer_commit_job.max=-1) (op_get_content_summary.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.failures.max=-1) (op_exists.failures.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=26) (stream_write_queue_duration.failures.max=-1) (op_create.failures.max=-1) (committer_stage_file_upload.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=77) (op_xattr_get_named_map.failures.max=-1) (op_mkdirs.max=300) (op_copy_from_local_file.failures.max=-1) (action_http_head_request.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_file_opened.max=11) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_list_request.failures.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_delegation_token.max=-1) (op_list_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.max=1) (op_delete.failures.max=-1) (op_xattr_get_named.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.max=-1) (op_create.max=62) (multipart_upload_list.failures.max=-1) (op_get_file_checksum.max=-1) (action_http_get_request.failures.max=-1) (object_list_request.max=185) (op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.failures.max=-1) (op_createfile.max=-1) (committer_commit_job.failures.max=-1) (multipart_upload_list.max=-1) (action_executor_acquired.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_status.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=4, sum=93, mean=23.2500)) (op_mkdirs.mean=(samples=8, sum=521, mean=65.1250)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=32, sum=588, mean=18.3750)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=16, sum=224, mean=14.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=21, sum=134, mean=6.3810)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=8, sum=457, mean=57.1250)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=8, sum=171, mean=21.3750)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=5, sum=36, mean=7.2000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=16, sum=506, mean=31.6250)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:59,394 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:59,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,394 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,395 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,395 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,395 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=88&ts=1731778919394
2024-11-16 17:41:59,403 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:41:59,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,403 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,404 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=88&ts=1731778919394
2024-11-16 17:41:59,407 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,408 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:59,408 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:59,408 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:59,408 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000049&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=88&ts=1731778919394
2024-11-16 17:41:59,417 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:59,417 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:59,417 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:41:59,417 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:59,418 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,418 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,418 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,418 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,418 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000050 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000050&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=88&ts=1731778919418
2024-11-16 17:41:59,429 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:41:59,429 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,429 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:59,430 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6449533430743894763.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:59,431 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6449533430743894763.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_hsync=0) (stream_write_total_data=0) (stream_write_queue_duration=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (op_hflush=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (op_abort=0) (object_put_request.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1));
maximums=((committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6449533430743894763.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,431 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,431 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:59,431 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6449533430743894763.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:59,432 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:59,432 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:59,432 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:59,432 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:59,432 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000050 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000050/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000050&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=89&ts=1731778919418
2024-11-16 17:41:59,474 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:59,475 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:59,475 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:41:59,475 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6449533430743894763.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:59,475 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6449533430743894763.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,475 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-6449533430743894763.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,475 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:59,476 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,477 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=1) (op_hsync=0) (action_executor_acquired=0) (op_abort.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.min=-1) (object_put_request.min=42) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=42) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:59,477 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:59,478 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,478 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,479 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:59,479 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000051 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000051&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=88&ts=1731778919478
2024-11-16 17:41:59,484 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:59,485 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:59,485 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,486 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:41:59,486 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:59,487 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:41:59,487 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:41:59,487 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,488 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,488 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:59,488 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000051 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000051/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-999&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000051&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=90&ts=1731778919478
2024-11-16 17:41:59,498 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:41:59,500 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,500 [JUnit-testVectoredReadMultipleRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_discarded=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_skipped=0) (stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=1) (action_executor_acquired.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=1000) (stream_read_operations_incomplete=0) (stream_read_vectored_operations=1) (stream_read_close_operations=1) (action_executor_acquired=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_incoming_ranges=10) (stream_read_bytes=1000) (stream_read_unbuffered=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read=0) (stream_read_vectored_read_bytes_discarded=0) (action_file_opened=1) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_drain=0) (action_http_get_request=1) (action_file_opened.failures=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.failures.min=-1) (action_http_get_request.min=10) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=7) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=10) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=7) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=10, mean=10.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:59,503 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:59,503 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,503 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,503 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=88&ts=1731778919503
2024-11-16 17:41:59,510 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,510 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,510 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [88] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=88&ts=1731778919503
2024-11-16 17:41:59,517 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:41:59,518 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:59,518 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:59,518 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:59,518 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:59,518 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:59,518 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:59,519 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:59,519 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:59,519 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:59,519 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:59,519 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:59,519 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:59,520 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:59,520 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,520 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [91] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=91&ts=1731778919503
2024-11-16 17:41:59,531 [s3a-transfer-fso-bucket-unbounded-pool2-t10] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:41:59,532 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:41:59,532 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:59,533 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:59,533 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:59,533 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778919469; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:59,533 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:59,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:59,534 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:59,534 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:59,538 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:59,538 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:59,538 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:59,539 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,539 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,539 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:59,537 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:59,539 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,540 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=92&ts=1731778919503
2024-11-16 17:41:59,550 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:41:59,551 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:41:59,551 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:41:59,551 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:59,551 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:59,551 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,551 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,552 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:59,552 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,552 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000052&t0=88&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=92&ts=1731778919503
2024-11-16 17:41:59,562 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:41:59,562 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:41:59,562 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:41:59,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.025s
2024-11-16 17:41:59,563 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.026s
2024-11-16 17:41:59,563 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.044s
2024-11-16 17:41:59,563 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:59,563 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:59,564 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:59,577 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 10, active threads = 0, queued tasks = 0, completed tasks = 10], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commit_job.failures=0) (stream_aborted=0) (stream_write_exceptions=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted.failures=0) (store_io_retry=0) (files_deleted=9) (op_rename.failures=0) (object_continue_list_request=0) (audit_failure=0) (stream_write_block_uploads=9) (stream_read_vectored_combined_ranges=6) (stream_read_vectored_operations=6) (object_put_request_completed=18) (op_get_delegation_token.failures=0) (op_glob_status.failures=0) (audit_access_check_failure=0) (op_hsync=0) (op_is_file=0) (committer_commits_completed=0) (multipart_upload_part_put_bytes=0) (audit_request_execution=101) (multipart_upload_list.failures=0) (stream_write_bytes=589824) (stream_read_total_bytes=66986) (stream_read_bytes_discarded_in_abort=0) (op_createfile=0) (stream_write_queue_duration=0) (object_delete_objects=18) (op_exists.failures=0) (multipart_upload_part_put=0) (op_get_content_summary.failures=0) (object_multipart_aborted.failures=0) (object_list_request=36) (stream_read_version_mismatches=0) (op_xattr_get_map=0) (object_multipart_initiated.failures=0) (committer_commits_aborted=0) (op_create.failures=0) (store_exists_probe=0) (stream_read_seek_policy_changed=7) (stream_read_seek_bytes_skipped=0) (multipart_upload_completed=0) (committer_materialize_file.failures=0) (op_get_file_status.failures=0) (stream_read_bytes=1650) (audit_span_creation=34) (op_is_file.failures=0) (stream_read_exceptions=0) (multipart_upload_started=0) (files_copied_bytes=0) (multipart_upload_list=0) (op_list_status.failures=0) (committer_load_single_pending_file=0) (action_file_opened=6) (committer_tasks_completed=0) (committer_magic_marker_put=0) (op_delete=9) (stream_read_bytes_discarded_in_close=65336) (stream_write_queue_duration.failures=0) (stream_write_block_uploads_committed=0) (object_put_request=18) (store_exists_probe.failures=0) (committer_stage_file_upload=0) (op_access.failures=0) (op_abort.failures=0) (op_list_status=0) (action_file_opened.failures=0) (op_access=0) (directories_created=9) (action_executor_acquired=0) (delegation_tokens_issued.failures=0) (op_rename=0) (stream_read_operations=1) (stream_read_remote_stream_drain.failures=0) (action_http_head_request.failures=0) (store_io_throttled=0) (committer_commits_reverted=0) (object_delete_request=0) (committer_commits.failures=0) (op_get_file_checksum=0) (object_list_request.failures=0) (committer_commits_created=0) (object_delete_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_get_content_summary=0) (op_mkdirs=9) (op_hflush=0) (op_list_files=0) (fake_directories_deleted=9) (op_get_file_checksum.failures=0) (op_abort=0) (store_io_request=101) (stream_read_seek_backward_operations=0) (committer_bytes_uploaded=0) (stream_read_opened=1) (op_xattr_get_map.failures=0) (multipart_upload_aborted=0) (stream_read_vectored_read_bytes_discarded=30) (object_multipart_aborted=0) (op_delete.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (op_xattr_list.failures=0) (committer_stage_file_upload.failures=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named=0) (op_is_directory=0) (op_openfile=0) (object_continue_list_request.failures=0) (stream_read_closed=1) (op_get_file_status=0) (action_http_get_request=5) (op_open=6) (object_put_bytes=589824) (stream_read_bytes_backwards_on_seek=0) (fake_directories_created=0) (stream_read_operations_incomplete=0) (files_copied=0) (op_createfile.failures=0) (stream_write_total_data=1179648) (op_create=9) (object_copy_requests=0) (files_created=9) (op_create_non_recursive=0) (committer_jobs_failed=0) (op_xattr_get_named.failures=0) (committer_jobs_completed=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_read_vectored_incoming_ranges=20) (object_select_requests=0) (committer_materialize_file=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=1) (op_list_located_status=0) (action_http_head_request=24) (multipart_instantiated=0) (op_glob_status=0) (op_exists=0) (stream_read_remote_stream_drain=1) (committer_load_single_pending_file.failures=0) (directories_deleted=0) (committer_magic_marker_put.failures=0) (op_get_delegation_token=0) (stream_read_seek_operations=0) (files_delete_rejected=0) (stream_read_seek_forward_operations=0) (committer_tasks_failed=0) (object_bulk_delete_request=18) (committer_magic_files_created=0) (stream_write_exceptions_completing_upload=0) (delegation_tokens_issued=0) (ignored_errors=0) (object_metadata_request=24) (op_copy_from_local_file=0) (committer_bytes_committed=0) (op_is_directory.failures=0) (op_xattr_get_named_map.failures=0) (op_xattr_list=0) (stream_read_seek_bytes_discarded=0) (op_list_files.failures=0) (stream_write_block_uploads_aborted=0) (action_http_get_request.failures=0) (stream_read_close_operations=6) (committer_commit_job=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named_map=0) (op_mkdirs.failures=0));
gauges=((stream_write_block_uploads_pending=9) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0));
minimums=((committer_materialize_file.min=-1) (op_access.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (op_delete.min=31) (op_mkdirs.failures.min=-1) (op_access.failures.min=-1) (object_delete_request.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.min=-1) (action_http_get_request.min=10) (op_abort.failures.min=-1) (op_mkdirs.min=23) (object_bulk_delete_request.min=8) (action_file_opened.min=7) (op_is_file.min=-1) (op_create.failures.min=-1) (op_delete.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.min=-1) (op_get_delegation_token.min=-1) (object_multipart_aborted.min=-1) (object_list_request.min=6) (op_list_status.failures.min=-1) (op_createfile.min=-1) (object_put_request.min=42) (op_xattr_get_named_map.min=-1) (op_get_content_summary.min=-1) (op_create.min=8) (op_xattr_get_map.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (op_is_directory.min=-1) (multipart_upload_list.failures.min=-1) (object_delete_request.min=-1) (committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.min=1) (object_bulk_delete_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_list_request.failures.min=-1) (op_glob_status.min=-1) (stream_write_queue_duration.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_status.min=-1) (action_http_head_request.failures.min=-1) (op_exists.failures.min=-1) (op_is_directory.failures.min=-1) (op_exists.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_list.min=-1) (store_exists_probe.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_status.min=-1) (op_createfile.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=3) (op_glob_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_stage_file_upload.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_commit_job.min=-1) (op_rename.min=-1));
maximums=((object_delete_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.failures.max=-1) (op_xattr_list.failures.max=-1) (op_get_content_summary.max=-1) (action_http_head_request.max=12) (op_is_directory.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (op_list_status.max=-1) (op_get_file_status.max=-1) (op_createfile.failures.max=-1) (op_mkdirs.max=300) (delegation_tokens_issued.failures.max=-1) (op_exists.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.max=185) (delegation_tokens_issued.max=-1) (op_mkdirs.failures.max=-1) (op_get_delegation_token.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_list_files.max=-1) (action_file_opened.max=11) (committer_materialize_file.max=-1) (action_http_get_request.max=28) (op_createfile.max=-1) (op_is_file.failures.max=-1) (stream_write_queue_duration.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.max=1) (object_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_put_request.max=77) (op_access.max=-1) (committer_magic_marker_put.max=-1) (op_rename.max=-1) (op_copy_from_local_file.max=-1) (op_copy_from_local_file.failures.max=-1) (op_access.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.max=-1) (object_multipart_initiated.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_map.max=-1) (object_bulk_delete_request.max=26) (op_create.max=62) (object_multipart_aborted.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (object_delete_request.max=-1) (multipart_upload_list.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_delete.max=87) (op_abort.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.max=-1));
means=((op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=18, sum=245, mean=13.6111)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=18, sum=557, mean=30.9444)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=36, sum=625, mean=17.3611)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=24, sum=150, mean=6.2500)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=6, sum=43, mean=7.1667)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=9, sum=183, mean=20.3333)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=9, sum=502, mean=55.7778)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=9, sum=544, mean=60.4444)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=103, mean=20.6000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:59,577 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:59,577 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,577 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,578 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,578 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,578 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=93&ts=1731778919577
2024-11-16 17:41:59,588 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:41:59,588 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,588 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,588 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,588 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,589 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=93&ts=1731778919577
2024-11-16 17:41:59,592 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,593 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:59,593 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:59,593 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:59,593 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000053&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=93&ts=1731778919577
2024-11-16 17:41:59,600 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:59,601 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:59,601 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:41:59,601 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:59,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,602 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,602 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000054 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000054&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=93&ts=1731778919601
2024-11-16 17:41:59,609 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:41:59,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,609 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:59,610 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5219498222416392959.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:59,610 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5219498222416392959.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (op_hflush=0) (stream_write_total_data=0) (stream_write_total_time=0) (op_abort.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (op_hsync=0) (object_put_request=0) (op_abort=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (action_executor_acquired=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5219498222416392959.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,610 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,610 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:59,610 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5219498222416392959.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:59,611 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:59,611 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:59,611 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:59,611 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:59,611 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000054 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000054/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000054&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=94&ts=1731778919601
2024-11-16 17:41:59,636 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:59,636 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:59,637 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:41:59,637 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5219498222416392959.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:59,637 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5219498222416392959.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,637 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5219498222416392959.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,638 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:59,638 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,639 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (op_hflush=0) (object_put_request=1) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (committer_magic_marker_put=0) (op_abort=0) (action_executor_acquired=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (op_hsync=0) (op_abort.failures=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=25) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=25) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:59,640 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:59,645 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,645 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,646 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:59,646 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000055 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000055/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000055&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=93&ts=1731778919640
2024-11-16 17:41:59,651 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:59,652 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778919000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:59,653 [s3a-transfer-fso-bucket-unbounded-pool2-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:59,653 [s3a-transfer-fso-bucket-unbounded-pool2-t11] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,653 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:41:59,653 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:41:59,653 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:41:59,654 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,654 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,654 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:59,654 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056&t0=95&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=96&ts=1731778919653
2024-11-16 17:41:59,654 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,655 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,655 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:59,655 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-14435&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056&t0=95&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=97&ts=1731778919653
2024-11-16 17:41:59,656 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:41:59,656 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,656 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,656 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:41:59,656 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000056&t0=95&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=98&ts=1731778919653
2024-11-16 17:41:59,671 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:41:59,672 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,673 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:41:59,671 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:41:59,674 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,674 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:41:59,675 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:41:59,677 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_close_operations=1) (action_file_opened=1) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_total_bytes=1424) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=3) (stream_read_unbuffered=0) (stream_read_closed=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=5) (stream_read_seek_backward_operations=0) (stream_read_bytes=1424) (action_http_get_request=3) (action_http_get_request.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened.failures=0) (stream_read_opened=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (stream_read_block_read=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.min=0) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.min=17));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=19) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=54, mean=18.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:59,677 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:41:59,678 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:59,679 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,679 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,679 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=93&ts=1731778919678
2024-11-16 17:41:59,683 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,683 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,684 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [93] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=93&ts=1731778919678
2024-11-16 17:41:59,694 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:41:59,694 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:59,694 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:59,695 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:59,695 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:59,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:59,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:59,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:59,695 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:59,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:59,695 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:59,695 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:59,696 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:59,696 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:59,696 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,696 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [99] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=99&ts=1731778919678
2024-11-16 17:41:59,707 [s3a-transfer-fso-bucket-unbounded-pool2-t12] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:41:59,707 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:41:59,707 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:59,708 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:59,708 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:59,708 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778919632; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:59,708 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:59,708 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:59,708 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:59,709 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:59,709 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:59,709 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:59,709 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:59,709 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:59,709 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,709 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,709 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:59,709 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,710 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=100&ts=1731778919678
2024-11-16 17:41:59,732 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:41:59,732 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:41:59,732 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.023s
2024-11-16 17:41:59,732 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:59,733 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:59,733 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,733 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,733 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:59,733 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,733 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000057&t0=93&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=100&ts=1731778919678
2024-11-16 17:41:59,747 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:41:59,747 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:41:59,748 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.015s
2024-11-16 17:41:59,748 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.039s
2024-11-16 17:41:59,748 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.039s
2024-11-16 17:41:59,748 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.053s
2024-11-16 17:41:59,748 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:59,748 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:59,751 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:59,766 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_put_request_completed=20) (op_exists.failures=0) (object_multipart_initiated.failures=0) (op_get_file_checksum.failures=0) (object_delete_objects=20) (files_created=10) (op_create_non_recursive=0) (op_delete.failures=0) (committer_load_single_pending_file.failures=0) (op_access.failures=0) (stream_read_total_bytes=68410) (op_hsync=0) (op_exists=0) (op_xattr_get_named=0) (multipart_upload_part_put=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_read_bytes_discarded=5974) (stream_read_bytes_discarded_in_close=65336) (multipart_upload_started=0) (op_list_files.failures=0) (object_continue_list_request=0) (committer_bytes_uploaded=0) (files_copied_bytes=0) (committer_tasks_completed=0) (op_list_status=0) (directories_created=10) (op_mkdirs=10) (multipart_upload_part_put_bytes=0) (multipart_upload_list.failures=0) (action_http_get_request=8) (committer_commits_completed=0) (op_xattr_get_named_map=0) (op_xattr_list.failures=0) (delegation_tokens_issued.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_aborted=0) (stream_read_opened=1) (op_createfile=0) (op_get_file_status.failures=0) (stream_write_total_data=1310720) (committer_commits.failures=0) (object_put_request=20) (multipart_instantiated=0) (object_multipart_initiated=0) (stream_read_version_mismatches=0) (store_io_throttled=0) (op_is_file=0) (stream_read_seek_bytes_skipped=0) (multipart_upload_completed=0) (op_get_file_status=1) (stream_aborted=0) (op_xattr_list=0) (op_hflush=0) (object_put_request.failures=0) (stream_write_block_uploads=10) (op_list_located_status=0) (files_delete_rejected=0) (committer_magic_files_created=0) (object_copy_requests=0) (stream_read_vectored_operations=7) (action_executor_acquired.failures=0) (op_abort.failures=0) (op_get_delegation_token.failures=0) (object_multipart_aborted=0) (op_abort=0) (stream_read_unbuffered=1) (files_deleted=10) (op_glob_status.failures=0) (audit_failure=0) (object_delete_request=0) (committer_materialize_file.failures=0) (stream_read_vectored_incoming_ranges=25) (op_rename.failures=0) (committer_bytes_committed=0) (object_list_request.failures=0) (stream_read_operations=1) (fake_directories_created=0) (op_mkdirs.failures=0) (op_create=10) (stream_read_seek_operations=0) (object_metadata_request=27) (action_file_opened=7) (stream_read_exceptions=0) (object_delete_request.failures=0) (stream_read_remote_stream_drain=1) (stream_read_seek_policy_changed=8) (committer_commit_job=0) (committer_commits_aborted=0) (committer_magic_marker_put=0) (stream_read_seek_backward_operations=0) (audit_access_check_failure=0) (committer_magic_marker_put.failures=0) (stream_read_fully_operations=0) (op_list_files=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload=0) (stream_read_remote_stream_aborted=0) (op_is_directory=0) (store_io_retry=0) (directories_deleted=0) (op_get_content_summary.failures=0) (object_continue_list_request.failures=0) (op_openfile=0) (op_delete=10) (stream_write_exceptions_completing_upload=0) (object_bulk_delete_request=20) (store_exists_probe=0) (op_get_content_summary=0) (op_createfile.failures=0) (op_is_file.failures=0) (committer_tasks_failed=0) (action_http_get_request.failures=0) (stream_read_vectored_combined_ranges=9) (object_select_requests=0) (ignored_errors=0) (stream_read_bytes=3074) (stream_read_remote_stream_drain.failures=0) (committer_load_single_pending_file=0) (op_open=7) (stream_write_total_time=0) (action_http_head_request.failures=0) (action_executor_acquired=0) (op_get_file_checksum=0) (op_create.failures=0) (action_file_opened.failures=0) (op_xattr_get_map.failures=0) (store_io_request=115) (op_rename=0) (committer_jobs_failed=0) (delegation_tokens_issued=0) (stream_write_block_uploads_committed=0) (op_access=0) (stream_read_closed=1) (op_copy_from_local_file.failures=0) (multipart_upload_list=0) (audit_request_execution=115) (stream_read_operations_incomplete=0) (committer_materialize_file=0) (stream_read_seek_forward_operations=0) (stream_read_close_operations=7) (committer_jobs_completed=0) (stream_write_queue_duration=0) (stream_write_queue_duration.failures=0) (object_multipart_aborted.failures=0) (op_glob_status=0) (committer_commit_job.failures=0) (stream_write_bytes=655360) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_abort_under_path_invoked=0) (op_get_delegation_token=0) (op_xattr_get_map=0) (op_copy_from_local_file=0) (store_exists_probe.failures=0) (op_list_status.failures=0) (object_put_bytes=655360) (committer_commits_created=0) (op_is_directory.failures=0) (stream_write_exceptions=0) (object_list_request=40) (action_http_head_request=27) (committer_stage_file_upload.failures=0) (audit_span_creation=39) (fake_directories_deleted=10) (stream_read_remote_stream_aborted.failures=0) (files_copied=0) (op_xattr_get_named.failures=0) (op_xattr_get_named_map.failures=0) (committer_commits_reverted=0));
gauges=((stream_write_block_uploads_pending=10) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0));
minimums=((object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_access.failures.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.min=-1) (committer_commit_job.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_rename.failures.min=-1) (op_create.min=8) (op_rename.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.min=-1) (store_exists_probe.min=-1) (op_exists.failures.min=-1) (action_http_head_request.min=3) (stream_write_queue_duration.min=-1) (op_get_delegation_token.min=-1) (committer_stage_file_upload.min=-1) (delegation_tokens_issued.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.failures.min=-1) (op_abort.min=-1) (op_get_delegation_token.failures.min=-1) (op_delete.min=31) (action_file_opened.min=0) (op_exists.min=-1) (op_xattr_list.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_status.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_copy_from_local_file.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_file_status.failures.min=-1) (op_access.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.min=-1) (op_get_content_summary.min=-1) (op_get_file_status.min=6) (op_mkdirs.min=23) (object_multipart_aborted.min=-1) (committer_materialize_file.min=-1) (op_abort.failures.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (object_continue_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_is_file.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.min=8) (object_put_request.min=25) (multipart_upload_list.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_get_request.min=17) (op_xattr_get_named_map.failures.min=-1) (op_is_file.failures.min=-1) (op_createfile.failures.min=-1) (object_list_request.min=6) (committer_commit_job.failures.min=-1) (op_glob_status.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_list.failures.min=-1) (op_list_status.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_put_request.max=77) (op_xattr_get_map.failures.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_write_queue_duration.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=28) (committer_stage_file_upload.failures.max=-1) (action_http_head_request.max=12) (op_createfile.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_delete.max=87) (op_glob_status.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_file_checksum.max=-1) (op_exists.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_delegation_token.max=-1) (committer_stage_file_upload.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_continue_list_request.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.max=-1) (multipart_upload_list.failures.max=-1) (object_delete_request.max=-1) (op_get_content_summary.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_status.max=6) (op_get_file_status.failures.max=-1) (op_list_status.failures.max=-1) (multipart_upload_list.max=-1) (delegation_tokens_issued.max=-1) (op_list_status.max=-1) (store_exists_probe.failures.max=-1) (op_delete.failures.max=-1) (object_list_request.failures.max=-1) (object_bulk_delete_request.max=26) (op_abort.max=-1) (op_abort.failures.max=-1) (action_file_opened.max=11) (object_delete_request.failures.max=-1) (op_access.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.max=185) (committer_commit_job.max=-1) (op_create.failures.max=-1) (op_is_directory.max=-1) (op_exists.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=62) (op_access.max=-1) (stream_read_remote_stream_drain.max=1) (committer_load_single_pending_file.max=-1) (object_put_request.failures.max=-1) (op_createfile.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_mkdirs.max=300) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_list_files.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_copy_from_local_file.max=-1));
means=((op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=10, sum=555, mean=55.5000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=10, sum=191, mean=19.1000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=27, sum=163, mean=6.0370)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=20, sum=281, mean=14.0500)) (op_mkdirs.mean=(samples=10, sum=568, mean=56.8000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=157, mean=19.6250)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=7, sum=43, mean=6.1429)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=40, sum=663, mean=16.5750)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=20, sum=589, mean=29.4500)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:59,766 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:59,767 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,767 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,767 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,767 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,767 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=101&ts=1731778919766
2024-11-16 17:41:59,774 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:41:59,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,774 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=101&ts=1731778919766
2024-11-16 17:41:59,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,795 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:59,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:59,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:59,796 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000058&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=101&ts=1731778919766
2024-11-16 17:41:59,815 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:59,815 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:59,815 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:41:59,815 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:59,816 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,816 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,816 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,816 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,816 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000059 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000059&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=101&ts=1731778919816
2024-11-16 17:41:59,822 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:41:59,822 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,822 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:59,823 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2240739633438268992.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:59,824 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2240739633438268992.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (op_hsync=0) (object_put_request=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_block_uploads=0) (op_abort.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2240739633438268992.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,824 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,824 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:59,824 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2240739633438268992.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:59,825 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:59,825 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:59,825 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:59,826 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:59,826 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000059 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000059/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000059&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=102&ts=1731778919816
2024-11-16 17:41:59,864 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:41:59,865 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:41:59,865 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.040s
2024-11-16 17:41:59,866 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2240739633438268992.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:41:59,866 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2240739633438268992.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,866 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2240739633438268992.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,867 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:41:59,867 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,868 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (multipart_upload_completed=0) (stream_write_bytes=65536) (action_executor_acquired=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (object_multipart_aborted=0) (op_hflush=0) (op_abort=0) (committer_magic_marker_put=0) (op_abort.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (object_multipart_initiated=0) (op_hsync=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=38));
maximums=((object_put_request.max=38) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=38, mean=38.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:41:59,868 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:41:59,869 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,870 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,870 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:41:59,870 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [103] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000060 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000060/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000060&t0=103&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=103&ts=1731778919869
2024-11-16 17:41:59,874 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:41:59,874 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:41:59,874 [s3a-transfer-fso-bucket-unbounded-pool2-t13] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:41:59,874 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:41:59,874 [JUnit-testEOFRanges[Buffer type : direct]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,875 [JUnit-testEOFRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_total_bytes=0) (stream_read_fully_operations=0) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_close_operations=1) (stream_read_bytes=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain=0) (stream_read_operations_incomplete=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_exceptions=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_remote_stream_aborted=0) (stream_read_operations=0) (stream_read_closed=0) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.max=5) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:41:59,876 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:41:59,876 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,877 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,877 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=101&ts=1731778919876
2024-11-16 17:41:59,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,880 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,880 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [101] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=101&ts=1731778919876
2024-11-16 17:41:59,892 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:41:59,892 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:41:59,892 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:41:59,892 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:41:59,892 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:41:59,892 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:41:59,892 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:41:59,892 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:41:59,892 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:41:59,892 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:41:59,892 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:41:59,892 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:41:59,893 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:41:59,893 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:41:59,894 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,897 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [104] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=104&ts=1731778919876
2024-11-16 17:41:59,905 [s3a-transfer-fso-bucket-unbounded-pool2-t14] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:41:59,905 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:41:59,906 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:41:59,906 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:41:59,907 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:41:59,907 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778919855; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:41:59,907 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:41:59,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:41:59,908 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:41:59,909 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:41:59,909 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:41:59,910 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:41:59,910 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:41:59,911 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:41:59,911 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,911 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,912 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:41:59,912 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,913 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=105&ts=1731778919876
2024-11-16 17:41:59,923 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:41:59,923 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:41:59,923 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:41:59,923 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:41:59,923 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:41:59,923 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:41:59,924 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:41:59,924 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:41:59,924 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:41:59,924 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000061&t0=101&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=105&ts=1731778919876
2024-11-16 17:41:59,938 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:41:59,939 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:41:59,939 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:41:59,940 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:41:59,940 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.031s
2024-11-16 17:41:59,940 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.048s
2024-11-16 17:41:59,940 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:41:59,940 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:41:59,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:41:59,953 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 14, active threads = 0, queued tasks = 0, completed tasks = 14], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_exists=0) (object_delete_request=0) (stream_read_close_operations=8) (committer_commit_job.failures=0) (op_xattr_get_map.failures=0) (object_multipart_aborted=0) (stream_read_fully_operations=0) (stream_write_total_data=1441792) (op_rename=0) (object_put_request_completed=22) (object_bulk_delete_request.failures=0) (fake_directories_deleted=11) (stream_read_remote_stream_aborted.failures=0) (object_multipart_aborted.failures=0) (store_io_request=126) (stream_read_closed=1) (multipart_upload_completed=0) (stream_read_vectored_operations=7) (stream_read_vectored_incoming_ranges=25) (committer_bytes_uploaded=0) (object_continue_list_request.failures=0) (multipart_upload_started=0) (files_deleted=11) (committer_stage_file_upload=0) (op_get_file_status=1) (op_create_non_recursive=0) (multipart_upload_list.failures=0) (object_put_bytes=720896) (store_exists_probe.failures=0) (stream_write_bytes=720896) (object_delete_request.failures=0) (stream_read_seek_operations=0) (stream_read_operations_incomplete=0) (op_copy_from_local_file=0) (object_copy_requests=0) (committer_jobs_failed=0) (action_executor_acquired=0) (action_file_opened=8) (committer_commit_job=0) (committer_bytes_committed=0) (stream_read_remote_stream_drain=1) (op_get_file_status.failures=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_exists.failures=0) (op_abort.failures=0) (stream_read_seek_bytes_skipped=0) (committer_commits_created=0) (op_get_content_summary.failures=0) (stream_read_vectored_read_bytes_discarded=5974) (op_delete.failures=0) (files_delete_rejected=0) (store_io_retry=0) (op_xattr_list.failures=0) (files_copied=0) (object_continue_list_request=0) (object_multipart_initiated.failures=0) (op_list_located_status=0) (op_glob_status=0) (committer_load_single_pending_file=0) (op_hsync=0) (store_exists_probe=0) (op_mkdirs.failures=0) (op_is_directory.failures=0) (stream_read_bytes=3074) (action_http_head_request.failures=0) (committer_commits_reverted=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_discarded_in_close=65336) (multipart_instantiated=0) (object_metadata_request=30) (files_created=11) (op_get_content_summary=0) (audit_request_execution=126) (op_glob_status.failures=0) (stream_write_queue_duration.failures=0) (stream_read_seek_backward_operations=0) (stream_read_opened=1) (stream_read_seek_forward_operations=0) (multipart_upload_part_put=0) (op_hflush=0) (directories_created=11) (object_list_request=44) (action_executor_acquired.failures=0) (directories_deleted=0) (action_http_get_request=8) (object_put_request=22) (op_copy_from_local_file.failures=0) (committer_stage_file_upload.failures=0) (op_list_files=0) (stream_write_block_uploads_committed=0) (action_http_head_request=30) (stream_read_vectored_combined_ranges=9) (files_copied_bytes=0) (audit_span_creation=43) (op_list_status=0) (stream_write_exceptions=0) (object_put_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named_map.failures=0) (op_create=11) (op_is_file.failures=0) (op_xattr_list=0) (op_access=0) (stream_read_total_bytes=68410) (multipart_upload_part_put_bytes=0) (op_openfile=0) (op_list_status.failures=0) (op_create.failures=0) (fake_directories_created=0) (store_io_throttled=0) (committer_materialize_file=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations=1) (committer_materialize_file.failures=0) (stream_read_remote_stream_aborted=0) (stream_write_block_uploads_aborted=0) (op_createfile=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_list_request.failures=0) (committer_tasks_completed=0) (op_list_files.failures=0) (stream_read_unbuffered=1) (delegation_tokens_issued=0) (stream_write_queue_duration=0) (op_mkdirs=11) (op_xattr_get_named.failures=0) (committer_commits_completed=0) (committer_magic_files_created=0) (multipart_upload_list=0) (op_is_directory=0) (op_access.failures=0) (stream_read_exceptions=0) (stream_write_block_uploads=11) (multipart_upload_aborted=0) (op_xattr_get_named=0) (op_get_delegation_token=0) (op_is_file=0) (op_get_file_checksum.failures=0) (op_xattr_get_map=0) (committer_commits_aborted=0) (committer_tasks_failed=0) (committer_magic_marker_put=0) (audit_failure=0) (stream_read_seek_bytes_discarded=0) (op_open=8) (op_get_file_checksum=0) (ignored_errors=0) (stream_read_seek_policy_changed=9) (committer_load_single_pending_file.failures=0) (committer_commits.failures=0) (object_select_requests=0) (action_http_get_request.failures=0) (op_rename.failures=0) (audit_access_check_failure=0) (stream_aborted=0) (op_createfile.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_delete=11) (object_delete_objects=22) (op_abort=0) (committer_jobs_completed=0) (delegation_tokens_issued.failures=0) (object_bulk_delete_request=22) (op_xattr_get_named_map=0) (committer_magic_marker_put.failures=0) (stream_read_version_mismatches=0) (op_get_delegation_token.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_write_block_uploads_pending=11) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0));
minimums=((committer_stage_file_upload.min=-1) (op_get_delegation_token.failures.min=-1) (object_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.min=-1) (op_list_files.min=-1) (op_rename.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (op_get_content_summary.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.min=8) (op_is_directory.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_glob_status.failures.min=-1) (action_executor_acquired.min=-1) (op_create.min=7) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_access.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.min=-1) (op_get_file_status.min=6) (op_abort.failures.min=-1) (object_put_request.min=38) (committer_materialize_file.failures.min=-1) (op_exists.min=-1) (object_delete_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_named.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_aborted.failures.min=-1) (committer_materialize_file.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_list.min=-1) (action_http_get_request.min=17) (action_file_opened.min=5) (committer_magic_marker_put.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_rename.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.min=-1) (op_list_status.failures.min=-1) (object_list_request.min=6) (committer_commit_job.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_list_status.min=-1) (multipart_upload_list.failures.min=-1) (op_mkdirs.min=23) (op_is_file.min=-1) (object_continue_list_request.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_delete.min=31) (op_get_file_checksum.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_http_head_request.min=3) (op_xattr_list.failures.min=-1) (op_xattr_list.min=-1) (op_list_files.failures.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_create.failures.min=-1) (op_is_directory.min=-1) (op_createfile.failures.min=-1) (op_createfile.min=-1) (op_access.failures.min=-1) (object_delete_request.min=-1));
maximums=((action_executor_acquired.max=-1) (action_http_get_request.max=28) (op_is_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_drain.max=1) (action_http_get_request.failures.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.max=-1) (op_list_files.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.max=300) (op_get_file_status.max=6) (committer_commit_job.max=-1) (object_continue_list_request.failures.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.max=-1) (op_list_status.max=-1) (op_abort.failures.max=-1) (multipart_upload_list.max=-1) (op_glob_status.max=-1) (object_bulk_delete_request.max=26) (op_list_status.failures.max=-1) (op_delete.max=87) (op_xattr_list.failures.max=-1) (object_multipart_initiated.max=-1) (op_mkdirs.failures.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.max=77) (op_xattr_get_named_map.failures.max=-1) (action_file_opened.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.max=62) (action_executor_acquired.failures.max=-1) (op_is_file.failures.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_exists.max=-1) (op_access.max=-1) (op_rename.failures.max=-1) (action_file_opened.max=11) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_rename.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.failures.max=-1) (object_list_request.max=185) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.max=-1) (committer_stage_file_upload.failures.max=-1) (op_delete.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (op_createfile.max=-1) (op_access.failures.max=-1) (stream_write_queue_duration.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_directory.failures.max=-1) (op_exists.failures.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_status.failures.max=-1) (object_delete_request.failures.max=-1) (store_exists_probe.max=-1) (action_http_head_request.max=21) (committer_commit_job.failures.max=-1));
means=((store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_delete.mean=(samples=11, sum=603, mean=54.8182)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=8, sum=157, mean=19.6250)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=44, sum=699, mean=15.8864)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=30, sum=191, mean=6.3667)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=11, sum=198, mean=18.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=22, sum=647, mean=29.4091)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=8, sum=48, mean=6.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=22, sum=305, mean=13.8636)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=11, sum=617, mean=56.0909)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:41:59,954 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:41:59,954 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,954 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,955 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,955 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,955 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778919954
2024-11-16 17:41:59,968 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:41:59,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:41:59,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:41:59,969 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:41:59,969 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778919954
2024-11-16 17:41:59,973 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:41:59,973 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:41:59,973 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:41:59,973 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:41:59,973 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000062&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778919954
2024-11-16 17:41:59,983 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:41:59,983 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:41:59,983 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:41:59,983 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:41:59,984 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:41:59,984 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,986 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:41:59,986 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:41:59,987 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000063 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000063&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778919983
2024-11-16 17:41:59,995 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:41:59,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:41:59,996 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:41:59,997 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9945010555628207596.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:41:59,997 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9945010555628207596.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (op_abort=0) (object_put_request=0) (stream_write_bytes=65536) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (op_hflush=0) (action_executor_acquired=0) (op_hsync=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9945010555628207596.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:41:59,998 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:41:59,998 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:41:59,998 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9945010555628207596.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:41:59,998 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:41:59,998 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:41:59,999 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:41:59,999 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:41:59,999 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000063 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000063/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000063&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=107&ts=1731778919983
2024-11-16 17:42:00,036 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:00,037 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:00,037 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:42:00,038 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9945010555628207596.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:00,039 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9945010555628207596.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,039 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9945010555628207596.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,039 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:00,041 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,043 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (multipart_upload_completed.failures=0) (object_put_request=1) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_bytes=65536) (op_hflush=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (op_abort=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_put_request.min=37) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1));
maximums=((object_put_request.max=37) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=37, mean=37.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:00,043 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:00,044 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,044 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,044 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:00,045 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778920044
2024-11-16 17:42:00,048 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:00,049 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:00,049 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,049 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:00,049 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:42:00,049 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,050 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-65535&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778920044
2024-11-16 17:42:00,059 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:42:00,059 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:00,060 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.001s
2024-11-16 17:42:00,060 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:00,061 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:00,061 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:00,062 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:00,062 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,062 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,062 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,063 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000064&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=108&ts=1731778920044
2024-11-16 17:42:00,077 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:42:00,077 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:00,077 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7439 bytes
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8745 bytes
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:42:00,078 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:00,079 [JUnit-testVectoredReadAfterNormalRead[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (action_http_get_request=2) (action_file_opened.failures=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations_incomplete=0) (stream_read_vectored_incoming_ranges=2) (stream_read_vectored_read_bytes_discarded=10) (action_file_opened=1) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=1) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_vectored_operations=1) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=65336) (action_http_get_request.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read=0) (stream_read_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_operations=1) (stream_read_close_operations=1) (stream_read_closed=1) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations=0) (stream_read_total_bytes=65686) (stream_read_bytes=350) (stream_read_unbuffered=0) (action_executor_acquired=0) (stream_read_fully_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=9));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=15) (stream_read_prefetch_operations.max=-1) (action_file_opened.max=5) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=0) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=24, mean=12.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:00,081 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:00,081 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,081 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,081 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778920080
2024-11-16 17:42:00,085 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,085 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,085 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [106] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=106&ts=1731778920080
2024-11-16 17:42:00,091 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:00,091 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:00,091 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:00,091 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:00,091 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:00,092 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:00,092 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:00,092 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:00,092 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:00,092 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:00,093 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:00,093 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:00,093 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:00,093 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:00,093 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,093 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [109] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=109&ts=1731778920080
2024-11-16 17:42:00,101 [s3a-transfer-fso-bucket-unbounded-pool2-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:00,101 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:00,101 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:00,101 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:00,101 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:00,101 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778920026; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:00,101 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:00,102 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:00,102 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:00,102 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:00,102 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:00,102 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:00,103 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:00,103 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:00,103 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,103 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,103 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:00,103 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,103 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=110&ts=1731778920080
2024-11-16 17:42:00,110 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:00,111 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:00,111 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:00,111 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:00,112 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:00,112 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,112 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,112 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:00,112 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,112 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000065&t0=106&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=110&ts=1731778920080
2024-11-16 17:42:00,121 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:00,121 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:42:00,121 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:42:00,121 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:42:00,121 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:42:00,121 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:42:00,122 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:00,122 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:00,123 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:00,134 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 15], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_access=0) (stream_write_total_time=0) (op_xattr_get_map.failures=0) (op_exists.failures=0) (committer_materialize_file.failures=0) (stream_write_exceptions_completing_upload=0) (committer_load_single_pending_file=0) (op_create_non_recursive=0) (object_delete_request=0) (audit_request_execution=139) (op_get_file_status.failures=0) (op_abort.failures=0) (committer_commits_created=0) (store_exists_probe=0) (committer_magic_marker_put=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (files_delete_rejected=0) (op_is_file=0) (object_put_request.failures=0) (stream_read_seek_backward_operations=0) (op_delete.failures=0) (stream_read_exceptions=0) (directories_deleted=0) (stream_read_seek_operations=0) (stream_read_bytes_discarded_in_close=130672) (op_get_file_checksum.failures=0) (object_delete_request.failures=0) (stream_read_seek_bytes_skipped=0) (op_createfile=0) (committer_bytes_committed=0) (op_is_file.failures=0) (object_metadata_request=33) (audit_span_creation=47) (op_exists=0) (op_delete=12) (op_is_directory=0) (object_list_request=48) (store_exists_probe.failures=0) (op_mkdirs=12) (stream_read_remote_stream_drain=2) (object_multipart_aborted=0) (committer_tasks_completed=0) (committer_commits_aborted=0) (multipart_upload_abort_under_path_invoked=0) (fake_directories_deleted=12) (op_rename.failures=0) (stream_write_queue_duration=0) (stream_read_fully_operations=0) (store_io_retry=0) (object_delete_objects=24) (op_glob_status=0) (committer_commits.failures=0) (committer_materialize_file=0) (op_open=9) (multipart_upload_list=0) (files_copied_bytes=0) (op_hflush=0) (committer_commits_completed=0) (stream_read_opened=2) (stream_read_version_mismatches=0) (committer_jobs_failed=0) (op_list_status.failures=0) (committer_commits_reverted=0) (stream_read_remote_stream_drain.failures=0) (multipart_upload_part_put=0) (op_xattr_get_named_map.failures=0) (object_put_request=24) (op_xattr_get_map=0) (committer_load_single_pending_file.failures=0) (multipart_upload_list.failures=0) (op_xattr_get_named_map=0) (object_multipart_initiated.failures=0) (files_copied=0) (store_io_throttled=0) (op_list_located_status=0) (multipart_upload_started=0) (op_list_files.failures=0) (object_bulk_delete_request.failures=0) (op_xattr_get_named.failures=0) (stream_read_vectored_read_bytes_discarded=5984) (op_get_delegation_token=0) (stream_read_seek_policy_changed=10) (object_multipart_aborted.failures=0) (object_put_bytes=786432) (committer_stage_file_upload.failures=0) (files_created=12) (committer_stage_file_upload=0) (stream_aborted=0) (stream_write_block_uploads=12) (action_http_head_request.failures=0) (multipart_upload_part_put_bytes=0) (committer_commit_job=0) (multipart_upload_completed=0) (op_hsync=0) (stream_read_total_bytes=134096) (stream_read_vectored_operations=8) (op_get_file_status=1) (committer_commit_job.failures=0) (committer_tasks_failed=0) (op_copy_from_local_file=0) (fake_directories_created=0) (op_xattr_get_named=0) (op_get_content_summary=0) (stream_write_bytes=786432) (stream_read_remote_stream_aborted=0) (op_openfile=0) (action_file_opened=9) (store_io_request=139) (object_select_requests=0) (op_abort=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=10) (delegation_tokens_issued.failures=0) (action_executor_acquired.failures=0) (op_list_status=0) (stream_read_closed=2) (op_mkdirs.failures=0) (stream_write_exceptions=0) (op_glob_status.failures=0) (object_bulk_delete_request=24) (op_copy_from_local_file.failures=0) (audit_failure=0) (op_is_directory.failures=0) (stream_read_unbuffered=1) (object_copy_requests=0) (op_access.failures=0) (op_get_content_summary.failures=0) (stream_write_block_uploads_committed=0) (stream_read_operations=2) (op_create=12) (committer_jobs_completed=0) (delegation_tokens_issued=0) (op_get_file_checksum=0) (stream_read_vectored_combined_ranges=10) (files_deleted=12) (stream_write_total_data=1572864) (stream_write_queue_duration.failures=0) (directories_created=12) (op_xattr_list.failures=0) (stream_write_block_uploads_aborted=0) (ignored_errors=0) (object_continue_list_request.failures=0) (op_list_files=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (op_xattr_list=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_vectored_incoming_ranges=27) (committer_bytes_uploaded=0) (committer_magic_files_created=0) (stream_read_close_operations=9) (op_createfile.failures=0) (op_rename=0) (stream_read_bytes=3424) (multipart_instantiated=0) (op_create.failures=0) (action_http_head_request=33) (object_multipart_initiated=0) (audit_access_check_failure=0) (object_list_request.failures=0) (object_put_request_completed=24) (multipart_upload_aborted=0) (object_continue_list_request=0) (op_get_delegation_token.failures=0) (committer_magic_marker_put.failures=0) (action_file_opened.failures=0));
gauges=((stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=12) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0));
minimums=((object_bulk_delete_request.min=7) (op_createfile.failures.min=-1) (op_get_file_status.min=6) (op_is_directory.failures.min=-1) (action_http_get_request.failures.min=-1) (store_exists_probe.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.min=9) (committer_materialize_file.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.min=-1) (op_list_files.failures.min=-1) (op_access.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.min=-1) (committer_commit_job.min=-1) (object_list_request.min=6) (object_multipart_initiated.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_mkdirs.failures.min=-1) (action_executor_acquired.min=-1) (op_mkdirs.min=23) (committer_magic_marker_put.min=-1) (op_rename.failures.min=-1) (op_xattr_list.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_rename.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.failures.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.min=-1) (object_put_request.failures.min=-1) (op_exists.min=-1) (object_delete_request.failures.min=-1) (op_createfile.min=-1) (op_glob_status.min=-1) (multipart_upload_list.failures.min=-1) (action_http_head_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.min=-1) (action_file_opened.min=5) (committer_magic_marker_put.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_delete.min=30) (action_http_head_request.min=3) (object_delete_request.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_glob_status.failures.min=-1) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (action_file_opened.failures.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_drain.min=0) (multipart_upload_list.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named.min=-1) (op_list_status.min=-1) (op_xattr_get_named_map.min=-1) (object_put_request.min=37) (stream_write_queue_duration.min=-1) (op_list_files.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (op_create.min=7));
maximums=((stream_write_queue_duration.max=-1) (committer_materialize_file.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_files.max=-1) (op_access.max=-1) (committer_load_single_pending_file.max=-1) (op_mkdirs.failures.max=-1) (object_continue_list_request.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.max=21) (op_get_content_summary.failures.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_continue_list_request.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_list.max=-1) (stream_write_queue_duration.failures.max=-1) (op_delete.max=87) (op_list_files.failures.max=-1) (action_http_get_request.max=28) (op_xattr_get_map.max=-1) (op_xattr_get_named_map.failures.max=-1) (delegation_tokens_issued.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_status.max=6) (committer_stage_file_upload.max=-1) (op_glob_status.failures.max=-1) (object_put_request.max=77) (op_list_status.max=-1) (op_exists.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (op_delete.failures.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.failures.max=-1) (op_createfile.failures.max=-1) (op_exists.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.max=-1) (committer_commit_job.max=-1) (op_abort.failures.max=-1) (op_create.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_directory.max=-1) (store_exists_probe.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_access.failures.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.max=26) (op_get_file_status.failures.max=-1) (action_file_opened.failures.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.max=-1) (object_list_request.max=185) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_file_opened.max=11) (op_create.max=62) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_createfile.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_abort.max=-1) (op_rename.failures.max=-1) (op_glob_status.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.max=300) (op_xattr_list.failures.max=-1) (object_delete_request.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_drain.max=1));
means=((op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=24, sum=694, mean=28.9167)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=48, sum=735, mean=15.3125)) (action_file_opened.mean=(samples=9, sum=53, mean=5.8889)) (op_create.mean=(samples=12, sum=212, mean=17.6667)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (object_bulk_delete_request.mean=(samples=24, sum=321, mean=13.3750)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=33, sum=202, mean=6.1212)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=1, mean=0.5000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=10, sum=181, mean=18.1000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=12, sum=633, mean=52.7500)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=12, sum=646, mean=53.8333)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:00,134 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:00,134 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,135 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,135 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,135 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,135 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=111&ts=1731778920134
2024-11-16 17:42:00,141 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:00,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,142 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=111&ts=1731778920134
2024-11-16 17:42:00,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,144 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:00,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:00,144 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:00,144 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000066&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=111&ts=1731778920134
2024-11-16 17:42:00,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:00,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:00,150 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:42:00,150 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:00,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,151 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,151 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,151 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000067 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000067&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=111&ts=1731778920151
2024-11-16 17:42:00,157 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:00,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,157 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:00,158 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8707905303791161641.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:00,159 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8707905303791161641.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (stream_write_total_data=0) (stream_write_block_uploads=0) (op_abort.failures=0) (committer_magic_marker_put.failures=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (op_hsync=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_exceptions=0) (op_abort=0) (object_put_request=0) (op_hflush=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8707905303791161641.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,159 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,159 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:00,159 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8707905303791161641.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:00,160 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:00,160 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:00,160 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:00,160 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:00,160 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000067 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000067/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000067&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=112&ts=1731778920151
2024-11-16 17:42:00,186 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:00,186 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:00,186 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:42:00,187 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8707905303791161641.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:00,187 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8707905303791161641.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,187 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8707905303791161641.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,187 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:00,187 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,188 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (object_put_request.failures=0) (op_hflush=0) (object_multipart_aborted=0) (object_put_request=1) (stream_write_total_time=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (op_hsync=0) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (op_abort=0) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (object_put_request.min=26) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=26));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=26, mean=26.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:00,189 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:00,190 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,190 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,190 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:00,190 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=111&ts=1731778920189
2024-11-16 17:42:00,193 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:00,193 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:00,193 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,193 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:42:00,194 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:00,194 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:42:00,194 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,194 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,194 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,194 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,194 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:42:00,195 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=16101-16200&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=114&ts=1731778920189
2024-11-16 17:42:00,194 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,195 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,195 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-4200&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000068&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=113&ts=1731778920189
2024-11-16 17:42:00,205 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:42:00,205 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:42:00,205 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,208 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:42:00,209 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,210 [JUnit-testDisjointRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_aborted=0) (stream_read_closed=0) (stream_read_operations=0) (stream_read_bytes=300) (stream_read_vectored_combined_ranges=2) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=3) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_vectored_operations=1) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes_discarded_in_close=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_total_bytes=300) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_opened=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_operations_incomplete=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request=2) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=3) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=10) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_http_get_request.max=14) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=3) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.mean=(samples=2, sum=24, mean=12.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:00,211 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:00,211 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,211 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,211 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=111&ts=1731778920211
2024-11-16 17:42:00,215 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,215 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,215 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [111] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=111&ts=1731778920211
2024-11-16 17:42:00,221 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:00,221 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:00,221 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:00,222 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:00,222 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:00,222 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:00,222 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:00,222 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:00,222 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:00,222 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:00,222 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:00,222 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:00,224 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:00,224 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:00,225 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,225 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [115] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=115&ts=1731778920211
2024-11-16 17:42:00,235 [s3a-transfer-fso-bucket-unbounded-pool2-t16] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:00,235 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:42:00,235 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:00,235 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:00,235 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:00,236 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778920179; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:00,236 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:00,236 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:00,236 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:00,236 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:00,237 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:00,237 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:00,237 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:00,237 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:00,238 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,238 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,238 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:00,238 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,238 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=116&ts=1731778920211
2024-11-16 17:42:00,251 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.013s
2024-11-16 17:42:00,251 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:42:00,252 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:42:00,252 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:00,252 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:00,253 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,253 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,254 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:00,254 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,255 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000069&t0=111&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=116&ts=1731778920211
2024-11-16 17:42:00,264 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:00,265 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:00,265 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:42:00,265 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:42:00,265 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:42:00,265 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:42:00,265 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:00,265 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:00,267 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:00,278 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 16], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_files=0) (op_xattr_list.failures=0) (files_deleted=13) (op_get_file_status=1) (stream_write_queue_duration=0) (stream_write_total_data=1703936) (files_delete_rejected=0) (op_rename=0) (multipart_upload_list=0) (stream_read_remote_stream_aborted=0) (store_io_request=152) (op_abort=0) (object_continue_list_request.failures=0) (op_hsync=0) (stream_write_queue_duration.failures=0) (op_get_file_checksum=0) (action_http_get_request=12) (store_io_throttled=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=9985) (audit_access_check_failure=0) (op_create_non_recursive=0) (stream_read_seek_bytes_discarded=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named=0) (op_hflush=0) (op_get_content_summary.failures=0) (op_get_file_status.failures=0) (stream_read_closed=2) (object_copy_requests=0) (stream_read_unbuffered=1) (stream_read_vectored_incoming_ranges=30) (op_delete.failures=0) (multipart_upload_aborted=0) (op_access=0) (object_put_request=26) (op_exists.failures=0) (object_multipart_initiated=0) (op_xattr_get_map=0) (stream_aborted=0) (object_delete_objects=26) (committer_commit_job.failures=0) (store_exists_probe.failures=0) (committer_stage_file_upload.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_exceptions=0) (committer_commits.failures=0) (fake_directories_created=0) (op_is_directory.failures=0) (stream_read_bytes=3724) (stream_read_version_mismatches=0) (files_copied=0) (op_is_file.failures=0) (action_file_opened=10) (op_create.failures=0) (stream_read_vectored_combined_ranges=12) (committer_materialize_file=0) (object_multipart_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (op_xattr_get_named_map=0) (stream_read_bytes_discarded_in_close=130672) (op_get_delegation_token=0) (object_list_request=52) (stream_read_bytes_discarded_in_abort=0) (committer_load_single_pending_file=0) (multipart_upload_part_put=0) (stream_read_remote_stream_drain=2) (stream_read_total_bytes=134396) (op_openfile=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (op_createfile=0) (committer_commits_reverted=0) (op_xattr_list=0) (action_http_head_request=36) (committer_load_single_pending_file.failures=0) (op_glob_status.failures=0) (object_select_requests=0) (op_delete=13) (op_get_content_summary=0) (stream_read_seek_operations=0) (committer_commits_completed=0) (stream_read_opened=2) (object_continue_list_request=0) (committer_commits_created=0) (object_put_request.failures=0) (op_get_delegation_token.failures=0) (multipart_upload_part_put_bytes=0) (audit_span_creation=51) (object_bulk_delete_request.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_mkdirs=13) (stream_read_seek_policy_changed=11) (committer_tasks_completed=0) (op_list_files.failures=0) (committer_materialize_file.failures=0) (object_multipart_initiated.failures=0) (store_exists_probe=0) (stream_write_exceptions_completing_upload=0) (op_glob_status=0) (op_open=10) (multipart_upload_abort_under_path_invoked=0) (stream_write_block_uploads=13) (op_abort.failures=0) (committer_jobs_failed=0) (stream_read_vectored_operations=9) (multipart_upload_completed=0) (files_copied_bytes=0) (delegation_tokens_issued.failures=0) (action_http_head_request.failures=0) (op_list_status=0) (directories_deleted=0) (committer_tasks_failed=0) (fake_directories_deleted=13) (committer_magic_marker_put.failures=0) (object_metadata_request=36) (files_created=13) (object_bulk_delete_request=26) (delegation_tokens_issued=0) (multipart_upload_started=0) (action_http_get_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_is_directory=0) (stream_read_seek_forward_operations=0) (object_delete_request=0) (committer_jobs_completed=0) (stream_read_close_operations=10) (action_executor_acquired.failures=0) (op_access.failures=0) (stream_read_fully_operations=0) (object_delete_request.failures=0) (op_is_file=0) (stream_read_operations_incomplete=0) (op_copy_from_local_file=0) (object_put_bytes=851968) (action_file_opened.failures=0) (stream_read_operations=2) (object_multipart_aborted=0) (object_list_request.failures=0) (op_rename.failures=0) (committer_stage_file_upload=0) (op_list_status.failures=0) (stream_write_block_uploads_committed=0) (multipart_instantiated=0) (audit_request_execution=152) (stream_write_exceptions=0) (multipart_upload_list.failures=0) (audit_failure=0) (committer_bytes_uploaded=0) (op_list_located_status=0) (op_exists=0) (ignored_errors=0) (committer_commit_job=0) (op_create=13) (object_put_request_completed=26) (stream_write_bytes=851968) (op_xattr_get_named.failures=0) (committer_commits_aborted=0) (op_createfile.failures=0) (op_copy_from_local_file.failures=0) (store_io_retry=0) (op_mkdirs.failures=0) (committer_bytes_committed=0) (op_get_file_checksum.failures=0) (committer_magic_files_created=0) (stream_read_remote_stream_drain.failures=0) (directories_created=13) (stream_write_total_time=0) (op_xattr_get_map.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=13) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0));
minimums=((op_exists.failures.min=-1) (op_access.min=-1) (object_continue_list_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (op_delete.min=30) (op_get_delegation_token.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_file_checksum.failures.min=-1) (object_list_request.failures.min=-1) (action_http_get_request.min=10) (multipart_upload_list.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_list_files.min=-1) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_magic_marker_put.min=-1) (op_exists.min=-1) (op_list_files.failures.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.failures.min=-1) (op_list_status.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_directory.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_list.min=-1) (object_list_request.min=6) (op_xattr_get_named.failures.min=-1) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.min=-1) (object_continue_list_request.min=-1) (object_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_is_file.min=-1) (delegation_tokens_issued.min=-1) (object_bulk_delete_request.min=7) (op_access.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_directory.min=-1) (action_http_head_request.min=3) (op_get_file_status.min=6) (op_mkdirs.min=16) (op_xattr_list.failures.min=-1) (action_file_opened.failures.min=-1) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (object_put_request.min=26) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (store_exists_probe.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_drain.min=0) (op_xattr_get_named_map.min=-1) (op_createfile.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.failures.min=-1) (committer_commit_job.failures.min=-1) (op_create.min=7) (op_glob_status.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (action_http_get_request.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.failures.min=-1) (op_glob_status.failures.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_create.failures.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (op_rename.failures.min=-1));
maximums=((op_xattr_get_named.failures.max=-1) (multipart_upload_list.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_continue_list_request.max=-1) (store_exists_probe.failures.max=-1) (op_create.failures.max=-1) (store_exists_probe.max=-1) (delegation_tokens_issued.max=-1) (op_exists.max=-1) (op_access.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_materialize_file.max=-1) (stream_write_queue_duration.max=-1) (op_createfile.failures.max=-1) (committer_commit_job.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_file_status.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_bulk_delete_request.max=26) (object_delete_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_list_files.failures.max=-1) (object_list_request.failures.max=-1) (op_delete.failures.max=-1) (object_delete_request.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=28) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_glob_status.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_file.max=-1) (op_get_delegation_token.max=-1) (op_is_directory.max=-1) (op_list_files.max=-1) (op_delete.max=87) (op_get_file_status.max=6) (action_executor_acquired.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_head_request.max=21) (stream_read_remote_stream_drain.max=1) (op_rename.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=300) (object_put_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.max=-1) (op_list_status.max=-1) (op_create.max=62) (op_abort.failures.max=-1) (action_file_opened.failures.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_list.max=-1) (object_put_request.max=77) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.max=-1) (op_copy_from_local_file.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_map.failures.max=-1) (op_abort.max=-1) (action_file_opened.max=11) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.max=185) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_list.failures.max=-1) (action_http_head_request.failures.max=-1) (op_rename.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=13, sum=219, mean=16.8462)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=26, sum=726, mean=27.9231)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=13, sum=676, mean=52.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=10, sum=56, mean=5.6000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=1, mean=0.5000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=13, sum=662, mean=50.9231)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=26, sum=344, mean=13.2308)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=52, sum=763, mean=14.6731)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=205, mean=17.0833)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=36, sum=211, mean=5.8611)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:00,279 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:00,279 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,279 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,279 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,279 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,279 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=117&ts=1731778920279
2024-11-16 17:42:00,285 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:00,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,285 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,286 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=117&ts=1731778920279
2024-11-16 17:42:00,288 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,288 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:00,288 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:00,288 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:00,288 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000070&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=117&ts=1731778920279
2024-11-16 17:42:00,297 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:00,297 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:00,297 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:00,298 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:00,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,298 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,299 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000071 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000071&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=117&ts=1731778920298
2024-11-16 17:42:00,304 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:00,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,304 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:00,305 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17493972949216693042.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:00,306 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17493972949216693042.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (stream_write_exceptions=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (op_abort=0) (object_put_request=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (object_put_request.failures=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (op_hsync=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17493972949216693042.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,306 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,306 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:00,306 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17493972949216693042.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:00,307 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:00,307 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:00,307 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:00,307 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:00,307 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000071 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000071/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000071&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=118&ts=1731778920298
2024-11-16 17:42:00,335 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:00,335 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:00,335 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:42:00,336 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17493972949216693042.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:00,336 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17493972949216693042.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,336 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17493972949216693042.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,336 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:00,336 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,337 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (object_put_request.failures=0) (stream_write_total_data=65536) (object_put_request=1) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (stream_write_bytes=65536) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (op_abort.failures=0) (op_abort=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.min=28) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=28) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=28, mean=28.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:00,337 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:00,338 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,338 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,338 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:00,339 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000072 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000072/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000072&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=117&ts=1731778920338
2024-11-16 17:42:00,342 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:00,343 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:00,343 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,345 [JUnit-testVectoredReadCapability[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_operations=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=0) (stream_read_vectored_incoming_ranges=0) (action_executor_acquired=0) (stream_read_seek_operations=0) (stream_read_operations=0) (action_http_get_request=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_bytes=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=0) (stream_read_remote_stream_aborted=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_read_total_bytes=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_exceptions=0) (stream_read_closed=0) (stream_read_block_acquire_read=0) (stream_aborted=0) (stream_read_unbuffered=0) (stream_read_opened=0) (stream_read_close_operations=1) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.min=5) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_http_get_request.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=5) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:00,347 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:00,348 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,348 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,349 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=117&ts=1731778920347
2024-11-16 17:42:00,354 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,355 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,356 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [117] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=117&ts=1731778920347
2024-11-16 17:42:00,367 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:42:00,367 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:00,368 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:00,368 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:00,368 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:00,369 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:00,369 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:00,369 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:00,369 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:00,369 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:00,369 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:00,370 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:00,370 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:00,370 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:00,370 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,370 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [119] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=119&ts=1731778920347
2024-11-16 17:42:00,376 [s3a-transfer-fso-bucket-unbounded-pool2-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:00,377 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:42:00,378 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:00,378 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:00,378 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:00,378 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778920331; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:00,378 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:00,378 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:00,378 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:00,379 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:00,379 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,379 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=120&ts=1731778920347
2024-11-16 17:42:00,387 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:00,387 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:00,387 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:00,388 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:00,388 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:00,388 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,388 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,388 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:00,388 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,388 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000073&t0=117&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=120&ts=1731778920347
2024-11-16 17:42:00,399 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:00,399 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:00,399 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:00,399 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:42:00,399 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:42:00,399 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:42:00,399 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:00,399 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:00,406 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:00,418 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 17, active threads = 0, queued tasks = 0, completed tasks = 17], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_tasks_failed=0) (fake_directories_deleted=14) (op_list_files.failures=0) (audit_access_check_failure=0) (committer_commits.failures=0) (files_copied_bytes=0) (op_get_content_summary=0) (object_delete_request=0) (op_rename.failures=0) (stream_read_operations=2) (committer_tasks_completed=0) (committer_magic_files_created=0) (op_mkdirs.failures=0) (stream_write_total_data=1835008) (committer_load_single_pending_file=0) (files_delete_rejected=0) (op_get_file_status=1) (committer_commits_reverted=0) (directories_created=14) (stream_read_remote_stream_aborted=0) (action_http_get_request=12) (op_glob_status=0) (op_list_files=0) (object_list_request.failures=0) (stream_read_total_bytes=134396) (multipart_upload_part_put_bytes=0) (directories_deleted=0) (op_xattr_get_named_map=0) (stream_read_close_operations=11) (store_io_request=163) (object_copy_requests=0) (committer_jobs_completed=0) (stream_write_exceptions=0) (op_glob_status.failures=0) (committer_commit_job=0) (object_bulk_delete_request=28) (object_select_requests=0) (multipart_upload_started=0) (op_hsync=0) (op_access.failures=0) (store_io_throttled=0) (stream_read_bytes_discarded_in_close=130672) (committer_materialize_file.failures=0) (op_xattr_list=0) (stream_write_block_uploads_aborted=0) (delegation_tokens_issued=0) (audit_failure=0) (committer_jobs_failed=0) (files_created=14) (committer_commit_job.failures=0) (object_multipart_initiated=0) (op_exists.failures=0) (object_put_request=28) (op_abort.failures=0) (committer_materialize_file=0) (op_list_located_status=0) (op_create_non_recursive=0) (stream_read_seek_bytes_skipped=0) (op_is_file.failures=0) (op_xattr_get_named_map.failures=0) (stream_write_bytes=917504) (stream_write_total_time=0) (op_delete=14) (stream_write_exceptions_completing_upload=0) (object_metadata_request=39) (committer_stage_file_upload=0) (audit_request_execution=163) (op_exists=0) (multipart_upload_list=0) (op_delete.failures=0) (audit_span_creation=55) (action_file_opened=11) (op_mkdirs=14) (object_delete_objects=28) (fake_directories_created=0) (object_put_request_completed=28) (op_copy_from_local_file.failures=0) (object_delete_request.failures=0) (op_xattr_get_map.failures=0) (stream_read_closed=2) (multipart_upload_abort_under_path_invoked=0) (stream_read_remote_stream_drain=2) (stream_read_exceptions=0) (multipart_upload_list.failures=0) (stream_read_seek_bytes_discarded=0) (op_xattr_get_named=0) (op_copy_from_local_file=0) (stream_read_opened=2) (ignored_errors=0) (store_exists_probe.failures=0) (op_get_file_status.failures=0) (committer_stage_file_upload.failures=0) (stream_read_fully_operations=0) (object_multipart_aborted=0) (op_xattr_get_map=0) (op_xattr_list.failures=0) (object_continue_list_request.failures=0) (op_list_status=0) (stream_read_seek_operations=0) (stream_write_block_uploads_committed=0) (committer_magic_marker_put=0) (stream_write_block_uploads=14) (multipart_upload_part_put=0) (op_is_directory=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (op_get_delegation_token=0) (files_copied=0) (stream_write_queue_duration.failures=0) (stream_read_seek_forward_operations=0) (op_xattr_get_named.failures=0) (op_get_file_checksum=0) (op_createfile=0) (stream_read_operations_incomplete=0) (committer_commits_created=0) (op_get_file_checksum.failures=0) (op_is_directory.failures=0) (committer_load_single_pending_file.failures=0) (committer_bytes_committed=0) (store_exists_probe=0) (stream_read_vectored_read_bytes_discarded=9985) (stream_read_seek_backward_operations=0) (stream_read_vectored_incoming_ranges=30) (committer_commits_aborted=0) (op_createfile.failures=0) (committer_magic_marker_put.failures=0) (stream_read_seek_policy_changed=12) (object_multipart_initiated.failures=0) (stream_read_vectored_combined_ranges=12) (multipart_upload_completed=0) (op_open=11) (op_rename=0) (stream_write_queue_duration=0) (stream_read_remote_stream_aborted.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_operations=9) (action_http_head_request=39) (op_get_content_summary.failures=0) (op_is_file=0) (op_list_status.failures=0) (action_file_opened.failures=0) (multipart_instantiated=0) (object_bulk_delete_request.failures=0) (object_put_request.failures=0) (files_deleted=14) (action_http_head_request.failures=0) (op_openfile=0) (stream_read_remote_stream_drain.failures=0) (op_create.failures=0) (op_get_delegation_token.failures=0) (store_io_retry=0) (stream_read_bytes=3724) (committer_bytes_uploaded=0) (delegation_tokens_issued.failures=0) (action_http_get_request.failures=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_aborted=0) (object_list_request=56) (op_access=0) (action_executor_acquired=0) (object_put_bytes=917504) (op_create=14) (op_hflush=0) (committer_commits_completed=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=1) (object_continue_list_request=0));
gauges=((stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=14) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0));
minimums=((op_glob_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_list.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.min=-1) (op_is_directory.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_write_queue_duration.min=-1) (action_http_get_request.min=10) (object_delete_request.failures.min=-1) (op_list_status.min=-1) (op_mkdirs.failures.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_bulk_delete_request.failures.min=-1) (op_exists.min=-1) (committer_commit_job.failures.min=-1) (action_file_opened.failures.min=-1) (op_createfile.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.min=7) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.min=3) (op_list_files.failures.min=-1) (op_delete.min=30) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_drain.min=0) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named.failures.min=-1) (committer_commit_job.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (op_createfile.failures.min=-1) (action_http_head_request.failures.min=-1) (op_list_status.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_list_request.failures.min=-1) (object_list_request.min=5) (op_xattr_list.failures.min=-1) (op_xattr_list.min=-1) (op_get_file_status.min=6) (op_abort.failures.min=-1) (op_is_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (action_executor_acquired.min=-1) (op_access.min=-1) (object_put_request.min=28) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_rename.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_aborted.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (op_rename.failures.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_mkdirs.min=16) (store_exists_probe.min=-1) (object_delete_request.min=-1) (op_create.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_files.min=-1) (op_access.failures.min=-1) (op_glob_status.min=-1) (op_create.min=7) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.min=-1));
maximums=((object_bulk_delete_request.failures.max=-1) (object_delete_request.failures.max=-1) (action_file_opened.max=11) (object_list_request.max=185) (stream_write_queue_duration.max=-1) (action_http_head_request.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_files.failures.max=-1) (op_is_directory.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.failures.max=-1) (op_mkdirs.max=300) (op_is_file.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.max=26) (object_multipart_initiated.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (op_list_status.failures.max=-1) (op_rename.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_delete.max=87) (object_delete_request.max=-1) (op_xattr_get_named.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_map.failures.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.max=-1) (op_create.max=62) (op_xattr_get_named.failures.max=-1) (op_createfile.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.max=1) (op_list_files.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_content_summary.max=-1) (op_xattr_list.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (store_exists_probe.max=-1) (op_list_status.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.max=28) (action_executor_acquired.max=-1) (op_exists.max=-1) (op_xattr_get_named_map.max=-1) (op_access.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_list.max=-1) (op_is_directory.max=-1) (op_create.failures.max=-1) (op_get_file_status.max=6) (op_abort.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.failures.max=-1) (object_put_request.max=77) (op_exists.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_rename.max=-1) (committer_commit_job.max=-1) (op_glob_status.failures.max=-1) (action_http_head_request.max=21) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_file.max=-1) (op_abort.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_content_summary.failures.max=-1));
means=((op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=39, sum=224, mean=5.7436)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=12, sum=205, mean=17.0833)) (op_delete.mean=(samples=14, sum=706, mean=50.4286)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=1, mean=0.5000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=28, sum=763, mean=27.2500)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=28, sum=363, mean=12.9643)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=14, sum=226, mean=16.1429)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=14, sum=681, mean=48.6429)) (action_file_opened.mean=(samples=11, sum=61, mean=5.5455)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=56, sum=790, mean=14.1071)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:00,418 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:00,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,419 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,419 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,419 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=121&ts=1731778920418
2024-11-16 17:42:00,424 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:00,424 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,425 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,425 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,425 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,425 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=121&ts=1731778920418
2024-11-16 17:42:00,427 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,427 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:00,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:00,428 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:00,428 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000074&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=121&ts=1731778920418
2024-11-16 17:42:00,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:00,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:00,434 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:42:00,434 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:00,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,434 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,434 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,435 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000075 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000075&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=121&ts=1731778920434
2024-11-16 17:42:00,443 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:00,443 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,443 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:00,443 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7194767263190533015.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:00,444 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7194767263190533015.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (op_abort=0) (stream_write_total_time=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_queue_duration=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (op_abort.failures=0) (action_executor_acquired=0) (object_put_request=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((op_abort.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7194767263190533015.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,444 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,444 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:00,444 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7194767263190533015.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:00,445 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:00,445 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:00,445 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:00,445 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:00,445 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000075 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000075/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000075&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=122&ts=1731778920434
2024-11-16 17:42:00,486 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:00,487 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:00,487 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.042s
2024-11-16 17:42:00,487 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7194767263190533015.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:00,488 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7194767263190533015.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,488 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7194767263190533015.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,488 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:00,488 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,490 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (object_put_request.failures=0) (object_put_request=1) (op_abort=0) (stream_write_queue_duration=0) (op_hsync=0) (stream_write_block_uploads=1) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (op_hflush=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=41) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=41) (multipart_upload_completed.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=41, mean=41.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:00,490 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:00,491 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,491 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,492 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:00,492 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000076 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000076&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=121&ts=1731778920491
2024-11-16 17:42:00,496 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:00,496 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:00,497 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,497 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:42:00,497 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:00,498 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:42:00,503 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:42:00,503 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,504 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,504 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,505 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000076 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000076/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=10-1199&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000076&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=123&ts=1731778920491
2024-11-16 17:42:00,513 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.009s
2024-11-16 17:42:00,513 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:42:00,514 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:42:00,514 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:42:00,514 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,515 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_version_mismatches=0) (stream_read_vectored_operations=1) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_exceptions=0) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_discarded=0) (stream_read_operations=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=875) (action_file_opened=1) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_bytes=315) (stream_read_vectored_incoming_ranges=4) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_close=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (stream_aborted=0) (action_http_get_request=1) (action_executor_acquired=0) (action_file_opened.failures=0) (stream_read_total_bytes=315) (action_http_get_request.failures=0) (stream_read_closed=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=9) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=9) (action_file_opened.max=5) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=9, mean=9.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:00,516 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:00,516 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,516 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,517 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=121&ts=1731778920516
2024-11-16 17:42:00,522 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,522 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,522 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [121] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=121&ts=1731778920516
2024-11-16 17:42:00,532 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:00,533 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:00,533 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:00,533 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:00,533 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:00,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:00,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:00,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:00,534 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:00,534 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:00,534 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:00,534 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:00,534 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:00,534 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:00,535 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,535 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [124] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=124&ts=1731778920516
2024-11-16 17:42:00,540 [s3a-transfer-fso-bucket-unbounded-pool2-t18] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:00,541 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:42:00,541 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:00,541 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:00,541 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:00,541 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778920481; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:00,542 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:00,542 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:00,542 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:00,542 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:00,543 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,543 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=125&ts=1731778920516
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,551 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000077&t0=121&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=125&ts=1731778920516
2024-11-16 17:42:00,561 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:00,562 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:00,562 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:00,563 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.020s
2024-11-16 17:42:00,564 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:42:00,564 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:42:00,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:00,564 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:00,566 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:00,581 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 18, active threads = 0, queued tasks = 0, completed tasks = 18], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (store_io_request=175) (op_abort.failures=0) (op_delete.failures=0) (action_file_opened.failures=0) (op_list_located_status=0) (op_copy_from_local_file.failures=0) (op_list_files=0) (action_file_opened=12) (stream_read_seek_backward_operations=0) (object_multipart_aborted=0) (directories_created=15) (op_createfile=0) (object_list_request=60) (op_get_file_status.failures=0) (committer_commits_created=0) (stream_read_remote_stream_drain.failures=0) (delegation_tokens_issued=0) (op_xattr_list.failures=0) (object_multipart_initiated.failures=0) (stream_read_exceptions=0) (committer_commit_job=0) (committer_commit_job.failures=0) (op_hflush=0) (stream_write_block_uploads_aborted=0) (op_is_directory.failures=0) (op_mkdirs=15) (files_copied_bytes=0) (op_rename=0) (op_xattr_list=0) (files_created=15) (stream_read_bytes_discarded_in_close=130672) (stream_read_operations=2) (stream_write_exceptions=0) (stream_read_seek_forward_operations=0) (action_http_get_request.failures=0) (stream_write_queue_duration=0) (op_access=0) (object_select_requests=0) (object_multipart_initiated=0) (stream_read_vectored_combined_ranges=13) (directories_deleted=0) (stream_read_total_bytes=134711) (multipart_instantiated=0) (object_metadata_request=42) (object_put_bytes=983040) (fake_directories_deleted=15) (store_io_retry=0) (stream_read_seek_bytes_skipped=0) (committer_bytes_committed=0) (stream_read_unbuffered=1) (stream_read_remote_stream_drain=2) (committer_jobs_completed=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_operations=0) (object_delete_request=0) (stream_read_close_operations=12) (stream_read_vectored_operations=10) (committer_commits_completed=0) (op_abort=0) (audit_access_check_failure=0) (op_is_directory=0) (stream_read_seek_bytes_discarded=0) (object_delete_request.failures=0) (stream_write_bytes=983040) (stream_read_operations_incomplete=0) (action_http_head_request.failures=0) (committer_stage_file_upload=0) (op_access.failures=0) (committer_jobs_failed=0) (multipart_upload_started=0) (stream_read_vectored_incoming_ranges=34) (op_hsync=0) (object_multipart_aborted.failures=0) (committer_stage_file_upload.failures=0) (op_copy_from_local_file=0) (op_createfile.failures=0) (stream_write_total_data=1966080) (object_bulk_delete_request.failures=0) (object_put_request.failures=0) (op_create_non_recursive=0) (op_list_files.failures=0) (files_copied=0) (op_exists.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_mkdirs.failures=0) (stream_write_block_uploads=15) (op_get_content_summary.failures=0) (object_put_request=30) (committer_magic_files_created=0) (stream_read_remote_stream_aborted=0) (object_copy_requests=0) (committer_tasks_failed=0) (op_xattr_get_named=0) (files_delete_rejected=0) (op_xattr_get_named.failures=0) (op_exists=0) (op_glob_status=0) (op_list_status.failures=0) (op_is_file.failures=0) (op_is_file=0) (stream_read_seek_policy_changed=13) (committer_bytes_uploaded=0) (op_list_status=0) (multipart_upload_part_put=0) (store_exists_probe=0) (stream_read_closed=2) (audit_span_creation=59) (op_get_file_checksum.failures=0) (op_get_delegation_token.failures=0) (stream_read_bytes=4039) (store_io_throttled=0) (multipart_upload_list=0) (op_xattr_get_map=0) (object_continue_list_request=0) (op_get_content_summary=0) (op_create.failures=0) (stream_read_version_mismatches=0) (op_xattr_get_named_map=0) (op_rename.failures=0) (op_openfile=0) (stream_aborted=0) (committer_commits_aborted=0) (committer_materialize_file.failures=0) (stream_write_queue_duration.failures=0) (committer_load_single_pending_file.failures=0) (object_continue_list_request.failures=0) (multipart_upload_list.failures=0) (action_executor_acquired.failures=0) (fake_directories_created=0) (committer_commits_reverted=0) (op_open=12) (op_get_delegation_token=0) (stream_read_fully_operations=0) (op_xattr_get_map.failures=0) (files_deleted=15) (audit_failure=0) (op_get_file_status=1) (stream_read_vectored_read_bytes_discarded=10860) (multipart_upload_aborted=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_create=15) (committer_commits.failures=0) (stream_write_block_uploads_committed=0) (committer_materialize_file=0) (delegation_tokens_issued.failures=0) (op_get_file_checksum=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_discarded_in_abort=0) (committer_load_single_pending_file=0) (object_bulk_delete_request=30) (stream_write_total_time=0) (action_http_head_request=42) (store_exists_probe.failures=0) (multipart_upload_part_put_bytes=0) (action_executor_acquired=0) (action_http_get_request=13) (object_delete_objects=30) (op_delete=15) (committer_tasks_completed=0) (multipart_upload_completed=0) (ignored_errors=0) (op_glob_status.failures=0) (object_put_request_completed=30) (stream_read_opened=2) (audit_request_execution=175));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=15) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0));
minimums=((action_executor_acquired.min=-1) (object_bulk_delete_request.failures.min=-1) (op_create.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.min=5) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_create.min=7) (op_mkdirs.min=16) (object_multipart_aborted.min=-1) (op_list_files.failures.min=-1) (action_http_get_request.failures.min=-1) (op_glob_status.min=-1) (op_delete.failures.min=-1) (op_is_directory.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.min=-1) (action_http_head_request.min=2) (delegation_tokens_issued.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_stage_file_upload.min=-1) (op_rename.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_named.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.min=-1) (committer_materialize_file.min=-1) (op_get_content_summary.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.failures.min=-1) (op_delete.min=30) (op_mkdirs.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_exists.failures.min=-1) (op_list_files.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.failures.min=-1) (action_file_opened.failures.min=-1) (committer_commit_job.min=-1) (op_glob_status.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.min=-1) (op_access.failures.min=-1) (action_http_head_request.failures.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=9) (object_continue_list_request.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_drain.min=0) (op_createfile.failures.min=-1) (op_get_file_status.min=6) (action_executor_acquired.failures.min=-1) (op_is_file.min=-1) (object_delete_request.min=-1) (object_put_request.min=41) (op_access.min=-1) (object_multipart_initiated.min=-1) (op_exists.min=-1) (object_list_request.failures.min=-1) (op_abort.min=-1) (object_bulk_delete_request.min=7) (committer_stage_file_upload.failures.min=-1) (action_file_opened.min=5) (op_rename.min=-1));
maximums=((op_get_content_summary.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_list_status.max=-1) (op_is_file.failures.max=-1) (op_glob_status.max=-1) (op_is_file.max=-1) (op_mkdirs.max=300) (committer_materialize_file.max=-1) (object_list_request.max=185) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_status.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_file_opened.failures.max=-1) (object_put_request.max=77) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.max=-1) (object_continue_list_request.max=-1) (op_create.max=62) (stream_read_remote_stream_drain.max=1) (committer_commit_job.failures.max=-1) (committer_stage_file_upload.max=-1) (op_exists.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.max=-1) (store_exists_probe.max=-1) (op_xattr_list.max=-1) (object_multipart_initiated.max=-1) (action_file_opened.max=11) (action_http_head_request.failures.max=-1) (action_http_head_request.max=21) (object_continue_list_request.failures.max=-1) (action_http_get_request.max=28) (op_get_file_checksum.failures.max=-1) (op_delete.max=87) (op_mkdirs.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_file_checksum.max=-1) (op_createfile.failures.max=-1) (op_rename.max=-1) (op_xattr_get_map.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.failures.max=-1) (op_rename.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_is_directory.failures.max=-1) (object_bulk_delete_request.max=26) (stream_read_remote_stream_drain.failures.max=-1) (op_get_delegation_token.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_access.max=-1) (op_access.failures.max=-1) (op_createfile.max=-1) (object_list_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_status.max=6) (committer_magic_marker_put.failures.max=-1) (op_delete.failures.max=-1) (op_create.failures.max=-1) (object_bulk_delete_request.failures.max=-1));
means=((op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=1, mean=0.5000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=15, sum=697, mean=46.4667)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=42, sum=236, mean=5.6190)) (object_list_request.mean=(samples=60, sum=818, mean=13.6333)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=13, sum=214, mean=16.4615)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (object_put_request.mean=(samples=30, sum=810, mean=27.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=30, sum=381, mean=12.7000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=15, sum=235, mean=15.6667)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=12, sum=66, mean=5.5000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=15, sum=737, mean=49.1333)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:00,581 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:00,582 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,582 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,582 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,582 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,582 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=126&ts=1731778920581
2024-11-16 17:42:00,589 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:00,589 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,589 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,590 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,590 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,590 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=126&ts=1731778920581
2024-11-16 17:42:00,594 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,594 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:00,594 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:00,594 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:00,594 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000078&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=126&ts=1731778920581
2024-11-16 17:42:00,603 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:00,603 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:00,603 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:00,603 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:00,604 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,604 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,604 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,604 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,604 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000079 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000079&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=126&ts=1731778920604
2024-11-16 17:42:00,612 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:00,612 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,613 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:00,613 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17608911952128149069.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:00,614 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17608911952128149069.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_abort.failures=0) (op_hflush=0) (op_abort=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (stream_write_exceptions=0) (object_put_request=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1));
maximums=((op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17608911952128149069.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,614 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,614 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:00,614 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17608911952128149069.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:00,615 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:00,615 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:00,615 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:00,615 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:00,615 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000079 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000079/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000079&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=127&ts=1731778920604
2024-11-16 17:42:00,657 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:00,658 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:00,658 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.043s
2024-11-16 17:42:00,659 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17608911952128149069.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:00,659 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17608911952128149069.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,659 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17608911952128149069.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,659 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:00,659 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,661 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (object_multipart_initiated.failures=0) (stream_write_total_data=65536) (object_multipart_aborted=0) (object_put_request.failures=0) (stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (op_abort=0) (op_abort.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (object_put_request=1) (multipart_upload_completed=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=42) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=42) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=42, mean=42.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:00,661 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:00,662 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,662 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,662 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:00,662 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000080 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000080&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=126&ts=1731778920662
2024-11-16 17:42:00,670 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:00,670 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:00,670 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,670 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:42:00,670 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:00,670 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:42:00,672 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:42:00,672 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,672 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,672 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,673 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000080 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000080/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-7998&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000080&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=128&ts=1731778920662
2024-11-16 17:42:00,682 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:42:00,682 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:42:00,682 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:42:00,683 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,684 [JUnit-testAllRangesMergedIntoOne[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_vectored_operations=1) (action_file_opened.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=0) (stream_read_opened=0) (stream_read_operations=0) (stream_read_operations_incomplete=0) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_aborted=0) (stream_read_block_read.failures=0) (stream_read_close_operations=1) (stream_read_remote_stream_drain.failures=0) (stream_read_fully_operations=0) (action_http_get_request=1) (stream_read_version_mismatches=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_vectored_combined_ranges=1) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes=300) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (stream_read_total_bytes=300) (stream_read_vectored_incoming_ranges=3) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (action_file_opened.min=8) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=10) (stream_read_prefetch_operations.min=-1));
maximums=((action_file_opened.max=8) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=10) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:00,688 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:00,689 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,689 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,689 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=126&ts=1731778920688
2024-11-16 17:42:00,696 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,696 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,696 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [126] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=126&ts=1731778920688
2024-11-16 17:42:00,723 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.027s
2024-11-16 17:42:00,723 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:00,724 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:00,724 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:00,725 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:00,725 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:00,726 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:00,726 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:00,726 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:00,727 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:00,727 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:00,728 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:00,728 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:00,729 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:00,729 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,730 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [129] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=129&ts=1731778920688
2024-11-16 17:42:00,740 [s3a-transfer-fso-bucket-unbounded-pool2-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:42:00,741 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:42:00,741 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:00,741 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:00,741 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:00,741 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778920650; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:00,741 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:00,741 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:00,742 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:00,742 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:00,743 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:00,743 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:00,744 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:00,744 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:00,744 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,744 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,744 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:00,744 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,744 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=130&ts=1731778920688
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:00,755 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,756 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000081&t0=126&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=130&ts=1731778920688
2024-11-16 17:42:00,778 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:42:00,779 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.024s
2024-11-16 17:42:00,779 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.024s
2024-11-16 17:42:00,779 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.036s
2024-11-16 17:42:00,780 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.037s
2024-11-16 17:42:00,780 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.054s
2024-11-16 17:42:00,780 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:00,780 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:00,782 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:00,803 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 19, active threads = 0, queued tasks = 0, completed tasks = 19], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_commits_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_write_block_uploads=16) (stream_read_operations_incomplete=0) (object_multipart_initiated.failures=0) (object_bulk_delete_request.failures=0) (op_is_file.failures=0) (stream_write_block_uploads_aborted=0) (multipart_upload_list=0) (directories_created=16) (op_xattr_get_named.failures=0) (committer_materialize_file.failures=0) (op_get_delegation_token=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_queue_duration=0) (committer_bytes_uploaded=0) (op_get_content_summary.failures=0) (op_abort=0) (op_get_file_checksum.failures=0) (stream_write_exceptions_completing_upload=0) (fake_directories_deleted=16) (committer_tasks_failed=0) (stream_read_exceptions=0) (op_exists=0) (op_is_file=0) (committer_load_single_pending_file.failures=0) (committer_load_single_pending_file=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (op_xattr_list=0) (object_continue_list_request=0) (op_mkdirs=16) (files_copied=0) (stream_read_remote_stream_drain.failures=0) (files_delete_rejected=0) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (op_xattr_get_map.failures=0) (committer_commits_created=0) (object_delete_request.failures=0) (object_metadata_request=45) (stream_read_vectored_incoming_ranges=37) (stream_write_total_data=2097152) (stream_read_vectored_operations=11) (multipart_upload_aborted=0) (committer_magic_marker_put=0) (object_continue_list_request.failures=0) (delegation_tokens_issued=0) (action_executor_acquired=0) (op_is_directory=0) (op_list_status=0) (object_put_request=32) (object_multipart_initiated=0) (object_multipart_aborted=0) (committer_bytes_committed=0) (stream_read_close_operations=13) (audit_request_execution=187) (stream_read_unbuffered=1) (stream_read_fully_operations=0) (stream_write_bytes=1048576) (committer_jobs_completed=0) (committer_commit_job.failures=0) (multipart_upload_part_put_bytes=0) (op_abort.failures=0) (action_http_head_request.failures=0) (op_access=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0) (store_io_request=187) (op_copy_from_local_file.failures=0) (op_delete=16) (object_list_request=64) (op_xattr_get_map=0) (stream_aborted=0) (store_io_throttled=0) (object_select_requests=0) (action_file_opened.failures=0) (store_exists_probe.failures=0) (op_copy_from_local_file=0) (committer_stage_file_upload.failures=0) (op_createfile=0) (committer_jobs_failed=0) (object_put_request.failures=0) (op_exists.failures=0) (op_xattr_get_named_map=0) (stream_read_remote_stream_drain=2) (stream_read_vectored_read_bytes_discarded=18559) (files_created=16) (stream_read_bytes_discarded_in_close=130672) (delegation_tokens_issued.failures=0) (op_glob_status.failures=0) (op_xattr_get_named=0) (action_http_head_request=45) (op_hsync=0) (object_put_bytes=1048576) (object_delete_request=0) (multipart_upload_list.failures=0) (stream_read_seek_backward_operations=0) (op_xattr_get_named_map.failures=0) (op_get_file_status=1) (op_createfile.failures=0) (action_http_get_request=14) (store_io_retry=0) (op_xattr_list.failures=0) (op_get_file_status.failures=0) (op_access.failures=0) (op_delete.failures=0) (multipart_instantiated=0) (ignored_errors=0) (stream_read_closed=2) (stream_read_seek_bytes_discarded=0) (stream_read_operations=2) (op_glob_status=0) (directories_deleted=0) (files_copied_bytes=0) (op_list_files=0) (object_delete_objects=32) (audit_failure=0) (committer_tasks_completed=0) (action_file_opened=13) (stream_read_vectored_combined_ranges=14) (audit_span_creation=63) (object_copy_requests=0) (audit_access_check_failure=0) (op_get_content_summary=0) (op_mkdirs.failures=0) (object_bulk_delete_request=32) (op_create=16) (multipart_upload_started=0) (committer_commits_completed=0) (op_is_directory.failures=0) (fake_directories_created=0) (op_get_delegation_token.failures=0) (op_list_files.failures=0) (op_create_non_recursive=0) (stream_read_total_bytes=135011) (multipart_upload_part_put=0) (op_rename.failures=0) (committer_magic_files_created=0) (stream_write_queue_duration.failures=0) (stream_read_seek_forward_operations=0) (committer_commit_job=0) (op_open=13) (op_list_located_status=0) (stream_write_block_uploads_committed=0) (op_hflush=0) (op_list_status.failures=0) (stream_write_total_time=0) (stream_read_seek_policy_changed=14) (committer_stage_file_upload=0) (files_deleted=16) (committer_commits.failures=0) (object_list_request.failures=0) (op_create.failures=0) (multipart_upload_completed=0) (committer_materialize_file=0) (object_multipart_aborted.failures=0) (stream_read_bytes=4339) (stream_read_opened=2) (stream_read_remote_stream_aborted.failures=0) (store_exists_probe=0) (op_get_file_checksum=0) (committer_commits_reverted=0) (stream_read_seek_operations=0) (committer_magic_marker_put.failures=0) (op_openfile=0) (object_put_request_completed=32) (op_rename=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_write_block_uploads_pending=16) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((action_http_get_request.min=10) (op_access.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.min=7) (action_executor_acquired.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_continue_list_request.min=-1) (op_is_file.failures.min=-1) (action_http_get_request.failures.min=-1) (op_is_directory.failures.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_map.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.min=-1) (committer_stage_file_upload.failures.min=-1) (op_rename.failures.min=-1) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_is_file.min=-1) (op_delete.min=30) (action_file_opened.min=8) (op_xattr_get_named_map.min=-1) (op_mkdirs.failures.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.min=-1) (op_create.min=7) (action_http_head_request.failures.min=-1) (op_exists.failures.min=-1) (op_mkdirs.min=16) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_head_request.min=2) (op_get_file_status.failures.min=-1) (committer_materialize_file.min=-1) (committer_stage_file_upload.min=-1) (delegation_tokens_issued.failures.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.min=-1) (op_get_file_checksum.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_list_files.failures.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_abort.min=-1) (op_delete.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.min=5) (committer_magic_marker_put.failures.min=-1) (op_get_file_status.min=6) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (op_is_directory.min=-1) (object_put_request.min=42) (committer_load_single_pending_file.failures.min=-1) (op_xattr_list.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named.failures.min=-1) (op_list_status.min=-1) (op_exists.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_list_files.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.min=-1) (op_rename.min=-1) (op_createfile.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_write_queue_duration.failures.min=-1));
maximums=((committer_stage_file_upload.max=-1) (op_createfile.max=-1) (op_get_content_summary.failures.max=-1) (object_delete_request.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_file_status.max=6) (op_list_status.failures.max=-1) (op_xattr_list.max=-1) (committer_commit_job.max=-1) (action_executor_acquired.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.max=26) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.max=1) (object_continue_list_request.failures.max=-1) (op_mkdirs.max=300) (delegation_tokens_issued.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (op_list_files.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_materialize_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_status.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_glob_status.failures.max=-1) (op_get_file_status.failures.max=-1) (op_is_directory.max=-1) (action_file_opened.max=11) (object_multipart_initiated.failures.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.max=77) (op_mkdirs.failures.max=-1) (action_http_head_request.max=21) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.max=-1) (committer_materialize_file.failures.max=-1) (op_access.max=-1) (op_create.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_delete_request.max=-1) (committer_commit_job.failures.max=-1) (action_http_get_request.failures.max=-1) (op_rename.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.max=-1) (op_get_delegation_token.max=-1) (op_xattr_list.failures.max=-1) (op_is_file.failures.max=-1) (op_delete.max=87) (op_get_file_checksum.failures.max=-1) (op_create.max=62) (multipart_upload_list.max=-1) (object_list_request.max=185) (op_access.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named_map.max=-1) (stream_write_queue_duration.max=-1) (object_list_request.failures.max=-1) (committer_magic_marker_put.max=-1) (action_http_get_request.max=28) (op_xattr_get_map.failures.max=-1) (action_http_head_request.failures.max=-1) (op_get_content_summary.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (op_rename.failures.max=-1) (op_glob_status.max=-1) (op_is_directory.failures.max=-1) (op_is_file.max=-1) (op_delete.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=13, sum=74, mean=5.6923)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=32, sum=413, mean=12.9063)) (op_create.mean=(samples=16, sum=244, mean=15.2500)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=32, sum=861, mean=26.9063)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=16, sum=719, mean=44.9375)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=45, sum=255, mean=5.6667)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=14, sum=224, mean=16.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=64, sum=870, mean=13.5938)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=1, mean=0.5000)) (op_delete.mean=(samples=16, sum=792, mean=49.5000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:00,805 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:00,808 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,811 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,811 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=131&ts=1731778920804
2024-11-16 17:42:00,825 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:42:00,826 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,826 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:00,827 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,827 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,828 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=131&ts=1731778920804
2024-11-16 17:42:00,833 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:00,834 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:00,835 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:00,835 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:00,835 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000082&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=131&ts=1731778920804
2024-11-16 17:42:00,853 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:00,854 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:00,854 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:42:00,855 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:00,856 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,856 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,856 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,857 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,857 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000083 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000083&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=131&ts=1731778920855
2024-11-16 17:42:00,867 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:00,867 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,867 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:00,868 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17446037069523835813.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:00,869 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17446037069523835813.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_bytes=65536) (object_put_request=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_total_time=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (op_abort=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (stream_write_exceptions=0) (op_abort.failures=0) (stream_write_total_data=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (op_hsync=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_put_request.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17446037069523835813.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,869 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,870 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:00,870 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17446037069523835813.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:00,871 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:00,871 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:00,871 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:00,872 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:00,872 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000083 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000083/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000083&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=132&ts=1731778920855
2024-11-16 17:42:00,909 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:00,910 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:00,910 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.039s
2024-11-16 17:42:00,910 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17446037069523835813.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:00,910 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17446037069523835813.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,910 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17446037069523835813.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:00,910 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:00,911 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:00,912 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_completed=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_exceptions=0) (object_put_request=1) (op_hflush=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (op_abort.failures=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=37) (object_put_request.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_put_request.max=37) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=37, mean=37.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:00,912 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:00,913 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:00,913 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:00,913 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:00,913 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=131&ts=1731778920913
2024-11-16 17:42:00,917 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:00,917 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:00,917 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,917 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:00,918 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:00,918 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:42:00,924 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,924 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,924 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,925 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,925 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,925 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,925 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=135&ts=1731778920913
2024-11-16 17:42:00,924 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:00,924 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:00,927 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,927 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-14435&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=134&ts=1731778920913
2024-11-16 17:42:00,925 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:00,928 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000084&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=133&ts=1731778920913
2024-11-16 17:42:00,938 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:42:00,939 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,942 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:42:00,942 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,943 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.016s
2024-11-16 17:42:00,943 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:42:00,944 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:42:00,944 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:00,950 [JUnit-testVectoredIOEndToEnd[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_discarded=0) (stream_read_bytes=1424) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_operations_incomplete=0) (stream_read_vectored_incoming_ranges=5) (action_http_get_request.failures=0) (stream_read_opened=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_read=0) (action_file_opened=1) (stream_read_closed=0) (stream_read_total_bytes=1424) (stream_aborted=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_close_operations=1) (stream_read_block_read.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=3) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=1) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (action_http_get_request=3) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (action_file_opened.failures=0) (stream_read_fully_operations=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0));
minimums=((action_http_get_request.min=13) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=17) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=46, mean=15.3333)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:00,955 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:00,955 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:00,955 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:00,956 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=131&ts=1731778920955
2024-11-16 17:42:00,959 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:00,959 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,960 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [131] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=131&ts=1731778920955
2024-11-16 17:42:00,977 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.018s
2024-11-16 17:42:00,977 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:00,977 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:00,977 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:00,977 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:00,977 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:00,977 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:00,977 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:00,977 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:00,977 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:00,978 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:00,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:00,981 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:00,982 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:00,982 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:00,983 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [141] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=141&ts=1731778920955
2024-11-16 17:42:00,989 [s3a-transfer-fso-bucket-unbounded-pool2-t20] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:00,990 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:42:00,990 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:00,991 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:00,991 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:00,992 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778920905; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:00,992 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:00,992 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:00,992 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:00,993 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:00,997 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:00,997 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:00,998 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:00,998 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:00,998 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:00,998 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:00,999 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:00,999 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:00,999 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=142&ts=1731778920955
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.018s
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,016 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000085&t0=131&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=142&ts=1731778920955
2024-11-16 17:42:01,027 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:01,027 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:01,027 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:01,027 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.030s
2024-11-16 17:42:01,027 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.030s
2024-11-16 17:42:01,027 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.050s
2024-11-16 17:42:01,027 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:01,027 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:01,038 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:01,055 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 20, active threads = 0, queued tasks = 0, completed tasks = 20], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_bytes=5763) (object_bulk_delete_request=34) (stream_read_closed=2) (object_multipart_initiated.failures=0) (op_get_file_status=1) (op_get_file_checksum=0) (op_create_non_recursive=0) (action_http_get_request=17) (object_multipart_aborted=0) (files_copied_bytes=0) (object_delete_objects=34) (op_get_content_summary=0) (ignored_errors=0) (audit_request_execution=201) (committer_load_single_pending_file=0) (op_mkdirs.failures=0) (audit_access_check_failure=0) (stream_read_seek_forward_operations=0) (op_rename=0) (directories_created=17) (object_put_bytes=1114112) (files_deleted=17) (object_put_request_completed=34) (op_is_directory.failures=0) (op_xattr_get_map.failures=0) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_continue_list_request=0) (op_create.failures=0) (stream_read_seek_backward_operations=0) (files_delete_rejected=0) (stream_read_vectored_incoming_ranges=42) (store_io_retry=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted=0) (op_hsync=0) (op_exists=0) (op_createfile.failures=0) (op_get_content_summary.failures=0) (object_select_requests=0) (op_xattr_list=0) (op_delete.failures=0) (stream_read_operations_incomplete=0) (committer_stage_file_upload.failures=0) (object_metadata_request=48) (stream_read_bytes_backwards_on_seek=0) (stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_read_bytes_discarded=24503) (op_exists.failures=0) (op_get_delegation_token.failures=0) (committer_commits.failures=0) (committer_magic_files_created=0) (op_access.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_get_delegation_token=0) (action_file_opened=14) (fake_directories_created=0) (op_copy_from_local_file.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (object_continue_list_request.failures=0) (committer_commit_job.failures=0) (stream_read_seek_bytes_discarded=0) (files_copied=0) (committer_bytes_uploaded=0) (committer_stage_file_upload=0) (stream_read_seek_operations=0) (op_createfile=0) (committer_magic_marker_put.failures=0) (object_list_request.failures=0) (op_xattr_get_named_map=0) (op_xattr_list.failures=0) (stream_read_fully_operations=0) (op_mkdirs=17) (op_copy_from_local_file=0) (object_delete_request.failures=0) (op_access=0) (op_glob_status.failures=0) (stream_write_queue_duration=0) (op_abort=0) (op_get_file_status.failures=0) (stream_read_exceptions=0) (store_io_throttled=0) (op_create=17) (op_list_status.failures=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_skipped=0) (op_get_file_checksum.failures=0) (action_http_get_request.failures=0) (committer_commit_job=0) (delegation_tokens_issued.failures=0) (op_is_file.failures=0) (files_created=17) (multipart_upload_list=0) (op_openfile=0) (stream_read_remote_stream_drain=2) (committer_load_single_pending_file.failures=0) (committer_commits_created=0) (stream_read_unbuffered=1) (committer_tasks_completed=0) (directories_deleted=0) (action_http_head_request.failures=0) (stream_read_vectored_operations=12) (committer_materialize_file=0) (op_list_status=0) (committer_tasks_failed=0) (delegation_tokens_issued=0) (stream_write_block_uploads_committed=0) (committer_jobs_completed=0) (object_list_request=68) (op_list_files.failures=0) (op_list_located_status=0) (op_xattr_get_map=0) (stream_read_version_mismatches=0) (committer_materialize_file.failures=0) (stream_write_exceptions_completing_upload=0) (op_xattr_get_named.failures=0) (stream_read_total_bytes=136435) (stream_read_remote_stream_drain.failures=0) (stream_read_opened=2) (multipart_upload_part_put_bytes=0) (store_io_request=201) (audit_span_creation=67) (op_is_file=0) (op_is_directory=0) (object_put_request.failures=0) (op_xattr_get_named=0) (action_file_opened.failures=0) (stream_write_block_uploads_aborted=0) (stream_read_vectored_combined_ranges=17) (fake_directories_deleted=17) (object_copy_requests=0) (multipart_upload_part_put=0) (stream_write_queue_duration.failures=0) (object_put_request=34) (committer_jobs_failed=0) (op_open=14) (stream_read_close_operations=14) (committer_commits_completed=0) (store_exists_probe.failures=0) (multipart_instantiated=0) (stream_read_seek_policy_changed=15) (committer_commits_aborted=0) (op_abort.failures=0) (op_delete=17) (stream_write_total_data=2228224) (stream_read_operations=2) (stream_write_bytes=1114112) (stream_write_exceptions=0) (store_exists_probe=0) (stream_read_bytes_discarded_in_close=130672) (object_delete_request=0) (object_multipart_aborted.failures=0) (multipart_upload_started=0) (op_glob_status=0) (multipart_upload_aborted=0) (multipart_upload_completed=0) (stream_write_total_time=0) (committer_bytes_committed=0) (op_hflush=0) (op_list_files=0) (object_bulk_delete_request.failures=0) (op_rename.failures=0) (action_http_head_request=48) (multipart_upload_list.failures=0) (committer_commits_reverted=0) (stream_write_block_uploads=17) (audit_failure=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=17) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0));
minimums=((object_put_request.min=37) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_is_directory.min=-1) (op_createfile.failures.min=-1) (op_glob_status.min=-1) (action_http_head_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (action_file_opened.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=13) (op_access.min=-1) (op_list_status.failures.min=-1) (op_create.min=7) (op_copy_from_local_file.min=-1) (op_xattr_list.failures.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_list.min=-1) (op_list_status.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (object_delete_request.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_list_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_map.failures.min=-1) (store_exists_probe.min=-1) (op_abort.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_list_files.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_list_request.min=5) (object_bulk_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (op_rename.min=-1) (op_delete.min=30) (op_get_delegation_token.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_glob_status.failures.min=-1) (object_put_request.failures.min=-1) (op_createfile.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.min=6) (op_xattr_get_map.min=-1) (op_is_directory.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_initiated.min=-1) (op_access.failures.min=-1) (object_bulk_delete_request.min=7) (op_mkdirs.min=16) (op_get_file_checksum.min=-1) (op_exists.min=-1) (delegation_tokens_issued.min=-1) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.failures.min=-1) (op_mkdirs.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.min=-1) (action_file_opened.min=4) (action_http_head_request.min=2) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_get_delegation_token.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.failures.min=-1));
maximums=((op_xattr_list.max=-1) (op_access.failures.max=-1) (op_glob_status.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (op_rename.max=-1) (action_http_get_request.max=28) (op_exists.failures.max=-1) (stream_read_remote_stream_drain.max=1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=300) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (object_continue_list_request.max=-1) (op_list_files.failures.max=-1) (op_create.failures.max=-1) (op_get_file_status.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_status.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_commit_job.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_file.max=-1) (op_createfile.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_createfile.max=-1) (op_delete.max=87) (committer_load_single_pending_file.max=-1) (object_multipart_aborted.max=-1) (op_delete.failures.max=-1) (committer_magic_marker_put.max=-1) (stream_write_queue_duration.max=-1) (op_is_directory.max=-1) (op_abort.max=-1) (object_bulk_delete_request.max=26) (object_delete_request.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.failures.max=-1) (op_access.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1) (op_list_files.max=-1) (op_create.max=62) (object_put_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=11) (op_glob_status.failures.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_directory.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_rename.failures.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.max=-1) (op_exists.max=-1) (op_get_delegation_token.max=-1) (object_put_request.max=77) (op_xattr_get_map.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.max=21) (op_xattr_get_named_map.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_materialize_file.max=-1) (op_get_content_summary.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_list_request.max=185) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_initiated.failures.max=-1));
means=((op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=34, sum=441, mean=12.9706)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=48, sum=269, mean=5.6042)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=14, sum=78, mean=5.5714)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=17, sum=769, mean=45.2353)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=34, sum=916, mean=26.9412)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=2, sum=1, mean=0.5000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=68, sum=917, mean=13.4853)) (op_create.mean=(samples=17, sum=256, mean=15.0588)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=17, sum=842, mean=49.5294)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=17, sum=270, mean=15.8824)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:01,056 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:01,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,056 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,056 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,057 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921056
2024-11-16 17:42:01,065 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:01,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,065 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,066 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,066 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921056
2024-11-16 17:42:01,069 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,070 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:01,070 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:01,070 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:01,070 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000086&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921056
2024-11-16 17:42:01,083 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:01,088 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:01,089 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.019s
2024-11-16 17:42:01,089 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:01,090 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,091 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,091 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000087 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000087&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921090
2024-11-16 17:42:01,110 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.019s
2024-11-16 17:42:01,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,110 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:01,112 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17386646772842836585.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:01,113 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17386646772842836585.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (op_abort.failures=0) (action_executor_acquired=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (object_put_request=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (multipart_upload_completed=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (op_hsync=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17386646772842836585.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,114 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,114 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:01,114 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17386646772842836585.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:01,124 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:01,126 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:01,126 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:01,126 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:01,126 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000087 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000087/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000087&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=144&ts=1731778921090
2024-11-16 17:42:01,178 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:01,178 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:01,178 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.052s
2024-11-16 17:42:01,178 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17386646772842836585.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:01,179 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17386646772842836585.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,179 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17386646772842836585.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,179 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:01,179 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,180 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (op_hflush=0) (multipart_upload_completed.failures=0) (op_abort=0) (multipart_upload_part_put.failures=0) (op_hsync=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (object_multipart_initiated.failures=0) (action_executor_acquired=0) (stream_write_total_data=65536) (op_abort.failures=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=52) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=52) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=52, mean=52.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:01,180 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:01,185 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,185 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,185 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:01,186 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921185
2024-11-16 17:42:01,193 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:01,193 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:01,195 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,196 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:42:01,196 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:42:01,209 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:42:01,210 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:01,211 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:42:01,211 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,212 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-65535&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921185
2024-11-16 17:42:01,215 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:01,215 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,216 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:42:01,216 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-199&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000088&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=145&ts=1731778921185
2024-11-16 17:42:01,232 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.022s
2024-11-16 17:42:01,233 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:01,233 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:01,235 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.019s
2024-11-16 17:42:01,235 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:01,237 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:42:01,238 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:42:01,238 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:42:01,239 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7535 bytes
2024-11-16 17:42:01,239 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:01,240 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:01,240 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:01,240 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8649 bytes
2024-11-16 17:42:01,241 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:42:01,241 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:01,249 [JUnit-testVectoredReadAndReadFully[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_total_bytes=65536) (stream_read_seek_policy_changed=1) (action_executor_acquired=0) (stream_read_unbuffered=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_exceptions=0) (stream_aborted=0) (stream_read_remote_stream_aborted=0) (stream_read_opened=1) (stream_read_bytes=200) (action_http_get_request.failures=0) (stream_read_operations_incomplete=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations=1) (stream_read_fully_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request=2) (stream_read_block_read=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (stream_read_seek_operations=0) (stream_read_vectored_combined_ranges=1) (stream_read_closed=1) (stream_read_vectored_incoming_ranges=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_remote_stream_drain=1) (action_executor_acquired.failures=0) (stream_read_vectored_operations=1) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations.failures=0) (stream_read_close_operations=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.min=10) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=19) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=8) (stream_read_prefetch_operations.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (action_file_opened.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (action_http_get_request.max=20) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=10) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=8) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (action_http_get_request.mean=(samples=2, sum=39, mean=19.5000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=10, mean=10.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:01,251 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:01,251 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,252 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,252 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921251
2024-11-16 17:42:01,258 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,259 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,260 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [143] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=143&ts=1731778921251
2024-11-16 17:42:01,271 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:42:01,271 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:01,272 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:01,272 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:01,273 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:01,273 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:01,273 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:01,274 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:01,274 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:01,275 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:01,275 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:01,276 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:01,276 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:01,277 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:01,277 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,278 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [146] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=146&ts=1731778921251
2024-11-16 17:42:01,289 [s3a-transfer-fso-bucket-unbounded-pool2-t21] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:42:01,289 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:42:01,290 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:01,290 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:01,290 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:01,290 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778921171; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:01,290 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:01,290 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:01,290 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:01,290 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:01,291 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:01,292 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:01,292 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:01,293 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:01,293 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,294 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,294 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:01,295 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,295 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=147&ts=1731778921251
2024-11-16 17:42:01,307 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:42:01,308 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.015s
2024-11-16 17:42:01,308 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.015s
2024-11-16 17:42:01,308 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:01,309 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:01,310 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,310 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,311 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:01,311 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,312 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000089&t0=143&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=147&ts=1731778921251
2024-11-16 17:42:01,325 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.014s
2024-11-16 17:42:01,326 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:42:01,326 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:42:01,326 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:42:01,327 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.036s
2024-11-16 17:42:01,327 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.053s
2024-11-16 17:42:01,327 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:01,327 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:01,342 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:01,375 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 21, active threads = 0, queued tasks = 0, completed tasks = 21], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_remote_stream_drain.failures=0) (object_continue_list_request.failures=0) (stream_read_vectored_read_bytes_discarded=24503) (op_hflush=0) (op_get_file_status.failures=0) (object_multipart_aborted=0) (committer_magic_files_created=0) (action_http_head_request=51) (action_http_head_request.failures=0) (multipart_instantiated=0) (op_list_status.failures=0) (stream_read_opened=3) (action_executor_acquired=0) (op_rename.failures=0) (op_open=15) (object_multipart_initiated.failures=0) (store_exists_probe.failures=0) (object_put_request=36) (multipart_upload_list.failures=0) (stream_read_closed=3) (op_abort.failures=0) (object_metadata_request=51) (op_exists=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (object_copy_requests=0) (op_xattr_get_named=0) (stream_write_block_uploads_committed=0) (op_glob_status.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_get_file_checksum.failures=0) (committer_commit_job.failures=0) (audit_failure=0) (stream_read_seek_policy_changed=16) (op_create_non_recursive=0) (store_io_throttled=0) (stream_write_queue_duration.failures=0) (files_deleted=18) (multipart_upload_aborted=0) (op_copy_from_local_file.failures=0) (action_http_get_request.failures=0) (multipart_upload_part_put=0) (stream_read_unbuffered=1) (op_mkdirs.failures=0) (op_get_file_checksum=0) (stream_write_block_uploads_aborted=0) (action_http_get_request=19) (op_list_files=0) (committer_stage_file_upload=0) (stream_read_bytes=5963) (committer_tasks_completed=0) (stream_read_vectored_operations=13) (action_executor_acquired.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_map.failures=0) (committer_commits_reverted=0) (op_access=0) (files_copied_bytes=0) (committer_materialize_file=0) (op_xattr_get_map=0) (committer_commit_job=0) (op_list_located_status=0) (committer_magic_marker_put.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_combined_ranges=18) (directories_deleted=0) (object_put_request_completed=36) (store_exists_probe=0) (stream_read_remote_stream_drain=3) (stream_read_operations=3) (stream_write_block_uploads=18) (multipart_upload_abort_under_path_invoked=0) (op_list_files.failures=0) (committer_jobs_failed=0) (op_create.failures=0) (committer_commits_aborted=0) (stream_write_total_data=2359296) (op_get_file_status=1) (stream_read_remote_stream_aborted.failures=0) (committer_magic_marker_put=0) (committer_load_single_pending_file=0) (stream_write_exceptions=0) (op_is_directory.failures=0) (stream_read_bytes_discarded_in_close=196008) (object_list_request.failures=0) (op_hsync=0) (object_bulk_delete_request.failures=0) (committer_jobs_completed=0) (stream_aborted=0) (multipart_upload_started=0) (stream_read_vectored_incoming_ranges=43) (op_xattr_list=0) (op_createfile.failures=0) (object_continue_list_request=0) (stream_write_total_time=0) (stream_read_close_operations=15) (object_put_bytes=1179648) (stream_write_bytes=1179648) (committer_commits.failures=0) (op_create=18) (stream_read_fully_operations=1) (object_put_request.failures=0) (committer_commits_completed=0) (object_delete_objects=36) (files_created=18) (op_xattr_get_named_map.failures=0) (op_xattr_list.failures=0) (stream_read_exceptions=0) (committer_stage_file_upload.failures=0) (stream_read_total_bytes=201971) (directories_created=18) (ignored_errors=0) (op_is_file=0) (op_xattr_get_named_map=0) (files_delete_rejected=0) (op_rename=0) (op_openfile=0) (action_file_opened=15) (stream_read_seek_operations=0) (audit_request_execution=214) (files_copied=0) (object_bulk_delete_request=36) (committer_materialize_file.failures=0) (op_createfile=0) (object_delete_request=0) (op_is_directory=0) (audit_access_check_failure=0) (op_is_file.failures=0) (op_delete=18) (object_list_request=72) (action_file_opened.failures=0) (store_io_retry=0) (audit_span_creation=71) (delegation_tokens_issued=0) (stream_read_remote_stream_aborted=0) (store_io_request=214) (delegation_tokens_issued.failures=0) (stream_read_seek_forward_operations=0) (committer_bytes_committed=0) (object_delete_request.failures=0) (fake_directories_created=0) (committer_commits_created=0) (committer_bytes_uploaded=0) (op_delete.failures=0) (op_access.failures=0) (op_exists.failures=0) (stream_read_version_mismatches=0) (op_glob_status=0) (op_mkdirs=18) (object_multipart_aborted.failures=0) (op_list_status=0) (object_select_requests=0) (committer_tasks_failed=0) (stream_read_seek_bytes_skipped=0) (op_get_delegation_token=0) (stream_read_seek_backward_operations=0) (op_get_content_summary=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_bytes_discarded=0) (op_get_content_summary.failures=0) (op_xattr_get_named.failures=0) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (multipart_upload_list=0) (object_multipart_initiated=0) (op_copy_from_local_file=0) (op_abort=0) (fake_directories_deleted=18) (committer_load_single_pending_file.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=18) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0));
minimums=((op_list_status.failures.min=-1) (committer_commit_job.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_create.min=7) (delegation_tokens_issued.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=10) (action_executor_acquired.min=-1) (object_list_request.min=5) (op_list_files.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_abort.failures.min=-1) (action_http_get_request.failures.min=-1) (op_access.failures.min=-1) (op_exists.min=-1) (object_list_request.failures.min=-1) (op_rename.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_head_request.failures.min=-1) (op_access.min=-1) (object_continue_list_request.min=-1) (action_http_head_request.min=2) (committer_commit_job.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_named_map.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (object_bulk_delete_request.min=7) (object_multipart_aborted.min=-1) (op_abort.min=-1) (op_is_file.min=-1) (op_create.failures.min=-1) (op_glob_status.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.min=-1) (op_mkdirs.failures.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=16) (op_copy_from_local_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_glob_status.failures.min=-1) (op_delete.min=30) (object_put_request.min=52) (op_createfile.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.min=-1) (object_continue_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.min=-1) (op_delete.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_file_checksum.min=-1) (committer_magic_marker_put.min=-1) (action_file_opened.min=8) (op_get_delegation_token.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.min=-1) (op_createfile.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_directory.failures.min=-1) (op_is_directory.min=-1) (op_list_status.min=-1) (object_put_request.failures.min=-1) (op_get_file_status.failures.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.min=-1) (committer_stage_file_upload.min=-1) (op_get_file_status.min=6) (op_is_file.failures.min=-1) (action_http_get_request.min=19) (object_multipart_aborted.failures.min=-1));
maximums=((action_http_head_request.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.failures.max=-1) (op_create.max=62) (op_xattr_get_named_map.failures.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.max=-1) (op_create.failures.max=-1) (op_list_files.max=-1) (op_rename.failures.max=-1) (committer_commit_job.max=-1) (op_rename.max=-1) (action_file_opened.max=11) (op_is_directory.failures.max=-1) (object_multipart_aborted.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=21) (action_http_get_request.max=28) (object_put_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_checksum.max=-1) (op_get_content_summary.failures.max=-1) (store_exists_probe.max=-1) (op_list_files.failures.max=-1) (action_executor_acquired.max=-1) (op_access.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.max=-1) (object_continue_list_request.failures.max=-1) (op_is_file.max=-1) (object_bulk_delete_request.max=26) (op_glob_status.failures.max=-1) (object_put_request.max=77) (op_xattr_get_named.max=-1) (committer_magic_marker_put.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.max=300) (op_is_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.max=10) (op_xattr_get_named.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.max=-1) (op_copy_from_local_file.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.max=-1) (op_abort.failures.max=-1) (op_xattr_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_exists.max=-1) (op_mkdirs.failures.max=-1) (op_list_status.max=-1) (object_bulk_delete_request.failures.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (op_get_file_status.max=6) (stream_read_remote_stream_drain.failures.max=-1) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_initiated.max=-1) (op_delete.max=87) (stream_read_remote_stream_aborted.max=-1) (op_get_content_summary.max=-1) (committer_stage_file_upload.failures.max=-1) (object_list_request.max=185) (op_exists.failures.max=-1) (object_list_request.failures.max=-1) (op_abort.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=18, sum=802, mean=44.5556)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=15, sum=86, mean=5.7333)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=36, sum=466, mean=12.9444)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=51, sum=285, mean=5.5882)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=36, sum=981, mean=27.2500)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=18, sum=896, mean=49.7778)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=309, mean=16.2632)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=72, sum=967, mean=13.4306)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=18, sum=278, mean=15.4444)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:01,375 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:01,375 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,376 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,376 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,376 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,376 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=148&ts=1731778921375
2024-11-16 17:42:01,385 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:01,385 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,385 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,385 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,385 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,385 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=148&ts=1731778921375
2024-11-16 17:42:01,390 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,390 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:01,390 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:01,390 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:01,390 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000090&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=148&ts=1731778921375
2024-11-16 17:42:01,399 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:01,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:01,400 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:42:01,400 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:01,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,401 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,401 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000091 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000091&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=148&ts=1731778921400
2024-11-16 17:42:01,411 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:01,412 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,413 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:01,414 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10684391939089656195.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:01,415 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10684391939089656195.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_total_data=0) (object_put_request.failures=0) (stream_write_bytes=65536) (object_put_request=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (stream_write_total_time=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (op_hflush=0) (op_abort=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10684391939089656195.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,415 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,416 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:01,416 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10684391939089656195.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:01,417 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:01,418 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:01,418 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:01,419 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:01,419 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000091 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000091/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000091&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=149&ts=1731778921400
2024-11-16 17:42:01,467 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:01,467 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:01,467 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.049s
2024-11-16 17:42:01,468 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10684391939089656195.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:01,468 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10684391939089656195.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,468 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10684391939089656195.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,468 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:01,468 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,469 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (object_put_request=1) (op_hsync=0) (op_abort=0) (stream_write_total_data=65536) (stream_write_total_time=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=48) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_put_request.max=48) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=48, mean=48.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:01,470 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:01,475 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,475 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,476 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:01,476 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [150] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000092 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000092/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000092&t0=150&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=150&ts=1731778921474
2024-11-16 17:42:01,487 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:01,488 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:01,489 [s3a-transfer-fso-bucket-unbounded-pool2-t22] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,489 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:42:01,495 [JUnit-testOverlappingRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (stream_read_bytes_discarded_in_close=0) (stream_read_fully_operations=0) (stream_read_opened=0) (stream_read_bytes=0) (stream_read_total_bytes=0) (stream_aborted=0) (stream_read_closed=0) (stream_read_operations=0) (action_executor_acquired.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_combined_ranges=0) (stream_read_block_read.failures=0) (action_executor_acquired=0) (stream_read_seek_backward_operations=0) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_skipped=0) (action_http_get_request=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_close_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=0) (action_file_opened.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.min=13) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=13) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1));
means=((action_file_opened.mean=(samples=1, sum=13, mean=13.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:01,497 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:01,497 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,497 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,497 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=148&ts=1731778921496
2024-11-16 17:42:01,503 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,504 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,505 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [148] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=148&ts=1731778921496
2024-11-16 17:42:01,516 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:42:01,517 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:01,517 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:01,518 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:01,518 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:01,519 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:01,519 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:01,524 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:01,524 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:01,524 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:01,524 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:01,524 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:01,533 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:01,534 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:01,534 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,535 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [151] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=151&ts=1731778921496
2024-11-16 17:42:01,544 [s3a-transfer-fso-bucket-unbounded-pool2-t23] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:01,545 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.012s
2024-11-16 17:42:01,545 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:01,546 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:01,546 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:01,547 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778921456; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:01,547 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:01,548 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:01,548 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:01,549 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:01,553 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:01,553 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:01,553 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:01,554 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:01,555 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,555 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,555 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:01,555 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,555 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=152&ts=1731778921496
2024-11-16 17:42:01,567 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:42:01,567 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:01,567 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.013s
2024-11-16 17:42:01,568 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:01,568 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:01,568 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,568 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,568 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:01,568 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,568 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000093&t0=148&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=152&ts=1731778921496
2024-11-16 17:42:01,580 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:42:01,580 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:01,580 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:42:01,580 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:42:01,580 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.027s
2024-11-16 17:42:01,580 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.056s
2024-11-16 17:42:01,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:01,580 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:01,592 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:01,608 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 23, active threads = 0, queued tasks = 0, completed tasks = 23], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_continue_list_request.failures=0) (committer_load_single_pending_file=0) (multipart_upload_abort_under_path_invoked=0) (directories_deleted=0) (stream_read_unbuffered=1) (stream_read_close_operations=16) (op_glob_status.failures=0) (object_multipart_aborted.failures=0) (action_file_opened=16) (stream_read_seek_forward_operations=0) (stream_read_seek_bytes_skipped=0) (object_continue_list_request=0) (stream_write_total_time=0) (store_io_retry=0) (stream_write_exceptions_completing_upload=0) (fake_directories_created=0) (op_get_delegation_token=0) (files_created=19) (committer_commits_created=0) (store_io_request=225) (object_delete_request=0) (action_http_head_request=54) (op_xattr_list=0) (stream_write_bytes=1245184) (object_multipart_initiated=0) (multipart_upload_completed=0) (committer_stage_file_upload.failures=0) (op_get_content_summary.failures=0) (delegation_tokens_issued=0) (stream_write_total_data=2490368) (fake_directories_deleted=19) (committer_bytes_uploaded=0) (stream_read_vectored_combined_ranges=18) (op_xattr_list.failures=0) (op_copy_from_local_file.failures=0) (op_get_file_checksum.failures=0) (multipart_upload_list.failures=0) (committer_materialize_file.failures=0) (op_glob_status=0) (op_is_directory=0) (stream_read_remote_stream_drain.failures=0) (committer_tasks_failed=0) (action_http_head_request.failures=0) (action_executor_acquired=0) (stream_read_seek_policy_changed=17) (stream_read_seek_operations=0) (files_copied_bytes=0) (multipart_upload_part_put_bytes=0) (op_open=16) (committer_bytes_committed=0) (stream_read_operations=3) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (committer_commits_aborted=0) (stream_write_block_uploads_committed=0) (audit_span_creation=75) (stream_read_closed=3) (op_list_files.failures=0) (committer_magic_marker_put.failures=0) (committer_tasks_completed=0) (object_copy_requests=0) (op_xattr_get_named.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named=0) (op_xattr_get_map.failures=0) (committer_materialize_file=0) (committer_magic_files_created=0) (op_get_file_status.failures=0) (stream_read_version_mismatches=0) (op_is_file=0) (stream_read_vectored_read_bytes_discarded=24503) (object_put_request=38) (stream_read_remote_stream_drain=3) (files_deleted=19) (object_select_requests=0) (op_exists.failures=0) (op_createfile.failures=0) (op_create_non_recursive=0) (action_http_get_request=19) (committer_commits_reverted=0) (op_delete.failures=0) (audit_failure=0) (stream_write_block_uploads_aborted=0) (action_file_opened.failures=0) (op_is_file.failures=0) (directories_created=19) (committer_stage_file_upload=0) (op_access=0) (op_openfile=0) (stream_read_exceptions=0) (files_delete_rejected=0) (op_xattr_get_named_map.failures=0) (op_rename=0) (committer_commit_job=0) (committer_magic_marker_put=0) (delegation_tokens_issued.failures=0) (stream_read_seek_backward_operations=0) (op_list_located_status=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_incoming_ranges=43) (op_abort.failures=0) (stream_read_bytes=5963) (stream_read_bytes_discarded_in_close=196008) (stream_aborted=0) (committer_commit_job.failures=0) (multipart_upload_started=0) (committer_commits.failures=0) (object_list_request=76) (committer_load_single_pending_file.failures=0) (op_mkdirs=19) (store_exists_probe.failures=0) (store_io_throttled=0) (op_mkdirs.failures=0) (action_executor_acquired.failures=0) (store_exists_probe=0) (stream_write_block_uploads=19) (stream_read_remote_stream_aborted=0) (files_copied=0) (audit_access_check_failure=0) (multipart_instantiated=0) (op_create.failures=0) (action_http_get_request.failures=0) (op_create=19) (committer_jobs_completed=0) (stream_write_queue_duration=0) (op_xattr_get_map=0) (object_delete_request.failures=0) (op_get_file_status=1) (op_exists=0) (audit_request_execution=225) (object_metadata_request=54) (op_list_files=0) (op_rename.failures=0) (op_is_directory.failures=0) (stream_read_seek_bytes_discarded=0) (op_abort=0) (op_access.failures=0) (object_list_request.failures=0) (op_hflush=0) (op_get_file_checksum=0) (op_delete=19) (op_list_status=0) (op_list_status.failures=0) (multipart_upload_aborted=0) (committer_jobs_failed=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named_map=0) (stream_read_bytes_backwards_on_seek=0) (committer_commits_completed=0) (stream_read_vectored_operations=13) (op_hsync=0) (stream_read_operations_incomplete=0) (object_put_bytes=1245184) (ignored_errors=0) (stream_read_total_bytes=201971) (op_get_content_summary=0) (op_get_delegation_token.failures=0) (op_createfile=0) (object_put_request.failures=0) (object_bulk_delete_request=38) (multipart_upload_list=0) (stream_write_queue_duration.failures=0) (object_put_request_completed=38) (op_copy_from_local_file=0) (object_delete_objects=38) (stream_read_opened=3) (stream_read_fully_operations=1));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=19) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((op_xattr_get_named_map.failures.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_drain.min=10) (op_rename.failures.min=-1) (op_create.failures.min=-1) (committer_magic_marker_put.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_continue_list_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.min=6) (delegation_tokens_issued.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (committer_stage_file_upload.min=-1) (store_exists_probe.failures.min=-1) (op_abort.failures.min=-1) (op_get_delegation_token.min=-1) (object_list_request.min=5) (op_list_files.min=-1) (op_xattr_get_map.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_multipart_initiated.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_head_request.failures.min=-1) (op_abort.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.failures.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.min=-1) (op_access.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.min=7) (op_mkdirs.failures.min=-1) (op_createfile.min=-1) (object_multipart_initiated.min=-1) (op_rename.min=-1) (action_file_opened.min=13) (committer_load_single_pending_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named.min=-1) (op_create.min=7) (op_list_files.failures.min=-1) (object_delete_request.min=-1) (op_get_file_checksum.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.failures.min=-1) (op_is_file.failures.min=-1) (op_delete.min=30) (op_access.min=-1) (op_is_directory.min=-1) (object_put_request.min=48) (op_exists.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.failures.min=-1) (store_exists_probe.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_map.min=-1) (action_http_head_request.min=2) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_get_request.min=19) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=16) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_list.min=-1) (action_file_opened.failures.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.failures.min=-1) (object_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.min=-1) (op_exists.min=-1));
maximums=((committer_stage_file_upload.failures.max=-1) (op_list_files.max=-1) (op_get_file_status.failures.max=-1) (op_create.max=62) (op_access.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_status.max=-1) (committer_materialize_file.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.max=-1) (op_mkdirs.failures.max=-1) (op_glob_status.max=-1) (object_list_request.failures.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.max=28) (object_multipart_aborted.max=-1) (op_is_file.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_list.max=-1) (action_http_head_request.max=21) (op_exists.max=-1) (op_is_directory.failures.max=-1) (object_continue_list_request.max=-1) (op_mkdirs.max=300) (op_glob_status.failures.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_executor_acquired.max=-1) (op_rename.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1) (op_access.max=-1) (op_delete.max=87) (op_xattr_list.failures.max=-1) (op_get_content_summary.max=-1) (stream_read_remote_stream_drain.max=10) (op_list_files.failures.max=-1) (op_rename.failures.max=-1) (op_is_directory.max=-1) (stream_write_queue_duration.failures.max=-1) (store_exists_probe.failures.max=-1) (object_delete_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_commit_job.failures.max=-1) (op_is_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_createfile.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=77) (object_bulk_delete_request.max=26) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (op_xattr_get_named.failures.max=-1) (committer_materialize_file.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named_map.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.max=-1) (action_file_opened.max=13) (op_abort.failures.max=-1) (op_get_file_checksum.max=-1) (delegation_tokens_issued.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_exists.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_delete_request.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.max=185) (stream_write_queue_duration.max=-1) (op_create.failures.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=19, sum=827, mean=43.5263)) (object_put_request.mean=(samples=38, sum=1038, mean=27.3158)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=76, sum=1006, mean=13.2368)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=19, sum=957, mean=50.3684)) (op_create.mean=(samples=19, sum=292, mean=15.3684)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=54, sum=307, mean=5.6852)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=309, mean=16.2632)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=38, sum=489, mean=12.8684)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=16, sum=99, mean=6.1875)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:01,609 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:01,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,610 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,610 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,610 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,610 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=153&ts=1731778921609
2024-11-16 17:42:01,621 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:42:01,621 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,621 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,621 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,621 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,622 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=153&ts=1731778921609
2024-11-16 17:42:01,628 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,628 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:01,628 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:01,628 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:01,629 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000094&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=153&ts=1731778921609
2024-11-16 17:42:01,636 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:01,636 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:01,636 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:42:01,636 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:01,637 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,637 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,637 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,637 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,637 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000095 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000095&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=153&ts=1731778921637
2024-11-16 17:42:01,644 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:01,644 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,645 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:01,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2430593794003583650.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:01,646 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2430593794003583650.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (op_hflush=0) (stream_write_block_uploads=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (op_abort=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (object_put_request.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2430593794003583650.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,646 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,646 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:01,647 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2430593794003583650.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:01,647 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:01,647 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:01,647 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:01,647 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:01,647 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000095 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000095/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000095&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=154&ts=1731778921637
2024-11-16 17:42:01,683 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:01,684 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:01,684 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.037s
2024-11-16 17:42:01,685 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2430593794003583650.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:01,685 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2430593794003583650.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,685 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2430593794003583650.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,685 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:01,685 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (stream_write_total_time=0) (multipart_upload_completed=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=1) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (multipart_upload_part_put.failures=0) (op_abort=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_put_request.failures=0) (op_hflush=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (op_hsync=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (committer_magic_marker_put=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_put_request=1) (stream_write_queue_duration=0) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=36) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_part_put.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=36) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=36, mean=36.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:01,687 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:01,688 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,688 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,688 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:01,688 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [155] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000096 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000096/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000096&t0=155&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=155&ts=1731778921688
2024-11-16 17:42:01,694 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:01,695 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:01,698 [s3a-transfer-fso-bucket-unbounded-pool2-t24] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,699 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:42:01,700 [JUnit-testSameRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain.failures=0) (stream_read_total_bytes=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_closed=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes=0) (action_http_get_request=0) (stream_read_block_read=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_version_mismatches=0) (action_file_opened=1) (stream_read_vectored_incoming_ranges=0) (stream_aborted=0) (stream_read_vectored_operations=0) (stream_read_unbuffered=0) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_seek_forward_operations=0) (stream_read_seek_backward_operations=0) (stream_read_operations_incomplete=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.min=6) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((action_file_opened.max=6) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:01,702 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:01,702 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,702 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,702 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=153&ts=1731778921702
2024-11-16 17:42:01,708 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,708 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,709 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [153] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=153&ts=1731778921702
2024-11-16 17:42:01,716 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:01,718 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:01,718 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:01,718 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:01,718 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:01,718 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:01,718 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:01,718 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:01,718 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:01,718 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:01,718 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:01,718 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:01,720 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:01,720 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:01,720 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,720 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [157] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=157&ts=1731778921702
2024-11-16 17:42:01,729 [s3a-transfer-fso-bucket-unbounded-pool2-t25] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:01,729 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:42:01,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:01,729 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:01,730 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:01,730 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778921671; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:01,730 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:01,730 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:01,730 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:01,731 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:01,731 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:01,731 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:01,731 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:01,732 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:01,732 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,732 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,732 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:01,732 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,732 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=158&ts=1731778921702
2024-11-16 17:42:01,742 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:01,742 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:01,742 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:01,742 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:01,742 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:01,743 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,743 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,743 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:01,743 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,743 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000097&t0=153&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=158&ts=1731778921702
2024-11-16 17:42:01,755 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:42:01,755 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:01,755 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.013s
2024-11-16 17:42:01,755 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:42:01,756 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:42:01,756 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.038s
2024-11-16 17:42:01,756 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:01,756 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:01,758 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:01,773 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 25, active threads = 0, queued tasks = 0, completed tasks = 25], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_initiated.failures=0) (ignored_errors=0) (fake_directories_created=0) (store_exists_probe=0) (files_delete_rejected=0) (op_copy_from_local_file.failures=0) (op_rename=0) (object_metadata_request=57) (stream_read_seek_operations=0) (files_copied_bytes=0) (op_createfile.failures=0) (object_multipart_initiated=0) (committer_bytes_uploaded=0) (action_executor_acquired=0) (object_bulk_delete_request=40) (multipart_upload_part_put=0) (store_exists_probe.failures=0) (object_delete_objects=40) (committer_jobs_failed=0) (stream_read_remote_stream_drain=3) (committer_commits_reverted=0) (audit_request_execution=236) (op_copy_from_local_file=0) (stream_read_version_mismatches=0) (multipart_upload_part_put_bytes=0) (object_continue_list_request=0) (delegation_tokens_issued.failures=0) (op_get_content_summary.failures=0) (action_http_head_request=57) (op_abort=0) (op_xattr_get_map=0) (committer_load_single_pending_file=0) (object_multipart_aborted=0) (op_exists=0) (multipart_upload_aborted=0) (op_xattr_list.failures=0) (stream_read_vectored_combined_ranges=18) (stream_read_total_bytes=201971) (committer_commits.failures=0) (object_select_requests=0) (op_is_directory=0) (committer_commits_aborted=0) (directories_created=20) (committer_load_single_pending_file.failures=0) (action_file_opened=17) (op_glob_status=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (store_io_throttled=0) (stream_read_seek_bytes_skipped=0) (op_exists.failures=0) (op_xattr_get_named=0) (committer_stage_file_upload=0) (files_created=20) (multipart_upload_list.failures=0) (stream_write_bytes=1310720) (op_mkdirs=20) (stream_read_bytes_discarded_in_abort=0) (action_http_head_request.failures=0) (op_create=20) (object_list_request.failures=0) (stream_read_bytes_discarded_in_close=196008) (op_list_files.failures=0) (stream_write_total_data=2621440) (op_get_file_status=1) (stream_read_vectored_operations=13) (op_is_file=0) (committer_commit_job=0) (op_glob_status.failures=0) (committer_magic_marker_put=0) (directories_deleted=0) (op_delete=20) (stream_read_bytes=5963) (files_copied=0) (stream_read_vectored_incoming_ranges=43) (audit_span_creation=79) (op_get_file_checksum.failures=0) (committer_tasks_completed=0) (multipart_instantiated=0) (stream_read_closed=3) (multipart_upload_abort_under_path_invoked=0) (committer_stage_file_upload.failures=0) (object_delete_request=0) (stream_read_opened=3) (committer_materialize_file=0) (op_list_files=0) (audit_access_check_failure=0) (stream_write_block_uploads_aborted=0) (op_is_directory.failures=0) (stream_write_queue_duration.failures=0) (op_access=0) (object_put_request.failures=0) (object_put_bytes=1310720) (stream_write_total_time=0) (op_list_status=0) (op_get_delegation_token=0) (files_deleted=20) (op_rename.failures=0) (object_put_request_completed=40) (op_openfile=0) (op_get_delegation_token.failures=0) (store_io_retry=0) (stream_read_seek_bytes_discarded=0) (op_get_file_checksum=0) (op_xattr_get_named_map.failures=0) (stream_read_exceptions=0) (op_xattr_get_map.failures=0) (fake_directories_deleted=20) (stream_read_remote_stream_aborted=0) (stream_read_bytes_backwards_on_seek=0) (committer_magic_marker_put.failures=0) (stream_aborted=0) (committer_commit_job.failures=0) (committer_materialize_file.failures=0) (object_list_request=80) (committer_tasks_failed=0) (op_list_located_status=0) (committer_commits_created=0) (op_open=17) (committer_magic_files_created=0) (op_is_file.failures=0) (object_bulk_delete_request.failures=0) (stream_read_operations=3) (stream_read_unbuffered=1) (multipart_upload_list=0) (stream_read_seek_forward_operations=0) (op_hflush=0) (op_hsync=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_started=0) (stream_read_close_operations=17) (committer_bytes_committed=0) (op_get_content_summary=0) (store_io_request=236) (op_list_status.failures=0) (multipart_upload_completed=0) (op_delete.failures=0) (delegation_tokens_issued=0) (op_xattr_get_named_map=0) (stream_read_operations_incomplete=0) (stream_read_vectored_read_bytes_discarded=24503) (op_mkdirs.failures=0) (op_createfile=0) (op_get_file_status.failures=0) (op_access.failures=0) (audit_failure=0) (stream_write_block_uploads=20) (op_abort.failures=0) (object_put_request=40) (action_http_get_request=19) (object_copy_requests=0) (op_create.failures=0) (op_xattr_list=0) (action_http_get_request.failures=0) (committer_jobs_completed=0) (stream_write_exceptions_completing_upload=0) (op_create_non_recursive=0) (stream_read_seek_policy_changed=18) (stream_write_queue_duration=0) (op_xattr_get_named.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_write_block_uploads_committed=0) (object_delete_request.failures=0) (object_multipart_aborted.failures=0) (committer_commits_completed=0) (object_continue_list_request.failures=0) (action_file_opened.failures=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=20) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.min=10) (op_glob_status.failures.min=-1) (committer_stage_file_upload.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_createfile.failures.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_map.min=-1) (op_delete.min=30) (stream_read_remote_stream_drain.failures.min=-1) (op_is_directory.failures.min=-1) (action_file_opened.min=6) (op_get_file_status.failures.min=-1) (committer_materialize_file.min=-1) (op_copy_from_local_file.failures.min=-1) (object_list_request.failures.min=-1) (op_create.min=7) (op_xattr_list.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_createfile.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.min=2) (op_get_file_checksum.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (op_is_file.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.min=19) (object_list_request.min=5) (op_exists.min=-1) (op_list_files.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_delete.failures.min=-1) (op_rename.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.min=6) (op_list_status.min=-1) (committer_commit_job.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_directory.min=-1) (action_http_head_request.failures.min=-1) (op_get_content_summary.min=-1) (op_mkdirs.min=16) (object_put_request.min=36) (op_copy_from_local_file.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.min=-1) (op_get_file_checksum.min=-1) (op_xattr_list.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (multipart_upload_list.min=-1) (op_rename.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (object_bulk_delete_request.min=7) (op_mkdirs.failures.min=-1) (store_exists_probe.min=-1) (op_get_delegation_token.min=-1) (op_access.min=-1) (op_xattr_get_named_map.min=-1) (stream_write_queue_duration.min=-1) (op_access.failures.min=-1) (op_abort.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_delete_request.min=-1) (op_create.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_list_status.failures.min=-1));
maximums=((object_bulk_delete_request.max=26) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (op_is_directory.max=-1) (op_create.max=62) (store_exists_probe.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.max=-1) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (action_http_head_request.max=21) (op_copy_from_local_file.max=-1) (object_delete_request.max=-1) (committer_commit_job.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_named.failures.max=-1) (action_http_get_request.max=28) (op_abort.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (op_is_directory.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_createfile.max=-1) (op_abort.failures.max=-1) (multipart_upload_list.max=-1) (object_put_request.max=77) (op_get_delegation_token.max=-1) (committer_load_single_pending_file.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_initiated.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_glob_status.max=-1) (op_is_file.failures.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.max=-1) (committer_magic_marker_put.failures.max=-1) (object_list_request.failures.max=-1) (op_rename.max=-1) (op_create.failures.max=-1) (op_get_file_status.max=6) (op_access.failures.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_list_status.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_initiated.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (object_put_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.max=185) (op_list_status.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_drain.max=10) (object_multipart_aborted.max=-1) (action_http_head_request.failures.max=-1) (op_createfile.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_access.max=-1) (op_mkdirs.max=300) (stream_read_remote_stream_aborted.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_file.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.failures.max=-1) (op_exists.failures.max=-1) (op_delete.max=87) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=13) (op_rename.failures.max=-1));
means=((stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=40, sum=1082, mean=27.0500)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=20, sum=995, mean=49.7500)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=19, sum=309, mean=16.2632)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=20, sum=854, mean=42.7000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=17, sum=105, mean=6.1765)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=57, sum=326, mean=5.7193)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=80, sum=1041, mean=13.0125)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=40, sum=511, mean=12.7750)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=20, sum=300, mean=15.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:01,774 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:01,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,774 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,774 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,774 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=159&ts=1731778921774
2024-11-16 17:42:01,781 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:01,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,781 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,782 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=159&ts=1731778921774
2024-11-16 17:42:01,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,786 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:01,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:01,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:01,787 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000098&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=159&ts=1731778921774
2024-11-16 17:42:01,794 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:01,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:01,795 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:01,795 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:01,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,795 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,795 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,796 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000099 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000099&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=159&ts=1731778921795
2024-11-16 17:42:01,802 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:01,802 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,802 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:01,803 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14610141755262705381.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:01,803 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14610141755262705381.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (object_put_request=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (action_executor_acquired.failures=0) (op_hsync=0) (op_abort.failures=0) (stream_write_block_uploads=0) (object_multipart_aborted=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (op_hflush=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14610141755262705381.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,803 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,803 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:01,804 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14610141755262705381.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:01,804 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:01,804 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:01,804 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:01,804 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:01,805 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000099 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000099/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000099&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=160&ts=1731778921795
2024-11-16 17:42:01,833 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:01,833 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:01,833 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:42:01,833 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14610141755262705381.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:01,833 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14610141755262705381.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,833 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14610141755262705381.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,833 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:01,833 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,834 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_abort=0) (object_put_request=1) (object_multipart_aborted=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (op_hflush=0) (stream_write_total_data=65536) (op_hsync=0) (stream_write_bytes=65536) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (committer_magic_marker_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_put_request.min=28) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=28) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=28, mean=28.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:01,835 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:01,835 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,835 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,836 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:01,836 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=159&ts=1731778921835
2024-11-16 17:42:01,843 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:01,843 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:01,843 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,844 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:01,844 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:01,844 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:01,844 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:01,844 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:01,844 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:01,844 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:01,845 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,845 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:01,845 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:01,845 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=162&ts=1731778921835
2024-11-16 17:42:01,845 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:01,845 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:01,845 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:01,846 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:01,846 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000100&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=163&ts=1731778921835
2024-11-16 17:42:01,859 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:42:01,859 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:01,860 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:01,867 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:42:01,867 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:01,867 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:01,868 [JUnit-testMultipleVectoredReads[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (action_file_opened=1) (stream_read_vectored_combined_ranges=2) (stream_read_block_acquire_read=0) (stream_read_prefetch_operations=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_opened=0) (stream_read_vectored_operations=2) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_unbuffered=0) (stream_read_bytes=300) (stream_read_vectored_read_bytes_discarded=20) (stream_read_seek_forward_operations=0) (action_file_opened.failures=0) (stream_read_total_bytes=300) (action_executor_acquired=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations=0) (stream_read_block_read=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_backward_operations=0) (stream_aborted=0) (stream_read_closed=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request=2) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=8) (action_http_get_request.min=14) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=21) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.max=8) (stream_read_remote_stream_aborted.max=-1));
means=((stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=35, mean=17.5000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:01,869 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:01,869 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,869 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,869 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=159&ts=1731778921869
2024-11-16 17:42:01,873 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,873 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,873 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [159] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=159&ts=1731778921869
2024-11-16 17:42:01,879 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:01,879 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:01,879 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:01,879 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:01,879 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:01,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:01,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:01,879 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:01,880 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:01,880 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:01,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:01,880 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:01,880 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:01,881 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:01,881 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,881 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [165] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=165&ts=1731778921869
2024-11-16 17:42:01,888 [s3a-transfer-fso-bucket-unbounded-pool2-t26] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:01,888 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:01,888 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:01,888 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:01,889 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:01,889 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778921829; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:01,889 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:01,889 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:01,889 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:01,889 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:01,894 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,895 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=166&ts=1731778921869
2024-11-16 17:42:01,907 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:42:01,907 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:01,907 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:42:01,908 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:01,908 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:01,908 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:01,908 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:01,908 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:01,908 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:01,908 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000101&t0=159&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=166&ts=1731778921869
2024-11-16 17:42:01,917 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:01,917 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:42:01,917 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:42:01,917 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:42:01,917 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:42:01,917 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.037s
2024-11-16 17:42:01,917 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:01,917 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:01,919 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:01,934 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 26, active threads = 0, queued tasks = 0, completed tasks = 26], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((fake_directories_created=0) (op_list_files.failures=0) (op_rename=0) (stream_read_total_bytes=202271) (op_xattr_get_map.failures=0) (op_mkdirs=21) (files_delete_rejected=0) (op_delete.failures=0) (object_metadata_request=60) (op_is_directory=0) (stream_read_remote_stream_drain=3) (op_hflush=0) (multipart_upload_part_put=0) (object_put_bytes=1376256) (op_is_file=0) (stream_write_block_uploads_aborted=0) (stream_read_version_mismatches=0) (stream_read_operations=3) (op_open=18) (object_put_request.failures=0) (op_xattr_get_named.failures=0) (committer_commits_reverted=0) (op_createfile.failures=0) (committer_commits.failures=0) (object_bulk_delete_request=42) (stream_read_close_operations=18) (files_copied=0) (store_io_throttled=0) (fake_directories_deleted=21) (multipart_upload_started=0) (object_copy_requests=0) (committer_jobs_failed=0) (op_get_content_summary=0) (object_delete_objects=42) (committer_stage_file_upload.failures=0) (stream_write_exceptions=0) (action_http_get_request=21) (op_createfile=0) (stream_write_total_data=2752512) (stream_write_block_uploads_committed=0) (committer_commits_created=0) (op_access.failures=0) (committer_tasks_completed=0) (op_xattr_get_named=0) (op_exists=0) (committer_stage_file_upload=0) (action_file_opened.failures=0) (op_list_status=0) (committer_commits_completed=0) (op_hsync=0) (op_copy_from_local_file=0) (op_create=21) (committer_commit_job.failures=0) (object_delete_request=0) (stream_write_bytes=1376256) (committer_commits_aborted=0) (op_xattr_list.failures=0) (object_list_request=84) (action_executor_acquired.failures=0) (op_copy_from_local_file.failures=0) (multipart_upload_aborted=0) (audit_request_execution=249) (op_abort.failures=0) (action_http_get_request.failures=0) (stream_write_total_time=0) (committer_tasks_failed=0) (object_multipart_aborted.failures=0) (committer_bytes_uploaded=0) (files_deleted=21) (object_put_request=42) (stream_read_bytes=6263) (op_list_files=0) (delegation_tokens_issued.failures=0) (op_list_located_status=0) (multipart_upload_list=0) (stream_read_bytes_backwards_on_seek=0) (stream_aborted=0) (op_create_non_recursive=0) (op_xattr_get_named_map.failures=0) (directories_deleted=0) (stream_read_fully_operations=1) (object_multipart_aborted=0) (committer_materialize_file=0) (multipart_instantiated=0) (stream_read_seek_forward_operations=0) (op_glob_status=0) (object_list_request.failures=0) (object_select_requests=0) (op_create.failures=0) (stream_read_vectored_operations=15) (op_glob_status.failures=0) (object_bulk_delete_request.failures=0) (op_get_file_checksum.failures=0) (stream_read_seek_policy_changed=19) (action_file_opened=18) (delegation_tokens_issued=0) (op_xattr_get_named_map=0) (stream_read_vectored_read_bytes_discarded=24523) (stream_read_operations_incomplete=0) (stream_read_unbuffered=1) (committer_jobs_completed=0) (op_access=0) (audit_span_creation=83) (op_xattr_list=0) (committer_materialize_file.failures=0) (ignored_errors=0) (stream_read_remote_stream_aborted=0) (committer_load_single_pending_file.failures=0) (stream_write_queue_duration.failures=0) (object_put_request_completed=42) (committer_magic_files_created=0) (stream_read_bytes_discarded_in_close=196008) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_queue_duration=0) (store_io_request=249) (multipart_upload_part_put_bytes=0) (op_mkdirs.failures=0) (op_delete=21) (object_delete_request.failures=0) (committer_commit_job=0) (object_multipart_initiated=0) (stream_read_vectored_combined_ranges=20) (files_created=21) (op_get_file_checksum=0) (stream_read_remote_stream_aborted.failures=0) (object_multipart_initiated.failures=0) (files_copied_bytes=0) (op_abort=0) (stream_read_vectored_incoming_ranges=47) (stream_read_seek_operations=0) (action_executor_acquired=0) (action_http_head_request.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_seek_backward_operations=0) (object_continue_list_request.failures=0) (op_is_file.failures=0) (audit_failure=0) (stream_read_seek_bytes_discarded=0) (object_continue_list_request=0) (audit_access_check_failure=0) (op_get_file_status=1) (store_exists_probe=0) (stream_write_block_uploads=21) (op_is_directory.failures=0) (op_get_content_summary.failures=0) (action_http_head_request=60) (store_io_retry=0) (stream_read_remote_stream_drain.failures=0) (committer_bytes_committed=0) (multipart_upload_list.failures=0) (committer_magic_marker_put=0) (op_list_status.failures=0) (stream_read_opened=3) (op_exists.failures=0) (op_get_delegation_token.failures=0) (directories_created=21) (op_xattr_get_map=0) (multipart_upload_completed=0) (stream_read_exceptions=0) (committer_magic_marker_put.failures=0) (stream_read_closed=3) (op_get_delegation_token=0) (store_exists_probe.failures=0) (op_rename.failures=0) (committer_load_single_pending_file=0) (op_openfile=0) (stream_read_seek_bytes_skipped=0) (op_get_file_status.failures=0));
gauges=((stream_write_block_uploads_active=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=21) (stream_read_blocks_in_cache=0));
minimums=((op_copy_from_local_file.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.failures.min=-1) (op_glob_status.min=-1) (op_get_file_status.min=6) (action_file_opened.failures.min=-1) (op_exists.min=-1) (op_get_content_summary.min=-1) (op_get_file_status.failures.min=-1) (op_rename.min=-1) (op_is_directory.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.min=28) (op_get_file_checksum.min=-1) (op_is_file.failures.min=-1) (op_list_files.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_get_request.failures.min=-1) (op_list_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_commit_job.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_http_get_request.min=14) (op_xattr_get_named.min=-1) (op_is_directory.failures.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_map.min=-1) (op_mkdirs.failures.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.min=5) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_drain.min=10) (committer_load_single_pending_file.min=-1) (op_mkdirs.min=16) (op_copy_from_local_file.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.min=-1) (op_glob_status.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_list_request.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_list.min=-1) (action_executor_acquired.failures.min=-1) (object_bulk_delete_request.min=7) (op_get_delegation_token.min=-1) (store_exists_probe.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_file_opened.min=8) (multipart_upload_list.min=-1) (op_delete.min=30) (committer_materialize_file.min=-1) (action_executor_acquired.min=-1) (op_access.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.min=2) (object_delete_request.min=-1) (object_delete_request.failures.min=-1) (op_delete.failures.min=-1) (op_createfile.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (store_exists_probe.failures.min=-1) (op_abort.min=-1) (op_access.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.failures.min=-1) (op_create.min=7) (op_get_delegation_token.failures.min=-1) (op_rename.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_mkdirs.max=300) (object_continue_list_request.max=-1) (op_xattr_list.failures.max=-1) (op_get_file_status.max=6) (op_is_directory.failures.max=-1) (op_list_files.max=-1) (op_create.max=62) (op_createfile.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (multipart_upload_list.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_is_file.max=-1) (stream_write_queue_duration.max=-1) (object_bulk_delete_request.failures.max=-1) (action_file_opened.max=13) (committer_stage_file_upload.max=-1) (op_createfile.failures.max=-1) (op_exists.max=-1) (op_abort.max=-1) (op_get_file_checksum.max=-1) (action_http_get_request.max=28) (committer_load_single_pending_file.max=-1) (op_list_status.max=-1) (object_put_request.max=77) (op_xattr_list.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_exists.failures.max=-1) (stream_read_remote_stream_drain.max=10) (object_multipart_aborted.max=-1) (op_get_delegation_token.max=-1) (op_access.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_materialize_file.max=-1) (store_exists_probe.max=-1) (op_xattr_get_named_map.max=-1) (op_get_content_summary.failures.max=-1) (action_http_get_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.max=26) (action_http_head_request.max=21) (object_multipart_initiated.failures.max=-1) (op_create.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_list.failures.max=-1) (op_delete.failures.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.max=-1) (op_delete.max=87) (op_rename.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.max=185) (op_list_files.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_commit_job.max=-1) (op_access.max=-1) (op_get_content_summary.max=-1) (op_abort.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (op_glob_status.failures.max=-1) (op_is_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_is_directory.max=-1) (op_copy_from_local_file.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_glob_status.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_delete_request.max=-1) (committer_load_single_pending_file.failures.max=-1));
means=((op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=60, sum=342, mean=5.7000)) (op_mkdirs.mean=(samples=21, sum=875, mean=41.6667)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=42, sum=1118, mean=26.6190)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=18, sum=113, mean=6.2778)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=21, sum=308, mean=14.6667)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=42, sum=532, mean=12.6667)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=21, sum=1034, mean=49.2381)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=84, sum=1067, mean=12.7024)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=344, mean=16.3810)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:01,935 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:01,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,935 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,936 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,936 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,936 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=167&ts=1731778921935
2024-11-16 17:42:01,942 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:01,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:01,942 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:01,943 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:01,943 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=167&ts=1731778921935
2024-11-16 17:42:01,946 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:01,947 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:01,947 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:01,947 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:01,947 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000102&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=167&ts=1731778921935
2024-11-16 17:42:01,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:01,956 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:01,956 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:01,956 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:01,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,957 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:01,957 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:01,958 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000103 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000103&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=167&ts=1731778921957
2024-11-16 17:42:01,963 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:01,964 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,964 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:01,965 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17134658712329909575.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:01,966 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17134658712329909575.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (op_hsync=0) (object_put_request.failures=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort=0) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (object_put_request=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_write_total_data=0) (stream_write_bytes=65536) (stream_write_block_uploads=0) (op_hflush=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17134658712329909575.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,966 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,966 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:01,966 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17134658712329909575.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:01,967 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:01,967 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:01,968 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:01,968 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:01,968 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000103 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000103/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000103&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=169&ts=1731778921957
2024-11-16 17:42:01,995 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:01,996 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:01,996 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:42:01,996 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17134658712329909575.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:01,996 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17134658712329909575.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,996 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17134658712329909575.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:01,996 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:01,996 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:01,997 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (op_hflush=0) (object_put_request=1) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (object_put_request.failures=0) (stream_write_total_time=0) (stream_write_bytes=65536) (multipart_upload_part_put=0) (object_multipart_initiated=0) (op_hsync=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (op_abort=0) (op_abort.failures=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=27) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=27) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:01,997 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:01,998 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:01,999 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:01,999 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:01,999 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [170] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000104 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000104/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000104&t0=170&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=170&ts=1731778921998
2024-11-16 17:42:02,003 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,003 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,003 [s3a-transfer-fso-bucket-unbounded-pool2-t27] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,004 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:42:02,005 [JUnit-testNegativeOffsetRange[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_remote_stream_drain.failures=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_fully_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_bytes=0) (stream_read_operations=0) (stream_read_vectored_operations=0) (stream_read_block_read=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_incoming_ranges=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_bytes_skipped=0) (action_file_opened=1) (stream_read_vectored_combined_ranges=0) (stream_read_seek_operations=0) (stream_read_total_bytes=0) (stream_aborted=0) (action_http_get_request=0) (stream_read_block_read.failures=0) (action_executor_acquired.failures=0) (stream_read_opened=0) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired=0) (stream_read_close_operations=1));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.min=5));
maximums=((action_file_opened.max=5) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,006 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:02,006 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,007 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,007 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=167&ts=1731778922006
2024-11-16 17:42:02,010 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,010 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,010 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [167] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=167&ts=1731778922006
2024-11-16 17:42:02,015 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:02,015 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:02,016 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:02,016 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:02,016 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:02,016 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:02,016 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:02,016 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:02,016 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:02,016 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:02,016 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:02,016 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:02,016 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:02,016 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:02,016 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,017 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [171] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=171&ts=1731778922006
2024-11-16 17:42:02,022 [s3a-transfer-fso-bucket-unbounded-pool2-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:02,022 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:42:02,022 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:02,022 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:02,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:02,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778921991; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:02,023 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:02,023 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:02,023 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:02,024 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:02,024 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:02,024 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:02,024 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:02,024 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:02,024 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,025 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,025 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:02,025 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,029 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [172] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=172&ts=1731778922006
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.014s
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.014s
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,038 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [172] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000105&t0=167&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=172&ts=1731778922006
2024-11-16 17:42:02,046 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:02,046 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:02,047 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:42:02,047 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:42:02,047 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:42:02,047 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:42:02,047 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:02,047 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:02,048 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:02,061 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 28, active threads = 0, queued tasks = 0, completed tasks = 28], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request.failures=0) (stream_read_remote_stream_drain=3) (op_mkdirs=22) (committer_magic_marker_put.failures=0) (stream_read_seek_forward_operations=0) (object_bulk_delete_request=44) (committer_commit_job.failures=0) (stream_write_block_uploads=22) (object_delete_request.failures=0) (committer_tasks_failed=0) (op_delete=22) (object_put_request_completed=44) (stream_read_closed=3) (stream_read_vectored_operations=15) (stream_read_vectored_incoming_ranges=47) (stream_read_operations_incomplete=0) (op_list_status.failures=0) (stream_read_seek_operations=0) (op_get_content_summary=0) (stream_read_seek_bytes_discarded=0) (object_select_requests=0) (op_hflush=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads_aborted=0) (op_access.failures=0) (op_exists=0) (op_xattr_get_named.failures=0) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (op_get_file_checksum=0) (audit_failure=0) (op_get_file_status=1) (object_metadata_request=63) (op_xattr_get_named=0) (op_create.failures=0) (committer_load_single_pending_file=0) (audit_span_creation=87) (committer_materialize_file.failures=0) (object_multipart_initiated.failures=0) (committer_stage_file_upload=0) (stream_read_seek_backward_operations=0) (object_multipart_initiated=0) (stream_read_total_bytes=202271) (op_list_status=0) (ignored_errors=0) (op_xattr_get_named_map=0) (op_access=0) (op_xattr_get_map=0) (object_put_bytes=1441792) (committer_commit_job=0) (store_exists_probe=0) (object_put_request.failures=0) (audit_access_check_failure=0) (op_exists.failures=0) (committer_stage_file_upload.failures=0) (committer_materialize_file=0) (object_put_request=44) (store_io_request=260) (stream_read_vectored_combined_ranges=20) (committer_commits.failures=0) (object_continue_list_request=0) (stream_read_unbuffered=1) (multipart_upload_aborted=0) (directories_deleted=0) (op_glob_status.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_openfile=0) (stream_read_fully_operations=1) (files_deleted=22) (object_delete_objects=44) (object_copy_requests=0) (op_get_file_checksum.failures=0) (object_list_request=88) (stream_read_seek_bytes_skipped=0) (object_bulk_delete_request.failures=0) (multipart_upload_completed=0) (committer_magic_files_created=0) (store_exists_probe.failures=0) (action_http_head_request.failures=0) (multipart_upload_started=0) (stream_write_total_data=2883584) (op_rename=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=20) (multipart_upload_abort_under_path_invoked=0) (op_xattr_list=0) (op_abort.failures=0) (op_createfile=0) (op_list_located_status=0) (op_copy_from_local_file=0) (stream_write_queue_duration=0) (files_delete_rejected=0) (op_is_directory.failures=0) (stream_write_total_time=0) (stream_read_version_mismatches=0) (stream_read_vectored_read_bytes_discarded=24523) (stream_read_bytes=6263) (op_xattr_list.failures=0) (multipart_upload_part_put_bytes=0) (stream_write_block_uploads_committed=0) (multipart_instantiated=0) (multipart_upload_list.failures=0) (op_open=19) (action_file_opened.failures=0) (op_abort=0) (multipart_upload_list=0) (stream_aborted=0) (op_get_content_summary.failures=0) (op_get_delegation_token.failures=0) (op_create=22) (fake_directories_deleted=22) (op_is_file=0) (fake_directories_created=0) (op_xattr_get_map.failures=0) (committer_commits_reverted=0) (committer_magic_marker_put=0) (object_delete_request=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (committer_tasks_completed=0) (object_continue_list_request.failures=0) (op_create_non_recursive=0) (op_createfile.failures=0) (op_get_file_status.failures=0) (delegation_tokens_issued=0) (stream_read_operations=3) (stream_write_exceptions_completing_upload=0) (op_delete.failures=0) (store_io_throttled=0) (directories_created=22) (op_xattr_get_named_map.failures=0) (committer_bytes_uploaded=0) (committer_commits_completed=0) (op_glob_status=0) (committer_load_single_pending_file.failures=0) (committer_commits_aborted=0) (committer_jobs_failed=0) (op_mkdirs.failures=0) (files_copied=0) (files_copied_bytes=0) (committer_bytes_committed=0) (stream_read_close_operations=19) (action_http_get_request=21) (op_is_file.failures=0) (op_hsync=0) (stream_write_exceptions=0) (op_list_files.failures=0) (delegation_tokens_issued.failures=0) (stream_write_queue_duration.failures=0) (action_executor_acquired=0) (op_list_files=0) (stream_read_exceptions=0) (op_get_delegation_token=0) (action_file_opened=19) (op_is_directory=0) (committer_jobs_completed=0) (files_created=22) (stream_read_bytes_discarded_in_close=196008) (committer_commits_created=0) (stream_read_remote_stream_aborted.failures=0) (multipart_upload_part_put=0) (audit_request_execution=260) (action_http_head_request=63) (op_rename.failures=0) (stream_write_bytes=1441792) (store_io_retry=0) (stream_read_opened=3) (op_copy_from_local_file.failures=0));
gauges=((stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=22) (client_side_encryption_enabled=0));
minimums=((op_list_files.min=-1) (stream_write_queue_duration.min=-1) (action_http_get_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_map.failures.min=-1) (delegation_tokens_issued.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.min=10) (op_list_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_file_opened.min=5) (op_list_status.min=-1) (object_put_request.min=27) (op_is_directory.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.min=-1) (op_exists.min=-1) (op_xattr_get_named.min=-1) (committer_stage_file_upload.failures.min=-1) (object_continue_list_request.min=-1) (object_continue_list_request.failures.min=-1) (multipart_upload_list.min=-1) (op_get_delegation_token.failures.min=-1) (object_list_request.min=5) (object_multipart_aborted.min=-1) (op_mkdirs.min=16) (op_glob_status.min=-1) (op_delete.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.failures.min=-1) (object_put_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.min=14) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.min=30) (committer_load_single_pending_file.failures.min=-1) (op_createfile.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (op_xattr_list.failures.min=-1) (op_create.failures.min=-1) (action_executor_acquired.failures.min=-1) (store_exists_probe.min=-1) (op_glob_status.failures.min=-1) (object_delete_request.failures.min=-1) (op_access.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.failures.min=-1) (op_get_file_checksum.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_bulk_delete_request.min=7) (object_multipart_initiated.failures.min=-1) (op_create.min=7) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.min=-1) (op_rename.min=-1) (object_multipart_initiated.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_stage_file_upload.min=-1) (op_is_directory.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.min=6) (op_xattr_get_map.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.min=-1) (op_abort.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.min=-1) (op_copy_from_local_file.min=-1) (op_createfile.min=-1) (action_http_head_request.min=2) (action_file_opened.failures.min=-1) (object_list_request.failures.min=-1));
maximums=((stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named.max=-1) (op_access.failures.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.max=-1) (op_get_delegation_token.failures.max=-1) (object_put_request.max=77) (op_create.max=62) (object_list_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_initiated.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.failures.max=-1) (object_list_request.max=185) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_list.max=-1) (op_list_files.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.max=-1) (op_list_files.failures.max=-1) (op_get_file_status.failures.max=-1) (op_delete.max=87) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_checksum.max=-1) (op_mkdirs.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_get_file_status.max=6) (stream_write_queue_duration.failures.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_file.max=-1) (op_is_directory.max=-1) (op_exists.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_delete_request.max=-1) (op_list_status.max=-1) (op_list_status.failures.max=-1) (op_abort.failures.max=-1) (action_file_opened.max=13) (op_get_file_checksum.failures.max=-1) (op_create.failures.max=-1) (op_access.max=-1) (delegation_tokens_issued.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_exists.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_named_map.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.failures.max=-1) (action_http_head_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_rename.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (store_exists_probe.failures.max=-1) (object_continue_list_request.max=-1) (object_bulk_delete_request.max=26) (op_get_content_summary.max=-1) (action_http_get_request.max=28) (stream_read_remote_stream_aborted.max=-1) (committer_materialize_file.max=-1) (store_exists_probe.max=-1) (op_createfile.max=-1) (action_http_head_request.max=21) (op_glob_status.max=-1) (committer_magic_marker_put.max=-1) (op_is_file.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_mkdirs.max=300) (stream_write_queue_duration.max=-1) (action_http_get_request.failures.max=-1) (op_glob_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=22, sum=316, mean=14.3636)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=44, sum=1153, mean=26.2045)) (action_file_opened.mean=(samples=19, sum=118, mean=6.2105)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=44, sum=552, mean=12.5455)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=22, sum=1065, mean=48.4091)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=88, sum=1088, mean=12.3636)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=21, sum=344, mean=16.3810)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=22, sum=896, mean=40.7273)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=63, sum=352, mean=5.5873)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:02,061 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:02,062 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,062 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,062 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,062 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,062 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=174&ts=1731778922061
2024-11-16 17:42:02,067 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:02,068 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,068 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,068 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,068 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,068 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=174&ts=1731778922061
2024-11-16 17:42:02,070 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,071 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:02,071 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:02,071 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:02,071 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000106&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=174&ts=1731778922061
2024-11-16 17:42:02,077 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:02,077 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:02,078 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:42:02,078 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:02,078 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,078 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,078 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,078 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,078 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000107 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000107&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=174&ts=1731778922078
2024-11-16 17:42:02,086 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:02,086 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,086 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,087 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17977606281861141684.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:02,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17977606281861141684.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_queue_duration=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (op_hsync=0) (object_put_request.failures=0) (stream_write_total_data=0) (object_multipart_initiated=0) (action_executor_acquired=0) (op_hflush=0) (multipart_upload_completed.failures=0) (object_put_request=0) (op_abort.failures=0) (stream_write_total_time=0) (op_abort=0) (stream_write_bytes=65536) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17977606281861141684.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,093 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:02,093 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17977606281861141684.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:02,093 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:02,094 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:02,094 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:02,094 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:02,094 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000107 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000107/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000107&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=31&ts=1731778922078
2024-11-16 17:42:02,121 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:02,122 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:02,122 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:42:02,123 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17977606281861141684.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:02,123 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17977606281861141684.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,123 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17977606281861141684.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,123 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:02,123 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,124 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (multipart_upload_completed.failures=0) (object_put_request=1) (multipart_upload_completed=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (op_abort.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (op_abort=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (stream_write_bytes=65536));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=27) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=27) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:02,125 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:02,126 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,126 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,126 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:02,126 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000108 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000108&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=174&ts=1731778922125
2024-11-16 17:42:02,129 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,129 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,129 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,130 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:42:02,130 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:02,130 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:42:02,130 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,130 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,130 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:02,130 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000108 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000108/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=500-899&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000108&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=36&ts=1731778922125
2024-11-16 17:42:02,131 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:42:02,138 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:42:02,139 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,139 [JUnit-testConsecutiveRanges[Buffer type : direct]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=400) (stream_read_seek_policy_changed=1) (stream_read_close_operations=1) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_vectored_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (action_file_opened=1) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_closed=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (stream_read_vectored_incoming_ranges=3) (stream_read_opened=0) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_backward_operations=0) (action_http_get_request=1) (stream_read_unbuffered=0) (stream_read_total_bytes=400) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0) (stream_read_block_read.failures=0) (stream_read_bytes_discarded_in_abort=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=3) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (action_http_get_request.min=8) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=8) (stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=3) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,140 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:02,140 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,140 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,140 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=174&ts=1731778922140
2024-11-16 17:42:02,143 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,143 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,143 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [174] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=174&ts=1731778922140
2024-11-16 17:42:02,149 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:02,149 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:02,149 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:02,149 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:02,149 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:02,150 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:02,150 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:02,150 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:02,150 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:02,150 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:02,150 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:02,150 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:02,151 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:02,151 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:02,151 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,151 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [175] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=175&ts=1731778922140
2024-11-16 17:42:02,156 [s3a-transfer-fso-bucket-unbounded-pool2-t29] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:02,156 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:42:02,156 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:02,156 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:02,156 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:02,157 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778922118; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:02,157 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:02,157 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:02,157 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:02,157 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:02,158 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,158 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=38&ts=1731778922140
2024-11-16 17:42:02,173 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.015s
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.016s
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,174 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000109&t0=174&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=38&ts=1731778922140
2024-11-16 17:42:02,191 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.017s
2024-11-16 17:42:02,192 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:42:02,192 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:42:02,192 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.034s
2024-11-16 17:42:02,193 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.035s
2024-11-16 17:42:02,193 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.043s
2024-11-16 17:42:02,193 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:02,193 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:02,198 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:02,213 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 29, active threads = 0, queued tasks = 0, completed tasks = 29], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_xattr_list.failures=0) (multipart_upload_list.failures=0) (stream_read_seek_backward_operations=0) (op_get_content_summary.failures=0) (stream_read_operations=3) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_discarded_in_abort=0) (committer_stage_file_upload=0) (committer_jobs_completed=0) (action_file_opened.failures=0) (multipart_instantiated=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (op_rename=0) (stream_read_exceptions=0) (stream_write_queue_duration.failures=0) (committer_commits_completed=0) (op_abort=0) (stream_read_closed=3) (committer_bytes_committed=0) (object_put_request_completed=46) (multipart_upload_completed=0) (op_open=20) (stream_read_version_mismatches=0) (stream_write_exceptions=0) (action_file_opened=20) (store_exists_probe.failures=0) (committer_commits.failures=0) (op_list_status.failures=0) (multipart_upload_part_put=0) (stream_read_operations_incomplete=0) (op_copy_from_local_file=0) (action_http_head_request=66) (op_is_file.failures=0) (stream_read_seek_bytes_skipped=0) (delegation_tokens_issued=0) (object_continue_list_request.failures=0) (stream_write_total_data=3014656) (op_exists.failures=0) (audit_access_check_failure=0) (op_hsync=0) (fake_directories_created=0) (directories_created=23) (stream_read_bytes_discarded_in_close=196008) (action_http_get_request=22) (multipart_upload_list=0) (op_mkdirs=23) (object_multipart_initiated.failures=0) (committer_bytes_uploaded=0) (object_delete_objects=46) (store_exists_probe=0) (multipart_upload_started=0) (object_delete_request=0) (op_xattr_list=0) (op_list_files.failures=0) (action_executor_acquired=0) (op_xattr_get_map=0) (op_createfile.failures=0) (op_get_delegation_token.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated=0) (object_continue_list_request=0) (stream_read_vectored_read_bytes_discarded=24523) (committer_commits_created=0) (stream_write_block_uploads_committed=0) (op_list_located_status=0) (op_abort.failures=0) (stream_read_remote_stream_drain.failures=0) (op_get_file_checksum=0) (op_is_file=0) (op_createfile=0) (committer_commits_reverted=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (stream_read_opened=3) (files_copied=0) (object_multipart_aborted=0) (committer_load_single_pending_file.failures=0) (fake_directories_deleted=23) (committer_magic_marker_put=0) (object_copy_requests=0) (op_create_non_recursive=0) (op_list_status=0) (stream_write_total_time=0) (op_hflush=0) (committer_materialize_file=0) (op_xattr_get_named_map=0) (stream_read_remote_stream_drain=3) (multipart_upload_part_put_bytes=0) (op_delete.failures=0) (op_delete=23) (audit_request_execution=272) (committer_commits_aborted=0) (stream_aborted=0) (object_metadata_request=66) (audit_failure=0) (committer_stage_file_upload.failures=0) (committer_magic_files_created=0) (committer_tasks_completed=0) (op_get_file_status=1) (op_get_delegation_token=0) (object_bulk_delete_request=46) (op_access.failures=0) (op_openfile=0) (object_select_requests=0) (op_rename.failures=0) (op_glob_status.failures=0) (stream_read_vectored_incoming_ranges=50) (committer_jobs_failed=0) (store_io_retry=0) (stream_read_total_bytes=202671) (object_delete_request.failures=0) (op_access=0) (op_xattr_get_named.failures=0) (audit_span_creation=91) (committer_load_single_pending_file=0) (multipart_upload_aborted=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_combined_ranges=21) (stream_read_seek_operations=0) (stream_read_seek_policy_changed=21) (action_http_head_request.failures=0) (op_get_file_checksum.failures=0) (object_put_bytes=1507328) (files_copied_bytes=0) (delegation_tokens_issued.failures=0) (store_io_request=272) (stream_read_vectored_operations=16) (ignored_errors=0) (stream_write_block_uploads=23) (committer_magic_marker_put.failures=0) (stream_read_close_operations=20) (committer_commit_job=0) (op_is_directory=0) (stream_read_fully_operations=1) (op_exists=0) (op_is_directory.failures=0) (stream_read_remote_stream_aborted=0) (files_delete_rejected=0) (op_get_file_status.failures=0) (store_io_throttled=0) (object_put_request.failures=0) (directories_deleted=0) (op_xattr_get_named_map.failures=0) (op_copy_from_local_file.failures=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_map.failures=0) (stream_read_bytes=6663) (committer_tasks_failed=0) (op_list_files=0) (op_mkdirs.failures=0) (committer_materialize_file.failures=0) (op_create=23) (object_put_request=46) (committer_commit_job.failures=0) (op_glob_status=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (op_create.failures=0) (stream_read_unbuffered=1) (files_deleted=23) (op_get_content_summary=0) (files_created=23) (object_bulk_delete_request.failures=0) (op_xattr_get_named=0) (stream_write_block_uploads_aborted=0) (object_list_request=92) (stream_write_bytes=1507328) (object_list_request.failures=0));
gauges=((object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=23) (stream_read_blocks_in_cache=0));
minimums=((op_exists.failures.min=-1) (action_http_head_request.min=2) (op_delete.min=30) (committer_commit_job.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (multipart_upload_list.min=-1) (op_rename.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_directory.failures.min=-1) (committer_stage_file_upload.min=-1) (op_access.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (object_bulk_delete_request.min=7) (op_is_directory.min=-1) (op_is_file.failures.min=-1) (object_list_request.failures.min=-1) (op_list_status.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=27) (op_createfile.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (action_http_get_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_copy_from_local_file.min=-1) (op_abort.failures.min=-1) (op_get_file_status.min=6) (object_continue_list_request.min=-1) (op_mkdirs.min=16) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.min=-1) (op_createfile.min=-1) (object_delete_request.failures.min=-1) (delegation_tokens_issued.min=-1) (object_put_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_is_file.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_get_delegation_token.min=-1) (op_list_status.min=-1) (op_create.failures.min=-1) (action_executor_acquired.min=-1) (op_access.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_get_named.min=-1) (op_list_files.failures.min=-1) (op_list_files.min=-1) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.failures.min=-1) (op_get_content_summary.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.min=10) (op_xattr_list.failures.min=-1) (op_glob_status.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_commit_job.min=-1) (op_abort.min=-1) (action_http_get_request.min=8) (store_exists_probe.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_list.min=-1) (committer_materialize_file.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named_map.min=-1) (object_list_request.min=5) (action_file_opened.min=3) (op_get_delegation_token.failures.min=-1) (op_create.min=7) (op_rename.failures.min=-1));
maximums=((op_get_file_status.failures.max=-1) (object_put_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.max=-1) (op_mkdirs.max=300) (op_createfile.failures.max=-1) (multipart_upload_list.max=-1) (op_glob_status.failures.max=-1) (op_delete.max=87) (op_list_files.failures.max=-1) (committer_commit_job.max=-1) (op_rename.max=-1) (object_list_request.max=185) (object_continue_list_request.failures.max=-1) (op_access.max=-1) (op_list_status.failures.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (stream_read_remote_stream_drain.max=10) (committer_materialize_file.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_bulk_delete_request.max=26) (op_xattr_list.failures.max=-1) (object_multipart_aborted.max=-1) (op_list_files.max=-1) (committer_load_single_pending_file.max=-1) (object_multipart_aborted.failures.max=-1) (committer_stage_file_upload.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.max=28) (store_exists_probe.failures.max=-1) (op_create.max=62) (action_http_head_request.max=21) (stream_read_remote_stream_aborted.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_content_summary.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.max=-1) (op_delete.failures.max=-1) (op_is_file.max=-1) (op_is_directory.max=-1) (object_delete_request.max=-1) (action_file_opened.max=13) (object_put_request.max=77) (committer_materialize_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_exists.failures.max=-1) (op_xattr_list.max=-1) (delegation_tokens_issued.failures.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (op_createfile.max=-1) (object_continue_list_request.max=-1) (op_list_status.max=-1) (multipart_upload_list.failures.max=-1) (op_glob_status.max=-1) (op_abort.max=-1) (op_xattr_get_map.failures.max=-1) (op_exists.max=-1) (op_copy_from_local_file.max=-1) (op_rename.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_directory.failures.max=-1) (op_access.failures.max=-1) (op_get_file_status.max=6) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (store_exists_probe.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=46, sum=584, mean=12.6957)) (object_put_request.mean=(samples=46, sum=1186, mean=25.7826)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=121, mean=6.0500)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=23, sum=913, mean=39.6957)) (action_http_head_request.mean=(samples=66, sum=360, mean=5.4545)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=352, mean=16.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=23, sum=1108, mean=48.1739)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=92, sum=1112, mean=12.0870)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=23, sum=325, mean=14.1304)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:02,214 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:02,214 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,214 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,214 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,214 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,215 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=176&ts=1731778922214
2024-11-16 17:42:02,223 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:02,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,224 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,225 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=176&ts=1731778922214
2024-11-16 17:42:02,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,231 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:02,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:02,231 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:02,231 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000110&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=176&ts=1731778922214
2024-11-16 17:42:02,241 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:02,241 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:02,242 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.011s
2024-11-16 17:42:02,242 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:02,242 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,242 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,242 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,242 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,242 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000111 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000111&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=176&ts=1731778922242
2024-11-16 17:42:02,249 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,249 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,250 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,250 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-908733862337883748.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:02,251 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-908733862337883748.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted=0) (object_multipart_initiated=0) (object_put_request.failures=0) (op_hflush=0) (action_executor_acquired.failures=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_block_uploads=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (op_hsync=0) (multipart_upload_part_put=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (stream_write_total_data=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (op_abort.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1));
maximums=((object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (object_put_request.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-908733862337883748.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,251 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,251 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:02,252 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-908733862337883748.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:02,252 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:02,252 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:02,253 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:02,253 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:02,253 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000111 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000111/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000111&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=41&ts=1731778922242
2024-11-16 17:42:02,287 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:02,287 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:02,287 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.035s
2024-11-16 17:42:02,287 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-908733862337883748.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:02,287 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-908733862337883748.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,288 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-908733862337883748.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,288 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:02,288 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,289 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (object_put_request=1) (op_hflush=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (stream_write_queue_duration=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (action_executor_acquired=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (op_hsync=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=34) (object_multipart_aborted.min=-1) (op_abort.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=34) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=34, mean=34.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:02,289 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:02,289 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:42:02,289 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:42:02,292 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:02,292 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,295 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:42:02,295 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:42:02,296 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:42:02,296 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:42:02,297 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:42:02,297 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:42:02,297 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:42:02,298 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:42:02,298 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:42:02,298 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:42:02,299 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='dbaae1ed-2e41-4a1c-b887-f888aa199820', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:02,300 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='dbaae1ed-2e41-4a1c-b887-f888aa199820', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:02,300 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='dbaae1ed-2e41-4a1c-b887-f888aa199820', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:42:02,300 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:42:02,300 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:42:02,301 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:42:02,301 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:42:02,302 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:42:02,302 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:42:02,303 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a62563a]
2024-11-16 17:42:02,303 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a62563a]
2024-11-16 17:42:02,303 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:42:02,304 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:42:02,304 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:42:02,304 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:42:02,305 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:42:02,305 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:42:02,305 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:42:02,305 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:02,305 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:42:02,306 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:42:02,306 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:42:02,306 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:42:02,308 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:42:02,308 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:42:02,308 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:42:02,309 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:42:02,309 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:42:02,309 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:42:02,309 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:42:02,309 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:42:02,309 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:42:02,309 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:42:02,310 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:42:02,310 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:42:02,310 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:42:02,310 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:42:02,310 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:42:02,310 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:42:02,311 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,311 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,312 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:02,312 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] dbaae1ed-2e41-4a1c-b887-f888aa199820-00000114 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/dbaae1ed-2e41-4a1c-b887-f888aa199820-00000114/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=dbaae1ed-2e41-4a1c-b887-f888aa199820-00000114&t0=176&fs=dbaae1ed-2e41-4a1c-b887-f888aa199820&t1=176&ts=1731778922311
2024-11-16 17:42:02,312 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:42:02,312 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:42:02,313 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:42:02,313 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:42:02,318 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,318 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,319 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,320 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_closed=0) (stream_read_seek_operations=0) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_total_bytes=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (action_http_get_request=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_combined_ranges=0) (stream_aborted=0) (stream_read_block_read=0) (stream_read_vectored_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (stream_read_vectored_incoming_ranges=0) (action_file_opened.failures=0) (stream_read_opened=0) (action_file_opened=1) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_unbuffered=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_bytes=0) (stream_read_close_operations=1));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=7) (action_http_get_request.min=-1) (action_http_get_request.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=7) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,321 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:42:02,321 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:42:02,322 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:02,322 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@7fd50d3e[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:42:02,322 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:02,322 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics6-fso-bucket
2024-11-16 17:42:02,322 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:42:02,322 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a62563a] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:02,322 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@3a62563a] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:02,324 [JUnit-testMinSeekAndMaxSizeDefaultValues[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_glob_status.failures=0) (op_abort.failures=0) (op_xattr_get_named.failures=0) (stream_write_total_time=0) (op_access.failures=0) (object_list_request.failures=0) (action_http_head_request.failures=0) (committer_commits.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_operations=0) (fake_directories_created=0) (multipart_upload_list.failures=0) (op_list_status.failures=0) (files_delete_rejected=0) (op_xattr_get_named_map.failures=0) (stream_read_fully_operations=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_read_seek_policy_changed=1) (audit_failure=0) (committer_jobs_completed=0) (stream_read_operations=0) (committer_commits_reverted=0) (op_delete=0) (stream_read_closed=0) (stream_read_unbuffered=0) (op_get_delegation_token=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted=0) (op_copy_from_local_file.failures=0) (store_io_retry=0) (object_select_requests=0) (committer_materialize_file.failures=0) (committer_jobs_failed=0) (stream_read_vectored_read_bytes_discarded=0) (object_multipart_aborted.failures=0) (stream_read_seek_backward_operations=0) (action_http_get_request=0) (committer_commit_job.failures=0) (multipart_upload_part_put=0) (action_file_opened=1) (op_xattr_get_map=0) (op_list_located_status=0) (object_put_request_completed=0) (op_createfile.failures=0) (delegation_tokens_issued.failures=0) (op_openfile=0) (stream_read_vectored_incoming_ranges=0) (op_access=0) (object_bulk_delete_request=0) (stream_read_seek_operations=0) (object_copy_requests=0) (files_created=0) (action_http_get_request.failures=0) (op_create.failures=0) (op_delete.failures=0) (committer_stage_file_upload=0) (op_rename=0) (stream_write_bytes=0) (object_put_bytes=0) (store_exists_probe=0) (multipart_upload_part_put_bytes=0) (ignored_errors=0) (directories_created=0) (committer_stage_file_upload.failures=0) (op_hsync=0) (store_io_request=1) (op_mkdirs.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads_aborted=0) (object_delete_request=0) (stream_read_remote_stream_drain.failures=0) (committer_magic_files_created=0) (multipart_instantiated=0) (op_list_files=0) (op_xattr_list=0) (object_continue_list_request.failures=0) (object_multipart_initiated=0) (op_rename.failures=0) (stream_read_opened=0) (op_get_content_summary=0) (multipart_upload_abort_under_path_invoked=0) (stream_write_exceptions=0) (committer_tasks_completed=0) (delegation_tokens_issued=0) (op_is_file=0) (audit_span_creation=2) (committer_commit_job=0) (op_get_file_checksum.failures=0) (audit_access_check_failure=0) (stream_read_bytes=0) (op_get_delegation_token.failures=0) (object_delete_objects=0) (action_http_head_request=1) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_create_non_recursive=0) (committer_bytes_uploaded=0) (directories_deleted=0) (object_bulk_delete_request.failures=0) (object_put_request=0) (stream_aborted=0) (files_copied=0) (object_metadata_request=1) (op_create=0) (stream_read_exceptions=0) (stream_read_vectored_combined_ranges=0) (op_is_directory=0) (op_open=1) (stream_read_bytes_discarded_in_abort=0) (stream_write_block_uploads_committed=0) (stream_read_seek_bytes_skipped=0) (fake_directories_deleted=0) (stream_read_version_mismatches=0) (committer_commits_aborted=0) (stream_read_close_operations=1) (op_list_status=0) (op_exists.failures=0) (committer_materialize_file=0) (object_multipart_aborted=0) (committer_bytes_committed=0) (op_copy_from_local_file=0) (op_xattr_list.failures=0) (store_exists_probe.failures=0) (op_get_file_checksum=0) (stream_read_seek_bytes_discarded=0) (action_executor_acquired.failures=0) (stream_write_total_data=0) (committer_load_single_pending_file=0) (action_file_opened.failures=0) (committer_magic_marker_put=0) (object_continue_list_request=0) (files_copied_bytes=0) (files_deleted=0) (stream_read_operations_incomplete=0) (op_get_file_status=0) (multipart_upload_aborted=0) (op_exists=0) (stream_read_remote_stream_drain=0) (op_get_content_summary.failures=0) (op_list_files.failures=0) (committer_load_single_pending_file.failures=0) (op_is_directory.failures=0) (op_mkdirs=0) (committer_commits_completed=0) (object_list_request=0) (audit_request_execution=1) (committer_tasks_failed=0) (committer_commits_created=0) (stream_write_queue_duration=0) (op_hflush=0) (op_get_file_status.failures=0) (multipart_upload_completed=0) (multipart_upload_list=0) (store_io_throttled=0) (stream_read_total_bytes=0) (op_xattr_get_named=0) (op_xattr_get_named_map=0) (op_xattr_get_map.failures=0) (stream_read_bytes_discarded_in_close=0) (multipart_upload_started=0) (op_createfile=0) (object_delete_request.failures=0) (stream_write_block_uploads=0) (op_glob_status=0) (stream_write_queue_duration.failures=0) (stream_read_seek_forward_operations=0) (op_is_file.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=0));
minimums=((op_mkdirs.min=-1) (op_get_delegation_token.min=-1) (op_is_file.min=-1) (object_bulk_delete_request.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.min=-1) (op_is_directory.min=-1) (op_create.failures.min=-1) (action_file_opened.failures.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.min=-1) (op_create.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_checksum.min=-1) (op_rename.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (committer_commit_job.failures.min=-1) (op_get_content_summary.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (multipart_upload_list.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_named_map.min=-1) (op_is_directory.failures.min=-1) (op_xattr_get_named.min=-1) (op_createfile.failures.min=-1) (op_glob_status.min=-1) (committer_materialize_file.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_executor_acquired.min=-1) (store_exists_probe.min=-1) (action_http_get_request.failures.min=-1) (op_delete.min=-1) (op_abort.failures.min=-1) (op_exists.min=-1) (op_get_file_status.min=-1) (op_get_file_status.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_delete.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_commit_job.min=-1) (op_rename.failures.min=-1) (op_abort.min=-1) (op_xattr_list.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.min=-1) (multipart_upload_list.min=-1) (committer_stage_file_upload.failures.min=-1) (action_file_opened.min=7) (object_multipart_initiated.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_get_request.min=-1) (object_put_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (delegation_tokens_issued.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_map.min=-1) (committer_load_single_pending_file.min=-1) (op_access.min=-1) (op_is_file.failures.min=-1) (op_list_files.failures.min=-1) (committer_magic_marker_put.min=-1) (op_list_status.min=-1) (object_put_request.min=-1) (committer_materialize_file.min=-1) (object_list_request.failures.min=-1) (action_http_head_request.min=6) (op_glob_status.failures.min=-1));
maximums=((op_copy_from_local_file.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.failures.max=-1) (object_put_request.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.max=-1) (object_list_request.max=-1) (op_create.failures.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (op_is_file.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_initiated.max=-1) (op_createfile.failures.max=-1) (op_mkdirs.max=-1) (object_continue_list_request.failures.max=-1) (op_exists.max=-1) (op_get_file_status.max=-1) (committer_stage_file_upload.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_map.max=-1) (op_delete.max=-1) (op_list_files.max=-1) (op_rename.max=-1) (op_create.max=-1) (object_continue_list_request.max=-1) (action_http_get_request.failures.max=-1) (op_access.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_magic_marker_put.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_content_summary.max=-1) (op_access.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_list.failures.max=-1) (committer_commit_job.max=-1) (op_list_status.failures.max=-1) (op_list_status.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_exists.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=7) (op_list_files.failures.max=-1) (op_is_directory.max=-1) (action_http_head_request.max=6) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_abort.failures.max=-1) (op_createfile.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_get_request.max=-1) (op_get_file_checksum.max=-1) (op_is_directory.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_drain.max=-1) (op_mkdirs.failures.max=-1) (op_glob_status.max=-1) (object_list_request.failures.max=-1) (op_abort.max=-1) (object_bulk_delete_request.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_file_opened.failures.max=-1));
means=((committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=6, mean=6.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,325 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:02,325 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,325 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,325 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=176&ts=1731778922325
2024-11-16 17:42:02,331 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,331 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,331 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [176] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=176&ts=1731778922325
2024-11-16 17:42:02,338 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,338 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:02,338 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:02,338 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:02,339 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:02,339 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:02,339 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:02,339 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:02,339 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:02,339 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:02,339 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:02,339 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:02,341 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:02,342 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:02,342 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,342 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [178] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=178&ts=1731778922325
2024-11-16 17:42:02,349 [s3a-transfer-fso-bucket-unbounded-pool2-t30] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,350 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:42:02,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:02,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:02,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:02,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778922278; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:02,350 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:02,350 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:02,350 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:02,351 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:02,351 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,351 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=43&ts=1731778922325
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,363 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000115&t0=176&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=43&ts=1731778922325
2024-11-16 17:42:02,373 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:02,373 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:02,374 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:02,374 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.023s
2024-11-16 17:42:02,374 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:42:02,374 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.035s
2024-11-16 17:42:02,374 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:02,374 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:02,377 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:02,392 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 30, active threads = 0, queued tasks = 0, completed tasks = 30], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_aborted.failures=0) (stream_read_total_bytes=202671) (op_mkdirs=24) (committer_tasks_failed=0) (op_is_file=0) (object_continue_list_request.failures=0) (audit_span_creation=94) (committer_commits_created=0) (op_is_file.failures=0) (ignored_errors=0) (audit_failure=0) (op_get_file_checksum=0) (multipart_upload_list=0) (op_access=0) (op_glob_status=0) (committer_commits.failures=0) (committer_commits_completed=0) (stream_read_fully_operations=1) (fake_directories_created=0) (stream_write_exceptions=0) (multipart_upload_started=0) (files_deleted=24) (op_xattr_get_named=0) (committer_jobs_completed=0) (directories_deleted=0) (op_create_non_recursive=0) (op_get_delegation_token.failures=0) (stream_write_queue_duration.failures=0) (stream_read_bytes_discarded_in_close=196008) (action_http_get_request=22) (action_executor_acquired=0) (object_delete_objects=48) (object_bulk_delete_request.failures=0) (delegation_tokens_issued=0) (committer_load_single_pending_file.failures=0) (op_xattr_list=0) (op_xattr_get_named_map=0) (op_rename=0) (action_file_opened=20) (stream_write_bytes=1572864) (action_http_head_request.failures=0) (stream_read_seek_forward_operations=0) (op_get_content_summary=0) (committer_commits_reverted=0) (stream_write_block_uploads=24) (committer_commits_aborted=0) (files_copied_bytes=0) (committer_stage_file_upload.failures=0) (committer_magic_marker_put.failures=0) (op_list_status.failures=0) (op_createfile=0) (audit_request_execution=282) (object_bulk_delete_request=48) (op_is_directory=0) (op_openfile=0) (op_xattr_get_map=0) (op_list_files=0) (delegation_tokens_issued.failures=0) (object_put_request.failures=0) (committer_materialize_file=0) (committer_jobs_failed=0) (stream_read_operations_incomplete=0) (files_copied=0) (object_list_request=96) (op_create.failures=0) (op_xattr_list.failures=0) (stream_read_close_operations=20) (op_get_file_checksum.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (op_xattr_get_named.failures=0) (files_created=24) (stream_read_seek_bytes_discarded=0) (multipart_upload_completed=0) (store_io_request=282) (op_mkdirs.failures=0) (multipart_upload_part_put_bytes=0) (op_is_directory.failures=0) (object_put_request_completed=48) (object_put_request=48) (store_exists_probe.failures=0) (stream_read_vectored_combined_ranges=21) (files_delete_rejected=0) (op_rename.failures=0) (object_delete_request.failures=0) (object_put_bytes=1572864) (committer_materialize_file.failures=0) (committer_stage_file_upload=0) (stream_read_version_mismatches=0) (stream_write_queue_duration=0) (op_xattr_get_named_map.failures=0) (fake_directories_deleted=24) (op_get_content_summary.failures=0) (op_abort.failures=0) (op_list_files.failures=0) (stream_read_vectored_incoming_ranges=50) (object_list_request.failures=0) (op_access.failures=0) (object_select_requests=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (object_copy_requests=0) (stream_read_operations=3) (stream_read_opened=3) (stream_read_remote_stream_drain.failures=0) (committer_commit_job=0) (stream_read_unbuffered=1) (object_multipart_initiated.failures=0) (op_xattr_get_map.failures=0) (stream_read_remote_stream_drain=3) (op_list_located_status=0) (directories_created=24) (op_copy_from_local_file.failures=0) (audit_access_check_failure=0) (multipart_instantiated=0) (action_file_opened.failures=0) (stream_write_total_data=3145728) (action_http_get_request.failures=0) (stream_write_total_time=0) (multipart_upload_abort_under_path_invoked=0) (object_metadata_request=68) (op_create=24) (op_createfile.failures=0) (stream_read_seek_bytes_skipped=0) (op_list_status=0) (committer_magic_files_created=0) (op_glob_status.failures=0) (stream_read_seek_policy_changed=21) (op_exists=0) (op_abort=0) (committer_bytes_uploaded=0) (committer_magic_marker_put=0) (object_delete_request=0) (op_exists.failures=0) (object_continue_list_request=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_aborted=0) (stream_read_bytes=6663) (op_hflush=0) (op_get_file_status=1) (stream_read_vectored_operations=16) (stream_read_exceptions=0) (object_multipart_initiated=0) (multipart_upload_list.failures=0) (committer_load_single_pending_file=0) (stream_read_seek_backward_operations=0) (op_copy_from_local_file=0) (stream_write_block_uploads_committed=0) (stream_write_block_uploads_aborted=0) (store_io_retry=0) (op_delete.failures=0) (multipart_upload_part_put=0) (store_io_throttled=0) (stream_read_seek_operations=0) (action_executor_acquired.failures=0) (op_open=20) (committer_tasks_completed=0) (op_delete=24) (object_multipart_aborted=0) (committer_commit_job.failures=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_discarded_in_abort=0) (store_exists_probe=0) (committer_bytes_committed=0) (op_get_file_status.failures=0) (stream_read_closed=3) (op_get_delegation_token=0) (stream_read_remote_stream_aborted=0) (action_http_head_request=68));
gauges=((stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=24) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((op_copy_from_local_file.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.failures.min=-1) (op_get_content_summary.min=-1) (op_mkdirs.min=16) (op_glob_status.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_file_status.failures.min=-1) (multipart_upload_list.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_status.min=6) (op_get_content_summary.failures.min=-1) (op_rename.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (object_put_request.min=34) (op_delete.failures.min=-1) (op_list_files.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.failures.min=-1) (op_is_file.failures.min=-1) (action_http_get_request.min=8) (op_access.min=-1) (committer_magic_marker_put.failures.min=-1) (object_list_request.min=5) (op_createfile.min=-1) (op_delete.min=30) (op_list_status.failures.min=-1) (op_create.failures.min=-1) (op_create.min=7) (op_list_files.failures.min=-1) (op_glob_status.failures.min=-1) (op_is_directory.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_map.min=-1) (op_access.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_materialize_file.min=-1) (action_http_head_request.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.min=2) (op_list_status.min=-1) (op_mkdirs.failures.min=-1) (action_file_opened.failures.min=-1) (op_rename.failures.min=-1) (op_get_delegation_token.min=-1) (op_abort.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.min=7) (stream_write_queue_duration.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_delete_request.failures.min=-1) (stream_read_remote_stream_drain.min=10) (store_exists_probe.min=-1) (action_file_opened.min=3) (store_exists_probe.failures.min=-1) (committer_commit_job.min=-1) (op_abort.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_exists.min=-1) (object_continue_list_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_delete_request.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_list.min=-1));
maximums=((object_bulk_delete_request.failures.max=-1) (op_xattr_list.failures.max=-1) (action_file_opened.failures.max=-1) (op_rename.failures.max=-1) (op_create.failures.max=-1) (op_xattr_list.max=-1) (object_multipart_aborted.max=-1) (object_list_request.max=185) (store_exists_probe.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.max=-1) (op_exists.max=-1) (op_get_file_checksum.failures.max=-1) (committer_stage_file_upload.max=-1) (op_abort.failures.max=-1) (object_put_request.max=77) (op_xattr_get_named_map.failures.max=-1) (multipart_upload_list.max=-1) (op_abort.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.max=300) (action_file_opened.max=13) (object_multipart_initiated.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (op_get_file_checksum.max=-1) (multipart_upload_list.failures.max=-1) (committer_materialize_file.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_continue_list_request.max=-1) (op_access.max=-1) (op_create.max=62) (op_get_file_status.failures.max=-1) (op_glob_status.failures.max=-1) (op_access.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.failures.max=-1) (object_list_request.failures.max=-1) (store_exists_probe.max=-1) (op_get_file_status.max=6) (committer_commit_job.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_content_summary.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_is_file.max=-1) (object_delete_request.max=-1) (op_glob_status.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_get_named.failures.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (committer_load_single_pending_file.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=10) (op_delete.max=87) (stream_read_remote_stream_aborted.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_exists.failures.max=-1) (op_mkdirs.failures.max=-1) (object_put_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (object_bulk_delete_request.max=26) (op_list_status.max=-1) (op_is_directory.failures.max=-1) (op_is_file.failures.max=-1) (action_http_head_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (delegation_tokens_issued.max=-1) (op_rename.max=-1) (action_http_head_request.max=21) (op_is_directory.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.max=28) (op_get_delegation_token.failures.max=-1) (op_createfile.max=-1) (op_delete.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_map.max=-1));
means=((op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=24, sum=941, mean=39.2083)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=68, sum=372, mean=5.4706)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=24, sum=333, mean=13.8750)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=352, mean=16.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=48, sum=605, mean=12.6042)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=121, mean=6.0500)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=24, sum=1143, mean=47.6250)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=48, sum=1230, mean=25.6250)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=96, sum=1141, mean=11.8854)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:02,393 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:02,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,393 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,393 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,393 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=179&ts=1731778922392
2024-11-16 17:42:02,400 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,400 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,401 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,401 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=179&ts=1731778922392
2024-11-16 17:42:02,404 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,404 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:02,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:02,405 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:02,405 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000116&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=179&ts=1731778922392
2024-11-16 17:42:02,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:02,414 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:02,414 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.010s
2024-11-16 17:42:02,414 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:02,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,415 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,415 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,415 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000117 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000117&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=179&ts=1731778922414
2024-11-16 17:42:02,426 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:42:02,426 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,426 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,427 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11528208353129929406.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:02,428 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11528208353129929406.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (op_hsync=0) (committer_magic_marker_put.failures=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (object_put_request.failures=0) (stream_write_queue_duration=0) (object_put_request=0) (op_hflush=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (stream_write_total_data=0) (op_abort.failures=0) (op_abort=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11528208353129929406.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,428 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,428 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:02,428 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11528208353129929406.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:02,428 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:02,428 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:02,428 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:02,428 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:02,428 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000117 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000117/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000117&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=44&ts=1731778922414
2024-11-16 17:42:02,472 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:02,472 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:02,472 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.044s
2024-11-16 17:42:02,473 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11528208353129929406.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:02,473 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11528208353129929406.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,473 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11528208353129929406.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,473 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:02,474 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,477 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (multipart_upload_part_put=0) (op_hflush=0) (object_multipart_initiated=0) (stream_write_total_time=0) (action_executor_acquired=0) (op_hsync=0) (object_put_request=1) (op_abort=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (object_put_request.failures=0) (stream_write_block_uploads=1) (stream_write_bytes=65536) (op_abort.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (object_put_request.min=44) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=44) (op_abort.failures.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=44, mean=44.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:02,477 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:02,477 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:42:02,478 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:42:02,479 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:02,479 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,487 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:42:02,487 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:42:02,487 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:42:02,488 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:42:02,488 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:42:02,488 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:42:02,488 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:42:02,488 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:42:02,488 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:42:02,489 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:42:02,490 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='94ec8015-0755-43af-8ce1-97293d2eb2b8', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:02,490 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='94ec8015-0755-43af-8ce1-97293d2eb2b8', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:02,490 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='94ec8015-0755-43af-8ce1-97293d2eb2b8', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:42:02,490 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:42:02,491 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:42:02,492 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:42:02,492 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:42:02,497 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:42:02,497 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:42:02,498 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@620d4cb]
2024-11-16 17:42:02,498 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@620d4cb]
2024-11-16 17:42:02,498 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:42:02,498 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:42:02,498 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:42:02,498 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:42:02,499 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:42:02,499 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:42:02,499 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:42:02,499 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:02,499 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:42:02,500 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:42:02,500 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:42:02,500 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:42:02,502 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:42:02,502 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:42:02,502 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:42:02,502 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:42:02,502 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:42:02,502 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:42:02,503 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:42:02,503 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:42:02,503 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:42:02,503 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:42:02,503 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:42:02,503 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:42:02,503 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:42:02,504 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:42:02,504 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 2048
2024-11-16 17:42:02,504 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 10485760
2024-11-16 17:42:02,505 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,505 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,505 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:02,505 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] 94ec8015-0755-43af-8ce1-97293d2eb2b8-00000120 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/94ec8015-0755-43af-8ce1-97293d2eb2b8-00000120/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=94ec8015-0755-43af-8ce1-97293d2eb2b8-00000120&t0=179&fs=94ec8015-0755-43af-8ce1-97293d2eb2b8&t1=179&ts=1731778922505
2024-11-16 17:42:02,506 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:42:02,506 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:42:02,506 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:42:02,506 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:42:02,511 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,511 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,511 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,512 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_backward_operations=0) (action_http_get_request=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_fully_operations=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_incoming_ranges=0) (stream_read_close_operations=1) (stream_read_seek_operations=0) (stream_read_total_bytes=0) (stream_read_prefetch_operations.failures=0) (stream_aborted=0) (stream_read_bytes=0) (action_file_opened.failures=0) (stream_read_unbuffered=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_operations=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_operations=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_acquire_read=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (stream_read_seek_policy_changed=1) (action_file_opened=1) (stream_read_remote_stream_drain=0) (stream_read_seek_forward_operations=0) (action_executor_acquired.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0));
minimums=((action_file_opened.min=6) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=6) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)));

2024-11-16 17:42:02,513 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:42:02,514 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:42:02,514 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:02,515 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@32ed9448[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]. Waiting max 30 SECONDS
2024-11-16 17:42:02,515 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:02,515 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics7-fso-bucket
2024-11-16 17:42:02,515 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:42:02,516 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@620d4cb] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:02,516 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@620d4cb] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:02,518 [JUnit-testMinSeekAndMaxSizeConfigsPropagation[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((op_access=0) (op_xattr_list.failures=0) (stream_write_queue_duration=0) (op_xattr_get_named_map.failures=0) (stream_write_block_uploads=0) (stream_read_opened=0) (object_put_request.failures=0) (committer_commits_reverted=0) (stream_read_bytes_discarded_in_close=0) (op_exists.failures=0) (audit_failure=0) (committer_commits.failures=0) (multipart_upload_part_put=0) (op_xattr_get_named=0) (op_mkdirs=0) (op_xattr_get_map.failures=0) (committer_jobs_completed=0) (stream_read_bytes_discarded_in_abort=0) (committer_bytes_uploaded=0) (fake_directories_deleted=0) (store_io_throttled=0) (multipart_upload_part_put_bytes=0) (ignored_errors=0) (stream_read_vectored_read_bytes_discarded=0) (committer_tasks_completed=0) (stream_write_exceptions=0) (multipart_upload_list=0) (op_rename=0) (files_delete_rejected=0) (op_get_file_status=0) (op_list_files=0) (action_file_opened.failures=0) (op_hflush=0) (op_create.failures=0) (op_list_status.failures=0) (object_metadata_request=1) (object_continue_list_request=0) (op_create_non_recursive=0) (committer_commits_created=0) (op_get_file_status.failures=0) (stream_aborted=0) (object_delete_request=0) (action_file_opened=1) (object_multipart_aborted=0) (op_get_content_summary.failures=0) (directories_deleted=0) (op_is_file=0) (op_list_files.failures=0) (op_is_directory=0) (committer_materialize_file=0) (stream_read_remote_stream_aborted=0) (action_http_head_request=1) (committer_magic_marker_put=0) (op_open=1) (directories_created=0) (action_executor_acquired=0) (audit_span_creation=2) (object_copy_requests=0) (op_openfile=0) (object_multipart_initiated=0) (stream_read_close_operations=1) (committer_tasks_failed=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (op_get_delegation_token.failures=0) (op_glob_status.failures=0) (stream_read_exceptions=0) (object_delete_objects=0) (audit_request_execution=1) (stream_read_version_mismatches=0) (stream_read_bytes=0) (stream_read_seek_operations=0) (committer_bytes_committed=0) (audit_access_check_failure=0) (action_http_get_request=0) (op_list_status=0) (op_get_file_checksum=0) (committer_commit_job.failures=0) (committer_stage_file_upload=0) (op_create=0) (stream_write_queue_duration.failures=0) (committer_commit_job=0) (committer_magic_marker_put.failures=0) (files_copied=0) (action_http_get_request.failures=0) (op_copy_from_local_file=0) (op_is_file.failures=0) (committer_stage_file_upload.failures=0) (multipart_instantiated=0) (op_get_file_checksum.failures=0) (object_continue_list_request.failures=0) (stream_read_operations=0) (stream_read_remote_stream_aborted.failures=0) (object_put_request=0) (action_http_head_request.failures=0) (multipart_upload_list.failures=0) (committer_commits_completed=0) (store_exists_probe.failures=0) (op_delete=0) (store_io_retry=0) (multipart_upload_started=0) (multipart_upload_abort_under_path_invoked=0) (op_get_content_summary=0) (stream_read_fully_operations=0) (object_put_bytes=0) (stream_read_seek_policy_changed=1) (object_put_request_completed=0) (op_xattr_list=0) (op_get_delegation_token=0) (committer_jobs_failed=0) (files_deleted=0) (op_glob_status=0) (stream_read_vectored_incoming_ranges=0) (stream_read_bytes_backwards_on_seek=0) (op_access.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_aborted=0) (committer_magic_files_created=0) (files_created=0) (op_createfile=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_combined_ranges=0) (stream_write_block_uploads_committed=0) (op_createfile.failures=0) (op_mkdirs.failures=0) (stream_write_total_data=0) (stream_read_vectored_operations=0) (op_is_directory.failures=0) (stream_read_remote_stream_drain=0) (object_list_request=0) (op_hsync=0) (committer_load_single_pending_file.failures=0) (stream_read_unbuffered=0) (stream_read_operations_incomplete=0) (stream_read_closed=0) (store_io_request=1) (stream_write_total_time=0) (op_exists=0) (delegation_tokens_issued=0) (op_abort=0) (committer_materialize_file.failures=0) (op_xattr_get_map=0) (object_delete_request.failures=0) (stream_write_bytes=0) (op_delete.failures=0) (stream_read_remote_stream_drain.failures=0) (committer_load_single_pending_file=0) (op_xattr_get_named_map=0) (fake_directories_created=0) (stream_read_total_bytes=0) (delegation_tokens_issued.failures=0) (object_list_request.failures=0) (op_list_located_status=0) (object_multipart_aborted.failures=0) (object_select_requests=0) (op_xattr_get_named.failures=0) (object_bulk_delete_request=0) (stream_write_block_uploads_aborted=0) (store_exists_probe=0) (op_abort.failures=0) (stream_read_seek_backward_operations=0) (committer_commits_aborted=0) (files_copied_bytes=0) (stream_read_seek_bytes_skipped=0) (op_copy_from_local_file.failures=0) (stream_read_seek_forward_operations=0) (stream_write_exceptions_completing_upload=0) (object_multipart_initiated.failures=0) (op_rename.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (object_put_request_active=0));
minimums=((op_abort.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (store_exists_probe.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_rename.failures.min=-1) (op_get_delegation_token.min=-1) (op_create.min=-1) (object_bulk_delete_request.min=-1) (stream_read_remote_stream_drain.min=-1) (op_is_directory.failures.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (op_get_file_checksum.min=-1) (op_createfile.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_createfile.min=-1) (op_rename.min=-1) (action_executor_acquired.failures.min=-1) (op_copy_from_local_file.min=-1) (op_delete.min=-1) (action_file_opened.min=6) (op_exists.failures.min=-1) (delegation_tokens_issued.min=-1) (op_access.failures.min=-1) (op_access.min=-1) (op_abort.min=-1) (op_is_file.failures.min=-1) (object_put_request.min=-1) (stream_write_queue_duration.min=-1) (op_list_files.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_multipart_initiated.min=-1) (object_delete_request.failures.min=-1) (committer_commit_job.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.min=-1) (committer_stage_file_upload.min=-1) (op_create.failures.min=-1) (op_is_directory.min=-1) (store_exists_probe.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_exists.min=-1) (op_list_status.min=-1) (object_list_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_http_head_request.min=6) (action_http_get_request.min=-1) (object_delete_request.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (object_list_request.min=-1) (object_continue_list_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_glob_status.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.min=-1) (multipart_upload_list.min=-1) (op_xattr_list.min=-1) (op_mkdirs.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.min=-1) (action_file_opened.failures.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.failures.min=-1) (multipart_upload_list.failures.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.max=-1) (committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.failures.max=-1) (op_rename.max=-1) (op_copy_from_local_file.max=-1) (op_delete.max=-1) (op_xattr_get_map.max=-1) (object_list_request.max=-1) (action_http_head_request.max=6) (action_executor_acquired.failures.max=-1) (op_access.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_initiated.max=-1) (op_create.failures.max=-1) (op_createfile.failures.max=-1) (action_file_opened.failures.max=-1) (object_bulk_delete_request.max=-1) (op_access.max=-1) (op_get_content_summary.failures.max=-1) (op_mkdirs.max=-1) (action_http_get_request.max=-1) (committer_load_single_pending_file.max=-1) (op_copy_from_local_file.failures.max=-1) (op_glob_status.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.max=-1) (op_mkdirs.failures.max=-1) (op_is_file.max=-1) (committer_commit_job.max=-1) (action_file_opened.max=6) (op_abort.failures.max=-1) (action_http_head_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.max=-1) (op_get_delegation_token.max=-1) (op_rename.failures.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.max=-1) (op_get_delegation_token.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_create.max=-1) (object_delete_request.failures.max=-1) (op_createfile.max=-1) (op_get_file_status.max=-1) (op_is_file.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_status.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.failures.max=-1) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (committer_stage_file_upload.max=-1) (object_continue_list_request.max=-1) (op_glob_status.failures.max=-1) (op_delete.failures.max=-1) (object_list_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_exists.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (object_delete_request.max=-1) (op_abort.max=-1) (op_xattr_get_named.max=-1) (op_exists.failures.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_materialize_file.max=-1));
means=((op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=6, mean=6.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,518 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:02,518 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,519 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,519 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=179&ts=1731778922518
2024-11-16 17:42:02,522 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,523 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,523 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [179] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=179&ts=1731778922518
2024-11-16 17:42:02,532 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:02,532 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:02,533 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:02,533 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:02,533 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:02,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:02,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:02,533 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:02,534 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:02,534 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:02,534 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:02,534 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:02,535 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:02,535 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:02,535 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,535 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [181] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=181&ts=1731778922518
2024-11-16 17:42:02,542 [s3a-transfer-fso-bucket-unbounded-pool2-t31] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,542 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:42:02,542 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:02,543 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:02,543 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:02,543 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778922458; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:02,543 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:02,543 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:02,544 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:02,544 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:02,544 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:02,544 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:02,545 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:02,545 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:02,545 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,545 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,545 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:02,545 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,545 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=45&ts=1731778922518
2024-11-16 17:42:02,555 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:02,555 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:02,555 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:02,556 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:02,556 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:02,556 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,556 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,556 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:02,556 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,556 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [45] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000121&t0=179&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=45&ts=1731778922518
2024-11-16 17:42:02,572 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:42:02,572 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:42:02,573 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:42:02,573 [s3a-transfer-fso-bucket-bounded-pool1-t7] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.029s
2024-11-16 17:42:02,573 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:42:02,573 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.039s
2024-11-16 17:42:02,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:02,574 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:02,575 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:02,594 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 31, active threads = 0, queued tasks = 0, completed tasks = 31], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_list_located_status=0) (op_hsync=0) (object_multipart_aborted=0) (op_is_file=0) (committer_commit_job=0) (stream_read_vectored_combined_ranges=21) (object_delete_request=0) (multipart_upload_started=0) (op_create_non_recursive=0) (op_is_directory.failures=0) (files_copied=0) (op_get_file_status.failures=0) (op_mkdirs=25) (op_rename=0) (action_executor_acquired=0) (audit_span_creation=97) (op_abort.failures=0) (multipart_instantiated=0) (op_mkdirs.failures=0) (op_list_status.failures=0) (audit_failure=0) (multipart_upload_aborted=0) (stream_read_unbuffered=1) (committer_commits_completed=0) (op_create.failures=0) (op_abort=0) (op_xattr_get_named_map.failures=0) (stream_read_fully_operations=1) (stream_read_remote_stream_aborted=0) (op_get_delegation_token=0) (op_list_files=0) (object_put_request.failures=0) (action_file_opened=20) (op_copy_from_local_file.failures=0) (op_get_file_checksum.failures=0) (stream_read_opened=3) (stream_read_version_mismatches=0) (directories_deleted=0) (op_get_content_summary.failures=0) (stream_read_vectored_incoming_ranges=50) (op_xattr_list=0) (stream_read_remote_stream_aborted.failures=0) (op_hflush=0) (op_xattr_get_named.failures=0) (stream_read_seek_operations=0) (fake_directories_created=0) (committer_magic_marker_put.failures=0) (object_continue_list_request=0) (committer_bytes_uploaded=0) (stream_read_seek_bytes_discarded=0) (op_delete.failures=0) (ignored_errors=0) (store_io_retry=0) (op_open=20) (fake_directories_deleted=25) (stream_read_operations_incomplete=0) (op_get_file_checksum=0) (op_rename.failures=0) (object_copy_requests=0) (committer_jobs_completed=0) (stream_read_operations=3) (store_io_request=292) (object_bulk_delete_request.failures=0) (op_createfile=0) (store_exists_probe.failures=0) (op_copy_from_local_file=0) (committer_magic_marker_put=0) (stream_read_exceptions=0) (op_glob_status=0) (stream_write_block_uploads_committed=0) (object_multipart_initiated=0) (committer_stage_file_upload=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_bytes=1638400) (multipart_upload_abort_under_path_invoked=0) (files_copied_bytes=0) (delegation_tokens_issued.failures=0) (multipart_upload_part_put=0) (audit_request_execution=292) (committer_materialize_file=0) (op_list_files.failures=0) (multipart_upload_list.failures=0) (committer_commits.failures=0) (stream_read_vectored_read_bytes_discarded=24523) (op_glob_status.failures=0) (stream_read_bytes=6663) (action_file_opened.failures=0) (object_put_request=50) (object_bulk_delete_request=50) (object_continue_list_request.failures=0) (delegation_tokens_issued=0) (stream_write_queue_duration=0) (stream_write_block_uploads=25) (stream_aborted=0) (object_put_bytes=1638400) (committer_load_single_pending_file=0) (op_get_file_status=1) (store_io_throttled=0) (object_list_request.failures=0) (op_get_delegation_token.failures=0) (multipart_upload_completed=0) (committer_tasks_failed=0) (op_is_directory=0) (op_access=0) (files_deleted=25) (stream_read_closed=3) (files_delete_rejected=0) (stream_write_total_data=3276800) (object_metadata_request=70) (stream_read_seek_bytes_skipped=0) (committer_commits_aborted=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_write_queue_duration.failures=0) (stream_read_seek_policy_changed=21) (files_created=25) (committer_materialize_file.failures=0) (object_put_request_completed=50) (stream_read_bytes_backwards_on_seek=0) (committer_tasks_completed=0) (op_create=25) (op_exists.failures=0) (op_get_content_summary=0) (op_openfile=0) (action_http_get_request=22) (stream_read_seek_backward_operations=0) (op_xattr_list.failures=0) (stream_read_vectored_operations=16) (stream_write_total_time=0) (op_xattr_get_named=0) (object_list_request=100) (committer_commits_created=0) (object_multipart_aborted.failures=0) (action_http_head_request=70) (stream_write_exceptions_completing_upload=0) (op_list_status=0) (op_xattr_get_map=0) (stream_read_bytes_discarded_in_close=196008) (committer_stage_file_upload.failures=0) (directories_created=25) (op_access.failures=0) (op_xattr_get_map.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_close_operations=20) (object_delete_objects=50) (op_exists=0) (op_xattr_get_named_map=0) (action_http_head_request.failures=0) (committer_bytes_committed=0) (stream_read_remote_stream_drain=3) (stream_read_total_bytes=202671) (op_createfile.failures=0) (committer_magic_files_created=0) (store_exists_probe=0) (stream_read_seek_forward_operations=0) (committer_commit_job.failures=0) (stream_write_block_uploads_aborted=0) (committer_commits_reverted=0) (stream_write_exceptions=0) (op_is_file.failures=0) (action_executor_acquired.failures=0) (audit_access_check_failure=0) (object_multipart_initiated.failures=0) (op_delete=25) (committer_jobs_failed=0) (multipart_upload_part_put_bytes=0) (object_select_requests=0) (object_delete_request.failures=0) (multipart_upload_list=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=25) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0));
minimums=((op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.min=2) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_drain.min=10) (action_http_get_request.min=8) (object_delete_request.failures.min=-1) (action_file_opened.failures.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.min=-1) (op_glob_status.min=-1) (object_put_request.min=44) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_files.min=-1) (op_is_directory.failures.min=-1) (op_is_directory.min=-1) (committer_commit_job.failures.min=-1) (op_glob_status.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_create.min=7) (op_copy_from_local_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.min=6) (stream_write_queue_duration.failures.min=-1) (stream_write_queue_duration.min=-1) (op_access.failures.min=-1) (committer_commit_job.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.min=30) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.min=-1) (object_put_request.failures.min=-1) (op_list_status.min=-1) (op_xattr_list.min=-1) (op_is_file.min=-1) (op_get_content_summary.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.min=-1) (committer_materialize_file.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (op_get_delegation_token.min=-1) (op_createfile.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.min=5) (action_file_opened.min=3) (op_list_files.failures.min=-1) (object_list_request.failures.min=-1) (action_http_get_request.failures.min=-1) (op_mkdirs.min=16) (committer_load_single_pending_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_rename.failures.min=-1) (op_mkdirs.failures.min=-1) (op_rename.min=-1) (object_delete_request.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=7) (op_list_status.failures.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.min=-1) (op_abort.min=-1) (op_xattr_get_map.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.min=-1) (op_access.min=-1) (op_create.failures.min=-1) (op_get_file_status.failures.min=-1));
maximums=((committer_commit_job.max=-1) (object_multipart_initiated.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_head_request.failures.max=-1) (op_list_files.max=-1) (op_access.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.max=-1) (op_glob_status.max=-1) (op_is_directory.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.failures.max=-1) (op_list_status.max=-1) (object_continue_list_request.failures.max=-1) (object_bulk_delete_request.max=26) (store_exists_probe.failures.max=-1) (action_http_get_request.failures.max=-1) (object_multipart_aborted.max=-1) (delegation_tokens_issued.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.failures.max=-1) (object_continue_list_request.max=-1) (stream_read_remote_stream_drain.max=10) (action_executor_acquired.failures.max=-1) (op_create.failures.max=-1) (op_create.max=62) (action_http_head_request.max=21) (action_executor_acquired.max=-1) (action_http_get_request.max=28) (action_file_opened.max=13) (op_xattr_get_named.max=-1) (committer_materialize_file.failures.max=-1) (op_copy_from_local_file.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_xattr_list.max=-1) (op_access.failures.max=-1) (object_delete_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_delegation_token.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_abort.failures.max=-1) (object_list_request.max=185) (op_xattr_get_named_map.failures.max=-1) (op_delete.failures.max=-1) (op_list_status.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_file_checksum.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.max=-1) (op_get_file_status.max=6) (committer_materialize_file.max=-1) (op_rename.failures.max=-1) (action_file_opened.failures.max=-1) (committer_commit_job.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (op_is_directory.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named_map.max=-1) (op_mkdirs.max=300) (op_list_files.failures.max=-1) (object_put_request.max=77) (op_createfile.failures.max=-1) (op_rename.max=-1) (op_delete.max=87) (op_exists.max=-1) (object_multipart_initiated.failures.max=-1) (object_delete_request.failures.max=-1) (op_is_file.failures.max=-1) (op_exists.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=20, sum=121, mean=6.0500)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=25, sum=1184, mean=47.3600)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=25, sum=346, mean=13.8400)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=22, sum=352, mean=16.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=70, sum=378, mean=5.4000)) (object_put_request.mean=(samples=50, sum=1283, mean=25.6600)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=25, sum=962, mean=38.4800)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=50, sum=631, mean=12.6200)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=100, sum=1175, mean=11.7500)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:02,595 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:02,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,595 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,596 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,596 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922595
2024-11-16 17:42:02,602 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:02,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,602 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922595
2024-11-16 17:42:02,605 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,605 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:02,605 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:02,605 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:02,605 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000122&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922595
2024-11-16 17:42:02,612 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:02,612 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:02,612 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:42:02,612 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:02,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,613 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,614 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000123 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000123&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922613
2024-11-16 17:42:02,621 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:02,622 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,622 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,622 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2588441784441613134.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:02,623 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2588441784441613134.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (stream_write_total_data=0) (op_hsync=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated=0) (object_put_request=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_total_time=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2588441784441613134.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,623 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,623 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:02,623 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2588441784441613134.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:02,623 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:02,624 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:02,624 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:02,624 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:02,624 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [47] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000123 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000123/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000123&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=47&ts=1731778922613
2024-11-16 17:42:02,651 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:02,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:02,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:42:02,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2588441784441613134.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:02,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2588441784441613134.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2588441784441613134.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,652 [s3a-transfer-fso-bucket-bounded-pool1-t8] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:02,652 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,653 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (object_put_request=1) (action_executor_acquired=0) (multipart_upload_completed=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (stream_write_total_data=65536) (object_put_request.failures=0) (op_abort.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (stream_write_total_time=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=27) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=27) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:02,654 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:02,654 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,655 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,655 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:02,655 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000124 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000124&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922654
2024-11-16 17:42:02,659 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,661 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,662 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,662 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,662 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:02,662 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:02,662 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,662 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,662 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:02,662 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [49] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000124 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000124/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000124&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=49&ts=1731778922654
2024-11-16 17:42:02,663 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,664 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_close_operations=1) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (stream_read_opened=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_closed=0) (stream_read_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (stream_read_bytes=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_incoming_ranges=2) (stream_read_operations_incomplete=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (action_http_get_request=1) (action_executor_acquired=0) (stream_read_block_read=0) (stream_aborted=0) (stream_read_seek_operations=0) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_vectored_combined_ranges=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=7) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1));
maximums=((action_http_get_request.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=7) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,680 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.018s
2024-11-16 17:42:02,681 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1055)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:42:02,681 [s3a-transfer-fso-bucket-bounded-pool1-t9] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,682 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,683 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,683 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:02,683 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000125 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000125&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922682
2024-11-16 17:42:02,687 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,687 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,687 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,687 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,688 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:02,688 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:02,688 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,688 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,688 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,688 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:02,688 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [50] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000125 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000125/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000125&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=50&ts=1731778922682
2024-11-16 17:42:02,700 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:42:02,700 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:02,700 [s3a-transfer-fso-bucket-bounded-pool1-t10] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,701 [JUnit-testStopVectoredIoOperationsCloseStream[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (action_http_get_request=1) (stream_read_remote_stream_aborted=0) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_operations=1) (stream_read_seek_operations=0) (stream_read_operations=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_read.failures=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_forward_operations=0) (stream_read_opened=0) (stream_read_total_bytes=150) (stream_read_bytes=150) (stream_read_unbuffered=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=0) (stream_read_prefetch_operations=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_close_operations=1) (stream_read_vectored_combined_ranges=1) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_backward_operations=0) (stream_read_block_read=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_incoming_ranges=2) (action_file_opened=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=12) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=5) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=12) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=5) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=5, mean=5.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=12, mean=12.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,702 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:02,703 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,703 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,703 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922702
2024-11-16 17:42:02,706 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,707 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,707 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [182] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=182&ts=1731778922702
2024-11-16 17:42:02,714 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,714 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:02,714 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:02,714 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:02,714 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:02,714 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:02,714 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:02,714 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:02,714 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:02,714 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:02,715 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:02,715 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:02,715 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:02,715 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:02,715 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,715 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [183] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=183&ts=1731778922702
2024-11-16 17:42:02,722 [s3a-transfer-fso-bucket-unbounded-pool2-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,722 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:42:02,722 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:02,722 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:02,722 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:02,723 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778922646; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:02,723 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:02,723 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:02,723 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:02,723 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:02,723 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:02,723 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:02,723 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:02,723 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:02,724 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,724 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,724 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:02,724 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,724 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=51&ts=1731778922702
2024-11-16 17:42:02,732 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,733 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [51] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000126&t0=182&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=51&ts=1731778922702
2024-11-16 17:42:02,741 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:02,741 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:02,741 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:42:02,741 [s3a-transfer-fso-bucket-bounded-pool1-t11] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.018s
2024-11-16 17:42:02,741 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.018s
2024-11-16 17:42:02,741 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:42:02,741 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:02,741 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:02,743 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:02,754 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 32, active threads = 0, queued tasks = 0, completed tasks = 32], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_copy_from_local_file=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (object_metadata_request=74) (stream_aborted=0) (stream_read_closed=3) (op_xattr_get_named=0) (store_io_request=306) (op_xattr_list=0) (op_access.failures=0) (multipart_upload_part_put_bytes=0) (files_deleted=26) (committer_jobs_completed=0) (object_bulk_delete_request.failures=0) (stream_read_vectored_combined_ranges=23) (files_created=26) (stream_read_remote_stream_aborted=0) (op_copy_from_local_file.failures=0) (action_file_opened=22) (multipart_upload_completed=0) (op_open=22) (files_copied=0) (stream_read_remote_stream_drain.failures=0) (object_select_requests=0) (op_is_directory=0) (fake_directories_deleted=26) (action_http_head_request=74) (object_list_request.failures=0) (op_list_status.failures=0) (op_openfile=0) (directories_deleted=0) (op_get_delegation_token.failures=0) (op_hflush=0) (committer_commits_completed=0) (op_delete.failures=0) (object_put_request=52) (committer_commits_reverted=0) (op_is_file.failures=0) (delegation_tokens_issued.failures=0) (op_abort.failures=0) (committer_materialize_file.failures=0) (object_list_request=104) (stream_read_operations=3) (action_http_get_request=24) (op_is_file=0) (stream_write_block_uploads_committed=0) (op_get_file_status=1) (stream_write_queue_duration=0) (committer_commits.failures=0) (stream_read_seek_backward_operations=0) (op_createfile=0) (op_mkdirs=26) (committer_load_single_pending_file.failures=0) (stream_read_version_mismatches=0) (op_delete=26) (audit_failure=0) (committer_commit_job=0) (stream_read_seek_policy_changed=23) (audit_request_execution=306) (op_createfile.failures=0) (op_abort=0) (op_list_files.failures=0) (multipart_upload_aborted=0) (action_http_head_request.failures=0) (stream_read_close_operations=22) (op_rename=0) (op_exists=0) (object_put_request.failures=0) (op_xattr_get_named_map=0) (stream_write_total_data=3407872) (stream_read_exceptions=0) (multipart_upload_abort_under_path_invoked=0) (op_create.failures=0) (object_copy_requests=0) (object_continue_list_request=0) (stream_read_total_bytes=202821) (committer_load_single_pending_file=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (fake_directories_created=0) (op_glob_status.failures=0) (op_get_content_summary=0) (store_exists_probe=0) (op_is_directory.failures=0) (stream_write_exceptions=0) (op_get_delegation_token=0) (committer_bytes_uploaded=0) (stream_read_fully_operations=1) (stream_write_block_uploads_aborted=0) (multipart_upload_list=0) (store_io_throttled=0) (stream_read_seek_bytes_skipped=0) (multipart_instantiated=0) (committer_commit_job.failures=0) (multipart_upload_started=0) (action_executor_acquired=0) (committer_stage_file_upload=0) (delegation_tokens_issued=0) (stream_read_bytes=6813) (object_bulk_delete_request=52) (store_exists_probe.failures=0) (audit_span_creation=102) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (stream_write_bytes=1703936) (action_http_get_request.failures=0) (op_xattr_get_map=0) (op_list_files=0) (committer_commits_created=0) (object_continue_list_request.failures=0) (committer_commits_aborted=0) (object_delete_request.failures=0) (op_get_file_status.failures=0) (stream_write_exceptions_completing_upload=0) (committer_jobs_failed=0) (stream_write_block_uploads=26) (object_put_bytes=1703936) (stream_read_vectored_incoming_ranges=54) (object_delete_objects=52) (op_get_file_checksum.failures=0) (files_delete_rejected=0) (stream_read_bytes_discarded_in_abort=0) (store_io_retry=0) (committer_tasks_failed=0) (stream_read_seek_operations=0) (audit_access_check_failure=0) (op_list_status=0) (op_hsync=0) (op_xattr_get_map.failures=0) (object_multipart_aborted=0) (ignored_errors=0) (committer_magic_files_created=0) (stream_read_opened=3) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (stream_read_unbuffered=1) (committer_tasks_completed=0) (op_access=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_queue_duration.failures=0) (committer_stage_file_upload.failures=0) (object_multipart_aborted.failures=0) (op_list_located_status=0) (op_create=26) (op_xattr_list.failures=0) (op_create_non_recursive=0) (op_exists.failures=0) (stream_read_vectored_operations=18) (stream_read_operations_incomplete=0) (op_xattr_get_named_map.failures=0) (stream_read_remote_stream_drain=3) (op_glob_status=0) (committer_bytes_committed=0) (action_file_opened.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=196008) (files_copied_bytes=0) (directories_created=26) (multipart_upload_list.failures=0) (stream_read_vectored_read_bytes_discarded=24533) (op_get_file_checksum=0) (committer_materialize_file=0) (op_get_content_summary.failures=0) (object_multipart_initiated=0) (op_mkdirs.failures=0) (op_xattr_get_named.failures=0) (op_rename.failures=0) (object_put_request_completed=52) (object_delete_request=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (object_put_request_active=0) (stream_write_block_uploads_active=0) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=26) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.min=-1) (op_glob_status.failures.min=-1) (store_exists_probe.failures.min=-1) (multipart_upload_list.min=-1) (op_list_files.failures.min=-1) (op_get_file_status.min=6) (multipart_upload_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (object_bulk_delete_request.min=7) (object_multipart_aborted.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.min=-1) (op_rename.min=-1) (committer_materialize_file.min=-1) (stream_write_queue_duration.min=-1) (action_file_opened.failures.min=-1) (op_is_file.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.min=-1) (action_file_opened.min=5) (action_http_head_request.failures.min=-1) (op_mkdirs.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_content_summary.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (committer_load_single_pending_file.min=-1) (stream_read_remote_stream_drain.min=10) (op_is_file.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_delete_request.min=-1) (op_get_delegation_token.min=-1) (object_continue_list_request.failures.min=-1) (action_http_get_request.min=12) (op_xattr_list.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=27) (op_createfile.min=-1) (op_get_file_checksum.failures.min=-1) (committer_stage_file_upload.min=-1) (op_abort.min=-1) (op_xattr_get_named.failures.min=-1) (op_createfile.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_stage_file_upload.failures.min=-1) (op_copy_from_local_file.min=-1) (op_create.min=7) (committer_commit_job.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.min=2) (stream_read_remote_stream_aborted.min=-1) (op_get_file_checksum.min=-1) (op_delete.min=27) (op_is_directory.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_rename.failures.min=-1) (op_list_status.min=-1) (action_executor_acquired.failures.min=-1) (op_delete.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_get_map.min=-1) (object_multipart_initiated.failures.min=-1) (op_mkdirs.min=16) (committer_load_single_pending_file.failures.min=-1) (action_http_get_request.failures.min=-1) (op_glob_status.min=-1) (op_list_status.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_commit_job.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_list.failures.min=-1) (op_list_files.min=-1) (object_list_request.min=5) (object_bulk_delete_request.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_directory.failures.min=-1));
maximums=((object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_commit_job.failures.max=-1) (op_create.max=62) (committer_stage_file_upload.max=-1) (op_exists.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_list_files.failures.max=-1) (op_is_file.max=-1) (op_xattr_list.failures.max=-1) (action_http_get_request.max=28) (op_abort.max=-1) (store_exists_probe.max=-1) (op_createfile.failures.max=-1) (object_multipart_aborted.max=-1) (op_rename.max=-1) (op_is_directory.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.max=-1) (action_http_head_request.failures.max=-1) (op_access.max=-1) (op_abort.failures.max=-1) (store_exists_probe.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (op_glob_status.max=-1) (op_create.failures.max=-1) (op_get_content_summary.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_continue_list_request.max=-1) (object_list_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_commit_job.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_bulk_delete_request.max=26) (op_createfile.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named.max=-1) (op_list_status.failures.max=-1) (op_xattr_list.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_delete.max=87) (object_list_request.max=185) (action_http_head_request.max=21) (action_file_opened.failures.max=-1) (op_list_status.max=-1) (object_delete_request.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_write_queue_duration.max=-1) (op_list_files.max=-1) (action_file_opened.max=13) (object_put_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (object_put_request.max=77) (op_get_content_summary.failures.max=-1) (op_mkdirs.max=300) (op_xattr_get_map.failures.max=-1) (op_glob_status.failures.max=-1) (op_access.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_get_file_status.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.failures.max=-1) (op_exists.failures.max=-1) (op_rename.failures.max=-1) (op_copy_from_local_file.max=-1) (op_is_directory.max=-1) (op_get_file_status.max=6) (committer_load_single_pending_file.failures.max=-1) (action_executor_acquired.max=-1) (committer_materialize_file.max=-1) (op_get_delegation_token.max=-1));
means=((object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=26, sum=355, mean=13.6538)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=104, sum=1203, mean=11.5673)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=74, sum=392, mean=5.2973)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=26, sum=1211, mean=46.5769)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=23, sum=364, mean=15.8261)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=52, sum=647, mean=12.4423)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=52, sum=1317, mean=25.3269)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=22, sum=133, mean=6.0455)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=26, sum=979, mean=37.6538)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:02,754 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:02,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,754 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,754 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,754 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=184&ts=1731778922754
2024-11-16 17:42:02,760 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:02,760 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,760 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,760 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,760 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,760 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=184&ts=1731778922754
2024-11-16 17:42:02,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,763 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:02,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:02,763 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:02,763 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000127&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=184&ts=1731778922754
2024-11-16 17:42:02,770 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:02,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:02,771 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:42:02,771 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:02,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,772 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,772 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000128 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000128&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=184&ts=1731778922771
2024-11-16 17:42:02,778 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:02,778 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,778 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,778 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2823272955000987928.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:02,779 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2823272955000987928.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions=0) (stream_write_block_uploads=0) (object_put_request=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (object_put_request.failures=0) (stream_write_total_data=0) (op_abort.failures=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (op_abort=0) (multipart_upload_completed.failures=0) (op_hsync=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed=0) (op_hflush=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2823272955000987928.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,779 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,779 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:02,779 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2823272955000987928.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:02,780 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:02,780 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:02,780 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:02,780 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:02,780 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [53] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000128 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000128/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000128&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=53&ts=1731778922771
2024-11-16 17:42:02,816 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:02,816 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:02,816 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.036s
2024-11-16 17:42:02,816 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2823272955000987928.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:02,816 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2823272955000987928.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,816 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-2823272955000987928.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,816 [s3a-transfer-fso-bucket-bounded-pool1-t12] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:02,817 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,817 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (object_put_request=1) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_total_time=0) (multipart_upload_part_put=0) (op_hflush=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1) (op_abort.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=36) (multipart_upload_part_put.failures.min=-1));
maximums=((op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=36) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=36, mean=36.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:02,818 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:02,818 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,818 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,818 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:02,818 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000129 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000129&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=184&ts=1731778922818
2024-11-16 17:42:02,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:02,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:02,822 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,822 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,822 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(924)) - Exception while reading a range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
java.io.InterruptedIOException: Stream closed or unbuffer is called
	at org.apache.hadoop.fs.s3a.S3AInputStream.checkIfVectoredIOStopped(S3AInputStream.java:1156)
	at org.apache.hadoop.fs.s3a.S3AInputStream.getS3ObjectAndValidateNotNull(S3AInputStream.java:1049)
	at org.apache.hadoop.fs.s3a.S3AInputStream.readCombinedRangeAndUpdateChildren(S3AInputStream.java:918)
	at org.apache.hadoop.fs.s3a.S3AInputStream.lambda$readVectored$5(S3AInputStream.java:897)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at org.apache.hadoop.util.SemaphoredDelegatingExecutor$RunnableWithPermitRelease.run(SemaphoredDelegatingExecutor.java:225)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-11-16 17:42:02,823 [s3a-transfer-fso-bucket-bounded-pool1-t13] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in unbuffer(): counters=((stream_read_vectored_operations=1) (stream_read_version_mismatches=0) (stream_read_block_read=0) (action_file_opened=1) (stream_read_unbuffered=1) (stream_read_seek_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_block_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=1) (stream_aborted=0) (stream_read_bytes=0) (stream_read_operations=0) (stream_read_seek_policy_changed=1) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=0) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_fully_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=2) (action_executor_acquired.failures=0) (stream_read_closed=0) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=0) (stream_read_block_acquire_read=0) (stream_read_total_bytes=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0));
minimums=((action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_file_opened.min=4) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_get_request.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=4) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:unbuffer(1260)) - Switching to seek policy random after unbuffer() invoked
2024-11-16 17:42:02,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(871)) - Reinstating vectored read operation for path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:02,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:02,823 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:02,823 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,823 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,823 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:02,824 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [63] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000129 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000129/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000129&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=63&ts=1731778922818
2024-11-16 17:42:02,830 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:42:02,830 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:02,831 [s3a-transfer-fso-bucket-bounded-pool1-t14] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,831 [JUnit-testStopVectoredIoOperationsUnbuffer[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations=0) (stream_read_close_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_closed=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_seek_operations=0) (stream_read_vectored_operations=2) (stream_read_block_acquire_read=0) (stream_read_bytes=150) (action_executor_acquired=0) (stream_read_fully_operations=0) (stream_read_block_read.failures=0) (stream_read_operations=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_combined_ranges=2) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_seek_forward_operations=0) (stream_read_seek_policy_changed=2) (stream_read_prefetch_operations.failures=0) (stream_read_unbuffered=1) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=4) (action_file_opened=1) (action_file_opened.failures=0) (action_http_get_request=1) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request.failures=0) (stream_read_total_bytes=150) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_version_mismatches=0));
gauges=((stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=4) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.min=7) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=7) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_http_get_request.mean=(samples=1, sum=7, mean=7.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:02,832 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:02,832 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,832 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,833 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=184&ts=1731778922832
2024-11-16 17:42:02,836 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,836 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,836 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [184] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=184&ts=1731778922832
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:02,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:02,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:02,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:02,842 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:02,842 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:02,842 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:02,843 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:02,843 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,843 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [185] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=185&ts=1731778922832
2024-11-16 17:42:02,850 [s3a-transfer-fso-bucket-unbounded-pool2-t33] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,850 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:02,850 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:02,850 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:02,850 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:02,850 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778922811; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:02,851 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:02,851 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:02,851 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:02,851 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:02,851 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:02,851 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:02,851 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:02,851 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:02,851 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,851 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,851 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:02,852 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,852 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=65&ts=1731778922832
2024-11-16 17:42:02,861 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:02,862 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [65] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000130&t0=184&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=65&ts=1731778922832
2024-11-16 17:42:02,873 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:02,873 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:02,873 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:02,873 [s3a-transfer-fso-bucket-bounded-pool1-t15] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:42:02,874 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.023s
2024-11-16 17:42:02,874 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.032s
2024-11-16 17:42:02,874 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:02,874 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:02,877 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:02,898 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 33, active threads = 0, queued tasks = 0, completed tasks = 33], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_rename.failures=0) (object_bulk_delete_request.failures=0) (audit_access_check_failure=0) (object_multipart_initiated=0) (op_mkdirs.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_file_opened=23) (committer_materialize_file.failures=0) (stream_write_total_data=3538944) (committer_magic_marker_put.failures=0) (op_is_file=0) (fake_directories_deleted=27) (object_continue_list_request.failures=0) (op_get_file_status.failures=0) (committer_stage_file_upload.failures=0) (stream_read_unbuffered=2) (committer_jobs_completed=0) (op_xattr_get_named_map.failures=0) (action_executor_acquired.failures=0) (op_get_file_checksum.failures=0) (directories_created=27) (files_copied_bytes=0) (stream_read_seek_bytes_skipped=0) (op_openfile=0) (stream_read_remote_stream_aborted=0) (op_is_file.failures=0) (op_get_content_summary=0) (op_list_files.failures=0) (object_list_request=108) (op_createfile=0) (op_get_content_summary.failures=0) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (op_abort=0) (op_list_located_status=0) (action_http_head_request=77) (op_access.failures=0) (stream_read_close_operations=23) (audit_failure=0) (stream_write_block_uploads_aborted=0) (op_get_file_checksum=0) (op_glob_status.failures=0) (stream_read_operations_incomplete=0) (op_hsync=0) (committer_commits_aborted=0) (files_delete_rejected=0) (op_xattr_get_named.failures=0) (stream_read_bytes_discarded_in_close=196008) (committer_commits_reverted=0) (files_deleted=27) (committer_bytes_committed=0) (action_http_head_request.failures=0) (stream_read_remote_stream_drain=3) (stream_write_block_uploads_committed=0) (op_create_non_recursive=0) (ignored_errors=0) (object_delete_request=0) (op_xattr_get_named=0) (action_file_opened.failures=0) (store_exists_probe=0) (multipart_upload_completed=0) (op_mkdirs=27) (files_created=27) (committer_stage_file_upload=0) (committer_load_single_pending_file=0) (stream_write_exceptions=0) (object_put_bytes=1769472) (op_glob_status=0) (op_xattr_list.failures=0) (committer_tasks_completed=0) (op_exists.failures=0) (op_get_delegation_token=0) (op_xattr_get_map.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_bytes_discarded=0) (op_delete.failures=0) (op_xattr_get_named_map=0) (multipart_upload_part_put_bytes=0) (op_abort.failures=0) (object_put_request.failures=0) (stream_read_vectored_operations=20) (stream_read_total_bytes=202971) (object_list_request.failures=0) (op_access=0) (stream_read_operations=3) (store_io_retry=0) (op_create.failures=0) (store_io_request=318) (multipart_upload_list.failures=0) (object_continue_list_request=0) (multipart_upload_started=0) (store_io_throttled=0) (object_bulk_delete_request=54) (delegation_tokens_issued.failures=0) (object_multipart_aborted=0) (committer_load_single_pending_file.failures=0) (action_http_get_request=25) (op_create=27) (object_select_requests=0) (stream_read_bytes_discarded_in_abort=0) (op_open=23) (fake_directories_created=0) (op_list_status.failures=0) (committer_commit_job.failures=0) (stream_read_fully_operations=1) (multipart_upload_part_put=0) (multipart_upload_list=0) (object_copy_requests=0) (object_multipart_initiated.failures=0) (op_copy_from_local_file=0) (op_get_file_status=1) (op_exists=0) (stream_read_vectored_read_bytes_discarded=24543) (action_http_get_request.failures=0) (audit_request_execution=318) (committer_jobs_failed=0) (stream_aborted=0) (op_xattr_list=0) (committer_bytes_uploaded=0) (committer_commit_job=0) (object_metadata_request=77) (directories_deleted=0) (committer_tasks_failed=0) (committer_commits_created=0) (op_createfile.failures=0) (op_list_files=0) (op_rename=0) (op_list_status=0) (committer_materialize_file=0) (stream_read_seek_backward_operations=0) (op_get_delegation_token.failures=0) (stream_write_bytes=1769472) (op_delete=27) (stream_read_vectored_incoming_ranges=58) (committer_commits.failures=0) (committer_magic_files_created=0) (stream_read_seek_forward_operations=0) (committer_commits_completed=0) (multipart_instantiated=0) (stream_read_bytes=6963) (stream_read_version_mismatches=0) (multipart_upload_abort_under_path_invoked=0) (store_exists_probe.failures=0) (stream_read_opened=3) (object_delete_request.failures=0) (op_is_directory.failures=0) (action_executor_acquired=0) (stream_write_block_uploads=27) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (op_xattr_get_map=0) (stream_read_seek_policy_changed=25) (object_put_request=54) (stream_read_seek_operations=0) (op_is_directory=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (op_hflush=0) (op_copy_from_local_file.failures=0) (stream_write_queue_duration=0) (delegation_tokens_issued=0) (multipart_upload_aborted=0) (object_delete_objects=54) (files_copied=0) (stream_write_queue_duration.failures=0) (stream_read_closed=3) (audit_span_creation=106) (object_put_request_completed=54) (stream_read_vectored_combined_ranges=25));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=27));
minimums=((multipart_upload_list.failures.min=-1) (op_mkdirs.failures.min=-1) (op_rename.min=-1) (op_abort.failures.min=-1) (op_get_content_summary.min=-1) (delegation_tokens_issued.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_get_map.failures.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.min=7) (op_exists.failures.min=-1) (op_glob_status.min=-1) (store_exists_probe.min=-1) (op_create.min=7) (action_http_get_request.failures.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=4) (op_abort.min=-1) (committer_load_single_pending_file.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.min=10) (action_http_head_request.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.min=6) (op_glob_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_multipart_initiated.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_status.failures.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (store_exists_probe.failures.min=-1) (object_delete_request.min=-1) (op_xattr_get_named.min=-1) (op_rename.failures.min=-1) (op_is_directory.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.min=-1) (object_continue_list_request.failures.min=-1) (op_createfile.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_list_status.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=36) (op_xattr_list.min=-1) (delegation_tokens_issued.failures.min=-1) (object_delete_request.failures.min=-1) (op_access.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.min=-1) (op_list_files.failures.min=-1) (op_delete.min=27) (op_list_files.min=-1) (object_multipart_initiated.min=-1) (op_is_file.min=-1) (op_get_file_checksum.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_commit_job.min=-1) (op_delete.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_create.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_mkdirs.min=16) (object_list_request.min=5) (op_xattr_list.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=7) (op_xattr_get_named.failures.min=-1) (op_access.failures.min=-1) (action_http_head_request.min=2) (committer_commit_job.failures.min=-1) (object_put_request.failures.min=-1) (object_list_request.failures.min=-1));
maximums=((op_get_file_checksum.failures.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.max=300) (object_list_request.max=185) (object_multipart_initiated.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_mkdirs.failures.max=-1) (op_abort.max=-1) (store_exists_probe.max=-1) (object_continue_list_request.max=-1) (op_exists.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.max=-1) (object_put_request.max=77) (op_get_file_status.max=6) (committer_materialize_file.max=-1) (op_create.failures.max=-1) (op_is_directory.max=-1) (op_delete.failures.max=-1) (op_xattr_list.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=10) (object_bulk_delete_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_list.failures.max=-1) (action_http_get_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_checksum.max=-1) (op_glob_status.failures.max=-1) (object_delete_request.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_rename.max=-1) (object_list_request.failures.max=-1) (object_delete_request.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_delete.max=87) (op_access.max=-1) (action_file_opened.failures.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named.max=-1) (committer_commit_job.max=-1) (op_get_content_summary.failures.max=-1) (action_file_opened.max=13) (op_xattr_get_named.failures.max=-1) (op_createfile.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.max=28) (op_createfile.failures.max=-1) (op_list_files.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.failures.max=-1) (op_rename.failures.max=-1) (op_access.failures.max=-1) (op_xattr_get_map.failures.max=-1) (committer_magic_marker_put.max=-1) (op_list_status.max=-1) (object_multipart_aborted.max=-1) (op_exists.max=-1) (op_is_file.max=-1) (op_xattr_get_named_map.max=-1) (multipart_upload_list.max=-1) (op_list_files.max=-1) (action_http_head_request.max=21) (object_bulk_delete_request.max=26) (committer_commit_job.failures.max=-1) (op_get_content_summary.max=-1) (op_glob_status.max=-1) (op_get_delegation_token.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_map.max=-1) (op_create.max=62) (committer_stage_file_upload.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1));
means=((object_list_request.mean=(samples=108, sum=1228, mean=11.3704)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=54, sum=1360, mean=25.1852)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=371, mean=15.4583)) (object_bulk_delete_request.mean=(samples=54, sum=667, mean=12.3519)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=77, sum=403, mean=5.2338)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=27, sum=363, mean=13.4444)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=27, sum=1243, mean=46.0370)) (action_file_opened.mean=(samples=23, sum=137, mean=5.9565)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=27, sum=996, mean=36.8889)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:02,901 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:02,901 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,902 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,902 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,902 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,902 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=186&ts=1731778922901
2024-11-16 17:42:02,919 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.017s
2024-11-16 17:42:02,919 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,919 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:02,919 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:02,919 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:02,920 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=186&ts=1731778922901
2024-11-16 17:42:02,923 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:02,923 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:02,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:02,924 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:02,924 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000131&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=186&ts=1731778922901
2024-11-16 17:42:02,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:02,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:02,937 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.014s
2024-11-16 17:42:02,937 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:02,937 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,938 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:02,938 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:02,938 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000132 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000132&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=186&ts=1731778922937
2024-11-16 17:42:02,945 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:02,946 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,946 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,947 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1945304589997735193.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:02,948 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1945304589997735193.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (object_put_request=0) (multipart_upload_completed=0) (op_hsync=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put=0) (stream_write_total_time=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_total_data=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_queue_duration=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_abort.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1945304589997735193.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,948 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,948 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:02,948 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1945304589997735193.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:02,948 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:02,948 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:02,949 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:02,949 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:02,949 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [77] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000132 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000132/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000132&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=77&ts=1731778922937
2024-11-16 17:42:02,975 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:02,975 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:02,975 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.027s
2024-11-16 17:42:02,975 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1945304589997735193.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:02,975 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1945304589997735193.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,975 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-1945304589997735193.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:02,975 [s3a-transfer-fso-bucket-bounded-pool1-t16] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:02,976 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:02,976 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hflush=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (object_put_request=1) (stream_write_total_data=65536) (object_put_request.failures=0) (stream_write_block_uploads=1) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put.failures=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (op_abort=0) (op_hsync=0) (stream_write_exceptions=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.min=26) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_put_request.max=26) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=26, mean=26.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:02,977 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:02,977 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:42:02,977 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:42:02,978 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:02,979 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:02,980 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:42:02,980 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:42:02,980 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:42:02,980 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:42:02,980 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:42:02,980 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='980a089d-226f-4b58-aaa7-ac4dd876fffb', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='980a089d-226f-4b58-aaa7-ac4dd876fffb', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='980a089d-226f-4b58-aaa7-ac4dd876fffb', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:42:02,981 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:42:02,982 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:42:02,982 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:42:02,982 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:42:02,982 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:42:02,982 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@13720f4f]
2024-11-16 17:42:02,982 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@13720f4f]
2024-11-16 17:42:02,982 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:42:02,983 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:42:02,985 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:02,986 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] 980a089d-226f-4b58-aaa7-ac4dd876fffb-00000135 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/980a089d-226f-4b58-aaa7-ac4dd876fffb-00000135/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=980a089d-226f-4b58-aaa7-ac4dd876fffb-00000135&t0=186&fs=980a089d-226f-4b58-aaa7-ac4dd876fffb&t1=186&ts=1731778922986
2024-11-16 17:42:02,987 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:42:02,987 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.000s
2024-11-16 17:42:02,987 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:42:02,987 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:42:02,993 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:02,993 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778922000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:02,995 [s3a-transfer-fso-bucket-unbounded-pool17-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:02,995 [s3a-transfer-fso-bucket-unbounded-pool17-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,996 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:42:02,996 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:02,996 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:02,996 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:42:02,996 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:42:02,996 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:02,996 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:02,997 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:02,997 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:02,997 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:02,997 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [189] 980a089d-226f-4b58-aaa7-ac4dd876fffb-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/980a089d-226f-4b58-aaa7-ac4dd876fffb-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-1099&id=980a089d-226f-4b58-aaa7-ac4dd876fffb-00000136&t0=188&fs=980a089d-226f-4b58-aaa7-ac4dd876fffb&t1=189&ts=1731778922995
2024-11-16 17:42:02,998 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[600,1100)] 
2024-11-16 17:42:03,002 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,002 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,002 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,003 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [190] 980a089d-226f-4b58-aaa7-ac4dd876fffb-00000136 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/980a089d-226f-4b58-aaa7-ac4dd876fffb-00000136/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-1099&id=980a089d-226f-4b58-aaa7-ac4dd876fffb-00000136&t0=188&fs=980a089d-226f-4b58-aaa7-ac4dd876fffb&t1=190&ts=1731778922995
2024-11-16 17:42:03,014 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.017s
2024-11-16 17:42:03,014 [s3a-transfer-fso-bucket-bounded-pool16-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,021 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:42:03,022 [s3a-transfer-fso-bucket-bounded-pool16-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[100,1100) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,023 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=1) (stream_read_seek_bytes_skipped=0) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_closed=0) (stream_read_unbuffered=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_opened=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request=2) (stream_read_remote_stream_aborted=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_forward_operations=0) (stream_read_exceptions=0) (stream_read_bytes_discarded_in_close=0) (stream_read_total_bytes=2000) (stream_read_vectored_incoming_ranges=4) (stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_read_operations=0) (action_file_opened=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=2) (stream_read_close_operations=1) (stream_read_fully_operations=0) (stream_read_seek_operations=0) (stream_read_bytes=2000) (stream_read_vectored_combined_ranges=2));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=17) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (action_file_opened.min=0) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.max=19) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=0));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=36, mean=18.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)));

2024-11-16 17:42:03,024 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:42:03,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:42:03,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:03,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@5e9648df[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]. Waiting max 30 SECONDS
2024-11-16 17:42:03,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:03,025 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics8-fso-bucket
2024-11-16 17:42:03,026 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:42:03,026 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@13720f4f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:03,026 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@13720f4f] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:03,027 [JUnit-testMultiVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((files_created=0) (store_io_throttled=0) (op_delete=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_vectored_incoming_ranges=4) (op_open=1) (stream_read_bytes_discarded_in_abort=0) (object_delete_request.failures=0) (op_xattr_get_named.failures=0) (object_delete_objects=0) (audit_access_check_failure=0) (op_xattr_get_named=0) (files_deleted=0) (op_create=0) (stream_read_fully_operations=0) (object_bulk_delete_request.failures=0) (ignored_errors=0) (stream_write_block_uploads_committed=0) (op_abort.failures=0) (stream_read_seek_policy_changed=1) (stream_read_seek_bytes_discarded=0) (object_continue_list_request=0) (stream_read_opened=0) (stream_read_vectored_read_bytes_discarded=0) (object_metadata_request=1) (stream_write_block_uploads_aborted=0) (multipart_upload_aborted=0) (store_exists_probe.failures=0) (committer_tasks_failed=0) (stream_write_block_uploads=0) (op_xattr_get_named_map.failures=0) (op_list_status=0) (op_get_content_summary=0) (object_delete_request=0) (op_rename=0) (op_is_directory.failures=0) (stream_write_queue_duration.failures=0) (stream_read_remote_stream_aborted.failures=0) (object_select_requests=0) (stream_read_seek_forward_operations=0) (committer_magic_marker_put=0) (directories_created=0) (stream_read_exceptions=0) (op_xattr_list.failures=0) (op_copy_from_local_file=0) (stream_read_vectored_operations=2) (stream_read_version_mismatches=0) (committer_bytes_committed=0) (stream_read_bytes_discarded_in_close=0) (committer_materialize_file=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_backward_operations=0) (op_get_delegation_token=0) (committer_jobs_failed=0) (multipart_upload_list.failures=0) (op_xattr_get_map=0) (committer_commits_reverted=0) (op_create_non_recursive=0) (op_access.failures=0) (store_io_retry=0) (stream_write_total_time=0) (action_http_get_request.failures=0) (object_bulk_delete_request=0) (op_get_content_summary.failures=0) (stream_write_queue_duration=0) (op_access=0) (committer_magic_files_created=0) (stream_read_remote_stream_drain=0) (audit_span_creation=3) (op_hsync=0) (committer_commits_completed=0) (object_list_request=0) (op_is_directory=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_operations=0) (stream_read_total_bytes=2000) (committer_stage_file_upload.failures=0) (action_http_get_request=2) (op_hflush=0) (stream_write_total_data=0) (action_file_opened=1) (op_list_status.failures=0) (op_list_files=0) (stream_read_unbuffered=0) (op_create.failures=0) (audit_request_execution=3) (op_xattr_list=0) (stream_read_vectored_combined_ranges=2) (op_abort=0) (committer_commit_job=0) (stream_write_exceptions=0) (store_exists_probe=0) (op_get_delegation_token.failures=0) (stream_aborted=0) (stream_read_closed=0) (files_copied_bytes=0) (op_list_files.failures=0) (committer_stage_file_upload=0) (action_http_head_request.failures=0) (committer_jobs_completed=0) (object_continue_list_request.failures=0) (op_createfile=0) (object_multipart_aborted=0) (committer_load_single_pending_file.failures=0) (committer_commit_job.failures=0) (stream_read_bytes=2000) (op_copy_from_local_file.failures=0) (committer_materialize_file.failures=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (fake_directories_created=0) (object_put_bytes=0) (committer_commits_created=0) (stream_read_operations=0) (object_multipart_initiated=0) (files_copied=0) (op_xattr_get_map.failures=0) (committer_tasks_completed=0) (delegation_tokens_issued=0) (op_is_file.failures=0) (stream_read_operations_incomplete=0) (op_exists.failures=0) (multipart_upload_part_put_bytes=0) (object_multipart_aborted.failures=0) (op_mkdirs.failures=0) (op_get_file_status=1) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0) (object_put_request_completed=0) (op_delete.failures=0) (stream_read_close_operations=1) (op_get_file_checksum=0) (op_glob_status.failures=0) (multipart_upload_started=0) (committer_load_single_pending_file=0) (op_createfile.failures=0) (stream_read_remote_stream_aborted=0) (op_get_file_checksum.failures=0) (action_http_head_request=1) (committer_commits.failures=0) (committer_commits_aborted=0) (op_rename.failures=0) (stream_write_bytes=0) (store_io_request=3) (object_list_request.failures=0) (op_glob_status=0) (audit_failure=0) (multipart_upload_list=0) (object_copy_requests=0) (stream_write_exceptions_completing_upload=0) (committer_bytes_uploaded=0) (directories_deleted=0) (op_is_file=0) (op_openfile=0) (multipart_instantiated=0) (action_file_opened.failures=0) (fake_directories_deleted=0) (op_get_file_status.failures=0) (op_mkdirs=0) (object_put_request.failures=0) (op_list_located_status=0) (files_delete_rejected=0) (stream_read_seek_bytes_skipped=0) (op_exists=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named_map=0) (object_put_request=0) (multipart_upload_completed=0));
gauges=((stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_data_pending=0));
minimums=((action_http_head_request.failures.min=-1) (op_get_file_status.failures.min=-1) (op_delete.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (committer_magic_marker_put.min=-1) (op_create.min=-1) (action_http_get_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (object_put_request.min=-1) (op_xattr_get_named.failures.min=-1) (op_xattr_list.failures.min=-1) (object_list_request.min=-1) (committer_commit_job.failures.min=-1) (action_file_opened.min=0) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.min=-1) (op_mkdirs.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_status.failures.min=-1) (op_abort.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (committer_load_single_pending_file.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (op_is_file.failures.min=-1) (op_exists.min=-1) (committer_commit_job.min=-1) (op_get_content_summary.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_named.min=-1) (committer_materialize_file.failures.min=-1) (object_delete_request.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.min=-1) (op_access.failures.min=-1) (op_list_files.failures.min=-1) (op_is_directory.min=-1) (multipart_upload_list.failures.min=-1) (op_get_file_checksum.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (object_continue_list_request.failures.min=-1) (op_is_file.min=-1) (op_createfile.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.min=-1) (object_continue_list_request.min=-1) (op_rename.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_materialize_file.min=-1) (op_get_file_status.min=7) (op_copy_from_local_file.min=-1) (delegation_tokens_issued.min=-1) (op_rename.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_checksum.min=-1) (op_createfile.failures.min=-1) (op_delete.min=-1) (action_http_head_request.min=7) (object_bulk_delete_request.min=-1) (op_xattr_list.min=-1) (object_put_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_abort.min=-1) (op_mkdirs.min=-1) (action_http_get_request.min=17) (op_xattr_get_map.failures.min=-1) (op_glob_status.min=-1) (op_copy_from_local_file.failures.min=-1));
maximums=((op_copy_from_local_file.max=-1) (op_abort.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (op_rename.max=-1) (op_access.failures.max=-1) (op_exists.failures.max=-1) (op_xattr_list.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_head_request.max=7) (op_access.max=-1) (op_exists.max=-1) (op_list_status.max=-1) (op_is_directory.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_commit_job.failures.max=-1) (op_glob_status.failures.max=-1) (op_is_directory.max=-1) (committer_stage_file_upload.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_create.failures.max=-1) (action_http_get_request.max=19) (store_exists_probe.max=-1) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_delete_request.max=-1) (op_glob_status.max=-1) (object_multipart_initiated.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (object_continue_list_request.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_status.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1) (op_delete.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (action_file_opened.failures.max=-1) (op_rename.failures.max=-1) (op_delete.failures.max=-1) (op_list_files.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (op_is_file.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_checksum.max=-1) (object_list_request.max=-1) (action_http_get_request.failures.max=-1) (op_createfile.failures.max=-1) (object_multipart_initiated.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (action_executor_acquired.max=-1) (op_xattr_get_map.max=-1) (object_put_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_write_queue_duration.failures.max=-1) (stream_write_queue_duration.max=-1) (op_create.max=-1) (store_exists_probe.failures.max=-1) (action_http_head_request.failures.max=-1) (object_bulk_delete_request.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.max=7) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (op_mkdirs.max=-1) (object_continue_list_request.failures.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=7, mean=7.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=36, mean=18.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=7, mean=7.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:03,028 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:03,028 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,028 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,028 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=186&ts=1731778923027
2024-11-16 17:42:03,031 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,031 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,031 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [186] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=186&ts=1731778923027
2024-11-16 17:42:03,038 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:03,038 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:03,038 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:03,039 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:03,039 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:03,039 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:03,039 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:03,039 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:03,039 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:03,039 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:03,039 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:03,039 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:03,040 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:03,040 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:03,040 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,040 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [193] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=193&ts=1731778923027
2024-11-16 17:42:03,046 [s3a-transfer-fso-bucket-unbounded-pool2-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,046 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:42:03,046 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:03,046 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:03,047 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:03,047 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778922970; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,047 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:03,047 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:03,047 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:03,047 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:03,047 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:03,047 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:03,048 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:03,048 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:03,048 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,048 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,048 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:03,048 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,048 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=79&ts=1731778923027
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.011s
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,059 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [79] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000137&t0=186&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=79&ts=1731778923027
2024-11-16 17:42:03,067 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:03,067 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:03,067 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:42:03,068 [s3a-transfer-fso-bucket-bounded-pool1-t17] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:42:03,068 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.021s
2024-11-16 17:42:03,068 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:42:03,068 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:03,068 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:03,074 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:03,090 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 34, active threads = 0, queued tasks = 0, completed tasks = 34], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_delete.failures=0) (files_delete_rejected=0) (op_create.failures=0) (committer_materialize_file=0) (audit_request_execution=328) (stream_read_remote_stream_aborted=0) (object_continue_list_request=0) (op_list_status.failures=0) (stream_read_seek_policy_changed=25) (op_is_file.failures=0) (object_metadata_request=79) (stream_write_block_uploads_committed=0) (op_mkdirs=28) (stream_write_queue_duration=0) (op_get_file_status=1) (op_glob_status=0) (store_io_request=328) (files_created=28) (op_rename.failures=0) (stream_aborted=0) (fake_directories_deleted=28) (multipart_upload_list.failures=0) (committer_stage_file_upload.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_exists.failures=0) (stream_read_operations=3) (directories_created=28) (files_copied=0) (multipart_upload_part_put=0) (committer_commits_reverted=0) (committer_stage_file_upload=0) (op_hsync=0) (multipart_upload_started=0) (op_list_files.failures=0) (stream_write_block_uploads=28) (stream_read_bytes_discarded_in_abort=0) (object_bulk_delete_request=56) (object_multipart_aborted.failures=0) (stream_write_bytes=1835008) (op_glob_status.failures=0) (op_get_delegation_token=0) (op_createfile=0) (op_hflush=0) (committer_magic_marker_put.failures=0) (op_is_directory=0) (committer_bytes_committed=0) (op_open=23) (object_list_request=112) (store_io_throttled=0) (stream_read_closed=3) (committer_load_single_pending_file.failures=0) (object_put_request.failures=0) (committer_tasks_completed=0) (stream_read_close_operations=23) (ignored_errors=0) (op_get_content_summary=0) (committer_tasks_failed=0) (fake_directories_created=0) (committer_commits_created=0) (op_xattr_list=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (op_get_file_status.failures=0) (action_http_get_request.failures=0) (object_copy_requests=0) (stream_write_total_data=3670016) (action_executor_acquired.failures=0) (object_put_request=56) (committer_commits_aborted=0) (multipart_upload_completed=0) (store_exists_probe.failures=0) (object_continue_list_request.failures=0) (stream_read_version_mismatches=0) (object_bulk_delete_request.failures=0) (files_deleted=28) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_close=196008) (stream_read_bytes=6963) (object_delete_request.failures=0) (stream_write_exceptions_completing_upload=0) (object_delete_objects=56) (action_file_opened.failures=0) (op_createfile.failures=0) (op_xattr_get_map.failures=0) (op_xattr_get_named.failures=0) (op_get_delegation_token.failures=0) (committer_commit_job.failures=0) (op_abort=0) (stream_read_remote_stream_drain=3) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (object_select_requests=0) (committer_commits_completed=0) (action_http_get_request=25) (files_copied_bytes=0) (op_xattr_list.failures=0) (op_is_directory.failures=0) (action_http_head_request.failures=0) (op_get_content_summary.failures=0) (object_put_bytes=1835008) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_operations=20) (op_create=28) (stream_read_total_bytes=202971) (op_list_located_status=0) (op_create_non_recursive=0) (op_rename=0) (stream_write_queue_duration.failures=0) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (op_copy_from_local_file=0) (object_put_request_completed=56) (delegation_tokens_issued.failures=0) (audit_failure=0) (committer_jobs_completed=0) (object_multipart_aborted=0) (stream_read_seek_bytes_skipped=0) (op_is_file=0) (op_list_files=0) (action_file_opened=23) (stream_read_opened=3) (directories_deleted=0) (op_abort.failures=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_aborted=0) (committer_bytes_uploaded=0) (stream_read_fully_operations=1) (object_delete_request=0) (op_xattr_get_named_map=0) (committer_magic_marker_put=0) (committer_commit_job=0) (op_copy_from_local_file.failures=0) (op_access=0) (audit_access_check_failure=0) (committer_jobs_failed=0) (committer_materialize_file.failures=0) (multipart_instantiated=0) (stream_read_unbuffered=2) (op_xattr_get_map=0) (stream_read_vectored_incoming_ranges=58) (multipart_upload_part_put_bytes=0) (op_mkdirs.failures=0) (op_xattr_get_named=0) (op_get_file_checksum.failures=0) (committer_commits.failures=0) (object_list_request.failures=0) (stream_read_vectored_read_bytes_discarded=24543) (delegation_tokens_issued=0) (op_get_file_checksum=0) (op_delete=28) (committer_load_single_pending_file=0) (store_exists_probe=0) (op_access.failures=0) (stream_read_operations_incomplete=0) (object_multipart_initiated.failures=0) (stream_read_vectored_combined_ranges=25) (stream_write_total_time=0) (op_openfile=0) (store_io_retry=0) (audit_span_creation=109) (committer_magic_files_created=0) (multipart_upload_list=0) (stream_read_seek_backward_operations=0) (op_xattr_get_named_map.failures=0) (op_exists=0) (stream_read_seek_operations=0) (op_list_status=0) (stream_write_block_uploads_aborted=0) (action_http_head_request=79));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=28) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0));
minimums=((op_abort.min=-1) (committer_commit_job.min=-1) (op_get_file_status.min=6) (op_xattr_get_named_map.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_list.min=-1) (object_list_request.min=5) (object_delete_request.min=-1) (op_abort.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (object_put_request.min=26) (stream_write_queue_duration.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_file.failures.min=-1) (op_access.failures.min=-1) (op_is_directory.min=-1) (op_rename.min=-1) (op_list_status.min=-1) (op_exists.failures.min=-1) (op_delete.failures.min=-1) (committer_commit_job.failures.min=-1) (action_file_opened.min=4) (object_multipart_aborted.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_files.failures.min=-1) (op_create.min=7) (op_is_directory.failures.min=-1) (action_executor_acquired.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.min=7) (op_get_file_checksum.min=-1) (op_createfile.min=-1) (object_continue_list_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.min=-1) (action_http_head_request.failures.min=-1) (object_bulk_delete_request.min=7) (op_mkdirs.min=16) (delegation_tokens_issued.min=-1) (action_http_head_request.min=2) (committer_magic_marker_put.min=-1) (op_xattr_get_map.failures.min=-1) (action_file_opened.failures.min=-1) (op_exists.min=-1) (op_list_files.min=-1) (store_exists_probe.min=-1) (multipart_upload_list.min=-1) (op_rename.failures.min=-1) (op_list_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_get_content_summary.min=-1) (stream_read_remote_stream_drain.min=10) (object_delete_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_list_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_glob_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_glob_status.min=-1) (object_put_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_get_content_summary.failures.min=-1) (op_create.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_access.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_delete.min=27) (object_multipart_initiated.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_map.min=-1) (stream_read_remote_stream_aborted.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named_map.max=-1) (op_delete.max=87) (op_get_delegation_token.max=-1) (op_rename.max=-1) (op_glob_status.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (store_exists_probe.max=-1) (op_exists.failures.max=-1) (op_is_file.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (op_create.max=62) (op_delete.failures.max=-1) (op_xattr_list.max=-1) (op_rename.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_files.failures.max=-1) (object_list_request.max=185) (op_get_file_status.max=6) (op_list_status.max=-1) (op_is_file.max=-1) (op_is_directory.max=-1) (multipart_upload_list.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.max=13) (op_list_files.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_map.max=-1) (action_http_head_request.max=21) (delegation_tokens_issued.max=-1) (object_continue_list_request.max=-1) (delegation_tokens_issued.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_access.failures.max=-1) (op_xattr_get_named.max=-1) (object_put_request.max=77) (action_executor_acquired.failures.max=-1) (action_http_get_request.max=28) (op_get_delegation_token.failures.max=-1) (action_file_opened.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_commit_job.failures.max=-1) (op_list_status.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.max=-1) (op_copy_from_local_file.max=-1) (object_list_request.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_load_single_pending_file.max=-1) (multipart_upload_list.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_exists.max=-1) (object_bulk_delete_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_bulk_delete_request.max=26) (committer_commit_job.max=-1) (object_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (object_delete_request.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.max=300) (op_glob_status.max=-1) (op_get_content_summary.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_load_single_pending_file.failures.max=-1));
means=((op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=137, mean=5.9565)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=28, sum=1272, mean=45.4286)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=371, mean=15.4583)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=112, sum=1265, mean=11.2946)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=56, sum=1398, mean=24.9643)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=79, sum=410, mean=5.1899)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=28, sum=1032, mean=36.8571)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=56, sum=685, mean=12.2321)) (op_create.mean=(samples=28, sum=373, mean=13.3214)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:03,091 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:03,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,091 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,092 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,092 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,092 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=194&ts=1731778923091
2024-11-16 17:42:03,098 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,098 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,099 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,099 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,099 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,099 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=194&ts=1731778923091
2024-11-16 17:42:03,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,102 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:03,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:03,102 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:03,102 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000138&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=194&ts=1731778923091
2024-11-16 17:42:03,109 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:03,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:03,110 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:42:03,110 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:03,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,110 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,110 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,111 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000139 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000139&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=194&ts=1731778923110
2024-11-16 17:42:03,119 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:03,120 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,120 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:03,120 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11973100202560039521.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:03,121 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11973100202560039521.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (object_multipart_aborted.failures=0) (op_abort.failures=0) (stream_write_block_uploads=0) (op_hflush=0) (stream_write_total_time=0) (action_executor_acquired.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (stream_write_total_data=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (op_hsync=0) (object_put_request=0) (op_abort=0) (object_multipart_initiated=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1));
maximums=((op_abort.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11973100202560039521.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,121 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,121 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:03,122 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11973100202560039521.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:03,122 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:03,122 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:03,122 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:03,122 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [80] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000139 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000139/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000139&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=80&ts=1731778923110
2024-11-16 17:42:03,124 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:03,151 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:03,151 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:03,151 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.029s
2024-11-16 17:42:03,151 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11973100202560039521.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:03,151 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11973100202560039521.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,151 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11973100202560039521.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,151 [s3a-transfer-fso-bucket-bounded-pool1-t18] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:03,152 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,152 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_exceptions=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (multipart_upload_part_put.failures=0) (multipart_upload_completed=0) (action_executor_acquired=0) (op_abort=0) (stream_write_total_data=65536) (object_multipart_initiated=0) (op_hsync=0) (op_abort.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (object_put_request=1) (action_executor_acquired.failures=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (op_hflush=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=29) (op_abort.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=29) (object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=29, mean=29.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:03,153 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:03,153 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(470)) - Initializing S3AFileSystem for fso-bucket
2024-11-16 17:42:03,153 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:propagateBucketOptions(1157)) - Propagating entries under fs.s3a.bucket.fso-bucket.
2024-11-16 17:42:03,155 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:03,155 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:03,156 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(524)) - Client Side Encryption enabled: false
2024-11-16 17:42:03,156 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.paging.maximum is 5000
2024-11-16 17:42:03,156 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.block.size is 33554432
2024-11-16 17:42:03,156 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.prefetch.block.size is 8388608
2024-11-16 17:42:03,156 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.prefetch.block.count is 8
2024-11-16 17:42:03,156 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.max.total.tasks is 32
2024-11-16 17:42:03,156 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.threads.keepalivetime is 60
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.executor.capacity is 16
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:initCustomSigners(70)) - No custom signers specified
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndInitAuditor(108)) - Auditor class is class org.apache.hadoop.fs.s3a.audit.impl.LoggingAuditor
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceInit(196)) - Audit manager initialized with audit service LoggingAuditor{ID='1e706150-7e25-4ab6-a405-1406088440b6', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ActiveAuditManagerS3A (ActiveAuditManagerS3A.java:serviceStart(209)) - Started audit service LoggingAuditor{ID='1e706150-7e25-4ab6-a405-1406088440b6', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG audit.AuditIntegration (AuditIntegration.java:createAndStartAuditManager(75)) - Started Audit Manager Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='1e706150-7e25-4ab6-a405-1406088440b6', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.internal.upload.part.count.limit is 10000
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:createRequestFactory(1090)) - Unset storage class property fs.s3a.create.storage.class; falling back to default storage class
2024-11-16 17:42:03,157 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is com.amazonaws.auth.EnvironmentVariableCredentialsProvider
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProvider(699)) - Credential provider class is org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:createAWSCredentialProviderSet(591)) - For URI s3a://fso-bucket/, using credentials AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2e65208]
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:bindAWSClient(961)) - Using credential provider AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2e65208]
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.maximum is 96
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.attempts.maximum is 20
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.establish.timeout is 5000
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.connection.timeout is 200000
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.send.buffer is 8192
2024-11-16 17:42:03,158 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.socket.recv.buffer is 8192
2024-11-16 17:42:03,159 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:initUserAgent(1421)) - Using User-Agent: Hadoop 3.3.6
2024-11-16 17:42:03,159 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:buildEncryptionSecrets(1749)) - Data is unencrypted
2024-11-16 17:42:03,159 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(367)) - Creating endpoint configuration for "http://localhost:9878"
2024-11-16 17:42:03,159 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(375)) - Endpoint URI = http://localhost:9878
2024-11-16 17:42:03,159 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(379)) - Endpoint http://localhost:9878 is not the default; parsing
2024-11-16 17:42:03,159 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.DefaultS3ClientFactory (DefaultS3ClientFactory.java:createEndpointConfiguration(390)) - Region for endpoint http://localhost:9878, URI http://localhost:9878 is determined as null
2024-11-16 17:42:03,160 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:doBucketProbing(724)) - skipping check for bucket existence
2024-11-16 17:42:03,160 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(598)) - Input fadvise policy = default
2024-11-16 17:42:03,160 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(600)) - Change detection policy = ETagChangeDetectionPolicy mode=Server
2024-11-16 17:42:03,160 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(604)) - Filesystem support for magic committers is enabled
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.fast.upload.active.blocks is 4
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(623)) - Using S3ABlockOutputStream with buffer = disk; block=67108864; queue limit=4; multipart=true
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  impl.DirectoryPolicyImpl (DirectoryPolicyImpl.java:getDirectoryPolicy(189)) - Directory markers will be kept
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initialize(634)) - Directory marker retention policy is DirectoryMarkerRetention{policy='keep'}
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longOption(989)) - Value of fs.s3a.multipart.purge.age is 86400
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.bulk.delete.page.size is 250
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.readahead.range is 0
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of io.file.buffer.size is 4096
2024-11-16 17:42:03,161 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.input.async.drain.threshold is 16000
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:intOption(968)) - Value of fs.s3a.vectored.active.ranged.reads is 4
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.min.seek.size is 4896
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AUtils (S3AUtils.java:longBytesOption(1011)) - Value of fs.s3a.vectored.read.max.merged.size is 1253376
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 1e706150-7e25-4ab6-a405-1406088440b6-00000142 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/1e706150-7e25-4ab6-a405-1406088440b6-00000142/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=1e706150-7e25-4ab6-a405-1406088440b6-00000142&t0=194&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=194&ts=1731778923162
2024-11-16 17:42:03,162 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: create credentials
2024-11-16 17:42:03,163 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - create credentials: duration 0:00.001s
2024-11-16 17:42:03,163 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(197)) - No credentials from TemporaryAWSCredentialsProvider: org.apache.hadoop.fs.s3a.auth.NoAwsCredentialsException: Session credentials in Hadoop configuration: No AWS Credentials
2024-11-16 17:42:03,163 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:getCredentials(184)) - Using credentials from SimpleAWSCredentialsProvider
2024-11-16 17:42:03,168 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:03,168 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,170 [s3a-transfer-fso-bucket-unbounded-pool19-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:03,170 [s3a-transfer-fso-bucket-unbounded-pool19-t1] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,170 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:03,170 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:03,170 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,171 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[10240,10340), range[8192,8292), range[14336,14436), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,172 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [199] 1e706150-7e25-4ab6-a405-1406088440b6-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=1e706150-7e25-4ab6-a405-1406088440b6-00000143&t0=196&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=199&ts=1731778923170
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,171 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [198] 1e706150-7e25-4ab6-a405-1406088440b6-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-14435&id=1e706150-7e25-4ab6-a405-1406088440b6-00000143&t0=196&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=198&ts=1731778923170
2024-11-16 17:42:03,172 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [197] 1e706150-7e25-4ab6-a405-1406088440b6-00000143 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000143/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=1e706150-7e25-4ab6-a405-1406088440b6-00000143&t0=196&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=197&ts=1731778923170
2024-11-16 17:42:03,185 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:42:03,186 [s3a-transfer-fso-bucket-bounded-pool18-t1] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,187 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.015s
2024-11-16 17:42:03,187 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:42:03,187 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:42:03,188 [s3a-transfer-fso-bucket-bounded-pool18-t2] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,190 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:42:03,191 [s3a-transfer-fso-bucket-bounded-pool18-t3] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,191 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(200)) - IOStats after readVectored operation counters=((action_file_opened=1)
(action_http_get_request=3)
(stream_read_bytes=1424)
(stream_read_seek_policy_changed=1)
(stream_read_total_bytes=1424)
(stream_read_vectored_combined_ranges=3)
(stream_read_vectored_incoming_ranges=5)
(stream_read_vectored_operations=1)
(stream_read_vectored_read_bytes_discarded=5944));

gauges=();

minimums=((action_file_opened.min=0)
(action_http_get_request.min=15));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=19));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=3, sum=50, mean=16.6667)));

2024-11-16 17:42:03,192 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_incoming_ranges=5) (action_file_opened.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_total_bytes=1424) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_exceptions=0) (stream_read_closed=0) (stream_read_vectored_combined_ranges=3) (stream_read_prefetch_operations.failures=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_block_acquire_read=0) (stream_read_opened=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_remote_stream_drain.failures=0) (stream_aborted=0) (stream_read_seek_operations=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_operations=1) (action_executor_acquired=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=0) (action_http_get_request=3) (stream_read_seek_policy_changed=1) (stream_read_unbuffered=0) (action_http_get_request.failures=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes=1424) (stream_read_close_operations=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (action_file_opened.min=0) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=15) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=19) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.max=0) (action_file_opened.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=50, mean=16.6667)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:03,193 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,194 [s3a-transfer-fso-bucket-unbounded-pool19-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=0, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:03,194 [s3a-transfer-fso-bucket-unbounded-pool19-t2] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,194 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:03,194 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[10240-65536], length=100, streamPosition=0, nextReadPosition=10240, policy=default
2024-11-16 17:42:03,195 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,195 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 1e706150-7e25-4ab6-a405-1406088440b6-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=55295, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=10240-65535&id=1e706150-7e25-4ab6-a405-1406088440b6-00000144&t0=203&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=194&ts=1731778923194
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.010s
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.S3AInputStream (S3AInputStream.java:seekInStream(394)) - Switching to Random IO seek policy
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=55196 abort=true
2024-11-16 17:42:03,204 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(251)) - Aborting stream s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,205 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(263)) - Stream s3a://fso-bucket/test/vectored_file.txt aborted: seekInStream(); remaining=55196
2024-11-16 17:42:03,205 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[8192-8292], length=100, streamPosition=8192, nextReadPosition=8192, policy=random
2024-11-16 17:42:03,205 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,205 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 1e706150-7e25-4ab6-a405-1406088440b6-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-8291&id=1e706150-7e25-4ab6-a405-1406088440b6-00000144&t0=203&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=194&ts=1731778923194
2024-11-16 17:42:03,213 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.009s
2024-11-16 17:42:03,213 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:03,213 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:03,213 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:03,213 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:42:03,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:42:03,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:03,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[14336-14436], length=100, streamPosition=14336, nextReadPosition=14336, policy=random
2024-11-16 17:42:03,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,214 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 1e706150-7e25-4ab6-a405-1406088440b6-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=14336-14435&id=1e706150-7e25-4ab6-a405-1406088440b6-00000144&t0=203&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=194&ts=1731778923194
2024-11-16 17:42:03,220 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.007s
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[1947-2047], length=100, streamPosition=1947, nextReadPosition=1947, policy=random
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,221 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 1e706150-7e25-4ab6-a405-1406088440b6-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=1e706150-7e25-4ab6-a405-1406088440b6-00000144&t0=203&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=194&ts=1731778923194
2024-11-16 17:42:03,228 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.007s
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream seekInStream(): soft
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason seekInStream() remaining=0 abort=false
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[40960-41984], length=1024, streamPosition=40960, nextReadPosition=40960, policy=random
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,229 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] 1e706150-7e25-4ab6-a405-1406088440b6-00000144 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/1e706150-7e25-4ab6-a405-1406088440b6-00000144/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=1e706150-7e25-4ab6-a405-1406088440b6-00000144&t0=203&fs=1e706150-7e25-4ab6-a405-1406088440b6&t1=194&ts=1731778923194
2024-11-16 17:42:03,235 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.006s
2024-11-16 17:42:03,236 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:03,236 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:03,236 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] INFO  s3a.ITestS3AContractVectoredRead (ITestS3AContractVectoredRead.java:testNormalReadVsVectoredReadStatsCollection(246)) - IOStats after read fully operation counters=((action_file_opened=1)
(action_http_get_request=5)
(stream_aborted=1)
(stream_read_bytes=1424)
(stream_read_bytes_backwards_on_seek=14637)
(stream_read_bytes_discarded_in_abort=55196)
(stream_read_closed=3)
(stream_read_fully_operations=5)
(stream_read_opened=5)
(stream_read_operations=5)
(stream_read_remote_stream_aborted=1)
(stream_read_remote_stream_drain=3)
(stream_read_seek_backward_operations=2)
(stream_read_seek_bytes_skipped=44957)
(stream_read_seek_forward_operations=2)
(stream_read_seek_operations=4)
(stream_read_seek_policy_changed=2)
(stream_read_total_bytes=1424));

gauges=((stream_read_gauge_input_policy=1));

minimums=((action_file_opened.min=0)
(action_http_get_request.min=6)
(stream_read_remote_stream_aborted.min=1)
(stream_read_remote_stream_drain.min=0));

maximums=((action_file_opened.max=0)
(action_http_get_request.max=9)
(stream_read_remote_stream_aborted.max=1)
(stream_read_remote_stream_drain.max=0));

means=((action_file_opened.mean=(samples=1, sum=0, mean=0.0000))
(action_http_get_request.mean=(samples=5, sum=36, mean=7.2000))
(stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000))
(stream_read_remote_stream_drain.mean=(samples=3, sum=0, mean=0.0000)));

2024-11-16 17:42:03,236 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:42:03,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=0 abort=false
2024-11-16 17:42:03,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:03,237 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=1) (stream_read_seek_policy_changed=2) (stream_read_bytes_backwards_on_seek=14637) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain.failures=0) (stream_read_exceptions=0) (stream_read_closed=4) (stream_read_block_read=0) (action_executor_acquired=0) (stream_read_total_bytes=1424) (stream_read_vectored_combined_ranges=0) (stream_read_seek_bytes_skipped=44957) (stream_read_remote_stream_drain=4) (stream_read_seek_forward_operations=2) (stream_read_close_operations=1) (stream_read_seek_backward_operations=2) (stream_read_vectored_operations=0) (action_file_opened.failures=0) (action_http_get_request=5) (action_executor_acquired.failures=0) (stream_read_fully_operations=5) (stream_read_seek_operations=4) (stream_read_unbuffered=0) (stream_read_block_acquire_read.failures=0) (stream_read_version_mismatches=0) (stream_read_vectored_incoming_ranges=0) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_opened=5) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations=5) (action_file_opened=1) (stream_read_prefetch_operations=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_operations_incomplete=0) (stream_read_bytes_discarded_in_abort=55196) (stream_read_remote_stream_aborted=1) (stream_read_bytes=1424));
gauges=((stream_read_gauge_input_policy=1) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=6) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_drain.min=0) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=0) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_block_read.max=-1) (action_http_get_request.max=9) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=0) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=1) (action_file_opened.max=0) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (action_http_get_request.failures.max=-1));
means=((stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=5, sum=36, mean=7.2000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:03,238 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:42:03,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:42:03,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:03,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@480f0d26[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2]. Waiting max 30 SECONDS
2024-11-16 17:42:03,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:03,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics9-fso-bucket
2024-11-16 17:42:03,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:42:03,240 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2e65208] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:03,241 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@2e65208] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:03,242 [JUnit-testNormalReadVsVectoredReadStatsCollection[Buffer type : array]] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_write_exceptions_completing_upload=0) (stream_read_vectored_incoming_ranges=5) (multipart_upload_aborted=0) (files_copied=0) (audit_access_check_failure=0) (op_list_status=0) (multipart_instantiated=0) (op_copy_from_local_file.failures=0) (stream_write_total_time=0) (op_exists.failures=0) (object_list_request=0) (stream_write_total_data=0) (stream_read_vectored_read_bytes_discarded=5944) (directories_created=0) (op_is_file.failures=0) (committer_load_single_pending_file=0) (multipart_upload_part_put_bytes=0) (stream_write_exceptions=0) (stream_read_closed=4) (op_get_delegation_token.failures=0) (op_mkdirs=0) (committer_commit_job.failures=0) (committer_stage_file_upload.failures=0) (committer_tasks_completed=0) (fake_directories_created=0) (object_delete_objects=0) (action_file_opened=2) (action_http_head_request=1) (committer_jobs_completed=0) (committer_bytes_uploaded=0) (stream_read_fully_operations=5) (stream_write_queue_duration.failures=0) (action_http_head_request.failures=0) (object_put_request.failures=0) (op_get_file_status.failures=0) (op_get_content_summary.failures=0) (stream_read_seek_operations=4) (op_xattr_list=0) (object_delete_request.failures=0) (object_put_request=0) (stream_read_seek_bytes_discarded=0) (stream_read_seek_bytes_skipped=44957) (op_access.failures=0) (audit_failure=0) (multipart_upload_completed=0) (op_xattr_get_named=0) (multipart_upload_list=0) (op_list_files.failures=0) (stream_read_opened=5) (committer_commits_reverted=0) (op_abort=0) (committer_commits_completed=0) (store_exists_probe.failures=0) (op_exists=0) (committer_materialize_file.failures=0) (stream_read_seek_forward_operations=2) (store_io_retry=0) (stream_write_bytes=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted.failures=0) (committer_magic_marker_put=0) (op_xattr_list.failures=0) (object_metadata_request=1) (delegation_tokens_issued.failures=0) (files_copied_bytes=0) (multipart_upload_part_put=0) (audit_span_creation=4) (delegation_tokens_issued=0) (op_access=0) (object_delete_request=0) (stream_read_unbuffered=0) (object_bulk_delete_request.failures=0) (op_openfile=0) (stream_read_bytes=2848) (committer_commits_created=0) (op_rename=0) (committer_stage_file_upload=0) (op_get_content_summary=0) (stream_read_bytes_backwards_on_seek=14637) (object_continue_list_request=0) (stream_read_bytes_discarded_in_abort=55196) (object_put_request_completed=0) (committer_tasks_failed=0) (files_created=0) (op_xattr_get_named.failures=0) (stream_read_total_bytes=2848) (op_glob_status=0) (op_xattr_get_map.failures=0) (store_exists_probe=0) (stream_read_vectored_combined_ranges=3) (committer_commits.failures=0) (stream_read_seek_backward_operations=2) (multipart_upload_abort_under_path_invoked=0) (action_executor_acquired=0) (committer_jobs_failed=0) (stream_write_block_uploads_aborted=0) (committer_magic_marker_put.failures=0) (files_deleted=0) (op_delete=0) (op_xattr_get_map=0) (op_mkdirs.failures=0) (op_hsync=0) (ignored_errors=0) (op_createfile.failures=0) (action_file_opened.failures=0) (stream_aborted=1) (op_xattr_get_named_map.failures=0) (op_open=2) (op_delete.failures=0) (op_list_files=0) (committer_commits_aborted=0) (op_list_located_status=0) (stream_read_remote_stream_aborted=1) (files_delete_rejected=0) (stream_write_queue_duration=0) (committer_bytes_committed=0) (audit_request_execution=9) (stream_read_vectored_operations=1) (op_copy_from_local_file=0) (op_glob_status.failures=0) (object_continue_list_request.failures=0) (stream_read_operations=5) (action_executor_acquired.failures=0) (object_select_requests=0) (committer_magic_files_created=0) (multipart_upload_list.failures=0) (op_hflush=0) (action_http_get_request.failures=0) (stream_read_operations_incomplete=0) (op_is_directory.failures=0) (op_abort.failures=0) (committer_commit_job=0) (op_create=0) (object_multipart_aborted=0) (op_create_non_recursive=0) (object_list_request.failures=0) (stream_read_close_operations=2) (op_get_delegation_token=0) (object_bulk_delete_request=0) (multipart_upload_started=0) (stream_read_seek_policy_changed=3) (store_io_throttled=0) (action_http_get_request=8) (stream_read_bytes_discarded_in_close=0) (committer_load_single_pending_file.failures=0) (stream_read_exceptions=0) (op_createfile=0) (object_multipart_initiated.failures=0) (op_is_directory=0) (op_list_status.failures=0) (stream_read_remote_stream_drain=4) (committer_materialize_file=0) (op_get_file_checksum=0) (op_get_file_checksum.failures=0) (stream_write_block_uploads=0) (op_is_file=0) (fake_directories_deleted=0) (op_get_file_status=1) (stream_write_block_uploads_committed=0) (store_io_request=9) (stream_read_remote_stream_drain.failures=0) (object_put_bytes=0) (op_create.failures=0) (object_copy_requests=0) (object_multipart_aborted.failures=0) (op_rename.failures=0) (object_multipart_initiated=0) (directories_deleted=0) (op_xattr_get_named_map=0));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_http_get_request.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_commit_job.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_status.min=-1) (action_file_opened.min=0) (object_multipart_aborted.min=-1) (op_is_file.min=-1) (op_delete.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_put_request.failures.min=-1) (object_delete_request.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_drain.min=0) (op_createfile.failures.min=-1) (op_xattr_list.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_map.min=-1) (op_is_directory.min=-1) (op_glob_status.min=-1) (op_abort.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_list.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.min=-1) (committer_load_single_pending_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_file_checksum.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_list_request.min=-1) (committer_stage_file_upload.min=-1) (op_create.failures.min=-1) (op_get_content_summary.min=-1) (object_delete_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.failures.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (committer_materialize_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (object_put_request.min=-1) (stream_read_remote_stream_aborted.min=1) (object_bulk_delete_request.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.min=-1) (committer_commit_job.min=-1) (store_exists_probe.min=-1) (op_createfile.min=-1) (object_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_list_status.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.min=6) (op_get_file_status.min=6) (op_delete.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.failures.min=-1) (action_http_head_request.failures.min=-1) (op_mkdirs.min=-1) (op_exists.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (op_rename.min=-1) (op_rename.failures.min=-1) (action_http_get_request.min=6) (op_list_files.min=-1) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((op_get_file_status.max=6) (op_list_files.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_delete.max=-1) (delegation_tokens_issued.failures.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (multipart_upload_list.max=-1) (op_access.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_materialize_file.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (op_rename.failures.max=-1) (object_delete_request.max=-1) (object_multipart_initiated.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.max=0) (committer_materialize_file.failures.max=-1) (committer_commit_job.failures.max=-1) (committer_commit_job.max=-1) (action_file_opened.max=0) (object_multipart_aborted.failures.max=-1) (op_is_file.max=-1) (op_glob_status.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_exists.failures.max=-1) (op_list_status.max=-1) (committer_load_single_pending_file.max=-1) (object_continue_list_request.max=-1) (store_exists_probe.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (object_list_request.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_write_queue_duration.max=-1) (op_abort.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_list_status.failures.max=-1) (op_mkdirs.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.max=-1) (op_create.max=-1) (op_xattr_get_named_map.max=-1) (op_get_delegation_token.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.max=1) (op_is_directory.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_exists.max=-1) (action_http_head_request.max=6) (op_get_file_checksum.failures.max=-1) (object_bulk_delete_request.max=-1) (op_glob_status.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.max=19) (op_copy_from_local_file.max=-1) (op_create.failures.max=-1) (op_list_files.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.max=-1) (op_is_file.failures.max=-1) (op_delete.failures.max=-1) (op_xattr_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.max=-1) (action_file_opened.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.max=-1));
means=((stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=2, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=1, sum=1, mean=1.0000)) (action_http_get_request.mean=(samples=8, sum=86, mean=10.7500)) (object_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=1, sum=6, mean=6.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:03,242 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:03,242 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,242 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,243 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=194&ts=1731778923242
2024-11-16 17:42:03,245 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,245 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,246 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [194] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=194&ts=1731778923242
2024-11-16 17:42:03,251 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,251 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:03,252 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:03,252 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:03,252 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:03,252 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:03,252 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:03,252 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:03,252 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:03,253 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:03,253 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:03,253 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:03,253 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:03,254 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:03,254 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,254 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [205] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=205&ts=1731778923242
2024-11-16 17:42:03,260 [s3a-transfer-fso-bucket-unbounded-pool2-t35] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,260 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:42:03,260 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:03,260 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:03,261 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:03,261 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923146; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,261 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:03,261 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:03,261 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:03,261 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:03,261 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:03,261 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:03,261 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:03,261 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:03,261 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,261 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,261 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:03,262 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,262 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=82&ts=1731778923242
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,271 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [82] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000145&t0=194&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=82&ts=1731778923242
2024-11-16 17:42:03,280 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:03,280 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.009s
2024-11-16 17:42:03,280 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:42:03,280 [s3a-transfer-fso-bucket-bounded-pool1-t19] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:42:03,280 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:42:03,280 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.028s
2024-11-16 17:42:03,280 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:03,280 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:03,281 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:03,292 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 35, active threads = 0, queued tasks = 0, completed tasks = 35], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_put_bytes=1900544) (op_create.failures=0) (stream_write_block_uploads=29) (audit_request_execution=338) (op_delete.failures=0) (committer_commit_job.failures=0) (committer_load_single_pending_file=0) (store_exists_probe.failures=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_read_close_operations=23) (op_xattr_get_named_map.failures=0) (object_put_request.failures=0) (files_deleted=29) (committer_tasks_failed=0) (stream_read_remote_stream_drain=3) (object_select_requests=0) (files_created=29) (committer_tasks_completed=0) (object_multipart_initiated=0) (op_hsync=0) (op_get_file_checksum=0) (stream_write_exceptions=0) (op_exists=0) (op_xattr_list=0) (action_file_opened=23) (op_createfile=0) (op_is_directory.failures=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_incoming_ranges=58) (op_is_directory=0) (stream_write_queue_duration=0) (stream_read_bytes_discarded_in_close=196008) (object_bulk_delete_request=58) (op_xattr_get_named.failures=0) (multipart_upload_started=0) (object_put_request_completed=58) (op_get_content_summary.failures=0) (committer_bytes_uploaded=0) (multipart_upload_list.failures=0) (op_xattr_get_named_map=0) (files_delete_rejected=0) (op_delete=29) (stream_write_bytes=1900544) (action_http_get_request.failures=0) (store_io_retry=0) (stream_read_operations=3) (op_mkdirs=29) (op_list_located_status=0) (stream_aborted=0) (files_copied_bytes=0) (op_xattr_get_map.failures=0) (op_create=29) (action_http_head_request=81) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (op_rename=0) (committer_stage_file_upload.failures=0) (committer_magic_marker_put=0) (stream_write_block_uploads_committed=0) (op_get_delegation_token.failures=0) (stream_read_remote_stream_drain.failures=0) (audit_failure=0) (stream_read_version_mismatches=0) (op_create_non_recursive=0) (committer_magic_marker_put.failures=0) (object_continue_list_request.failures=0) (action_file_opened.failures=0) (stream_write_exceptions_completing_upload=0) (stream_read_vectored_operations=20) (committer_commits_completed=0) (committer_materialize_file.failures=0) (fake_directories_created=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_discarded=0) (op_openfile=0) (action_http_head_request.failures=0) (committer_magic_files_created=0) (op_open=23) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (op_list_status.failures=0) (stream_read_seek_backward_operations=0) (object_bulk_delete_request.failures=0) (committer_materialize_file=0) (directories_created=29) (stream_read_seek_forward_operations=0) (op_mkdirs.failures=0) (committer_commits.failures=0) (object_delete_request=0) (object_delete_request.failures=0) (ignored_errors=0) (stream_read_seek_policy_changed=25) (store_io_throttled=0) (op_copy_from_local_file.failures=0) (stream_read_seek_operations=0) (object_list_request.failures=0) (object_copy_requests=0) (op_get_file_checksum.failures=0) (op_xattr_get_named=0) (op_xattr_list.failures=0) (stream_read_opened=3) (op_get_file_status.failures=0) (stream_write_total_data=3801088) (stream_read_unbuffered=2) (op_is_file=0) (stream_read_fully_operations=1) (op_list_status=0) (store_exists_probe=0) (op_exists.failures=0) (stream_write_queue_duration.failures=0) (committer_bytes_committed=0) (op_createfile.failures=0) (op_is_file.failures=0) (op_xattr_get_map=0) (committer_jobs_completed=0) (multipart_upload_aborted=0) (delegation_tokens_issued.failures=0) (action_http_get_request=25) (op_glob_status.failures=0) (op_get_file_status=1) (op_access=0) (committer_commit_job=0) (stream_read_closed=3) (op_get_delegation_token=0) (audit_access_check_failure=0) (op_abort.failures=0) (delegation_tokens_issued=0) (multipart_upload_list=0) (multipart_upload_completed=0) (op_access.failures=0) (store_io_request=338) (object_metadata_request=81) (multipart_upload_part_put_bytes=0) (audit_span_creation=112) (committer_commits_reverted=0) (stream_read_vectored_combined_ranges=25) (object_multipart_initiated.failures=0) (directories_deleted=0) (files_copied=0) (stream_write_total_time=0) (action_executor_acquired=0) (multipart_upload_abort_under_path_invoked=0) (committer_commits_aborted=0) (stream_read_bytes=6963) (op_hflush=0) (committer_commits_created=0) (committer_jobs_failed=0) (stream_write_block_uploads_aborted=0) (object_multipart_aborted=0) (committer_stage_file_upload=0) (op_copy_from_local_file=0) (stream_read_bytes_discarded_in_abort=0) (op_abort=0) (object_multipart_aborted.failures=0) (op_get_content_summary=0) (multipart_instantiated=0) (op_list_files.failures=0) (stream_read_operations_incomplete=0) (fake_directories_deleted=29) (op_glob_status=0) (op_rename.failures=0) (stream_read_total_bytes=202971) (op_list_files=0) (object_put_request=58) (object_list_request=116) (object_delete_objects=58) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=24543));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_pending=29) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0));
minimums=((committer_magic_marker_put.failures.min=-1) (op_mkdirs.failures.min=-1) (object_list_request.failures.min=-1) (action_file_opened.min=4) (op_exists.failures.min=-1) (op_get_file_status.min=6) (object_multipart_aborted.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (action_http_head_request.min=2) (action_executor_acquired.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_rename.failures.min=-1) (stream_write_queue_duration.min=-1) (op_xattr_list.min=-1) (object_delete_request.failures.min=-1) (op_create.min=7) (action_http_get_request.min=7) (op_access.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_delete.min=27) (op_exists.min=-1) (op_get_file_checksum.failures.min=-1) (object_continue_list_request.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_list.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.min=16) (action_http_get_request.failures.min=-1) (multipart_upload_list.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_map.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.min=-1) (multipart_upload_list.failures.min=-1) (op_access.failures.min=-1) (op_xattr_get_named.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_abort.failures.min=-1) (op_create.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.min=-1) (committer_magic_marker_put.min=-1) (committer_commit_job.failures.min=-1) (action_http_head_request.failures.min=-1) (op_glob_status.min=-1) (op_abort.min=-1) (op_xattr_get_named.failures.min=-1) (op_is_file.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_status.failures.min=-1) (object_bulk_delete_request.min=7) (op_glob_status.failures.min=-1) (op_is_directory.min=-1) (op_copy_from_local_file.min=-1) (op_rename.min=-1) (op_delete.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.min=-1) (object_list_request.min=5) (delegation_tokens_issued.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=10) (object_delete_request.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_get_named_map.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_createfile.failures.min=-1) (object_put_request.min=29));
maximums=((op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_create.failures.max=-1) (op_list_files.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.max=-1) (object_put_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_get_file_checksum.max=-1) (object_delete_request.max=-1) (op_get_file_status.max=6) (object_bulk_delete_request.max=26) (op_is_file.failures.max=-1) (op_access.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_magic_marker_put.max=-1) (op_abort.failures.max=-1) (store_exists_probe.max=-1) (op_list_status.max=-1) (op_rename.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_list_status.failures.max=-1) (op_exists.max=-1) (op_access.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=13) (op_get_file_status.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_materialize_file.max=-1) (op_createfile.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.max=-1) (object_multipart_aborted.failures.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=10) (committer_stage_file_upload.failures.max=-1) (op_abort.max=-1) (op_xattr_get_map.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (object_continue_list_request.failures.max=-1) (op_is_directory.failures.max=-1) (action_http_get_request.max=28) (action_http_head_request.max=21) (action_http_get_request.failures.max=-1) (op_xattr_list.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_delete.max=87) (op_list_files.max=-1) (op_mkdirs.max=300) (op_xattr_get_map.max=-1) (op_glob_status.max=-1) (multipart_upload_list.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_continue_list_request.max=-1) (op_xattr_get_named_map.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_list_request.max=185) (store_exists_probe.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_exists.failures.max=-1) (object_multipart_initiated.max=-1) (op_get_content_summary.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named.max=-1) (op_rename.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_delete.failures.max=-1) (op_createfile.max=-1) (action_executor_acquired.failures.max=-1) (op_create.max=62) (op_mkdirs.failures.max=-1) (op_is_directory.max=-1) (op_xattr_list.failures.max=-1) (op_get_delegation_token.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.max=77));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=29, sum=1051, mean=36.2414)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=23, sum=137, mean=5.9565)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=58, sum=703, mean=12.1207)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=81, sum=416, mean=5.1358)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=24, sum=371, mean=15.4583)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=58, sum=1434, mean=24.7241)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=29, sum=383, mean=13.2069)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=3, sum=11, mean=3.6667)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=116, sum=1290, mean=11.1207)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=29, sum=1300, mean=44.8276)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:03,293 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:03,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,293 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,293 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923293
2024-11-16 17:42:03,300 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:03,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,300 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,301 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923293
2024-11-16 17:42:03,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,303 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:03,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:03,303 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:03,304 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000146&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923293
2024-11-16 17:42:03,312 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:03,312 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:03,312 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:03,312 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:03,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,313 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,313 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,313 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000147 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000147&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923312
2024-11-16 17:42:03,319 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,319 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,320 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:03,320 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7462853658957554083.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:03,321 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7462853658957554083.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (object_put_request=0) (op_hflush=0) (op_hsync=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (op_abort=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_put_request.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7462853658957554083.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,321 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,321 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:03,321 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7462853658957554083.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:03,321 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:03,322 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:03,322 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:03,322 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:03,322 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [84] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000147 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000147/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000147&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=84&ts=1731778923312
2024-11-16 17:42:03,348 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:03,348 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:03,348 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:42:03,349 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7462853658957554083.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:03,350 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7462853658957554083.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,350 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-7462853658957554083.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,350 [s3a-transfer-fso-bucket-bounded-pool1-t20] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:03,350 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,351 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (object_multipart_initiated=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (stream_write_total_time=0) (op_abort=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (object_put_request=1) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (stream_write_exceptions_completing_upload=0) (stream_write_total_data=65536) (op_hsync=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_put_request.min=26) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=26) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=26, mean=26.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:03,351 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:03,352 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,352 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,352 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:03,352 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923351
2024-11-16 17:42:03,355 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:03,356 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:03,356 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,356 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:03,356 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:03,356 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:03,356 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:03,356 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,356 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,356 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,356 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:03,357 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [87] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=87&ts=1731778923351
2024-11-16 17:42:03,357 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:42:03,357 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,358 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-65535&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000148&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923351
2024-11-16 17:42:03,365 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.009s
2024-11-16 17:42:03,366 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:03,366 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:42:03,366 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:03,366 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:03,366 [s3a-transfer-fso-bucket-bounded-pool1-t21] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7442 bytes
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8742 bytes
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:42:03,367 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:03,368 [JUnit-testNormalReadAfterVectoredRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes=350) (stream_read_vectored_incoming_ranges=2) (stream_read_fully_operations=0) (stream_read_close_operations=1) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_closed=1) (stream_read_prefetch_operations.failures=0) (stream_read_version_mismatches=0) (stream_read_unbuffered=0) (stream_read_vectored_operations=1) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_block_acquire_read.failures=0) (stream_read_opened=1) (action_file_opened=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_operations=1) (action_executor_acquired=0) (action_http_get_request=2) (stream_read_seek_bytes_skipped=0) (stream_read_block_read=0) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_total_bytes=65686) (stream_read_remote_stream_drain=1) (stream_read_prefetch_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_prefetch_operations.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=7) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=0) (action_executor_acquired.failures.min=-1) (action_file_opened.min=4) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.max=10) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=4) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=0) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=17, mean=8.5000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)));

2024-11-16 17:42:03,369 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:03,369 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,369 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,370 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923369
2024-11-16 17:42:03,375 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,375 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,375 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [206] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=206&ts=1731778923369
2024-11-16 17:42:03,385 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:03,386 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:03,386 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:03,386 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:03,386 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:03,386 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:03,386 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:03,387 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:03,387 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:03,387 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:03,387 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:03,387 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:03,388 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:03,388 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:03,388 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,388 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [207] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=207&ts=1731778923369
2024-11-16 17:42:03,400 [s3a-transfer-fso-bucket-unbounded-pool2-t36] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:42:03,401 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.013s
2024-11-16 17:42:03,401 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:03,401 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:03,401 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:03,401 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923344; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,401 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:03,401 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:03,401 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:03,402 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:03,402 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,402 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=89&ts=1731778923369
2024-11-16 17:42:03,410 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:03,410 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:03,410 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:03,410 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:03,410 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:03,410 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,411 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,411 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:03,411 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,411 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [89] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000149&t0=206&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=89&ts=1731778923369
2024-11-16 17:42:03,417 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:42:03,418 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:03,418 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:42:03,418 [s3a-transfer-fso-bucket-bounded-pool1-t22] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.016s
2024-11-16 17:42:03,418 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:42:03,418 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.031s
2024-11-16 17:42:03,418 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:03,418 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:03,420 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:03,431 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 36, active threads = 0, queued tasks = 0, completed tasks = 36], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_content_summary.failures=0) (audit_request_execution=351) (op_access=0) (op_xattr_list.failures=0) (committer_materialize_file=0) (action_http_get_request.failures=0) (object_metadata_request=84) (op_xattr_get_named_map.failures=0) (committer_commits_completed=0) (stream_read_fully_operations=1) (op_delete.failures=0) (store_io_throttled=0) (fake_directories_deleted=30) (op_createfile.failures=0) (files_created=30) (delegation_tokens_issued.failures=0) (store_io_request=351) (stream_write_total_time=0) (op_xattr_get_map.failures=0) (op_hsync=0) (committer_magic_files_created=0) (directories_created=30) (op_list_status=0) (op_get_file_checksum=0) (stream_read_operations=4) (op_list_files.failures=0) (stream_read_opened=4) (object_continue_list_request.failures=0) (object_bulk_delete_request.failures=0) (committer_commits_reverted=0) (committer_stage_file_upload=0) (committer_commits.failures=0) (op_glob_status.failures=0) (stream_read_total_bytes=268657) (op_rename.failures=0) (object_continue_list_request=0) (stream_read_version_mismatches=0) (files_deleted=30) (stream_read_remote_stream_aborted.failures=0) (op_is_directory.failures=0) (op_abort.failures=0) (stream_read_exceptions=0) (directories_deleted=0) (committer_load_single_pending_file.failures=0) (op_hflush=0) (object_bulk_delete_request=60) (stream_read_seek_backward_operations=0) (stream_write_queue_duration.failures=0) (stream_read_seek_forward_operations=0) (op_access.failures=0) (files_delete_rejected=0) (stream_read_vectored_combined_ranges=26) (store_exists_probe.failures=0) (object_put_request_completed=60) (object_put_request.failures=0) (object_list_request=120) (delegation_tokens_issued=0) (committer_tasks_failed=0) (op_is_directory=0) (multipart_upload_started=0) (op_get_delegation_token.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (op_list_located_status=0) (op_openfile=0) (store_io_retry=0) (committer_commit_job.failures=0) (stream_read_vectored_operations=21) (stream_write_block_uploads=30) (action_file_opened.failures=0) (op_glob_status=0) (stream_read_bytes_discarded_in_close=261344) (object_delete_objects=60) (stream_read_operations_incomplete=0) (op_xattr_get_named.failures=0) (stream_read_unbuffered=2) (stream_write_exceptions_completing_upload=0) (op_get_file_status.failures=0) (op_createfile=0) (object_multipart_initiated.failures=0) (op_rename=0) (stream_read_bytes=7313) (object_select_requests=0) (files_copied_bytes=0) (op_get_content_summary=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (committer_commit_job=0) (committer_commits_created=0) (committer_magic_marker_put.failures=0) (stream_read_closed=4) (multipart_upload_part_put=0) (stream_write_bytes=1966080) (multipart_upload_list.failures=0) (action_http_head_request.failures=0) (object_list_request.failures=0) (stream_read_vectored_read_bytes_discarded=24553) (files_copied=0) (object_put_bytes=1966080) (fake_directories_created=0) (op_get_file_checksum.failures=0) (multipart_instantiated=0) (multipart_upload_completed=0) (op_is_file=0) (committer_jobs_failed=0) (stream_write_block_uploads_aborted=0) (stream_read_bytes_backwards_on_seek=0) (op_list_files=0) (stream_read_vectored_incoming_ranges=60) (stream_write_total_data=3932160) (object_put_request=60) (op_xattr_list=0) (committer_stage_file_upload.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_http_head_request=84) (stream_write_exceptions=0) (stream_read_remote_stream_drain=4) (op_create_non_recursive=0) (op_open=24) (committer_magic_marker_put=0) (action_executor_acquired=0) (stream_read_seek_bytes_discarded=0) (op_create.failures=0) (object_delete_request=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_close_operations=24) (object_copy_requests=0) (committer_tasks_completed=0) (op_mkdirs=30) (op_get_delegation_token=0) (committer_commits_aborted=0) (object_multipart_aborted.failures=0) (committer_materialize_file.failures=0) (action_http_get_request=27) (op_create=30) (multipart_upload_aborted=0) (multipart_upload_list=0) (audit_access_check_failure=0) (op_is_file.failures=0) (audit_span_creation=116) (audit_failure=0) (op_exists=0) (committer_bytes_uploaded=0) (op_abort=0) (action_file_opened=24) (object_multipart_initiated=0) (op_xattr_get_map=0) (stream_write_queue_duration=0) (stream_read_seek_bytes_skipped=0) (store_exists_probe=0) (committer_bytes_committed=0) (stream_aborted=0) (op_get_file_status=1) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file=0) (op_mkdirs.failures=0) (op_delete=30) (stream_read_remote_stream_aborted=0) (object_delete_request.failures=0) (op_copy_from_local_file=0) (op_xattr_get_named_map=0) (ignored_errors=0) (committer_jobs_completed=0) (op_list_status.failures=0) (multipart_upload_part_put_bytes=0) (op_exists.failures=0) (stream_read_seek_policy_changed=26) (op_xattr_get_named=0) (stream_write_block_uploads_committed=0));
gauges=((stream_write_block_uploads_pending=30) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((object_put_request.failures.min=-1) (committer_materialize_file.min=-1) (op_createfile.failures.min=-1) (action_file_opened.min=4) (committer_load_single_pending_file.failures.min=-1) (op_createfile.min=-1) (op_get_delegation_token.min=-1) (action_executor_acquired.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_list.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_status.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.min=-1) (object_multipart_initiated.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.min=0) (op_rename.failures.min=-1) (op_delete.min=27) (object_bulk_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_abort.failures.min=-1) (op_create.min=7) (op_list_files.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (object_delete_request.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.min=-1) (op_is_directory.min=-1) (op_get_file_status.failures.min=-1) (object_delete_request.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.min=-1) (committer_load_single_pending_file.min=-1) (action_http_head_request.min=2) (op_xattr_get_named_map.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.min=26) (committer_stage_file_upload.failures.min=-1) (op_glob_status.min=-1) (op_is_directory.failures.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_get_request.min=7) (committer_commit_job.min=-1) (op_rename.min=-1) (delegation_tokens_issued.failures.min=-1) (op_create.failures.min=-1) (op_delete.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (object_bulk_delete_request.min=6) (object_list_request.min=5) (object_list_request.failures.min=-1) (op_access.min=-1) (committer_magic_marker_put.min=-1) (action_http_head_request.failures.min=-1) (op_access.failures.min=-1) (op_list_status.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.failures.min=-1) (object_continue_list_request.failures.min=-1) (committer_stage_file_upload.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_get_delegation_token.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_list.min=-1) (op_xattr_get_map.min=-1) (op_get_file_status.min=6) (op_mkdirs.min=16) (op_mkdirs.failures.min=-1) (op_list_files.min=-1) (op_get_file_checksum.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((op_exists.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_get_file_status.max=6) (object_list_request.max=185) (op_mkdirs.max=300) (stream_write_queue_duration.failures.max=-1) (committer_stage_file_upload.max=-1) (op_createfile.failures.max=-1) (op_is_directory.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.max=21) (committer_load_single_pending_file.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_is_file.failures.max=-1) (op_copy_from_local_file.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_map.max=-1) (op_get_content_summary.failures.max=-1) (op_delete.max=87) (op_xattr_get_named_map.failures.max=-1) (op_list_files.max=-1) (op_create.max=62) (store_exists_probe.failures.max=-1) (op_access.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_create.failures.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_is_file.max=-1) (op_rename.failures.max=-1) (op_delete.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (action_http_get_request.max=28) (object_put_request.max=77) (op_list_files.failures.max=-1) (multipart_upload_list.failures.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named_map.max=-1) (op_is_directory.max=-1) (action_file_opened.max=13) (object_delete_request.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.max=-1) (committer_commit_job.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (op_exists.failures.max=-1) (op_abort.max=-1) (op_get_file_status.failures.max=-1) (op_rename.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_access.max=-1) (op_get_delegation_token.max=-1) (op_glob_status.failures.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.max=26) (committer_materialize_file.max=-1) (op_get_delegation_token.failures.max=-1) (stream_write_queue_duration.max=-1) (op_createfile.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (op_get_file_checksum.max=-1) (op_list_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_read_remote_stream_drain.max=10) (op_glob_status.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_xattr_list.failures.max=-1) (op_list_status.max=-1) (object_delete_request.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.failures.max=-1) (multipart_upload_list.max=-1) (object_list_request.failures.max=-1));
means=((op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=120, sum=1325, mean=11.0417)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=60, sum=1468, mean=24.4667)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=26, sum=388, mean=14.9231)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=84, sum=428, mean=5.0952)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=24, sum=141, mean=5.8750)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=30, sum=1332, mean=44.4000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=30, sum=1070, mean=35.6667)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=30, sum=390, mean=13.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=60, sum=717, mean=11.9500)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=11, mean=2.7500)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:03,431 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:03,432 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,432 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,432 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,432 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,432 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=208&ts=1731778923431
2024-11-16 17:42:03,438 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,439 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=208&ts=1731778923431
2024-11-16 17:42:03,441 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,441 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:03,441 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:03,442 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:03,442 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000150&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=208&ts=1731778923431
2024-11-16 17:42:03,447 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:03,447 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:03,448 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:42:03,448 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:03,448 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,449 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,449 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,449 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,449 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000151 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000151&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=208&ts=1731778923448
2024-11-16 17:42:03,454 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:03,454 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,454 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:03,455 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5744956328850776525.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:03,456 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5744956328850776525.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (stream_write_queue_duration=0) (op_abort.failures=0) (action_executor_acquired.failures=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (object_put_request=0) (object_multipart_aborted=0) (op_abort=0) (object_multipart_initiated=0) (action_executor_acquired=0) (op_hsync=0) (object_multipart_aborted.failures=0) (object_put_request.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=0) (op_hflush=0) (stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5744956328850776525.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,456 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,456 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:03,456 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5744956328850776525.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:03,466 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:03,467 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:03,467 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:03,467 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [90] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000151 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000151/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000151&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=90&ts=1731778923448
2024-11-16 17:42:03,469 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:03,520 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:03,520 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:03,520 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.054s
2024-11-16 17:42:03,522 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5744956328850776525.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:03,522 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5744956328850776525.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,522 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5744956328850776525.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,523 [s3a-transfer-fso-bucket-bounded-pool1-t23] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:03,523 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,523 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (op_hsync=0) (action_executor_acquired=0) (object_put_request.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=65536) (op_abort=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (object_put_request=1) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=53) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=53) (op_abort.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=53, mean=53.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:03,524 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:03,525 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,526 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,526 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:03,527 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [209] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000152 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000152/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000152&t0=209&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=209&ts=1731778923525
2024-11-16 17:42:03,531 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:03,531 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:03,532 [s3a-transfer-fso-bucket-unbounded-pool2-t37] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,532 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,-50)] 
2024-11-16 17:42:03,533 [JUnit-testNegativeLengthRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read.failures=0) (stream_read_opened=0) (stream_read_seek_policy_changed=1) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (stream_read_bytes=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=0) (action_http_get_request=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (action_file_opened.failures=0) (stream_read_remote_stream_drain=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_closed=0) (action_file_opened=1) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_total_bytes=0) (stream_read_block_read=0) (stream_read_remote_stream_aborted=0) (stream_read_close_operations=1) (stream_read_seek_bytes_discarded=0) (stream_aborted=0) (stream_read_prefetch_operations=0) (stream_read_operations=0) (stream_read_seek_forward_operations=0) (stream_read_fully_operations=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=6));
maximums=((stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=6) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:03,538 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:03,538 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,538 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,538 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=208&ts=1731778923538
2024-11-16 17:42:03,542 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,542 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,543 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [208] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=208&ts=1731778923538
2024-11-16 17:42:03,551 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:03,552 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:03,552 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:03,552 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:03,552 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:03,552 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:03,552 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:03,552 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:03,553 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:03,553 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:03,553 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:03,553 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:03,553 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:03,554 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:03,554 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,554 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [210] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=210&ts=1731778923538
2024-11-16 17:42:03,561 [s3a-transfer-fso-bucket-unbounded-pool2-t38] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:03,561 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:03,561 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:03,561 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:03,562 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:03,562 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923516; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,562 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:03,562 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:03,562 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:03,563 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,563 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=92&ts=1731778923538
2024-11-16 17:42:03,564 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,571 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [92] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000153&t0=208&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=92&ts=1731778923538
2024-11-16 17:42:03,582 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:03,582 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:03,582 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:03,582 [s3a-transfer-fso-bucket-bounded-pool1-t24] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:42:03,583 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:42:03,583 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:42:03,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:03,583 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:03,585 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:03,598 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 38, active threads = 0, queued tasks = 0, completed tasks = 38], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_seek_operations=0) (op_get_file_checksum.failures=0) (op_access.failures=0) (action_http_head_request=87) (multipart_upload_abort_under_path_invoked=0) (object_bulk_delete_request.failures=0) (op_abort.failures=0) (delegation_tokens_issued.failures=0) (action_http_head_request.failures=0) (stream_aborted=0) (committer_materialize_file.failures=0) (stream_read_operations=4) (stream_read_seek_backward_operations=0) (committer_commits_aborted=0) (stream_read_closed=4) (files_delete_rejected=0) (op_xattr_list=0) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (store_io_retry=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=7313) (object_select_requests=0) (action_file_opened.failures=0) (op_access=0) (op_list_status=0) (committer_commits_completed=0) (op_list_status.failures=0) (op_get_delegation_token=0) (op_is_directory=0) (delegation_tokens_issued=0) (stream_read_seek_forward_operations=0) (committer_stage_file_upload.failures=0) (committer_commits_created=0) (stream_read_seek_bytes_discarded=0) (object_list_request.failures=0) (object_continue_list_request.failures=0) (op_exists=0) (object_copy_requests=0) (multipart_upload_completed=0) (op_get_delegation_token.failures=0) (files_deleted=31) (op_glob_status=0) (op_get_content_summary.failures=0) (object_put_bytes=2031616) (object_put_request=62) (committer_bytes_uploaded=0) (op_openfile=0) (op_xattr_get_map=0) (stream_read_seek_policy_changed=27) (committer_tasks_failed=0) (audit_failure=0) (op_mkdirs.failures=0) (op_mkdirs=31) (stream_write_queue_duration=0) (committer_magic_marker_put=0) (multipart_upload_started=0) (store_exists_probe.failures=0) (object_continue_list_request=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named=0) (stream_write_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (committer_materialize_file=0) (op_hflush=0) (op_copy_from_local_file.failures=0) (op_xattr_get_named.failures=0) (object_list_request=124) (multipart_upload_list.failures=0) (op_rename.failures=0) (action_executor_acquired=0) (object_metadata_request=87) (audit_span_creation=120) (object_delete_request=0) (op_delete.failures=0) (op_createfile.failures=0) (stream_read_vectored_incoming_ranges=60) (object_put_request.failures=0) (object_delete_request.failures=0) (op_glob_status.failures=0) (op_get_file_status.failures=0) (op_create_non_recursive=0) (committer_commits.failures=0) (stream_read_total_bytes=268657) (op_exists.failures=0) (stream_read_remote_stream_drain=4) (committer_load_single_pending_file=0) (object_multipart_initiated.failures=0) (stream_write_queue_duration.failures=0) (store_io_throttled=0) (stream_read_remote_stream_aborted.failures=0) (committer_tasks_completed=0) (object_bulk_delete_request=62) (stream_write_total_data=4063232) (fake_directories_deleted=31) (stream_read_vectored_combined_ranges=26) (op_createfile=0) (op_xattr_get_named_map.failures=0) (op_xattr_get_named_map=0) (committer_magic_files_created=0) (multipart_upload_part_put_bytes=0) (op_rename=0) (committer_commits_reverted=0) (stream_write_exceptions_completing_upload=0) (action_http_get_request.failures=0) (committer_stage_file_upload=0) (op_xattr_list.failures=0) (op_list_files=0) (stream_read_fully_operations=1) (stream_read_vectored_operations=21) (files_copied=0) (committer_jobs_failed=0) (object_delete_objects=62) (stream_write_bytes=2031616) (stream_read_unbuffered=2) (object_multipart_initiated=0) (op_list_located_status=0) (stream_write_block_uploads=31) (committer_commit_job=0) (op_copy_from_local_file=0) (multipart_upload_aborted=0) (stream_read_operations_incomplete=0) (committer_commit_job.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_get_content_summary=0) (object_multipart_aborted.failures=0) (stream_read_bytes_discarded_in_close=261344) (fake_directories_created=0) (audit_access_check_failure=0) (multipart_upload_part_put=0) (files_copied_bytes=0) (op_get_file_status=1) (committer_load_single_pending_file.failures=0) (object_multipart_aborted=0) (op_hsync=0) (op_list_files.failures=0) (stream_read_close_operations=25) (directories_deleted=0) (multipart_instantiated=0) (stream_read_seek_bytes_skipped=0) (op_is_directory.failures=0) (ignored_errors=0) (object_put_request_completed=62) (committer_bytes_committed=0) (stream_read_opened=4) (action_http_get_request=27) (op_is_file=0) (op_get_file_checksum=0) (committer_jobs_completed=0) (store_io_request=362) (op_open=25) (committer_magic_marker_put.failures=0) (op_create=31) (multipart_upload_list=0) (directories_created=31) (op_is_file.failures=0) (store_exists_probe=0) (files_created=31) (stream_read_version_mismatches=0) (audit_request_execution=362) (action_file_opened=25) (op_xattr_get_map.failures=0) (op_create.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_read_bytes_discarded=24553) (op_abort=0) (op_delete=31) (stream_write_total_time=0));
gauges=((client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=31));
minimums=((op_rename.min=-1) (object_put_request.min=53) (object_list_request.failures.min=-1) (object_list_request.min=5) (op_get_file_checksum.failures.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=7) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.failures.min=-1) (object_put_request.failures.min=-1) (op_access.min=-1) (op_createfile.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_executor_acquired.min=-1) (op_glob_status.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_materialize_file.failures.min=-1) (action_http_get_request.failures.min=-1) (op_delete.min=27) (op_xattr_get_map.min=-1) (op_rename.failures.min=-1) (op_list_status.failures.min=-1) (op_is_file.failures.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.min=16) (action_file_opened.min=6) (stream_write_queue_duration.min=-1) (object_continue_list_request.min=-1) (op_create.min=7) (store_exists_probe.min=-1) (delegation_tokens_issued.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_xattr_get_named.min=-1) (op_get_file_status.min=6) (op_abort.failures.min=-1) (op_glob_status.min=-1) (op_createfile.min=-1) (multipart_upload_list.failures.min=-1) (object_multipart_initiated.min=-1) (op_list_status.min=-1) (op_is_directory.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (object_bulk_delete_request.min=6) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (op_delete.failures.min=-1) (op_get_delegation_token.min=-1) (action_http_head_request.min=2) (op_get_file_checksum.min=-1) (op_copy_from_local_file.failures.min=-1) (op_list_files.failures.min=-1) (stream_read_remote_stream_drain.min=0) (store_exists_probe.failures.min=-1) (op_list_files.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_delegation_token.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_is_directory.min=-1) (op_abort.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_copy_from_local_file.min=-1) (op_xattr_get_named_map.min=-1) (op_is_file.min=-1) (stream_write_queue_duration.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.failures.min=-1) (multipart_upload_list.min=-1) (committer_stage_file_upload.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_create.failures.min=-1) (object_multipart_aborted.min=-1) (op_get_content_summary.min=-1) (object_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_access.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_list.failures.min=-1));
maximums=((op_abort.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.max=-1) (object_delete_request.max=-1) (op_xattr_get_named_map.max=-1) (op_abort.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_get_delegation_token.max=-1) (op_copy_from_local_file.failures.max=-1) (op_is_file.failures.max=-1) (op_mkdirs.max=300) (object_list_request.max=185) (op_list_status.failures.max=-1) (object_delete_request.failures.max=-1) (object_put_request.max=77) (op_xattr_get_named.failures.max=-1) (op_xattr_get_named.max=-1) (op_xattr_list.max=-1) (object_continue_list_request.max=-1) (op_list_status.max=-1) (object_list_request.failures.max=-1) (action_http_get_request.max=28) (object_continue_list_request.failures.max=-1) (op_access.failures.max=-1) (committer_commit_job.max=-1) (delegation_tokens_issued.max=-1) (op_is_file.max=-1) (committer_materialize_file.max=-1) (op_get_file_status.max=6) (op_create.max=62) (committer_stage_file_upload.failures.max=-1) (op_create.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.failures.max=-1) (action_executor_acquired.failures.max=-1) (store_exists_probe.max=-1) (action_http_head_request.max=21) (committer_magic_marker_put.max=-1) (op_delete.max=87) (action_executor_acquired.max=-1) (action_http_head_request.failures.max=-1) (object_bulk_delete_request.max=26) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_map.max=-1) (op_is_directory.failures.max=-1) (op_rename.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.max=10) (multipart_upload_list.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_file_opened.failures.max=-1) (store_exists_probe.failures.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.failures.max=-1) (committer_commit_job.failures.max=-1) (multipart_upload_list.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_rename.max=-1) (action_http_get_request.failures.max=-1) (op_exists.failures.max=-1) (op_copy_from_local_file.max=-1) (op_access.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.max=-1) (op_exists.max=-1) (op_delete.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (committer_stage_file_upload.max=-1) (object_put_request.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.max=-1) (op_glob_status.max=-1) (committer_load_single_pending_file.failures.max=-1) (action_file_opened.max=13) (delegation_tokens_issued.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_createfile.failures.max=-1));
means=((op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=25, sum=147, mean=5.8800)) (object_bulk_delete_request.mean=(samples=62, sum=736, mean=11.8710)) (action_http_head_request.mean=(samples=87, sum=440, mean=5.0575)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=124, sum=1351, mean=10.8952)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=62, sum=1526, mean=24.6129)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=11, mean=2.7500)) (op_delete.mean=(samples=31, sum=1363, mean=43.9677)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=31, sum=1087, mean=35.0645)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=26, sum=388, mean=14.9231)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=31, sum=397, mean=12.8065)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:03,598 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:03,599 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,599 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,599 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,599 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,600 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=211&ts=1731778923598
2024-11-16 17:42:03,611 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:42:03,611 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,611 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,611 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,612 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,612 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=211&ts=1731778923598
2024-11-16 17:42:03,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,616 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:03,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:03,616 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:03,617 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000154&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=211&ts=1731778923598
2024-11-16 17:42:03,631 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:03,632 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:03,632 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.016s
2024-11-16 17:42:03,632 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:03,632 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,633 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,633 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,633 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000155 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000155&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=211&ts=1731778923632
2024-11-16 17:42:03,643 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:03,643 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,643 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:03,644 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17592469637841225152.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:03,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17592469637841225152.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((committer_magic_marker_put.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (op_abort.failures=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_total_data=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (op_abort=0) (committer_magic_marker_put=0) (stream_write_block_uploads=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_multipart_initiated.failures=0) (op_hflush=0) (action_executor_acquired.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (op_abort.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17592469637841225152.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,645 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,645 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:03,645 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17592469637841225152.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:03,646 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:03,649 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:03,649 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:03,649 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:03,649 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [94] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000155 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000155/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000155&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=94&ts=1731778923632
2024-11-16 17:42:03,713 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:03,713 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:03,713 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.064s
2024-11-16 17:42:03,714 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17592469637841225152.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:03,714 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17592469637841225152.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,714 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-17592469637841225152.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,714 [s3a-transfer-fso-bucket-bounded-pool1-t25] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:03,714 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,716 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (multipart_upload_part_put.failures=0) (op_abort=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (multipart_upload_completed=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (stream_write_bytes=65536) (stream_write_block_uploads=1) (stream_write_exceptions=0) (stream_write_queue_duration=0) (object_put_request=1) (object_multipart_aborted.failures=0) (stream_write_total_data=65536) (op_abort.failures=0) (op_hflush=0) (op_hsync=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=64) (committer_magic_marker_put.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=64) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=64, mean=64.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:03,716 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:03,717 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,717 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,718 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:03,718 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000156 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000156&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=211&ts=1731778923717
2024-11-16 17:42:03,727 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:03,727 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:03,727 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,728 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:42:03,728 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:03,728 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 10 , Number of combined ranges 1 
2024-11-16 17:42:03,728 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[100,200), range[200,300), range[300,400), range[400,500), range[500,600), range[600,700), range[700,800), range[800,900), range[900,1000)] 
2024-11-16 17:42:03,728 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,728 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,728 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,729 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [96] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000156 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=999, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000156/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-999&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000156&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=96&ts=1731778923717
2024-11-16 17:42:03,741 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:42:03,741 [s3a-transfer-fso-bucket-bounded-pool1-t26] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,1000) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,744 [JUnit-testVectoredReadMultipleRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes_discarded_in_abort=0) (stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=0) (action_executor_acquired=0) (stream_read_closed=0) (stream_read_seek_bytes_discarded=0) (stream_read_remote_stream_drain.failures=0) (stream_read_unbuffered=0) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_block_read.failures=0) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (stream_read_seek_policy_changed=1) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_read_block_read=0) (stream_read_fully_operations=0) (stream_read_operations=0) (stream_read_bytes=1000) (action_executor_acquired.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_total_bytes=1000) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (action_http_get_request=1) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_opened=0) (stream_read_vectored_incoming_ranges=10) (action_file_opened=1) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_operations_incomplete=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=10) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.min=13) (stream_read_block_read.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=10) (action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=13) (stream_read_prefetch_operations.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=10, mean=10.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=13, mean=13.0000)));

2024-11-16 17:42:03,745 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:03,745 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,745 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,745 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=211&ts=1731778923744
2024-11-16 17:42:03,748 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,749 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,749 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [211] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=211&ts=1731778923744
2024-11-16 17:42:03,755 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,755 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:03,755 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:03,755 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:03,755 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:03,756 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:03,756 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:03,756 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:03,756 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:03,756 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:03,756 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:03,756 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:03,757 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:03,757 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:03,757 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,757 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [212] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=212&ts=1731778923744
2024-11-16 17:42:03,766 [s3a-transfer-fso-bucket-unbounded-pool2-t39] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:03,767 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:42:03,767 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:03,767 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:03,767 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:03,767 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923704; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,767 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:03,767 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:03,767 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:03,767 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:03,767 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:03,767 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:03,767 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:03,767 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:03,767 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,767 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,768 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:03,768 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,768 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=98&ts=1731778923744
2024-11-16 17:42:03,775 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:03,775 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:03,775 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:03,776 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:03,776 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:03,776 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,776 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,776 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:03,776 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,776 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [98] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000157&t0=211&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=98&ts=1731778923744
2024-11-16 17:42:03,785 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:03,786 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:03,786 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.010s
2024-11-16 17:42:03,786 [s3a-transfer-fso-bucket-bounded-pool1-t28] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:42:03,786 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:42:03,786 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.030s
2024-11-16 17:42:03,786 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:03,786 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:03,788 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:03,799 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 39, active threads = 0, queued tasks = 0, completed tasks = 39], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_aborted=0) (committer_commits_reverted=0) (op_get_file_checksum.failures=0) (multipart_upload_part_put_bytes=0) (audit_span_creation=124) (committer_magic_marker_put=0) (stream_read_remote_stream_drain=4) (stream_write_block_uploads_aborted=0) (action_http_head_request=90) (op_copy_from_local_file=0) (op_get_content_summary.failures=0) (op_copy_from_local_file.failures=0) (committer_load_single_pending_file=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_fully_operations=1) (object_continue_list_request=0) (committer_load_single_pending_file.failures=0) (op_access.failures=0) (stream_read_operations_incomplete=0) (op_create=32) (stream_read_operations=4) (committer_commit_job.failures=0) (files_copied=0) (object_bulk_delete_request=64) (op_rename.failures=0) (object_delete_request.failures=0) (op_glob_status=0) (multipart_upload_aborted=0) (multipart_upload_list=0) (files_created=32) (op_get_delegation_token=0) (stream_read_seek_operations=0) (op_get_file_checksum=0) (committer_stage_file_upload.failures=0) (store_exists_probe.failures=0) (object_metadata_request=90) (committer_materialize_file=0) (stream_write_queue_duration=0) (committer_tasks_completed=0) (object_put_request=64) (op_xattr_list.failures=0) (op_openfile=0) (op_hsync=0) (committer_magic_files_created=0) (delegation_tokens_issued=0) (op_get_file_status=1) (object_select_requests=0) (op_delete.failures=0) (stream_write_total_data=4194304) (files_copied_bytes=0) (stream_read_seek_policy_changed=28) (op_xattr_get_named_map.failures=0) (ignored_errors=0) (op_create_non_recursive=0) (stream_read_unbuffered=2) (op_rename=0) (op_get_delegation_token.failures=0) (action_http_get_request=28) (stream_read_version_mismatches=0) (object_list_request=128) (stream_read_seek_forward_operations=0) (stream_read_close_operations=26) (action_executor_acquired=0) (stream_read_vectored_operations=22) (stream_read_bytes_backwards_on_seek=0) (committer_jobs_completed=0) (op_open=26) (op_get_content_summary=0) (directories_created=32) (directories_deleted=0) (committer_commits_created=0) (object_bulk_delete_request.failures=0) (stream_read_total_bytes=269657) (stream_write_bytes=2097152) (object_multipart_initiated=0) (audit_request_execution=374) (op_get_file_status.failures=0) (stream_read_seek_bytes_discarded=0) (object_put_request.failures=0) (op_list_located_status=0) (stream_read_opened=4) (committer_bytes_uploaded=0) (op_xattr_list=0) (op_xattr_get_map.failures=0) (stream_read_closed=4) (op_is_directory.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_glob_status.failures=0) (object_list_request.failures=0) (object_put_request_completed=64) (audit_failure=0) (stream_write_exceptions=0) (committer_bytes_committed=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (action_file_opened.failures=0) (op_access=0) (object_put_bytes=2097152) (op_mkdirs.failures=0) (stream_write_queue_duration.failures=0) (op_is_directory=0) (op_is_file=0) (committer_tasks_failed=0) (committer_commits_aborted=0) (stream_read_remote_stream_aborted=0) (fake_directories_deleted=32) (object_delete_request=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=32) (object_copy_requests=0) (op_createfile.failures=0) (op_list_files.failures=0) (audit_access_check_failure=0) (op_exists.failures=0) (op_create.failures=0) (committer_stage_file_upload=0) (stream_write_total_time=0) (op_xattr_get_named=0) (op_mkdirs=32) (fake_directories_created=0) (files_deleted=32) (stream_read_exceptions=0) (op_xattr_get_named_map=0) (files_delete_rejected=0) (object_delete_objects=64) (op_list_status.failures=0) (op_delete=32) (op_is_file.failures=0) (multipart_upload_list.failures=0) (op_xattr_get_named.failures=0) (stream_read_vectored_read_bytes_discarded=24553) (stream_read_vectored_combined_ranges=27) (committer_jobs_failed=0) (op_list_status=0) (committer_magic_marker_put.failures=0) (object_multipart_aborted=0) (stream_read_vectored_incoming_ranges=70) (op_abort.failures=0) (action_file_opened=26) (op_list_files=0) (multipart_upload_completed=0) (committer_commits_completed=0) (store_io_request=374) (op_xattr_get_map=0) (op_abort=0) (op_createfile=0) (stream_read_bytes=8313) (object_continue_list_request.failures=0) (op_hflush=0) (committer_materialize_file.failures=0) (op_exists=0) (store_io_throttled=0) (committer_commit_job=0) (multipart_upload_part_put=0) (action_http_head_request.failures=0) (stream_read_seek_backward_operations=0) (stream_write_block_uploads_committed=0) (multipart_instantiated=0) (delegation_tokens_issued.failures=0) (multipart_upload_started=0) (object_multipart_initiated.failures=0) (store_exists_probe=0) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_discarded_in_close=261344) (object_multipart_aborted.failures=0) (committer_commits.failures=0) (stream_read_seek_bytes_skipped=0) (store_io_retry=0));
gauges=((client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (object_put_bytes_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=32) (stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_get_delegation_token.failures.min=-1) (op_list_files.min=-1) (object_multipart_initiated.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (op_rename.min=-1) (op_abort.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.failures.min=-1) (action_file_opened.min=10) (op_is_file.failures.min=-1) (store_exists_probe.min=-1) (op_xattr_get_map.min=-1) (committer_stage_file_upload.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.failures.min=-1) (op_is_directory.min=-1) (op_access.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.min=-1) (op_access.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_list.failures.min=-1) (committer_commit_job.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=64) (op_mkdirs.failures.min=-1) (op_create.failures.min=-1) (op_get_content_summary.min=-1) (committer_magic_marker_put.min=-1) (stream_write_queue_duration.min=-1) (op_list_status.failures.min=-1) (object_put_request.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_load_single_pending_file.min=-1) (multipart_upload_list.min=-1) (op_create.min=7) (op_copy_from_local_file.min=-1) (op_glob_status.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.min=-1) (action_http_head_request.failures.min=-1) (op_rename.failures.min=-1) (object_list_request.min=5) (op_get_file_status.min=6) (op_mkdirs.min=16) (op_is_file.min=-1) (op_delete.min=27) (op_createfile.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_xattr_get_named.failures.min=-1) (action_executor_acquired.min=-1) (committer_materialize_file.min=-1) (op_exists.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=0) (object_list_request.failures.min=-1) (object_delete_request.min=-1) (action_http_get_request.min=13) (committer_stage_file_upload.failures.min=-1) (object_continue_list_request.min=-1) (op_is_directory.failures.min=-1) (committer_materialize_file.failures.min=-1) (object_multipart_aborted.min=-1) (committer_commit_job.min=-1) (op_glob_status.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.failures.min=-1) (op_delete.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_content_summary.failures.min=-1) (action_http_head_request.min=2) (op_list_files.failures.min=-1) (object_multipart_aborted.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_list.min=-1) (op_abort.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_bulk_delete_request.min=6));
maximums=((op_exists.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_file.failures.max=-1) (op_rename.max=-1) (op_list_status.max=-1) (committer_commit_job.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.max=6) (object_put_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_stage_file_upload.max=-1) (committer_commit_job.max=-1) (op_abort.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (object_delete_request.failures.max=-1) (stream_write_queue_duration.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.failures.max=-1) (op_list_files.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_access.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=62) (op_delete.max=87) (action_http_get_request.max=28) (op_is_file.max=-1) (op_xattr_list.max=-1) (object_multipart_aborted.max=-1) (action_http_head_request.max=21) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_delete.failures.max=-1) (object_bulk_delete_request.max=26) (op_xattr_get_named.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_head_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_list_request.max=185) (object_multipart_initiated.max=-1) (op_glob_status.max=-1) (op_xattr_get_map.failures.max=-1) (op_create.failures.max=-1) (op_copy_from_local_file.max=-1) (op_get_delegation_token.failures.max=-1) (op_rename.failures.max=-1) (object_put_request.max=77) (op_list_status.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.failures.max=-1) (action_http_get_request.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=13) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_mkdirs.max=300) (op_mkdirs.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_access.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_list.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_content_summary.max=-1) (op_abort.max=-1) (stream_read_remote_stream_drain.max=10) (op_createfile.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_list.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_map.max=-1) (delegation_tokens_issued.max=-1) (object_continue_list_request.max=-1) (object_delete_request.max=-1) (committer_stage_file_upload.failures.max=-1) (committer_materialize_file.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_directory.max=-1) (committer_load_single_pending_file.failures.max=-1));
means=((op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=64, sum=752, mean=11.7500)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=32, sum=1121, mean=35.0313)) (op_delete.mean=(samples=32, sum=1393, mean=43.5313)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=32, sum=409, mean=12.7813)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=1, sum=6, mean=6.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=26, sum=157, mean=6.0385)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=90, sum=456, mean=5.0667)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=64, sum=1605, mean=25.0781)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=128, sum=1388, mean=10.8438)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=11, mean=2.7500)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=27, sum=401, mean=14.8519)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:03,800 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:03,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,800 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,801 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,801 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,801 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=213&ts=1731778923800
2024-11-16 17:42:03,807 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:03,807 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,807 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,807 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,807 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,807 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=213&ts=1731778923800
2024-11-16 17:42:03,810 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,811 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:03,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:03,811 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:03,811 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000158&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=213&ts=1731778923800
2024-11-16 17:42:03,819 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:03,819 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:03,819 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:42:03,819 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:03,820 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,820 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,820 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,820 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,820 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000159 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000159&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=213&ts=1731778923819
2024-11-16 17:42:03,827 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:03,827 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,828 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:03,828 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10193776408006372026.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:03,829 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10193776408006372026.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (op_abort=0) (object_put_request=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (object_multipart_initiated.failures=0) (op_abort.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_total_time=0) (op_hsync=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_initiated.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10193776408006372026.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,829 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,830 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:03,830 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10193776408006372026.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:03,830 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:03,830 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:03,831 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:03,831 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [97] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000159 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000159/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000159&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=97&ts=1731778923819
2024-11-16 17:42:03,833 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:03,870 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:03,870 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:03,870 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.040s
2024-11-16 17:42:03,870 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10193776408006372026.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:03,870 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10193776408006372026.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,871 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-10193776408006372026.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:03,871 [s3a-transfer-fso-bucket-bounded-pool1-t27] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:03,871 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:03,872 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (object_multipart_initiated.failures=0) (op_hflush=0) (committer_magic_marker_put=0) (op_abort=0) (object_put_request=1) (multipart_upload_part_put=0) (op_hsync=0) (multipart_upload_completed=0) (op_abort.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (object_put_request.failures=0) (multipart_upload_completed.failures=0) (stream_write_total_data=65536) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((action_executor_acquired.failures.min=-1) (object_put_request.min=39) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=39) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1));
means=((multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=39, mean=39.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:03,872 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:03,873 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:03,873 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:03,873 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:03,873 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000160 Executing op_get_file_status with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_get_file_status/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000160/?op=op_get_file_status&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000160&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=213&ts=1731778923872
2024-11-16 17:42:03,876 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:03,877 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG impl.OpenFileSupport (OpenFileSupport.java:prepareToOpenFile(215)) - File was opened with a supplied FileStatus; skipping getFileStatus call in open() operation: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923000; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,895 [s3a-transfer-fso-bucket-unbounded-pool2-t40] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:03,895 [s3a-transfer-fso-bucket-unbounded-pool2-t40] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,895 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:03,895 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:03,895 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:42:03,895 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:03,895 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,896 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,896 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,896 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [100] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161&t0=214&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=100&ts=1731778923894
2024-11-16 17:42:03,897 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,897 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,897 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,897 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,897 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [105] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161&t0=214&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=105&ts=1731778923894
2024-11-16 17:42:03,897 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:03,898 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:03,898 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [102] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-14435&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000161&t0=214&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=102&ts=1731778923894
2024-11-16 17:42:03,917 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.020s
2024-11-16 17:42:03,917 [s3a-transfer-fso-bucket-bounded-pool1-t31] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,917 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.019s
2024-11-16 17:42:03,918 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.022s
2024-11-16 17:42:03,918 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:42:03,918 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:42:03,918 [s3a-transfer-fso-bucket-bounded-pool1-t30] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,918 [s3a-transfer-fso-bucket-bounded-pool1-t29] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:03,919 [JUnit-testSomeRangesMergedSomeUnmerged[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_seek_bytes_discarded=0) (stream_read_close_operations=1) (action_executor_acquired.failures=0) (stream_read_block_read=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_block_read.failures=0) (stream_read_total_bytes=1424) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=1) (stream_read_block_acquire_read.failures=0) (stream_read_fully_operations=0) (stream_read_unbuffered=0) (stream_aborted=0) (stream_read_vectored_combined_ranges=3) (stream_read_seek_backward_operations=0) (stream_read_prefetch_operations=0) (action_file_opened=1) (stream_read_exceptions=0) (stream_read_vectored_incoming_ranges=5) (stream_read_seek_operations=0) (stream_read_operations_incomplete=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_remote_stream_drain=0) (action_http_get_request=3) (action_file_opened.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes=1424) (stream_read_closed=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_http_get_request.min=19) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=0) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=0) (stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.max=22) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_acquire_read.max=-1));
means=((action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=61, mean=20.3333)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:03,921 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:03,921 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,921 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,921 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=213&ts=1731778923920
2024-11-16 17:42:03,924 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,925 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,925 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [213] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=213&ts=1731778923920
2024-11-16 17:42:03,932 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:03,933 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:03,933 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:03,933 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:03,933 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:03,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:03,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:03,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:03,933 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:03,933 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:03,933 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:03,933 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:03,934 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:03,934 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:03,934 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,934 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [215] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=215&ts=1731778923920
2024-11-16 17:42:03,943 [s3a-transfer-fso-bucket-unbounded-pool2-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:03,943 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.009s
2024-11-16 17:42:03,944 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:03,944 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:03,944 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:03,944 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778923866; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:03,944 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:03,944 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:03,944 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:03,944 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:03,945 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,945 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=107&ts=1731778923920
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:03,955 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [107] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000162&t0=213&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=107&ts=1731778923920
2024-11-16 17:42:03,966 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:03,966 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:03,966 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:03,966 [s3a-transfer-fso-bucket-bounded-pool1-t32] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.021s
2024-11-16 17:42:03,966 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.022s
2024-11-16 17:42:03,966 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.033s
2024-11-16 17:42:03,966 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:03,967 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:03,968 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:03,983 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 41, active threads = 0, queued tasks = 0, completed tasks = 41], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_get_request=31) (op_get_content_summary.failures=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain.failures=0) (op_create_non_recursive=0) (op_createfile=0) (committer_materialize_file=0) (stream_write_total_data=4325376) (stream_read_remote_stream_drain=4) (multipart_upload_part_put=0) (object_put_request=66) (op_abort=0) (action_http_head_request=93) (stream_write_block_uploads_committed=0) (object_list_request.failures=0) (op_mkdirs=33) (stream_write_block_uploads=33) (op_get_file_status.failures=0) (committer_commits.failures=0) (fake_directories_created=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (op_create.failures=0) (committer_commits_aborted=0) (object_multipart_aborted=0) (object_select_requests=0) (op_get_file_checksum.failures=0) (committer_magic_marker_put=0) (committer_bytes_committed=0) (op_xattr_get_named_map.failures=0) (stream_read_seek_bytes_skipped=0) (object_multipart_initiated.failures=0) (op_list_located_status=0) (stream_write_total_time=0) (op_rename=0) (object_multipart_initiated=0) (stream_read_close_operations=27) (multipart_instantiated=0) (op_xattr_get_named=0) (stream_read_seek_bytes_discarded=0) (op_hsync=0) (op_exists=0) (committer_magic_marker_put.failures=0) (stream_read_remote_stream_aborted=0) (audit_access_check_failure=0) (op_list_files.failures=0) (stream_read_vectored_read_bytes_discarded=30497) (stream_read_version_mismatches=0) (op_is_directory=0) (op_create=33) (op_is_file.failures=0) (op_get_delegation_token=0) (multipart_upload_started=0) (committer_load_single_pending_file=0) (op_abort.failures=0) (stream_write_queue_duration=0) (files_copied=0) (object_delete_request.failures=0) (committer_jobs_completed=0) (committer_bytes_uploaded=0) (op_list_status=0) (object_put_bytes=2162688) (op_createfile.failures=0) (multipart_upload_part_put_bytes=0) (action_http_head_request.failures=0) (op_glob_status=0) (committer_stage_file_upload.failures=0) (stream_read_vectored_incoming_ranges=75) (delegation_tokens_issued=0) (op_get_content_summary=0) (op_get_file_checksum=0) (object_put_request.failures=0) (stream_read_opened=4) (op_access=0) (store_io_throttled=0) (committer_load_single_pending_file.failures=0) (op_glob_status.failures=0) (op_copy_from_local_file=0) (committer_materialize_file.failures=0) (stream_read_seek_policy_changed=29) (multipart_upload_completed=0) (stream_write_bytes=2162688) (files_created=33) (stream_read_operations=4) (store_exists_probe=0) (fake_directories_deleted=33) (op_get_delegation_token.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=23) (stream_read_fully_operations=1) (audit_request_execution=388) (stream_read_total_bytes=271081) (committer_jobs_failed=0) (committer_stage_file_upload=0) (files_delete_rejected=0) (stream_write_exceptions_completing_upload=0) (op_is_file=0) (stream_write_queue_duration.failures=0) (multipart_upload_list=0) (op_openfile=0) (committer_commits_completed=0) (store_exists_probe.failures=0) (stream_read_operations_incomplete=0) (committer_tasks_completed=0) (op_mkdirs.failures=0) (op_hflush=0) (op_delete=33) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted.failures=0) (object_multipart_aborted.failures=0) (action_file_opened=27) (op_xattr_get_named_map=0) (op_list_status.failures=0) (action_executor_acquired=0) (object_delete_request=0) (committer_tasks_failed=0) (committer_commits_reverted=0) (op_access.failures=0) (object_delete_objects=66) (action_executor_acquired.failures=0) (directories_created=33) (store_io_retry=0) (object_put_request_completed=66) (stream_read_vectored_combined_ranges=30) (store_io_request=388) (op_xattr_get_named.failures=0) (stream_read_bytes_discarded_in_close=261344) (op_exists.failures=0) (op_is_directory.failures=0) (stream_write_exceptions=0) (object_continue_list_request=0) (op_open=27) (object_metadata_request=93) (op_xattr_get_map=0) (multipart_upload_abort_under_path_invoked=0) (audit_failure=0) (ignored_errors=0) (stream_read_unbuffered=2) (files_deleted=33) (op_get_file_status=2) (stream_read_bytes=9737) (committer_commit_job.failures=0) (op_xattr_list=0) (op_rename.failures=0) (stream_aborted=0) (committer_commits_created=0) (object_continue_list_request.failures=0) (op_copy_from_local_file.failures=0) (stream_write_block_uploads_aborted=0) (directories_deleted=0) (delegation_tokens_issued.failures=0) (op_xattr_get_map.failures=0) (stream_read_exceptions=0) (committer_commit_job=0) (op_delete.failures=0) (object_bulk_delete_request=66) (action_file_opened.failures=0) (object_copy_requests=0) (object_list_request=132) (committer_magic_files_created=0) (multipart_upload_list.failures=0) (audit_span_creation=129) (op_xattr_list.failures=0) (stream_read_closed=4) (op_list_files=0) (files_copied_bytes=0) (object_bulk_delete_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_aborted=0));
gauges=((client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_pending=33) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((object_bulk_delete_request.min=6) (object_delete_request.min=-1) (op_list_status.failures.min=-1) (op_delete.min=27) (stream_write_queue_duration.min=-1) (action_http_get_request.failures.min=-1) (op_is_directory.failures.min=-1) (op_access.min=-1) (op_is_directory.min=-1) (store_exists_probe.min=-1) (op_get_file_checksum.failures.min=-1) (op_exists.min=-1) (op_get_file_status.min=4) (op_xattr_get_map.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=39) (op_get_delegation_token.failures.min=-1) (op_list_files.failures.min=-1) (op_xattr_list.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_named_map.min=-1) (action_file_opened.failures.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.min=-1) (object_multipart_initiated.min=-1) (op_list_status.min=-1) (op_glob_status.failures.min=-1) (op_is_file.failures.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.failures.min=-1) (action_executor_acquired.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_content_summary.min=-1) (action_http_head_request.min=2) (object_multipart_aborted.min=-1) (op_access.failures.min=-1) (multipart_upload_list.min=-1) (op_createfile.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_content_summary.failures.min=-1) (action_file_opened.min=0) (committer_stage_file_upload.failures.min=-1) (action_http_head_request.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_abort.failures.min=-1) (store_exists_probe.failures.min=-1) (op_mkdirs.min=16) (action_http_get_request.min=19) (op_xattr_get_named.failures.min=-1) (op_mkdirs.failures.min=-1) (stream_read_remote_stream_drain.min=0) (op_is_file.min=-1) (object_list_request.min=5) (committer_stage_file_upload.min=-1) (object_list_request.failures.min=-1) (op_abort.min=-1) (op_get_delegation_token.min=-1) (op_get_file_status.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_rename.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_glob_status.min=-1) (op_createfile.min=-1) (op_delete.failures.min=-1) (op_xattr_list.failures.min=-1) (object_continue_list_request.min=-1) (op_list_files.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (object_put_request.failures.min=-1) (op_copy_from_local_file.min=-1) (stream_write_queue_duration.failures.min=-1) (object_multipart_initiated.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_commit_job.min=-1) (op_xattr_get_map.min=-1) (op_create.failures.min=-1) (op_create.min=7));
maximums=((object_put_request.max=77) (object_multipart_aborted.max=-1) (op_list_status.failures.max=-1) (op_list_files.max=-1) (op_list_files.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.max=-1) (op_create.failures.max=-1) (op_get_file_checksum.max=-1) (stream_write_queue_duration.failures.max=-1) (op_exists.failures.max=-1) (op_delete.failures.max=-1) (op_is_file.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_get_map.failures.max=-1) (object_put_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_is_directory.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (op_get_content_summary.failures.max=-1) (action_http_get_request.max=28) (op_xattr_list.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (op_exists.max=-1) (multipart_upload_list.max=-1) (committer_stage_file_upload.max=-1) (op_get_delegation_token.failures.max=-1) (action_http_head_request.max=21) (op_glob_status.failures.max=-1) (op_createfile.failures.max=-1) (committer_materialize_file.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.max=-1) (action_executor_acquired.max=-1) (op_mkdirs.max=300) (delegation_tokens_issued.failures.max=-1) (op_get_file_status.max=6) (op_abort.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_is_directory.failures.max=-1) (op_abort.failures.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_continue_list_request.failures.max=-1) (action_file_opened.max=13) (action_http_head_request.failures.max=-1) (op_is_file.max=-1) (multipart_upload_list.failures.max=-1) (store_exists_probe.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_xattr_get_map.max=-1) (op_access.max=-1) (object_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_continue_list_request.max=-1) (committer_commit_job.failures.max=-1) (object_bulk_delete_request.max=26) (object_list_request.max=185) (committer_load_single_pending_file.failures.max=-1) (op_copy_from_local_file.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_get_content_summary.max=-1) (op_delete.max=87) (object_delete_request.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.failures.max=-1) (op_rename.max=-1) (op_mkdirs.failures.max=-1) (committer_commit_job.max=-1) (op_createfile.max=-1) (op_xattr_get_named_map.max=-1) (op_create.max=62) (op_glob_status.max=-1) (op_get_delegation_token.max=-1));
means=((op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=30, sum=462, mean=15.4000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=33, sum=1140, mean=34.5455)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=33, sum=417, mean=12.6364)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=11, mean=2.7500)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=33, sum=1427, mean=43.2424)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=93, sum=465, mean=5.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=66, sum=772, mean=11.6970)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=27, sum=157, mean=5.8148)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=132, sum=1416, mean=10.7273)) (object_put_request.mean=(samples=66, sum=1652, mean=25.0303)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:03,984 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:03,985 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,985 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,985 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:03,985 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:03,986 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=216&ts=1731778923984
2024-11-16 17:42:03,992 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:03,992 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,992 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:03,992 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:03,992 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:03,993 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=216&ts=1731778923984
2024-11-16 17:42:03,995 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:03,995 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:03,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:03,996 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:03,996 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000163&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=216&ts=1731778923984
2024-11-16 17:42:04,003 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:04,004 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:04,004 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:04,004 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:04,004 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,005 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,005 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,005 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,005 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000164 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000164&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=216&ts=1731778924004
2024-11-16 17:42:04,010 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:04,010 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,011 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:04,011 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11483048788182524886.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:04,012 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11483048788182524886.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (object_put_request.failures=0) (multipart_upload_completed=0) (stream_write_exceptions=0) (multipart_upload_part_put.failures=0) (action_executor_acquired.failures=0) (op_abort.failures=0) (stream_write_total_data=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (op_hsync=0) (object_multipart_aborted.failures=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_put_request=0) (stream_write_block_uploads=0) (op_hflush=0) (multipart_upload_completed.failures=0) (action_executor_acquired=0) (op_abort=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((op_abort.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11483048788182524886.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,012 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,012 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:04,012 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11483048788182524886.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:04,012 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:04,012 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:04,012 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:04,012 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:04,013 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [108] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000164 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000164/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000164&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=108&ts=1731778924004
2024-11-16 17:42:04,038 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:04,038 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:04,038 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:42:04,039 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11483048788182524886.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:04,039 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11483048788182524886.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,039 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-11483048788182524886.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,039 [s3a-transfer-fso-bucket-bounded-pool1-t33] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:04,039 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,040 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (committer_magic_marker_put.failures=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put=0) (multipart_upload_part_put.failures=0) (stream_write_exceptions=0) (multipart_upload_completed=0) (op_hsync=0) (stream_write_bytes=65536) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (multipart_upload_part_put=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=1) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (op_abort=0) (stream_write_total_time=0) (stream_write_total_data=65536) (object_put_request.failures=0) (op_hflush=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_put_request.min=25) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=25) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:04,041 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:04,042 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,042 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,042 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:04,042 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [217] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000165 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000165/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000165&t0=217&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=217&ts=1731778924041
2024-11-16 17:42:04,049 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:04,049 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:04,049 [s3a-transfer-fso-bucket-unbounded-pool2-t42] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,049 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[65536,65636)] 
2024-11-16 17:42:04,049 [JUnit-testEOFRanges[Buffer type : array]] WARN  s3a.S3AInputStream (S3AInputStream.java:validateRangeRequest(1004)) - Requested range [65536, 100) is beyond EOF for path s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,050 [JUnit-testEOFRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_total_bytes=0) (stream_read_vectored_incoming_ranges=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations_incomplete=0) (action_executor_acquired=0) (stream_read_close_operations=1) (stream_read_bytes=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_read_bytes_discarded=0) (action_file_opened=1) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_closed=0) (action_http_get_request=0) (stream_read_seek_bytes_skipped=0) (action_file_opened.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_policy_changed=1) (stream_read_opened=0) (stream_read_seek_forward_operations=0) (stream_aborted=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=0) (stream_read_bytes_discarded_in_close=0) (stream_read_block_read=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((action_file_opened.min=7) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.max=7) (stream_read_prefetch_operations.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:04,051 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:04,052 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,052 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,052 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=216&ts=1731778924051
2024-11-16 17:42:04,057 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,058 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,058 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [216] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=216&ts=1731778924051
2024-11-16 17:42:04,065 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:04,066 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:04,066 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:04,066 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:04,066 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:04,066 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:04,066 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:04,067 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:04,067 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:04,067 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:04,067 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:04,067 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:04,067 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:04,068 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:04,070 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,070 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [218] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=218&ts=1731778924051
2024-11-16 17:42:04,078 [s3a-transfer-fso-bucket-unbounded-pool2-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:04,078 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:42:04,078 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:04,078 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:04,079 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:04,079 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778924034; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:04,079 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:04,079 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:04,079 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:04,080 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:04,080 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:04,081 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:04,081 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:04,081 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:04,081 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,081 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,081 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:04,082 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,082 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=110&ts=1731778924051
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,091 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [110] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000166&t0=216&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=110&ts=1731778924051
2024-11-16 17:42:04,107 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:42:04,108 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.017s
2024-11-16 17:42:04,108 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.017s
2024-11-16 17:42:04,108 [s3a-transfer-fso-bucket-bounded-pool1-t34] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.027s
2024-11-16 17:42:04,109 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.029s
2024-11-16 17:42:04,109 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.042s
2024-11-16 17:42:04,109 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:04,109 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:04,114 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:04,129 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 43, active threads = 0, queued tasks = 0, completed tasks = 43], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_magic_marker_put=0) (op_xattr_get_named_map=0) (multipart_upload_list=0) (op_is_directory.failures=0) (committer_commits_reverted=0) (stream_read_remote_stream_drain=4) (stream_write_exceptions_completing_upload=0) (op_get_content_summary.failures=0) (op_glob_status.failures=0) (object_select_requests=0) (op_exists=0) (op_xattr_list=0) (object_list_request=136) (stream_read_opened=4) (store_io_request=399) (files_delete_rejected=0) (op_xattr_list.failures=0) (op_access.failures=0) (object_list_request.failures=0) (delegation_tokens_issued=0) (stream_read_remote_stream_drain.failures=0) (action_http_head_request=96) (op_get_delegation_token=0) (multipart_upload_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_read_bytes_discarded=30497) (op_list_status=0) (stream_read_seek_bytes_skipped=0) (op_hsync=0) (op_get_file_status.failures=0) (stream_aborted=0) (committer_bytes_uploaded=0) (object_delete_request.failures=0) (stream_read_remote_stream_aborted=0) (op_get_delegation_token.failures=0) (committer_commits.failures=0) (multipart_upload_part_put_bytes=0) (op_rename.failures=0) (action_http_get_request.failures=0) (object_multipart_initiated=0) (store_exists_probe.failures=0) (stream_read_seek_backward_operations=0) (object_continue_list_request.failures=0) (object_bulk_delete_request=68) (committer_load_single_pending_file.failures=0) (committer_commits_completed=0) (ignored_errors=0) (op_copy_from_local_file=0) (stream_read_close_operations=28) (stream_write_block_uploads=34) (object_delete_request=0) (files_copied=0) (op_openfile=0) (stream_read_seek_bytes_discarded=0) (committer_commit_job=0) (stream_read_bytes_discarded_in_abort=0) (op_is_file.failures=0) (op_xattr_get_map=0) (audit_span_creation=133) (directories_deleted=0) (audit_request_execution=399) (object_put_bytes=2228224) (stream_write_total_data=4456448) (op_is_file=0) (committer_materialize_file=0) (stream_write_total_time=0) (op_abort.failures=0) (multipart_instantiated=0) (delegation_tokens_issued.failures=0) (fake_directories_created=0) (op_get_file_checksum.failures=0) (committer_jobs_completed=0) (multipart_upload_list.failures=0) (stream_read_operations=4) (action_http_head_request.failures=0) (store_io_retry=0) (op_copy_from_local_file.failures=0) (committer_magic_files_created=0) (object_copy_requests=0) (files_copied_bytes=0) (fake_directories_deleted=34) (committer_tasks_failed=0) (stream_read_vectored_operations=23) (store_exists_probe=0) (op_glob_status=0) (files_created=34) (committer_materialize_file.failures=0) (action_executor_acquired=0) (op_list_files.failures=0) (stream_read_operations_incomplete=0) (object_put_request_completed=68) (stream_read_closed=4) (op_createfile.failures=0) (object_delete_objects=68) (op_get_content_summary=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes_discarded_in_close=261344) (committer_stage_file_upload.failures=0) (op_list_located_status=0) (object_bulk_delete_request.failures=0) (op_mkdirs=34) (committer_load_single_pending_file=0) (stream_read_seek_policy_changed=30) (op_xattr_get_named_map.failures=0) (op_mkdirs.failures=0) (object_multipart_initiated.failures=0) (op_abort=0) (op_delete=34) (stream_read_seek_operations=0) (object_multipart_aborted=0) (committer_tasks_completed=0) (op_xattr_get_named.failures=0) (stream_read_bytes=9737) (op_get_file_checksum=0) (files_deleted=34) (op_rename=0) (stream_read_seek_forward_operations=0) (op_delete.failures=0) (op_hflush=0) (stream_read_vectored_incoming_ranges=75) (op_open=28) (op_list_status.failures=0) (op_createfile=0) (stream_read_vectored_combined_ranges=30) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (op_list_files=0) (committer_commits_aborted=0) (object_multipart_aborted.failures=0) (object_put_request=68) (op_xattr_get_map.failures=0) (audit_failure=0) (op_is_directory=0) (committer_bytes_committed=0) (multipart_upload_completed=0) (op_create=34) (action_file_opened=28) (multipart_upload_part_put=0) (stream_write_queue_duration=0) (action_http_get_request=31) (committer_stage_file_upload=0) (multipart_upload_started=0) (stream_read_total_bytes=271081) (multipart_upload_abort_under_path_invoked=0) (audit_access_check_failure=0) (object_metadata_request=96) (stream_read_exceptions=0) (op_create_non_recursive=0) (committer_jobs_failed=0) (op_create.failures=0) (committer_commit_job.failures=0) (object_put_request.failures=0) (store_io_throttled=0) (directories_created=34) (stream_read_version_mismatches=0) (action_file_opened.failures=0) (stream_read_fully_operations=1) (op_exists.failures=0) (committer_commits_created=0) (stream_write_bytes=2228224) (stream_read_unbuffered=2) (op_access=0) (stream_write_exceptions=0) (object_continue_list_request=0) (stream_write_queue_duration.failures=0) (op_get_file_status=2) (stream_write_block_uploads_committed=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_named=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=34) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((store_exists_probe.min=-1) (action_http_get_request.min=19) (op_xattr_get_named.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_file.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_is_file.failures.min=-1) (stream_read_remote_stream_drain.min=0) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (op_rename.failures.min=-1) (object_delete_request.min=-1) (op_createfile.min=-1) (op_list_files.min=-1) (op_xattr_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_map.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_list_files.failures.min=-1) (op_mkdirs.min=16) (op_xattr_get_map.min=-1) (object_bulk_delete_request.min=6) (action_http_get_request.failures.min=-1) (object_list_request.failures.min=-1) (op_is_directory.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.min=-1) (op_list_status.failures.min=-1) (op_create.min=7) (stream_read_remote_stream_drain.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.failures.min=-1) (op_glob_status.min=-1) (object_list_request.min=5) (committer_stage_file_upload.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (action_http_head_request.min=2) (op_get_file_status.min=4) (object_continue_list_request.min=-1) (op_xattr_list.min=-1) (op_mkdirs.failures.min=-1) (action_http_head_request.failures.min=-1) (op_createfile.failures.min=-1) (delegation_tokens_issued.min=-1) (op_abort.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_delete.failures.min=-1) (action_file_opened.failures.min=-1) (multipart_upload_list.failures.min=-1) (committer_materialize_file.min=-1) (committer_load_single_pending_file.min=-1) (object_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (op_get_delegation_token.min=-1) (delegation_tokens_issued.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_materialize_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.min=27) (object_put_request.min=25) (committer_magic_marker_put.failures.min=-1) (op_copy_from_local_file.min=-1) (op_get_content_summary.min=-1) (action_file_opened.min=7) (op_get_file_status.failures.min=-1) (op_abort.min=-1) (op_get_file_checksum.min=-1) (multipart_upload_list.min=-1) (op_create.failures.min=-1) (stream_write_queue_duration.min=-1) (committer_commit_job.min=-1) (committer_stage_file_upload.failures.min=-1) (object_multipart_initiated.min=-1) (op_copy_from_local_file.failures.min=-1) (op_rename.min=-1) (committer_commit_job.failures.min=-1) (op_exists.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1) (op_is_directory.min=-1) (op_get_content_summary.failures.min=-1) (op_access.failures.min=-1));
maximums=((op_get_content_summary.max=-1) (store_exists_probe.max=-1) (op_xattr_get_map.failures.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (committer_magic_marker_put.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=28) (op_create.max=62) (stream_read_remote_stream_aborted.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_delete.failures.max=-1) (op_is_directory.max=-1) (op_get_file_status.max=6) (object_continue_list_request.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_multipart_initiated.max=-1) (delegation_tokens_issued.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.max=-1) (object_list_request.max=185) (op_xattr_get_map.max=-1) (op_get_content_summary.failures.max=-1) (op_is_file.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.failures.max=-1) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (multipart_upload_list.max=-1) (op_xattr_get_named.max=-1) (object_continue_list_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_xattr_list.max=-1) (op_exists.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_files.max=-1) (op_is_file.failures.max=-1) (action_file_opened.max=13) (object_put_request.max=77) (op_get_file_checksum.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_head_request.max=21) (op_access.failures.max=-1) (op_create.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.failures.max=-1) (committer_stage_file_upload.max=-1) (stream_read_remote_stream_drain.max=10) (op_is_directory.failures.max=-1) (op_copy_from_local_file.max=-1) (op_rename.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.failures.max=-1) (committer_load_single_pending_file.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_commit_job.failures.max=-1) (op_list_status.max=-1) (stream_write_queue_duration.failures.max=-1) (action_executor_acquired.max=-1) (committer_stage_file_upload.failures.max=-1) (object_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (op_glob_status.max=-1) (object_bulk_delete_request.max=26) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_createfile.max=-1) (op_get_delegation_token.max=-1) (action_http_get_request.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.failures.max=-1) (op_abort.max=-1) (op_mkdirs.max=300) (op_delete.max=87) (object_multipart_initiated.failures.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=34, sum=424, mean=12.4706)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=136, sum=1442, mean=10.6029)) (object_bulk_delete_request.mean=(samples=68, sum=797, mean=11.7206)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=68, sum=1684, mean=24.7647)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=30, sum=462, mean=15.4000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=4, sum=11, mean=2.7500)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=34, sum=1160, mean=34.1176)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=96, sum=479, mean=4.9896)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=28, sum=164, mean=5.8571)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=34, sum=1470, mean=43.2353)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:04,129 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:04,129 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,130 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,130 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,130 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,130 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924129
2024-11-16 17:42:04,137 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:04,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,138 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,138 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924129
2024-11-16 17:42:04,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,141 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:04,141 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:04,142 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:04,142 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000167&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924129
2024-11-16 17:42:04,149 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:04,149 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:04,149 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:42:04,149 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:04,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,150 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,150 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,150 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000168 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000168&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924150
2024-11-16 17:42:04,157 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:04,157 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,157 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:04,158 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12290106622693452985.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:04,159 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12290106622693452985.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (object_multipart_initiated=0) (object_multipart_initiated.failures=0) (object_put_request=0) (op_abort=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (op_hflush=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (stream_write_total_data=0) (stream_write_total_time=0) (op_abort.failures=0) (object_multipart_aborted=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (op_hsync=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1));
means=((object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12290106622693452985.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,159 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,159 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:04,159 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12290106622693452985.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:04,159 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:04,159 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:04,160 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:04,160 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:04,160 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [112] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000168 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000168/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000168&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=112&ts=1731778924150
2024-11-16 17:42:04,187 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:04,187 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:04,187 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:42:04,188 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12290106622693452985.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:04,188 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12290106622693452985.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,188 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-12290106622693452985.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,188 [s3a-transfer-fso-bucket-bounded-pool1-t35] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:04,189 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,191 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (op_abort.failures=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (multipart_upload_part_put=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (op_hsync=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (object_put_request=1) (object_put_request.failures=0) (op_abort=0) (stream_write_total_data=65536) (action_executor_acquired=0) (stream_write_total_time=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (object_put_request.min=27) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.max=-1) (object_put_request.max=27) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:04,191 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:04,192 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,192 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,192 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:04,192 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924191
2024-11-16 17:42:04,196 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:04,196 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:04,196 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,196 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:04,196 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[0-65536], length=200, streamPosition=0, nextReadPosition=0, policy=default
2024-11-16 17:42:04,197 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,197 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65535, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-65535&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924191
2024-11-16 17:42:04,204 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.008s
2024-11-16 17:42:04,205 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:04,205 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:04,205 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:04,205 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:04,206 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:04,206 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:04,206 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,206 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,207 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,207 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [113] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000169&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=113&ts=1731778924191
2024-11-16 17:42:04,220 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:42:04,221 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:04,221 [s3a-transfer-fso-bucket-bounded-pool1-t36] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,221 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:42:04,221 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:42:04,221 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:42:04,221 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7441 bytes
2024-11-16 17:42:04,222 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:04,223 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:04,223 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:04,223 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8743 bytes
2024-11-16 17:42:04,224 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:42:04,224 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:04,224 [JUnit-testVectoredReadAfterNormalRead[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_read=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request=2) (stream_read_bytes_discarded_in_close=65336) (stream_read_block_read.failures=0) (stream_read_block_acquire_read=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_bytes=350) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations.failures=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_vectored_read_bytes_discarded=10) (stream_read_bytes_discarded_in_abort=0) (stream_read_exceptions=0) (stream_read_closed=1) (stream_read_vectored_incoming_ranges=2) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (stream_read_opened=1) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_total_bytes=65686) (stream_aborted=0) (stream_read_close_operations=1) (action_http_get_request.failures=0) (stream_read_seek_operations=0) (stream_read_operations=1) (stream_read_fully_operations=0) (stream_read_remote_stream_drain=1) (action_executor_acquired=0) (stream_read_vectored_combined_ranges=1));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.min=3) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.min=7) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.min=4) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((action_executor_acquired.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=14) (action_http_get_request.failures.max=-1) (action_file_opened.max=4) (stream_read_block_read.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.max=3) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.mean=(samples=2, sum=21, mean=10.5000)));

2024-11-16 17:42:04,225 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:04,225 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,225 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,226 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924225
2024-11-16 17:42:04,229 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,229 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,229 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [219] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=219&ts=1731778924225
2024-11-16 17:42:04,235 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,235 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:04,235 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:04,235 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:04,236 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:04,236 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:04,236 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:04,236 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:04,236 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:04,236 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:04,236 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:04,236 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:04,237 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:04,237 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:04,237 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,237 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [220] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=220&ts=1731778924225
2024-11-16 17:42:04,248 [s3a-transfer-fso-bucket-unbounded-pool2-t44] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:04,248 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.011s
2024-11-16 17:42:04,248 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:04,248 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:04,248 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:04,248 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778924182; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:04,248 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:04,249 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:04,249 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:04,249 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:04,249 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:04,249 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:04,249 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:04,249 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:04,249 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,249 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,250 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:04,250 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,250 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=114&ts=1731778924225
2024-11-16 17:42:04,261 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.011s
2024-11-16 17:42:04,261 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:04,261 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.012s
2024-11-16 17:42:04,261 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:04,261 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:04,261 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,262 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,262 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:04,262 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,262 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [114] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000170&t0=219&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=114&ts=1731778924225
2024-11-16 17:42:04,272 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:04,272 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.011s
2024-11-16 17:42:04,272 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.011s
2024-11-16 17:42:04,273 [s3a-transfer-fso-bucket-bounded-pool1-t37] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:42:04,274 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.025s
2024-11-16 17:42:04,274 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.038s
2024-11-16 17:42:04,274 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:04,274 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:04,278 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:04,290 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 44, active threads = 0, queued tasks = 0, completed tasks = 44], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((store_exists_probe.failures=0) (stream_read_total_bytes=336767) (audit_request_execution=412) (op_create_non_recursive=0) (object_list_request.failures=0) (store_exists_probe=0) (fake_directories_deleted=35) (object_delete_objects=70) (stream_read_bytes=10087) (files_created=35) (committer_jobs_completed=0) (op_hsync=0) (object_put_bytes=2293760) (stream_write_exceptions_completing_upload=0) (stream_write_total_time=0) (op_is_file=0) (committer_jobs_failed=0) (committer_commits_completed=0) (stream_read_vectored_read_bytes_discarded=30507) (stream_read_remote_stream_drain=5) (op_get_delegation_token=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_incoming_ranges=77) (multipart_upload_aborted=0) (op_hflush=0) (store_io_request=412) (object_multipart_initiated.failures=0) (multipart_upload_started=0) (op_mkdirs.failures=0) (stream_write_queue_duration=0) (op_rename.failures=0) (op_create.failures=0) (object_multipart_aborted.failures=0) (op_createfile=0) (object_select_requests=0) (object_continue_list_request.failures=0) (stream_write_block_uploads_aborted=0) (fake_directories_created=0) (action_file_opened=29) (op_get_content_summary.failures=0) (ignored_errors=0) (stream_read_unbuffered=2) (stream_aborted=0) (op_xattr_get_named=0) (action_http_get_request.failures=0) (multipart_upload_part_put=0) (op_openfile=0) (committer_commits_aborted=0) (files_deleted=35) (audit_access_check_failure=0) (op_list_located_status=0) (object_multipart_initiated=0) (stream_write_queue_duration.failures=0) (object_multipart_aborted=0) (op_get_file_checksum=0) (stream_read_vectored_operations=24) (committer_magic_marker_put=0) (op_mkdirs=35) (op_delete.failures=0) (files_delete_rejected=0) (stream_read_vectored_combined_ranges=31) (object_metadata_request=99) (op_get_file_status=2) (op_get_file_status.failures=0) (files_copied=0) (op_xattr_get_named.failures=0) (committer_commit_job=0) (store_io_throttled=0) (action_http_head_request.failures=0) (stream_write_block_uploads=35) (stream_read_opened=5) (op_xattr_get_named_map.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_exceptions=0) (op_xattr_list.failures=0) (directories_deleted=0) (committer_commits_reverted=0) (committer_commits_created=0) (op_abort.failures=0) (multipart_upload_list.failures=0) (op_open=29) (op_list_status=0) (op_is_file.failures=0) (op_rename=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_forward_operations=0) (committer_magic_files_created=0) (multipart_upload_list=0) (multipart_instantiated=0) (multipart_upload_completed=0) (stream_read_close_operations=29) (op_xattr_list=0) (stream_read_seek_bytes_discarded=0) (op_get_file_checksum.failures=0) (op_createfile.failures=0) (committer_stage_file_upload=0) (action_file_opened.failures=0) (stream_read_seek_operations=0) (action_http_head_request=99) (op_xattr_get_map.failures=0) (op_exists.failures=0) (stream_read_bytes_discarded_in_close=326680) (stream_write_bytes=2293760) (committer_commit_job.failures=0) (committer_tasks_failed=0) (stream_read_closed=5) (op_get_content_summary=0) (committer_materialize_file=0) (op_access=0) (op_list_status.failures=0) (audit_failure=0) (files_copied_bytes=0) (object_put_request.failures=0) (committer_bytes_committed=0) (op_create=35) (op_get_delegation_token.failures=0) (op_access.failures=0) (committer_bytes_uploaded=0) (op_copy_from_local_file=0) (stream_read_remote_stream_aborted.failures=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (object_list_request=140) (op_is_directory.failures=0) (op_xattr_get_named_map=0) (stream_read_operations_incomplete=0) (stream_write_total_data=4587520) (op_is_directory=0) (committer_materialize_file.failures=0) (op_glob_status.failures=0) (object_put_request_completed=70) (op_list_files.failures=0) (object_delete_request=0) (op_copy_from_local_file.failures=0) (committer_stage_file_upload.failures=0) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_drain.failures=0) (object_put_request=70) (object_delete_request.failures=0) (stream_read_version_mismatches=0) (committer_load_single_pending_file.failures=0) (stream_read_seek_backward_operations=0) (op_xattr_get_map=0) (action_http_get_request=33) (stream_read_seek_policy_changed=31) (stream_read_exceptions=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_fully_operations=1) (delegation_tokens_issued=0) (op_delete=35) (object_bulk_delete_request=70) (audit_span_creation=137) (committer_tasks_completed=0) (multipart_upload_part_put_bytes=0) (stream_read_operations=5) (action_executor_acquired=0) (op_glob_status=0) (committer_commits.failures=0) (action_executor_acquired.failures=0) (op_list_files=0) (directories_created=35) (op_abort=0) (committer_load_single_pending_file=0) (op_exists=0) (store_io_retry=0) (delegation_tokens_issued.failures=0) (object_copy_requests=0) (committer_magic_marker_put.failures=0) (object_bulk_delete_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=35) (object_put_bytes_pending=0));
minimums=((op_list_files.failures.min=-1) (store_exists_probe.min=-1) (object_multipart_initiated.min=-1) (committer_materialize_file.min=-1) (op_xattr_get_map.min=-1) (op_get_delegation_token.failures.min=-1) (op_exists.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_delete.failures.min=-1) (op_delete.min=27) (op_access.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_list_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.min=7) (op_xattr_get_named_map.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.failures.min=-1) (action_file_opened.min=4) (op_xattr_get_named.min=-1) (op_create.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_access.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_list_request.min=5) (op_createfile.min=-1) (delegation_tokens_issued.min=-1) (object_delete_request.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_mkdirs.min=16) (op_get_file_checksum.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.min=-1) (committer_stage_file_upload.min=-1) (op_exists.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_create.min=7) (object_bulk_delete_request.min=6) (committer_load_single_pending_file.min=-1) (op_copy_from_local_file.min=-1) (committer_magic_marker_put.failures.min=-1) (stream_write_queue_duration.min=-1) (action_executor_acquired.failures.min=-1) (op_glob_status.failures.min=-1) (object_put_request.failures.min=-1) (op_glob_status.min=-1) (committer_commit_job.min=-1) (op_get_delegation_token.min=-1) (committer_stage_file_upload.failures.min=-1) (op_abort.failures.min=-1) (op_is_file.min=-1) (op_get_file_checksum.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_content_summary.min=-1) (op_list_status.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_list.min=-1) (op_xattr_list.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_http_head_request.min=2) (op_rename.failures.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=27) (op_copy_from_local_file.failures.min=-1) (op_get_file_status.min=4) (op_createfile.failures.min=-1) (object_continue_list_request.min=-1) (op_rename.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_drain.min=3) (op_abort.min=-1) (op_get_content_summary.failures.min=-1) (committer_commit_job.failures.min=-1) (object_delete_request.min=-1) (op_is_directory.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_file_opened.failures.min=-1) (op_list_status.min=-1));
maximums=((op_rename.failures.max=-1) (op_create.max=62) (op_xattr_get_named.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.max=300) (op_is_file.max=-1) (object_put_request.max=77) (object_delete_request.max=-1) (object_multipart_initiated.failures.max=-1) (op_delete.max=87) (op_mkdirs.failures.max=-1) (object_bulk_delete_request.max=26) (committer_materialize_file.failures.max=-1) (op_exists.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.max=21) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.failures.max=-1) (op_is_directory.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_aborted.max=-1) (op_access.max=-1) (op_list_files.max=-1) (committer_materialize_file.max=-1) (op_delete.failures.max=-1) (op_exists.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_delegation_token.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.max=-1) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (stream_write_queue_duration.failures.max=-1) (object_multipart_initiated.max=-1) (object_list_request.max=185) (op_get_file_status.max=6) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (op_get_file_checksum.failures.max=-1) (action_http_get_request.max=28) (stream_read_remote_stream_aborted.max=-1) (op_access.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.failures.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_create.failures.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_xattr_get_map.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_checksum.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.failures.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_write_queue_duration.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named.failures.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.max=-1) (op_list_files.failures.max=-1) (op_glob_status.max=-1) (multipart_upload_list.max=-1) (object_multipart_aborted.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_list.max=-1) (op_get_content_summary.max=-1) (action_http_get_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_list_status.failures.max=-1) (op_abort.failures.max=-1) (op_abort.max=-1) (action_file_opened.max=13) (op_is_directory.max=-1) (committer_load_single_pending_file.max=-1) (committer_stage_file_upload.max=-1) (action_http_head_request.failures.max=-1) (object_continue_list_request.max=-1));
means=((op_mkdirs.mean=(samples=35, sum=1180, mean=33.7143)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=70, sum=818, mean=11.6857)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=35, sum=1508, mean=43.0857)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=32, sum=483, mean=15.0938)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=35, sum=432, mean=12.3429)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=70, sum=1718, mean=24.5429)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=29, sum=168, mean=5.7931)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=99, sum=490, mean=4.9495)) (stream_read_remote_stream_drain.mean=(samples=5, sum=14, mean=2.8000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=140, sum=1472, mean=10.5143)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:04,290 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:04,290 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,290 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,290 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,291 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,291 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=221&ts=1731778924290
2024-11-16 17:42:04,296 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:04,296 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,296 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,296 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,296 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,296 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=221&ts=1731778924290
2024-11-16 17:42:04,298 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,298 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:04,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:04,299 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:04,299 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000171&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=221&ts=1731778924290
2024-11-16 17:42:04,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:04,304 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:04,304 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.006s
2024-11-16 17:42:04,304 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:04,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,305 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,305 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,305 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000172 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000172&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=221&ts=1731778924305
2024-11-16 17:42:04,310 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:04,310 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,310 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:04,310 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9431635071063003737.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:04,311 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9431635071063003737.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_put_request.failures=0) (op_hflush=0) (stream_write_queue_duration=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_total_data=0) (object_put_request=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (multipart_upload_part_put.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_total_time=0) (stream_write_block_uploads=0) (object_multipart_aborted.failures=0) (stream_write_bytes=65536) (action_executor_acquired=0) (committer_magic_marker_put=0) (op_abort.failures=0) (object_multipart_initiated=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_initiated.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.failures.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9431635071063003737.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,311 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,311 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:04,311 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9431635071063003737.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:04,312 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:04,312 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:04,312 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:04,312 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:04,312 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [116] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000172 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000172/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000172&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=116&ts=1731778924305
2024-11-16 17:42:04,348 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:04,348 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:04,348 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.036s
2024-11-16 17:42:04,349 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9431635071063003737.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:04,349 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9431635071063003737.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,349 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-9431635071063003737.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,349 [s3a-transfer-fso-bucket-bounded-pool1-t38] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:04,349 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,351 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_put_request=1) (stream_write_total_time=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (op_abort=0) (stream_write_exceptions=0) (op_hflush=0) (object_put_request.failures=0) (object_multipart_initiated=0) (stream_write_block_uploads=1) (op_hsync=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (op_abort.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (object_put_request.min=36) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=36) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=36, mean=36.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:04,351 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:04,352 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,352 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,353 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:04,353 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=221&ts=1731778924352
2024-11-16 17:42:04,358 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:04,359 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:04,359 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,360 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:42:04,360 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:04,360 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 2 
2024-11-16 17:42:04,360 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[4101,4201), range[16101,16201)] 
2024-11-16 17:42:04,361 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,361 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,361 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,361 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [120] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=16101-16200&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=120&ts=1731778924352
2024-11-16 17:42:04,361 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,362 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,362 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,362 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [118] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=4200, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-4200&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000173&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=118&ts=1731778924352
2024-11-16 17:42:04,373 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:42:04,373 [s3a-transfer-fso-bucket-bounded-pool1-t40] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[16101,16201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,386 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.024s
2024-11-16 17:42:04,386 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 4001 bytes drained from stream 
2024-11-16 17:42:04,386 [s3a-transfer-fso-bucket-bounded-pool1-t39] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,4201) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,387 [JUnit-testDisjointRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_aborted=0) (stream_read_vectored_combined_ranges=2) (action_http_get_request=2) (stream_read_remote_stream_aborted=0) (stream_read_vectored_read_bytes_discarded=4001) (stream_read_operations_incomplete=0) (stream_read_prefetch_operations=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_seek_backward_operations=0) (action_executor_acquired=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_block_read=0) (stream_read_seek_policy_changed=1) (stream_read_exceptions=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_version_mismatches=0) (stream_read_seek_bytes_discarded=0) (stream_read_total_bytes=300) (stream_read_vectored_incoming_ranges=3) (stream_read_remote_stream_drain.failures=0) (action_file_opened.failures=0) (action_file_opened=1) (stream_read_block_acquire_read.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_opened=0) (stream_read_block_read.failures=0) (stream_read_seek_forward_operations=0) (stream_read_bytes=300) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations.failures=0) (stream_read_operations=0) (stream_read_vectored_operations=1));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_file_opened.min=7) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=12) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=7) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=24) (stream_read_block_read.max=-1));
means=((stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=7, mean=7.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=36, mean=18.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:04,388 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:04,388 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,388 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,389 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=221&ts=1731778924388
2024-11-16 17:42:04,392 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,392 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,392 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [221] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=221&ts=1731778924388
2024-11-16 17:42:04,402 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:04,402 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:04,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:04,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:04,402 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:04,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:04,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:04,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:04,403 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:04,403 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:04,403 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:04,403 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:04,405 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:04,405 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:04,405 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,405 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [222] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=222&ts=1731778924388
2024-11-16 17:42:04,411 [s3a-transfer-fso-bucket-unbounded-pool2-t45] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,411 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:42:04,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:04,412 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:04,412 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:04,412 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778924344; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:04,412 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:04,412 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:04,412 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:04,412 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,413 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=122&ts=1731778924388
2024-11-16 17:42:04,414 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,423 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [122] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000174&t0=221&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=122&ts=1731778924388
2024-11-16 17:42:04,435 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.012s
2024-11-16 17:42:04,435 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.012s
2024-11-16 17:42:04,435 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.012s
2024-11-16 17:42:04,435 [s3a-transfer-fso-bucket-bounded-pool1-t41] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.022s
2024-11-16 17:42:04,436 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.022s
2024-11-16 17:42:04,436 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.033s
2024-11-16 17:42:04,437 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:04,437 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:04,438 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:04,455 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 45, active threads = 0, queued tasks = 0, completed tasks = 45], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((committer_magic_marker_put.failures=0) (object_select_requests=0) (audit_span_creation=141) (committer_magic_files_created=0) (op_get_delegation_token=0) (committer_bytes_uploaded=0) (stream_read_vectored_combined_ranges=33) (object_continue_list_request=0) (op_open=30) (directories_deleted=0) (committer_commits_completed=0) (store_io_request=425) (stream_read_bytes=10387) (audit_failure=0) (object_list_request.failures=0) (op_mkdirs.failures=0) (op_list_located_status=0) (multipart_upload_completed=0) (object_delete_request=0) (stream_read_bytes_discarded_in_abort=0) (action_http_head_request.failures=0) (op_xattr_get_map.failures=0) (committer_commits_reverted=0) (op_get_file_status=2) (stream_read_vectored_read_bytes_discarded=34508) (op_get_file_checksum=0) (op_mkdirs=36) (op_xattr_get_named_map=0) (stream_write_total_time=0) (object_delete_objects=72) (stream_read_close_operations=30) (op_rename=0) (stream_read_closed=5) (action_executor_acquired=0) (op_is_directory=0) (committer_load_single_pending_file=0) (op_xattr_get_named=0) (store_exists_probe=0) (stream_read_opened=5) (object_metadata_request=102) (op_delete=36) (files_copied_bytes=0) (committer_commit_job.failures=0) (op_exists=0) (op_copy_from_local_file=0) (object_put_request.failures=0) (stream_read_bytes_discarded_in_close=326680) (committer_load_single_pending_file.failures=0) (multipart_upload_part_put_bytes=0) (stream_read_remote_stream_aborted.failures=0) (committer_commits_aborted=0) (multipart_upload_abort_under_path_invoked=0) (op_abort=0) (action_executor_acquired.failures=0) (stream_read_bytes_backwards_on_seek=0) (multipart_instantiated=0) (object_list_request=144) (directories_created=36) (action_file_opened=30) (op_is_file=0) (committer_stage_file_upload.failures=0) (op_create_non_recursive=0) (op_get_content_summary=0) (files_created=36) (audit_access_check_failure=0) (delegation_tokens_issued.failures=0) (audit_request_execution=425) (object_multipart_initiated=0) (ignored_errors=0) (op_is_directory.failures=0) (store_exists_probe.failures=0) (stream_write_queue_duration=0) (action_http_get_request=35) (stream_read_vectored_incoming_ranges=80) (action_http_head_request=102) (stream_write_block_uploads_aborted=0) (store_io_retry=0) (op_hflush=0) (multipart_upload_part_put=0) (op_get_delegation_token.failures=0) (action_http_get_request.failures=0) (multipart_upload_list=0) (stream_read_operations_incomplete=0) (op_is_file.failures=0) (stream_write_block_uploads=36) (op_createfile.failures=0) (object_bulk_delete_request.failures=0) (op_get_file_checksum.failures=0) (op_get_content_summary.failures=0) (committer_materialize_file.failures=0) (stream_read_seek_bytes_discarded=0) (op_openfile=0) (committer_commits.failures=0) (object_copy_requests=0) (committer_commits_created=0) (object_delete_request.failures=0) (multipart_upload_list.failures=0) (object_multipart_aborted.failures=0) (op_xattr_list.failures=0) (object_put_request=72) (object_multipart_initiated.failures=0) (fake_directories_created=0) (object_multipart_aborted=0) (stream_write_block_uploads_committed=0) (op_abort.failures=0) (files_deleted=36) (committer_stage_file_upload=0) (op_delete.failures=0) (op_list_status=0) (object_put_bytes=2359296) (op_create=36) (stream_read_total_bytes=337067) (op_xattr_get_named_map.failures=0) (op_glob_status=0) (op_list_files=0) (op_list_files.failures=0) (op_createfile=0) (stream_aborted=0) (stream_read_unbuffered=2) (stream_write_exceptions=0) (store_io_throttled=0) (op_copy_from_local_file.failures=0) (op_list_status.failures=0) (stream_read_fully_operations=1) (op_access.failures=0) (op_access=0) (stream_read_remote_stream_drain.failures=0) (op_get_file_status.failures=0) (files_copied=0) (object_bulk_delete_request=72) (op_create.failures=0) (op_xattr_get_map=0) (delegation_tokens_issued=0) (stream_read_seek_backward_operations=0) (op_glob_status.failures=0) (op_xattr_list=0) (stream_read_vectored_operations=25) (action_file_opened.failures=0) (files_delete_rejected=0) (multipart_upload_started=0) (stream_write_queue_duration.failures=0) (stream_read_seek_operations=0) (committer_magic_marker_put=0) (stream_read_exceptions=0) (committer_tasks_completed=0) (stream_read_seek_forward_operations=0) (op_exists.failures=0) (stream_write_bytes=2359296) (stream_write_total_data=4718592) (committer_commit_job=0) (object_continue_list_request.failures=0) (object_put_request_completed=72) (stream_read_seek_bytes_skipped=0) (op_rename.failures=0) (committer_materialize_file=0) (stream_read_remote_stream_drain=5) (committer_tasks_failed=0) (op_hsync=0) (committer_jobs_completed=0) (committer_bytes_committed=0) (fake_directories_deleted=36) (stream_read_version_mismatches=0) (op_xattr_get_named.failures=0) (stream_read_operations=5) (stream_read_seek_policy_changed=32) (stream_write_exceptions_completing_upload=0) (multipart_upload_aborted=0) (committer_jobs_failed=0) (stream_read_remote_stream_aborted=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_pending=36) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0));
minimums=((op_get_content_summary.min=-1) (committer_materialize_file.min=-1) (action_file_opened.failures.min=-1) (action_executor_acquired.min=-1) (stream_write_queue_duration.failures.min=-1) (action_file_opened.min=7) (committer_materialize_file.failures.min=-1) (op_list_status.min=-1) (object_put_request.min=36) (multipart_upload_list.min=-1) (object_bulk_delete_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_list_files.min=-1) (op_xattr_get_named.failures.min=-1) (op_create.min=6) (delegation_tokens_issued.failures.min=-1) (delegation_tokens_issued.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_get_map.min=-1) (stream_read_remote_stream_drain.min=3) (op_createfile.min=-1) (op_glob_status.min=-1) (object_multipart_aborted.failures.min=-1) (object_delete_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_mkdirs.failures.min=-1) (op_get_file_status.min=4) (object_put_request.failures.min=-1) (committer_commit_job.min=-1) (op_create.failures.min=-1) (object_list_request.failures.min=-1) (object_bulk_delete_request.min=6) (committer_load_single_pending_file.failures.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.min=5) (op_copy_from_local_file.min=-1) (op_xattr_list.min=-1) (action_http_head_request.min=2) (object_delete_request.min=-1) (op_abort.failures.min=-1) (op_delete.failures.min=-1) (object_continue_list_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_rename.min=-1) (op_list_files.failures.min=-1) (object_multipart_initiated.failures.min=-1) (store_exists_probe.min=-1) (op_exists.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_exists.min=-1) (op_rename.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.min=-1) (op_get_file_checksum.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_directory.min=-1) (action_http_get_request.min=12) (op_delete.min=27) (multipart_upload_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_http_head_request.failures.min=-1) (op_is_file.min=-1) (action_http_get_request.failures.min=-1) (op_mkdirs.min=14) (op_access.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_createfile.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_abort.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_file.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_load_single_pending_file.min=-1) (op_get_delegation_token.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (op_get_content_summary.failures.min=-1) (op_xattr_list.failures.min=-1) (op_access.min=-1) (stream_write_queue_duration.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_copy_from_local_file.failures.min=-1));
maximums=((op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_get_file_status.failures.max=-1) (stream_read_remote_stream_drain.max=10) (stream_write_queue_duration.max=-1) (op_delete.max=87) (object_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_exists.failures.max=-1) (op_list_status.max=-1) (object_bulk_delete_request.max=26) (object_delete_request.max=-1) (op_xattr_get_named.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (store_exists_probe.failures.max=-1) (object_list_request.max=185) (store_exists_probe.max=-1) (committer_stage_file_upload.failures.max=-1) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.max=-1) (multipart_upload_list.max=-1) (op_exists.max=-1) (op_is_directory.max=-1) (op_list_status.failures.max=-1) (op_abort.failures.max=-1) (action_http_get_request.max=28) (object_multipart_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_rename.failures.max=-1) (object_continue_list_request.max=-1) (object_multipart_initiated.failures.max=-1) (committer_materialize_file.max=-1) (action_http_get_request.failures.max=-1) (action_file_opened.failures.max=-1) (op_createfile.max=-1) (action_executor_acquired.failures.max=-1) (op_get_content_summary.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (op_get_content_summary.max=-1) (op_mkdirs.failures.max=-1) (committer_materialize_file.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_list_files.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_multipart_aborted.max=-1) (op_access.failures.max=-1) (op_access.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.max=13) (op_delete.failures.max=-1) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.max=-1) (stream_write_queue_duration.failures.max=-1) (object_put_request.max=77) (op_get_file_checksum.failures.max=-1) (op_mkdirs.max=300) (object_continue_list_request.failures.max=-1) (op_is_file.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (op_create.failures.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.max=-1) (action_http_head_request.max=21) (op_create.max=62) (op_is_directory.failures.max=-1) (op_createfile.failures.max=-1) (op_xattr_list.max=-1) (op_get_file_checksum.max=-1) (op_get_file_status.max=6) (committer_commit_job.failures.max=-1) (op_list_files.failures.max=-1) (committer_commit_job.max=-1) (op_xattr_get_map.max=-1) (op_get_delegation_token.max=-1) (op_xattr_get_map.failures.max=-1));
means=((op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=34, sum=519, mean=15.2647)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=36, sum=1542, mean=42.8333)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=72, sum=1759, mean=24.4306)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=144, sum=1498, mean=10.4028)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=36, sum=438, mean=12.1667)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=14, mean=2.8000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=72, sum=840, mean=11.6667)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=102, sum=501, mean=4.9118)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=30, sum=175, mean=5.8333)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=36, sum=1194, mean=33.1667)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:04,456 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:04,456 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,456 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,456 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,456 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,456 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=223&ts=1731778924456
2024-11-16 17:42:04,471 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.015s
2024-11-16 17:42:04,471 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,472 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,472 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,472 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,472 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=223&ts=1731778924456
2024-11-16 17:42:04,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,478 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:04,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:04,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:04,478 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000175&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=223&ts=1731778924456
2024-11-16 17:42:04,490 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:04,490 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:04,490 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.012s
2024-11-16 17:42:04,490 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:04,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,491 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,491 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,491 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000176 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000176&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=223&ts=1731778924490
2024-11-16 17:42:04,497 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,497 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,497 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:04,498 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5019478155522423548.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:04,498 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5019478155522423548.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (stream_write_total_data=0) (action_executor_acquired.failures=0) (multipart_upload_part_put.failures=0) (object_put_request=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (stream_write_queue_duration=0) (op_hsync=0) (op_abort=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (op_abort.failures=0) (committer_magic_marker_put=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (stream_write_block_uploads=0) (stream_write_bytes=65536) (stream_write_total_time=0) (object_put_request.failures=0) (op_hflush=0) (stream_write_exceptions=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((object_put_request.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5019478155522423548.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,499 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,499 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:04,499 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5019478155522423548.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:04,499 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:04,499 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:04,499 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:04,499 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [123] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000176 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000176/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000176&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=123&ts=1731778924490
2024-11-16 17:42:04,501 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:04,539 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:04,539 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:04,539 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.040s
2024-11-16 17:42:04,541 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5019478155522423548.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:04,541 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5019478155522423548.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,541 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5019478155522423548.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,541 [s3a-transfer-fso-bucket-bounded-pool1-t42] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:04,541 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,542 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (stream_write_queue_duration=0) (multipart_upload_completed.failures=0) (committer_magic_marker_put.failures=0) (action_executor_acquired.failures=0) (object_multipart_initiated.failures=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (op_hflush=0) (stream_write_total_data=65536) (stream_write_exceptions_completing_upload=0) (object_put_request=1) (op_abort.failures=0) (multipart_upload_part_put.failures=0) (object_put_request.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_write_exceptions=0) (multipart_upload_part_put=0) (op_abort=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (action_executor_acquired=0) (stream_write_total_time=0) (stream_write_block_uploads=1));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_put_request.min=40) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_put_request.max=40) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=40, mean=40.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:04,543 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:04,543 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,544 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,544 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:04,544 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000177 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000177/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000177&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=223&ts=1731778924543
2024-11-16 17:42:04,547 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:04,547 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:04,547 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,548 [JUnit-testVectoredReadCapability[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_closed=0) (stream_read_bytes=0) (stream_read_seek_policy_changed=1) (stream_aborted=0) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (stream_read_version_mismatches=0) (stream_read_prefetch_operations.failures=0) (action_file_opened.failures=0) (stream_read_operations=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_block_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_close_operations=1) (action_http_get_request=0) (stream_read_fully_operations=0) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_opened=0) (stream_read_prefetch_operations=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_vectored_combined_ranges=0) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_operations=0) (stream_read_unbuffered=0) (stream_read_block_read.failures=0) (stream_read_vectored_operations=0) (action_file_opened=1) (stream_read_block_acquire_read=0) (stream_read_total_bytes=0) (stream_read_operations_incomplete=0) (action_http_get_request.failures=0) (action_executor_acquired=0) (stream_read_remote_stream_drain=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_block_read.failures.min=-1) (action_file_opened.min=4) (stream_read_block_acquire_read.failures.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_read.failures.max=-1) (action_file_opened.max=4) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:04,549 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:04,549 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,550 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,550 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=223&ts=1731778924549
2024-11-16 17:42:04,552 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,552 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,552 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [223] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=223&ts=1731778924549
2024-11-16 17:42:04,558 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,558 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:04,559 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:04,559 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:04,559 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:04,560 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:04,560 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:04,560 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:04,561 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:04,561 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:04,561 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:04,562 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:04,562 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:04,562 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:04,562 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,563 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [224] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=224&ts=1731778924549
2024-11-16 17:42:04,568 [s3a-transfer-fso-bucket-unbounded-pool2-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,568 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:42:04,568 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:04,568 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:04,569 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:04,569 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778924534; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:04,569 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:04,569 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:04,569 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:04,569 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:04,569 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:04,569 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:04,570 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:04,570 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:04,570 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,570 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,570 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:04,570 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,570 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=125&ts=1731778924549
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,578 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [125] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000178&t0=223&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=125&ts=1731778924549
2024-11-16 17:42:04,585 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:04,585 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:42:04,585 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.007s
2024-11-16 17:42:04,585 [s3a-transfer-fso-bucket-bounded-pool1-t43] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.016s
2024-11-16 17:42:04,588 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.019s
2024-11-16 17:42:04,589 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.027s
2024-11-16 17:42:04,589 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:04,589 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:04,590 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:04,601 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 46, active threads = 0, queued tasks = 0, completed tasks = 46], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_upload_part_put_bytes=0) (op_rename.failures=0) (op_get_file_status.failures=0) (op_mkdirs.failures=0) (op_abort.failures=0) (files_copied_bytes=0) (object_bulk_delete_request.failures=0) (files_deleted=37) (action_http_get_request.failures=0) (committer_tasks_failed=0) (op_xattr_get_map.failures=0) (committer_magic_files_created=0) (op_list_status=0) (op_list_status.failures=0) (delegation_tokens_issued=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_remote_stream_aborted.failures=0) (object_delete_request.failures=0) (op_get_delegation_token.failures=0) (op_is_directory.failures=0) (action_executor_acquired=0) (object_bulk_delete_request=74) (stream_write_queue_duration.failures=0) (stream_read_bytes=10387) (multipart_upload_started=0) (object_put_bytes=2424832) (store_io_retry=0) (op_xattr_get_named_map.failures=0) (object_copy_requests=0) (op_xattr_get_named_map=0) (store_io_throttled=0) (stream_write_bytes=2424832) (audit_span_creation=145) (stream_write_block_uploads=37) (files_delete_rejected=0) (object_list_request.failures=0) (committer_commits_aborted=0) (object_delete_objects=74) (stream_read_seek_operations=0) (object_put_request.failures=0) (stream_read_remote_stream_aborted=0) (op_list_located_status=0) (store_exists_probe=0) (committer_commits_created=0) (multipart_upload_aborted=0) (stream_read_bytes_discarded_in_close=326680) (stream_read_seek_forward_operations=0) (stream_write_exceptions=0) (op_copy_from_local_file.failures=0) (object_continue_list_request=0) (committer_bytes_uploaded=0) (directories_deleted=0) (object_delete_request=0) (action_file_opened.failures=0) (op_exists.failures=0) (action_executor_acquired.failures=0) (stream_read_vectored_incoming_ranges=80) (op_delete=37) (object_metadata_request=105) (action_file_opened=31) (stream_read_operations_incomplete=0) (committer_stage_file_upload.failures=0) (op_exists=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=34508) (committer_commit_job=0) (object_select_requests=0) (store_io_request=436) (op_openfile=0) (op_create_non_recursive=0) (multipart_upload_completed=0) (multipart_upload_list=0) (op_get_file_status=2) (stream_read_seek_backward_operations=0) (stream_read_close_operations=31) (action_http_head_request.failures=0) (stream_read_exceptions=0) (op_get_delegation_token=0) (ignored_errors=0) (files_copied=0) (op_xattr_list.failures=0) (audit_request_execution=436) (stream_write_block_uploads_committed=0) (stream_read_remote_stream_drain=5) (stream_write_queue_duration=0) (op_access.failures=0) (op_get_content_summary=0) (object_put_request_completed=74) (multipart_upload_list.failures=0) (audit_access_check_failure=0) (committer_stage_file_upload=0) (committer_commits_reverted=0) (op_open=31) (op_get_file_checksum.failures=0) (op_xattr_list=0) (stream_read_opened=5) (op_get_file_checksum=0) (op_abort=0) (op_xattr_get_named=0) (action_http_head_request=105) (stream_read_version_mismatches=0) (stream_read_total_bytes=337067) (fake_directories_created=0) (stream_write_total_time=0) (committer_load_single_pending_file=0) (action_http_get_request=35) (stream_write_total_data=4849664) (op_createfile=0) (op_create=37) (delegation_tokens_issued.failures=0) (op_hsync=0) (op_list_files.failures=0) (store_exists_probe.failures=0) (stream_aborted=0) (op_rename=0) (object_multipart_initiated=0) (object_continue_list_request.failures=0) (committer_load_single_pending_file.failures=0) (stream_write_exceptions_completing_upload=0) (op_delete.failures=0) (op_hflush=0) (stream_read_vectored_operations=25) (op_xattr_get_named.failures=0) (object_multipart_aborted.failures=0) (committer_magic_marker_put=0) (stream_read_remote_stream_drain.failures=0) (op_xattr_get_map=0) (directories_created=37) (committer_tasks_completed=0) (stream_read_operations=5) (op_glob_status.failures=0) (op_is_file=0) (committer_materialize_file=0) (stream_write_block_uploads_aborted=0) (committer_magic_marker_put.failures=0) (op_access=0) (stream_read_unbuffered=2) (op_list_files=0) (committer_materialize_file.failures=0) (files_created=37) (stream_read_seek_bytes_discarded=0) (op_create.failures=0) (op_glob_status=0) (fake_directories_deleted=37) (stream_read_seek_policy_changed=33) (stream_read_fully_operations=1) (op_get_content_summary.failures=0) (object_list_request=148) (committer_jobs_completed=0) (object_put_request=74) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (op_is_directory=0) (committer_commit_job.failures=0) (stream_read_vectored_combined_ranges=33) (stream_read_closed=5) (multipart_upload_abort_under_path_invoked=0) (audit_failure=0) (op_mkdirs=37) (committer_commits_completed=0) (multipart_instantiated=0) (committer_commits.failures=0) (committer_jobs_failed=0) (op_copy_from_local_file=0) (op_is_file.failures=0) (committer_bytes_committed=0) (object_multipart_aborted=0) (op_createfile.failures=0));
gauges=((stream_write_block_uploads_pending=37) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((object_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_get_file_status.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_exists.min=-1) (object_bulk_delete_request.failures.min=-1) (object_put_request.min=40) (action_http_head_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_delete.min=27) (op_mkdirs.min=14) (op_xattr_list.failures.min=-1) (op_create.min=6) (op_delete.failures.min=-1) (op_get_delegation_token.min=-1) (object_list_request.min=5) (committer_stage_file_upload.min=-1) (stream_write_queue_duration.failures.min=-1) (op_xattr_get_named.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_list_status.failures.min=-1) (object_continue_list_request.min=-1) (object_put_request.failures.min=-1) (delegation_tokens_issued.min=-1) (action_http_get_request.min=12) (op_is_file.min=-1) (op_get_delegation_token.failures.min=-1) (action_http_get_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (op_access.min=-1) (op_createfile.min=-1) (op_get_file_checksum.min=-1) (object_continue_list_request.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_abort.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_list_files.min=-1) (op_is_directory.min=-1) (object_multipart_aborted.min=-1) (op_create.failures.min=-1) (stream_read_remote_stream_drain.min=3) (object_bulk_delete_request.min=6) (op_glob_status.min=-1) (action_file_opened.failures.min=-1) (op_mkdirs.failures.min=-1) (op_list_files.failures.min=-1) (object_delete_request.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.min=-1) (object_multipart_initiated.min=-1) (op_get_file_status.min=4) (store_exists_probe.min=-1) (store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_xattr_get_map.min=-1) (action_executor_acquired.min=-1) (object_delete_request.min=-1) (op_get_content_summary.min=-1) (op_access.failures.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_xattr_list.min=-1) (op_rename.min=-1) (committer_load_single_pending_file.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_xattr_get_named.min=-1) (op_is_directory.failures.min=-1) (op_exists.failures.min=-1) (action_file_opened.min=4) (committer_commit_job.failures.min=-1) (multipart_upload_list.min=-1) (op_is_file.failures.min=-1) (op_get_content_summary.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_head_request.min=2) (op_xattr_get_named_map.failures.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.min=-1) (committer_magic_marker_put.min=-1));
maximums=((action_http_get_request.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_status.max=6) (stream_write_queue_duration.max=-1) (op_is_file.failures.max=-1) (op_is_directory.failures.max=-1) (op_access.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (op_get_content_summary.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_materialize_file.max=-1) (committer_magic_marker_put.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.failures.max=-1) (object_list_request.max=185) (op_get_content_summary.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.failures.max=-1) (op_mkdirs.max=300) (object_multipart_initiated.max=-1) (op_is_directory.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1) (object_delete_request.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.max=-1) (op_abort.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (op_list_files.failures.max=-1) (action_file_opened.max=13) (op_get_file_status.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_continue_list_request.max=-1) (multipart_upload_list.max=-1) (op_glob_status.max=-1) (store_exists_probe.failures.max=-1) (op_xattr_get_named.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.failures.max=-1) (op_createfile.max=-1) (op_exists.max=-1) (committer_load_single_pending_file.max=-1) (op_mkdirs.failures.max=-1) (action_file_opened.failures.max=-1) (op_create.failures.max=-1) (op_list_files.max=-1) (op_create.max=62) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_map.max=-1) (op_abort.max=-1) (op_rename.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_createfile.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_is_file.max=-1) (op_list_status.failures.max=-1) (committer_stage_file_upload.max=-1) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_access.failures.max=-1) (action_http_get_request.max=28) (op_delete.max=87) (op_delete.failures.max=-1) (action_http_head_request.failures.max=-1) (object_list_request.failures.max=-1) (object_bulk_delete_request.max=26) (op_glob_status.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (committer_commit_job.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.max=77) (action_executor_acquired.failures.max=-1) (op_xattr_list.max=-1) (object_bulk_delete_request.failures.max=-1) (object_put_request.failures.max=-1) (action_http_head_request.max=21) (stream_write_queue_duration.failures.max=-1) (store_exists_probe.max=-1) (object_multipart_initiated.failures.max=-1) (delegation_tokens_issued.max=-1) (op_get_file_checksum.failures.max=-1));
means=((store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=105, sum=511, mean=4.8667)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=37, sum=1228, mean=33.1892)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=148, sum=1530, mean=10.3378)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=34, sum=519, mean=15.2647)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=31, sum=179, mean=5.7742)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=74, sum=1811, mean=24.4730)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=37, sum=446, mean=12.0541)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=14, mean=2.8000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=74, sum=855, mean=11.5541)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=37, sum=1571, mean=42.4595)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:04,601 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:04,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,602 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,602 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,603 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=225&ts=1731778924601
2024-11-16 17:42:04,613 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:42:04,613 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,614 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,614 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,614 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,615 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=225&ts=1731778924601
2024-11-16 17:42:04,617 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,617 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:04,618 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:04,618 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:04,618 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000179&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=225&ts=1731778924601
2024-11-16 17:42:04,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:04,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:04,624 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:42:04,624 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:04,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,624 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,625 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,625 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,625 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000180 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000180&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=225&ts=1731778924624
2024-11-16 17:42:04,630 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:04,630 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,630 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:04,631 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4748035397257521847.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:04,631 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4748035397257521847.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort.failures=0) (multipart_upload_completed.failures=0) (stream_write_queue_duration=0) (stream_write_total_data=0) (op_abort=0) (op_hflush=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (action_executor_acquired.failures=0) (object_put_request.failures=0) (action_executor_acquired=0) (object_multipart_initiated.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (object_put_request=0) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_block_uploads=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((object_put_request.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1));
means=((multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4748035397257521847.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,631 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,632 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:04,632 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4748035397257521847.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:04,632 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:04,632 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:04,632 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:04,632 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:04,632 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [127] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000180 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000180/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000180&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=127&ts=1731778924624
2024-11-16 17:42:04,658 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:04,658 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:04,658 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.026s
2024-11-16 17:42:04,658 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4748035397257521847.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:04,659 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4748035397257521847.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,659 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-4748035397257521847.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,659 [s3a-transfer-fso-bucket-bounded-pool1-t44] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:04,659 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,660 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_abort.failures=0) (stream_write_queue_duration=0) (stream_write_block_uploads=1) (op_abort=0) (op_hflush=0) (multipart_upload_completed.failures=0) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (action_executor_acquired=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (object_put_request=1) (object_multipart_initiated=0) (committer_magic_marker_put=0) (op_hsync=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (multipart_upload_completed=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (stream_write_total_data=65536));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.min=26) (multipart_upload_part_put.failures.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=26) (action_executor_acquired.max=-1) (op_abort.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1));
means=((object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=26, mean=26.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:04,660 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:04,661 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,661 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,661 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:04,661 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000181 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000181&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=225&ts=1731778924660
2024-11-16 17:42:04,664 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:04,664 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:04,664 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,664 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:42:04,664 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:04,664 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 4 , Number of combined ranges 1 
2024-11-16 17:42:04,665 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[1000,1200), range[50,60), range[10,15)] 
2024-11-16 17:42:04,665 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,665 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,665 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,665 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [128] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000181 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1189, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000181/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=10-1199&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000181&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=128&ts=1731778924660
2024-11-16 17:42:04,673 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.008s
2024-11-16 17:42:04,673 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 35 bytes drained from stream 
2024-11-16 17:42:04,673 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 440 bytes drained from stream 
2024-11-16 17:42:04,673 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 400 bytes drained from stream 
2024-11-16 17:42:04,673 [s3a-transfer-fso-bucket-bounded-pool1-t45] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[10,1200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,674 [JUnit-testSomeRandomNonOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain=0) (stream_read_version_mismatches=0) (stream_read_closed=0) (stream_read_block_read=0) (action_http_get_request=1) (stream_read_bytes_discarded_in_abort=0) (action_executor_acquired=0) (stream_read_exceptions=0) (stream_read_seek_backward_operations=0) (stream_read_fully_operations=0) (stream_read_block_read.failures=0) (action_file_opened=1) (stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_seek_forward_operations=0) (stream_read_operations=0) (stream_read_opened=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=315) (stream_read_seek_bytes_discarded=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_aborted=0) (stream_read_vectored_operations=1) (stream_read_close_operations=1) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_read_bytes_discarded=875) (stream_read_block_acquire_read.failures=0) (stream_read_seek_bytes_skipped=0) (action_file_opened.failures=0) (stream_read_operations_incomplete=0) (stream_read_unbuffered=0) (stream_read_bytes=315) (stream_read_seek_operations=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_vectored_combined_ranges=1) (stream_read_vectored_incoming_ranges=4) (stream_read_prefetch_operations.failures=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (stream_read_block_acquire_read=0) (stream_read_remote_stream_drain.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0));
minimums=((stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_block_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=8) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.min=4));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.max=8) (stream_read_block_acquire_read.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:04,676 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:04,676 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,676 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,676 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=225&ts=1731778924676
2024-11-16 17:42:04,682 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,682 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,682 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [225] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=225&ts=1731778924676
2024-11-16 17:42:04,694 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.012s
2024-11-16 17:42:04,694 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:04,694 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:04,694 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:04,694 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:04,694 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:04,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:04,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:04,695 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:04,695 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:04,695 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:04,695 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:04,695 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:04,695 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:04,695 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,696 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [226] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=226&ts=1731778924676
2024-11-16 17:42:04,703 [s3a-transfer-fso-bucket-unbounded-pool2-t47] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:04,703 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:04,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:04,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:04,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:04,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778924654; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:04,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:04,703 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:04,704 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:04,704 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:04,704 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,704 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=130&ts=1731778924676
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,711 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [130] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000182&t0=225&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=130&ts=1731778924676
2024-11-16 17:42:04,719 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:04,719 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:04,719 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:42:04,719 [s3a-transfer-fso-bucket-bounded-pool1-t46] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:42:04,719 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:42:04,719 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.024s
2024-11-16 17:42:04,719 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:04,719 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:04,720 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:04,732 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 47, active threads = 0, queued tasks = 0, completed tasks = 47], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_get_file_checksum.failures=0) (op_rename.failures=0) (op_get_file_status.failures=0) (stream_write_queue_duration.failures=0) (committer_commit_job=0) (stream_write_queue_duration=0) (directories_deleted=0) (object_multipart_initiated=0) (op_openfile=0) (op_delete=38) (stream_read_opened=5) (committer_jobs_completed=0) (committer_magic_files_created=0) (action_http_head_request.failures=0) (op_get_delegation_token.failures=0) (committer_commits.failures=0) (object_delete_request=0) (stream_read_unbuffered=2) (op_mkdirs=38) (stream_read_bytes_discarded_in_close=326680) (stream_write_block_uploads_aborted=0) (object_multipart_initiated.failures=0) (stream_read_seek_policy_changed=34) (stream_read_remote_stream_aborted.failures=0) (files_delete_rejected=0) (op_get_file_checksum=0) (op_get_delegation_token=0) (stream_write_block_uploads=38) (op_hflush=0) (op_is_file=0) (multipart_upload_started=0) (object_put_request.failures=0) (op_xattr_list=0) (stream_read_bytes_backwards_on_seek=0) (op_glob_status.failures=0) (op_copy_from_local_file=0) (stream_read_close_operations=32) (committer_bytes_committed=0) (committer_tasks_failed=0) (committer_commits_reverted=0) (op_rename=0) (multipart_upload_abort_under_path_invoked=0) (committer_stage_file_upload=0) (op_create.failures=0) (op_exists.failures=0) (files_copied=0) (stream_read_bytes_discarded_in_abort=0) (op_createfile.failures=0) (multipart_upload_part_put=0) (committer_commits_created=0) (op_get_file_status=2) (stream_read_remote_stream_drain.failures=0) (fake_directories_created=0) (multipart_upload_list=0) (stream_read_bytes=10702) (store_io_throttled=0) (op_xattr_get_map=0) (stream_read_vectored_operations=26) (stream_write_exceptions=0) (committer_stage_file_upload.failures=0) (stream_write_exceptions_completing_upload=0) (object_select_requests=0) (object_bulk_delete_request=76) (action_http_head_request=108) (stream_read_exceptions=0) (action_executor_acquired=0) (op_create=38) (object_put_request_completed=76) (stream_write_total_time=0) (committer_jobs_failed=0) (op_hsync=0) (multipart_instantiated=0) (object_multipart_aborted.failures=0) (op_is_directory=0) (audit_failure=0) (store_exists_probe=0) (stream_read_seek_backward_operations=0) (op_list_files.failures=0) (object_metadata_request=108) (object_delete_request.failures=0) (object_put_bytes=2490368) (audit_request_execution=448) (object_continue_list_request.failures=0) (op_access.failures=0) (files_copied_bytes=0) (op_xattr_get_named_map.failures=0) (op_list_status.failures=0) (op_delete.failures=0) (stream_read_vectored_read_bytes_discarded=35383) (committer_bytes_uploaded=0) (store_io_request=448) (action_http_get_request.failures=0) (directories_created=38) (op_is_file.failures=0) (stream_read_seek_bytes_discarded=0) (object_put_request=76) (committer_commits_aborted=0) (stream_read_total_bytes=337382) (stream_read_vectored_incoming_ranges=84) (object_continue_list_request=0) (stream_write_total_data=4980736) (op_get_content_summary.failures=0) (object_bulk_delete_request.failures=0) (ignored_errors=0) (stream_read_closed=5) (op_xattr_get_map.failures=0) (stream_read_fully_operations=1) (object_copy_requests=0) (stream_read_operations_incomplete=0) (stream_aborted=0) (op_abort.failures=0) (stream_read_remote_stream_drain=5) (fake_directories_deleted=38) (stream_write_block_uploads_committed=0) (audit_access_check_failure=0) (action_file_opened.failures=0) (op_get_content_summary=0) (multipart_upload_aborted=0) (store_io_retry=0) (committer_magic_marker_put.failures=0) (object_list_request.failures=0) (op_list_files=0) (action_http_get_request=36) (committer_tasks_completed=0) (stream_read_version_mismatches=0) (committer_commits_completed=0) (stream_read_operations=5) (committer_magic_marker_put=0) (op_is_directory.failures=0) (multipart_upload_part_put_bytes=0) (op_xattr_get_named.failures=0) (files_created=38) (action_executor_acquired.failures=0) (op_exists=0) (op_mkdirs.failures=0) (op_abort=0) (op_createfile=0) (stream_read_remote_stream_aborted=0) (committer_materialize_file=0) (stream_write_bytes=2490368) (audit_span_creation=149) (op_create_non_recursive=0) (stream_read_seek_operations=0) (object_multipart_aborted=0) (stream_read_vectored_combined_ranges=34) (delegation_tokens_issued.failures=0) (object_list_request=152) (op_xattr_list.failures=0) (multipart_upload_list.failures=0) (committer_load_single_pending_file.failures=0) (op_access=0) (committer_commit_job.failures=0) (committer_materialize_file.failures=0) (multipart_upload_completed=0) (op_glob_status=0) (stream_read_seek_forward_operations=0) (files_deleted=38) (op_list_status=0) (op_list_located_status=0) (action_file_opened=32) (op_copy_from_local_file.failures=0) (delegation_tokens_issued=0) (store_exists_probe.failures=0) (op_xattr_get_named=0) (op_xattr_get_named_map=0) (object_delete_objects=76) (stream_read_seek_bytes_skipped=0) (committer_load_single_pending_file=0) (op_open=32));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=38) (stream_read_active_memory_in_use=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_read_blocks_in_cache=0));
minimums=((op_copy_from_local_file.failures.min=-1) (action_http_head_request.min=2) (action_http_get_request.min=8) (delegation_tokens_issued.failures.min=-1) (multipart_upload_list.min=-1) (action_file_opened.min=4) (stream_write_queue_duration.min=-1) (op_xattr_get_map.min=-1) (committer_commit_job.min=-1) (op_create.min=6) (op_xattr_get_named_map.failures.min=-1) (object_list_request.failures.min=-1) (object_continue_list_request.min=-1) (committer_magic_marker_put.min=-1) (store_exists_probe.failures.min=-1) (op_is_file.min=-1) (delegation_tokens_issued.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_status.min=4) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_delete.min=25) (op_get_file_checksum.failures.min=-1) (op_xattr_list.failures.min=-1) (object_bulk_delete_request.min=6) (op_is_directory.min=-1) (object_delete_request.min=-1) (op_xattr_list.min=-1) (op_get_delegation_token.min=-1) (op_exists.failures.min=-1) (op_get_content_summary.min=-1) (object_put_request.min=26) (action_executor_acquired.min=-1) (object_put_request.failures.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.failures.min=-1) (op_createfile.failures.min=-1) (op_access.min=-1) (op_abort.failures.min=-1) (op_list_status.min=-1) (op_rename.failures.min=-1) (action_http_get_request.failures.min=-1) (op_delete.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_map.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_named.min=-1) (action_http_head_request.failures.min=-1) (op_rename.min=-1) (op_mkdirs.min=14) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_is_directory.failures.min=-1) (op_copy_from_local_file.min=-1) (committer_materialize_file.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_get_file_checksum.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_abort.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_drain.min=3) (op_get_delegation_token.failures.min=-1) (store_exists_probe.min=-1) (op_access.failures.min=-1) (op_exists.min=-1) (multipart_upload_list.failures.min=-1) (committer_stage_file_upload.min=-1) (object_continue_list_request.failures.min=-1) (op_list_files.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_commit_job.failures.min=-1) (op_is_file.failures.min=-1) (op_create.failures.min=-1) (op_xattr_get_named.failures.min=-1) (op_get_content_summary.failures.min=-1) (op_glob_status.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.failures.min=-1) (action_file_opened.failures.min=-1) (object_list_request.min=5) (object_delete_request.failures.min=-1) (committer_load_single_pending_file.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_aborted.failures.min=-1));
maximums=((committer_magic_marker_put.max=-1) (op_xattr_list.failures.max=-1) (op_list_status.max=-1) (object_list_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.max=-1) (action_file_opened.failures.max=-1) (op_createfile.failures.max=-1) (op_get_file_status.failures.max=-1) (object_list_request.max=185) (committer_materialize_file.max=-1) (object_continue_list_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_exists.max=-1) (op_xattr_get_named.failures.max=-1) (committer_commit_job.failures.max=-1) (op_rename.failures.max=-1) (op_get_delegation_token.failures.max=-1) (op_mkdirs.max=300) (stream_write_queue_duration.max=-1) (op_access.max=-1) (op_rename.max=-1) (op_xattr_get_map.failures.max=-1) (op_xattr_get_map.max=-1) (store_exists_probe.failures.max=-1) (op_delete.max=87) (action_http_get_request.failures.max=-1) (op_is_file.failures.max=-1) (op_list_status.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_exists.failures.max=-1) (op_access.failures.max=-1) (op_get_content_summary.failures.max=-1) (object_put_request.max=77) (op_mkdirs.failures.max=-1) (multipart_upload_list.max=-1) (op_copy_from_local_file.failures.max=-1) (op_abort.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_get_file_checksum.max=-1) (object_bulk_delete_request.max=26) (op_create.max=62) (op_is_file.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_get_content_summary.max=-1) (op_get_file_status.max=6) (committer_commit_job.max=-1) (action_http_get_request.max=28) (op_abort.max=-1) (object_multipart_aborted.max=-1) (op_xattr_list.max=-1) (committer_materialize_file.failures.max=-1) (store_exists_probe.max=-1) (committer_load_single_pending_file.max=-1) (op_is_directory.failures.max=-1) (object_continue_list_request.max=-1) (action_executor_acquired.failures.max=-1) (object_delete_request.max=-1) (object_delete_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_create.failures.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_glob_status.failures.max=-1) (object_multipart_initiated.max=-1) (action_executor_acquired.max=-1) (object_put_request.failures.max=-1) (delegation_tokens_issued.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.max=-1) (action_file_opened.max=13) (op_is_directory.max=-1) (op_list_files.max=-1) (op_copy_from_local_file.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_get_file_checksum.failures.max=-1) (op_list_files.failures.max=-1) (op_createfile.max=-1) (op_glob_status.max=-1) (action_http_head_request.max=21) (object_bulk_delete_request.failures.max=-1) (op_xattr_get_named.max=-1) (action_http_head_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.failures.max=-1));
means=((op_delete.mean=(samples=38, sum=1596, mean=42.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=14, mean=2.8000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=38, sum=1251, mean=32.9211)) (action_file_opened.mean=(samples=32, sum=183, mean=5.7188)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=35, sum=527, mean=15.0571)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=38, sum=453, mean=11.9211)) (object_bulk_delete_request.mean=(samples=76, sum=870, mean=11.4474)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=152, sum=1565, mean=10.2961)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=108, sum=523, mean=4.8426)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=76, sum=1843, mean=24.2500)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:04,733 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:04,733 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,733 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,733 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,733 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,733 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=227&ts=1731778924732
2024-11-16 17:42:04,743 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.010s
2024-11-16 17:42:04,743 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,743 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,743 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,743 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,744 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=227&ts=1731778924732
2024-11-16 17:42:04,746 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,746 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:04,747 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:04,747 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:04,747 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000183&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=227&ts=1731778924732
2024-11-16 17:42:04,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:04,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:04,769 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.023s
2024-11-16 17:42:04,769 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:04,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,769 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,770 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,770 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,770 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000184 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000184&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=227&ts=1731778924769
2024-11-16 17:42:04,775 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:04,775 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,775 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:04,776 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16360553805058034957.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:04,776 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16360553805058034957.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((stream_write_total_time=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (multipart_upload_part_put.failures=0) (stream_write_total_data=0) (op_hsync=0) (object_multipart_initiated=0) (stream_write_exceptions=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (op_abort.failures=0) (op_hflush=0) (multipart_upload_completed=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_put_request=0) (stream_write_bytes=65536) (object_put_request.failures=0) (object_multipart_aborted=0) (stream_write_queue_duration=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_put_request.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1) (action_executor_acquired.failures.max=-1));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16360553805058034957.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,776 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,776 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:04,776 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16360553805058034957.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:04,777 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:04,777 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:04,777 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:04,777 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:04,777 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [132] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000184 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000184/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000184&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=132&ts=1731778924769
2024-11-16 17:42:04,802 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:04,802 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:04,802 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:42:04,802 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16360553805058034957.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:04,802 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16360553805058034957.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,802 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16360553805058034957.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,802 [s3a-transfer-fso-bucket-bounded-pool1-t47] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:04,803 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,803 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_time=0) (object_multipart_aborted=0) (object_multipart_initiated=0) (committer_magic_marker_put.failures=0) (multipart_upload_completed=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (op_abort=0) (op_hsync=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired.failures=0) (object_multipart_aborted.failures=0) (stream_write_total_data=65536) (stream_write_queue_duration=0) (multipart_upload_part_put=0) (op_abort.failures=0) (object_put_request=1) (action_executor_acquired=0) (multipart_upload_completed.failures=0) (stream_write_block_uploads=1) (stream_write_exceptions=0) (committer_magic_marker_put=0) (object_multipart_initiated.failures=0) (stream_write_bytes=65536) (object_put_request.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_part_put.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=25));
maximums=((object_put_request.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=25) (object_multipart_initiated.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1));
means=((op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=25, mean=25.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:04,804 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:04,804 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,804 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,804 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:04,804 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000185 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000185&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=227&ts=1731778924804
2024-11-16 17:42:04,807 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:04,807 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:04,807 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,808 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:42:04,808 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:04,808 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:42:04,808 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[3899,3999), range[7899,7999)] 
2024-11-16 17:42:04,808 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,808 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,808 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,808 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [135] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000185 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=7998, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000185/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-7998&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000185&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=135&ts=1731778924804
2024-11-16 17:42:04,820 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.012s
2024-11-16 17:42:04,820 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3799 bytes drained from stream 
2024-11-16 17:42:04,820 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3900 bytes drained from stream 
2024-11-16 17:42:04,820 [s3a-transfer-fso-bucket-bounded-pool1-t50] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,7999) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,821 [JUnit-testAllRangesMergedIntoOne[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_block_acquire_read=0) (stream_read_closed=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_opened=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=1) (stream_read_vectored_incoming_ranges=3) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_discarded_in_close=0) (stream_aborted=0) (stream_read_prefetch_operations.failures=0) (action_http_get_request=1) (stream_read_block_read.failures=0) (stream_read_total_bytes=300) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (stream_read_bytes=300) (stream_read_remote_stream_drain.failures=0) (action_http_get_request.failures=0) (stream_read_prefetch_operations=0) (action_file_opened.failures=0) (stream_read_block_read=0) (stream_read_remote_stream_drain=0) (stream_read_unbuffered=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=0) (action_executor_acquired=0) (stream_read_vectored_read_bytes_discarded=7699) (stream_read_vectored_combined_ranges=1) (stream_read_exceptions=0) (stream_read_close_operations=1) (action_executor_acquired.failures=0) (action_file_opened=1) (stream_read_operations=0) (stream_read_version_mismatches=0) (stream_read_block_acquire_read.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.min=12) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=3));
maximums=((stream_read_block_read.failures.max=-1) (stream_read_block_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.max=12) (action_file_opened.max=3) (stream_read_remote_stream_drain.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (action_file_opened.failures.max=-1));
means=((action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=12, mean=12.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:04,822 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:04,822 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,822 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,822 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=227&ts=1731778924822
2024-11-16 17:42:04,825 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,825 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,825 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [227] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=227&ts=1731778924822
2024-11-16 17:42:04,831 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,831 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:04,831 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:04,831 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:04,831 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:04,831 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:04,831 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:04,831 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:04,831 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:04,831 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:04,831 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:04,831 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:04,832 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:04,832 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:04,832 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,832 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [228] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=228&ts=1731778924822
2024-11-16 17:42:04,838 [s3a-transfer-fso-bucket-unbounded-pool2-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,838 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.006s
2024-11-16 17:42:04,838 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:04,838 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:04,838 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:04,838 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778924797; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:04,838 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:04,839 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:04,839 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:04,839 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:04,839 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,839 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=133&ts=1731778924822
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.008s
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:04,847 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,848 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [133] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000186&t0=227&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=133&ts=1731778924822
2024-11-16 17:42:04,863 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.016s
2024-11-16 17:42:04,863 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.016s
2024-11-16 17:42:04,863 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.016s
2024-11-16 17:42:04,863 [s3a-transfer-fso-bucket-bounded-pool1-t48] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.024s
2024-11-16 17:42:04,863 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.024s
2024-11-16 17:42:04,863 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.032s
2024-11-16 17:42:04,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:04,863 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:04,866 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:04,881 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 48, active threads = 0, queued tasks = 0, completed tasks = 48], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((stream_read_closed=5) (committer_tasks_failed=0) (object_put_request_completed=78) (op_xattr_list=0) (files_copied=0) (op_create=39) (op_get_delegation_token=0) (directories_created=39) (op_xattr_get_named.failures=0) (action_executor_acquired=0) (delegation_tokens_issued.failures=0) (stream_read_remote_stream_aborted=0) (op_list_located_status=0) (op_rename=0) (object_metadata_request=111) (committer_commit_job=0) (files_delete_rejected=0) (files_deleted=39) (action_http_get_request.failures=0) (op_is_file.failures=0) (stream_write_total_data=5111808) (audit_failure=0) (audit_request_execution=460) (multipart_upload_part_put_bytes=0) (delegation_tokens_issued=0) (stream_write_total_time=0) (stream_write_bytes=2555904) (op_open=33) (object_multipart_initiated.failures=0) (object_put_request.failures=0) (stream_read_seek_operations=0) (action_file_opened=33) (op_glob_status.failures=0) (op_get_delegation_token.failures=0) (op_get_file_status.failures=0) (store_exists_probe.failures=0) (stream_write_exceptions=0) (op_glob_status=0) (committer_load_single_pending_file=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_bytes_discarded_in_close=326680) (op_access=0) (multipart_instantiated=0) (object_bulk_delete_request=78) (committer_commits_reverted=0) (op_xattr_list.failures=0) (committer_commits_completed=0) (op_is_file=0) (committer_bytes_uploaded=0) (multipart_upload_list=0) (op_exists=0) (op_get_file_checksum.failures=0) (op_get_content_summary.failures=0) (object_delete_request.failures=0) (stream_read_fully_operations=1) (action_file_opened.failures=0) (object_bulk_delete_request.failures=0) (files_copied_bytes=0) (op_xattr_get_named_map.failures=0) (object_continue_list_request=0) (object_multipart_aborted=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_version_mismatches=0) (op_hflush=0) (object_list_request.failures=0) (audit_access_check_failure=0) (op_hsync=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_get_named_map=0) (committer_stage_file_upload=0) (stream_write_exceptions_completing_upload=0) (op_is_directory.failures=0) (op_xattr_get_map.failures=0) (op_list_files.failures=0) (op_delete.failures=0) (committer_stage_file_upload.failures=0) (op_exists.failures=0) (stream_read_vectored_combined_ranges=35) (committer_magic_marker_put.failures=0) (store_exists_probe=0) (multipart_upload_completed=0) (ignored_errors=0) (stream_read_seek_policy_changed=35) (object_copy_requests=0) (stream_aborted=0) (stream_read_vectored_read_bytes_discarded=43082) (op_get_content_summary=0) (stream_read_remote_stream_drain.failures=0) (committer_commits_aborted=0) (op_mkdirs.failures=0) (committer_tasks_completed=0) (object_multipart_aborted.failures=0) (stream_read_seek_backward_operations=0) (stream_read_vectored_operations=27) (action_http_head_request.failures=0) (committer_materialize_file=0) (op_copy_from_local_file.failures=0) (committer_commits_created=0) (store_io_retry=0) (multipart_upload_started=0) (stream_read_operations=5) (stream_write_block_uploads=39) (stream_read_operations_incomplete=0) (stream_read_unbuffered=2) (op_create_non_recursive=0) (stream_write_queue_duration=0) (object_delete_request=0) (store_io_throttled=0) (committer_jobs_failed=0) (stream_write_queue_duration.failures=0) (committer_commits.failures=0) (op_openfile=0) (object_multipart_initiated=0) (stream_read_bytes_discarded_in_abort=0) (op_list_files=0) (op_is_directory=0) (committer_magic_files_created=0) (multipart_upload_aborted=0) (stream_read_seek_bytes_skipped=0) (action_executor_acquired.failures=0) (stream_read_exceptions=0) (object_delete_objects=78) (op_abort=0) (directories_deleted=0) (multipart_upload_part_put=0) (store_io_request=460) (committer_jobs_completed=0) (stream_read_seek_bytes_discarded=0) (op_copy_from_local_file=0) (op_list_status=0) (stream_write_block_uploads_committed=0) (committer_magic_marker_put=0) (op_xattr_get_named=0) (op_rename.failures=0) (object_put_request=78) (fake_directories_created=0) (committer_bytes_committed=0) (stream_read_opened=5) (fake_directories_deleted=39) (op_get_file_status=2) (committer_commit_job.failures=0) (op_delete=39) (op_access.failures=0) (stream_write_block_uploads_aborted=0) (op_xattr_get_map=0) (action_http_get_request=37) (stream_read_remote_stream_drain=5) (multipart_upload_list.failures=0) (committer_load_single_pending_file.failures=0) (audit_span_creation=153) (op_createfile.failures=0) (object_put_bytes=2555904) (op_get_file_checksum=0) (stream_read_vectored_incoming_ranges=87) (op_createfile=0) (stream_read_total_bytes=337682) (object_list_request=156) (object_select_requests=0) (stream_read_bytes=11002) (committer_materialize_file.failures=0) (op_list_status.failures=0) (stream_read_seek_forward_operations=0) (op_abort.failures=0) (files_created=39) (object_continue_list_request.failures=0) (op_create.failures=0) (stream_read_close_operations=33) (op_mkdirs=39) (action_http_head_request=111));
gauges=((stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (object_put_bytes_pending=0) (object_put_request_active=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=39) (stream_read_active_prefetch_operations=0));
minimums=((op_is_directory.failures.min=-1) (action_http_head_request.min=2) (op_is_file.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_access.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_status.failures.min=-1) (op_list_status.min=-1) (op_delete.min=25) (op_xattr_list.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_xattr_get_named_map.min=-1) (committer_load_single_pending_file.min=-1) (committer_magic_marker_put.min=-1) (object_delete_request.min=-1) (op_exists.min=-1) (object_put_request.failures.min=-1) (op_abort.min=-1) (stream_write_queue_duration.failures.min=-1) (op_copy_from_local_file.min=-1) (op_mkdirs.min=14) (op_get_content_summary.min=-1) (op_rename.min=-1) (action_executor_acquired.failures.min=-1) (object_bulk_delete_request.min=6) (op_is_directory.min=-1) (op_create.min=6) (delegation_tokens_issued.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=25) (object_multipart_aborted.min=-1) (op_get_content_summary.failures.min=-1) (action_http_get_request.min=12) (stream_read_remote_stream_drain.min=3) (object_delete_request.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (object_list_request.failures.min=-1) (op_xattr_list.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_exists.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_multipart_initiated.min=-1) (op_glob_status.min=-1) (op_get_file_checksum.min=-1) (op_list_files.failures.min=-1) (op_list_status.failures.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_access.failures.min=-1) (action_http_head_request.failures.min=-1) (store_exists_probe.min=-1) (op_delete.failures.min=-1) (op_createfile.min=-1) (op_xattr_get_named.min=-1) (op_xattr_get_named.failures.min=-1) (op_mkdirs.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_is_file.min=-1) (op_get_delegation_token.failures.min=-1) (op_create.failures.min=-1) (op_rename.failures.min=-1) (committer_materialize_file.min=-1) (committer_commit_job.failures.min=-1) (store_exists_probe.failures.min=-1) (stream_write_queue_duration.min=-1) (delegation_tokens_issued.failures.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_list_request.min=5) (committer_stage_file_upload.min=-1) (op_createfile.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_executor_acquired.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.failures.min=-1) (op_xattr_get_map.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.min=4) (op_list_files.min=-1) (op_abort.failures.min=-1) (object_continue_list_request.min=-1));
maximums=((delegation_tokens_issued.failures.max=-1) (op_create.failures.max=-1) (op_exists.max=-1) (committer_materialize_file.failures.max=-1) (op_abort.max=-1) (op_rename.max=-1) (object_multipart_aborted.failures.max=-1) (op_createfile.max=-1) (op_mkdirs.max=300) (multipart_upload_list.max=-1) (action_http_head_request.max=21) (stream_read_remote_stream_drain.max=10) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_put_request.max=77) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_file_checksum.max=-1) (action_executor_acquired.failures.max=-1) (op_get_file_status.max=6) (op_list_status.max=-1) (delegation_tokens_issued.max=-1) (op_get_content_summary.failures.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (op_list_files.max=-1) (op_is_directory.max=-1) (action_http_get_request.max=28) (op_access.failures.max=-1) (op_list_status.failures.max=-1) (op_is_file.max=-1) (committer_commit_job.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.max=87) (op_createfile.failures.max=-1) (object_multipart_initiated.max=-1) (committer_stage_file_upload.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_delete.failures.max=-1) (op_create.max=62) (committer_materialize_file.max=-1) (committer_load_single_pending_file.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.max=13) (object_bulk_delete_request.max=26) (op_xattr_get_named.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.max=185) (committer_magic_marker_put.failures.max=-1) (op_glob_status.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_map.max=-1) (committer_stage_file_upload.max=-1) (committer_load_single_pending_file.failures.max=-1) (object_delete_request.failures.max=-1) (action_http_head_request.failures.max=-1) (op_is_file.failures.max=-1) (op_xattr_list.failures.max=-1) (store_exists_probe.max=-1) (object_list_request.failures.max=-1) (op_xattr_get_named.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_list.max=-1) (stream_write_queue_duration.max=-1) (op_get_content_summary.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_access.max=-1) (op_get_file_checksum.failures.max=-1) (multipart_upload_list.failures.max=-1) (object_put_request.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_status.failures.max=-1) (action_executor_acquired.max=-1) (committer_commit_job.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_copy_from_local_file.max=-1));
means=((object_put_request.mean=(samples=78, sum=1890, mean=24.2308)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=14, mean=2.8000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=78, sum=894, mean=11.4615)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=156, sum=1592, mean=10.2051)) (op_create.mean=(samples=39, sum=460, mean=11.7949)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=39, sum=1287, mean=33.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=36, sum=539, mean=14.9722)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=39, sum=1628, mean=41.7436)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=111, sum=532, mean=4.7928)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=33, sum=186, mean=5.6364)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:04,882 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:04,882 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,882 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,882 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,882 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,882 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=229&ts=1731778924881
2024-11-16 17:42:04,888 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:04,888 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,888 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:04,888 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,888 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,888 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=229&ts=1731778924881
2024-11-16 17:42:04,891 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:04,891 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:04,891 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:04,891 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:04,891 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000187&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=229&ts=1731778924881
2024-11-16 17:42:04,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:04,898 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:04,898 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.007s
2024-11-16 17:42:04,898 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:04,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,899 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,899 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,899 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000188 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000188&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=229&ts=1731778924898
2024-11-16 17:42:04,906 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:04,906 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,906 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:04,907 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-956989578701306490.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:04,907 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-956989578701306490.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_completed.failures=0) (stream_write_exceptions=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (op_hsync=0) (multipart_upload_completed=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (op_abort=0) (op_hflush=0) (object_put_request=0) (stream_write_total_time=0) (op_abort.failures=0) (multipart_upload_part_put=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (stream_write_total_data=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (action_executor_acquired.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((multipart_upload_part_put.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-956989578701306490.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,907 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,908 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:04,908 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-956989578701306490.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:04,908 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:04,908 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:04,908 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:04,908 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:04,909 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [134] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000188 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000188/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000188&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=134&ts=1731778924898
2024-11-16 17:42:04,937 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:04,938 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:04,938 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.030s
2024-11-16 17:42:04,939 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-956989578701306490.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:04,939 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-956989578701306490.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,939 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-956989578701306490.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:04,939 [s3a-transfer-fso-bucket-bounded-pool1-t49] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:04,939 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:04,940 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_aborted.failures=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (op_abort.failures=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (object_multipart_initiated.failures=0) (op_abort=0) (stream_write_total_data=65536) (op_hsync=0) (stream_write_bytes=65536) (multipart_upload_completed=0) (committer_magic_marker_put=0) (stream_write_block_uploads=1) (multipart_upload_completed.failures=0) (object_multipart_initiated=0) (action_executor_acquired.failures=0) (object_put_request=1) (object_multipart_aborted=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put.failures=0) (op_hflush=0) (stream_write_total_time=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((op_abort.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (object_put_request.min=28));
maximums=((op_abort.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=28) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1));
means=((object_put_request.mean=(samples=1, sum=28, mean=28.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:04,941 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:04,941 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:04,942 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:04,942 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:04,942 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=229&ts=1731778924941
2024-11-16 17:42:04,945 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:04,945 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:04,945 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,945 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:04,945 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:04,945 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 5 , Number of combined ranges 3 
2024-11-16 17:42:04,946 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,946 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,946 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,946 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [142] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=1947-2046&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=142&ts=1731778924941
2024-11-16 17:42:04,946 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,947 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,947 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,947 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [144] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=6243, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=8192-14435&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=144&ts=1731778924941
2024-11-16 17:42:04,948 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8192,8292), range[14336,14436), range[10240,10340), range[1947,2047), range[40960,41984)] 
2024-11-16 17:42:04,948 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,949 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:04,949 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:04,949 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [145] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=1023, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=40960-41983&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000189&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=145&ts=1731778924941
2024-11-16 17:42:04,957 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.011s
2024-11-16 17:42:04,958 [s3a-transfer-fso-bucket-bounded-pool1-t51] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[1947,2047) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,957 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:42:04,958 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 1948 bytes drained from stream 
2024-11-16 17:42:04,959 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.010s
2024-11-16 17:42:04,959 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 3996 bytes drained from stream 
2024-11-16 17:42:04,959 [s3a-transfer-fso-bucket-bounded-pool1-t52] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[8192,14436) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,959 [s3a-transfer-fso-bucket-bounded-pool1-t53] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[40960,41984) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:04,960 [JUnit-testVectoredIOEndToEnd[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_seek_policy_changed=1) (stream_read_block_acquire_read=0) (stream_read_fully_operations=0) (stream_read_unbuffered=0) (stream_read_exceptions=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_read_bytes_discarded=5944) (stream_read_bytes_discarded_in_abort=0) (stream_read_operations_incomplete=0) (stream_read_block_read=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_operations=0) (stream_read_vectored_combined_ranges=3) (stream_read_total_bytes=1424) (stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_prefetch_operations=0) (stream_read_seek_operations=0) (action_file_opened=1) (stream_read_seek_bytes_skipped=0) (stream_read_opened=0) (stream_read_bytes_discarded_in_close=0) (stream_read_remote_stream_drain=0) (stream_read_vectored_operations=1) (stream_read_bytes=1424) (action_file_opened.failures=0) (stream_read_close_operations=1) (stream_read_vectored_incoming_ranges=5) (stream_read_block_read.failures=0) (action_http_get_request=3) (action_http_get_request.failures=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_closed=0) (stream_aborted=0) (stream_read_prefetch_operations.failures=0) (action_executor_acquired.failures=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.min=10) (stream_read_block_read.min=-1) (action_file_opened.min=4) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((action_file_opened.max=4) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=11) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_prefetch_operations.max=-1) (action_executor_acquired.failures.max=-1));
means=((stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=3, sum=32, mean=10.6667)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:04,961 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:04,961 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:04,961 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:04,961 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=229&ts=1731778924960
2024-11-16 17:42:04,964 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:04,964 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,964 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [229] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=229&ts=1731778924960
2024-11-16 17:42:04,969 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:04,969 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:04,969 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:04,969 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:04,969 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:04,969 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:04,969 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:04,969 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:04,970 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:04,970 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:04,970 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:04,970 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:04,970 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:04,970 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:04,970 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:04,970 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [235] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=235&ts=1731778924960
2024-11-16 17:42:04,978 [s3a-transfer-fso-bucket-unbounded-pool2-t49] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:04,978 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:04,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:04,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:04,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:04,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778924932; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:04,978 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:04,978 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:04,979 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:04,979 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:04,979 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,980 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=147&ts=1731778924960
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:04,990 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [147] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000190&t0=229&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=147&ts=1731778924960
2024-11-16 17:42:04,998 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:04,998 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:04,999 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:42:04,999 [s3a-transfer-fso-bucket-bounded-pool1-t54] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.019s
2024-11-16 17:42:04,999 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.020s
2024-11-16 17:42:04,999 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:42:04,999 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:04,999 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:05,000 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:05,011 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 49, active threads = 0, queued tasks = 0, completed tasks = 49], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((multipart_instantiated=0) (stream_read_opened=5) (op_access=0) (op_delete=40) (stream_read_remote_stream_drain=5) (multipart_upload_list.failures=0) (store_io_throttled=0) (object_put_request=80) (committer_commits_reverted=0) (stream_write_total_data=5242880) (op_create=40) (object_delete_objects=80) (audit_request_execution=474) (object_list_request.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_named=0) (stream_write_total_time=0) (op_mkdirs=40) (object_bulk_delete_request.failures=0) (committer_materialize_file.failures=0) (object_put_request_completed=80) (stream_read_remote_stream_drain.failures=0) (op_xattr_get_named_map.failures=0) (action_http_head_request=114) (object_multipart_initiated=0) (op_is_directory=0) (op_get_content_summary=0) (stream_read_bytes_backwards_on_seek=0) (op_access.failures=0) (op_get_content_summary.failures=0) (object_put_request.failures=0) (op_get_delegation_token.failures=0) (multipart_upload_list=0) (stream_read_closed=5) (stream_write_block_uploads_committed=0) (directories_deleted=0) (object_put_bytes=2621440) (committer_commits.failures=0) (action_http_get_request.failures=0) (stream_read_close_operations=34) (stream_read_seek_bytes_discarded=0) (fake_directories_created=0) (op_abort=0) (stream_read_remote_stream_aborted.failures=0) (op_abort.failures=0) (action_http_get_request=40) (committer_bytes_committed=0) (files_delete_rejected=0) (object_bulk_delete_request=80) (stream_read_version_mismatches=0) (committer_tasks_completed=0) (op_glob_status.failures=0) (op_get_file_checksum.failures=0) (stream_read_vectored_combined_ranges=38) (stream_read_bytes=12426) (committer_commit_job=0) (multipart_upload_started=0) (files_deleted=40) (multipart_upload_aborted=0) (op_createfile=0) (committer_magic_marker_put.failures=0) (op_list_files=0) (committer_load_single_pending_file=0) (stream_read_operations_incomplete=0) (stream_write_exceptions_completing_upload=0) (committer_stage_file_upload=0) (op_get_file_status=2) (store_io_request=474) (committer_magic_marker_put=0) (action_executor_acquired.failures=0) (stream_write_bytes=2621440) (op_createfile.failures=0) (object_continue_list_request.failures=0) (op_hflush=0) (op_get_delegation_token=0) (action_file_opened=34) (object_delete_request.failures=0) (audit_span_creation=157) (op_list_status=0) (op_list_status.failures=0) (op_list_files.failures=0) (committer_materialize_file=0) (op_copy_from_local_file=0) (multipart_upload_part_put_bytes=0) (op_exists.failures=0) (op_create_non_recursive=0) (op_xattr_get_map.failures=0) (stream_read_exceptions=0) (committer_commits_completed=0) (op_open=34) (committer_commits_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_seek_operations=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (stream_read_fully_operations=1) (stream_read_vectored_incoming_ranges=92) (committer_load_single_pending_file.failures=0) (op_xattr_list.failures=0) (fake_directories_deleted=40) (op_xattr_get_named.failures=0) (op_xattr_list=0) (object_multipart_aborted.failures=0) (stream_read_unbuffered=2) (audit_access_check_failure=0) (op_xattr_get_named_map=0) (directories_created=40) (stream_read_total_bytes=339106) (stream_read_remote_stream_aborted=0) (store_io_retry=0) (action_executor_acquired=0) (object_continue_list_request=0) (stream_aborted=0) (object_multipart_aborted=0) (op_hsync=0) (stream_write_queue_duration.failures=0) (op_glob_status=0) (op_mkdirs.failures=0) (committer_jobs_failed=0) (ignored_errors=0) (delegation_tokens_issued.failures=0) (store_exists_probe=0) (op_delete.failures=0) (stream_read_seek_bytes_skipped=0) (files_created=40) (committer_stage_file_upload.failures=0) (committer_bytes_uploaded=0) (op_copy_from_local_file.failures=0) (action_file_opened.failures=0) (stream_write_block_uploads=40) (action_http_head_request.failures=0) (delegation_tokens_issued=0) (stream_read_vectored_read_bytes_discarded=49026) (op_is_directory.failures=0) (stream_read_vectored_operations=28) (object_delete_request=0) (audit_failure=0) (op_is_file=0) (object_copy_requests=0) (object_metadata_request=114) (committer_commit_job.failures=0) (op_exists=0) (op_is_file.failures=0) (op_create.failures=0) (committer_commits_created=0) (store_exists_probe.failures=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (committer_magic_files_created=0) (op_get_file_status.failures=0) (object_list_request=160) (op_openfile=0) (files_copied=0) (stream_write_block_uploads_aborted=0) (committer_tasks_failed=0) (op_rename.failures=0) (stream_read_bytes_discarded_in_close=326680) (stream_read_seek_policy_changed=36) (stream_read_operations=5) (object_multipart_initiated.failures=0) (object_select_requests=0) (op_get_file_checksum=0) (stream_read_seek_forward_operations=0) (committer_jobs_completed=0) (op_list_located_status=0) (op_rename=0) (op_xattr_get_map=0) (files_copied_bytes=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (client_side_encryption_enabled=0) (object_put_request_active=0) (stream_write_block_uploads_pending=40) (object_put_bytes_pending=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0));
minimums=((committer_commit_job.min=-1) (object_list_request.min=5) (op_access.failures.min=-1) (op_is_directory.failures.min=-1) (op_rename.failures.min=-1) (op_list_files.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_map.min=-1) (object_continue_list_request.min=-1) (store_exists_probe.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_files.failures.min=-1) (op_get_content_summary.min=-1) (committer_load_single_pending_file.min=-1) (action_file_opened.min=4) (op_delete.failures.min=-1) (object_multipart_aborted.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_create.min=6) (stream_write_queue_duration.failures.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.failures.min=-1) (op_xattr_list.failures.min=-1) (op_list_status.failures.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.min=-1) (op_get_file_checksum.min=-1) (op_exists.failures.min=-1) (object_multipart_initiated.min=-1) (stream_read_remote_stream_drain.min=3) (op_is_directory.min=-1) (committer_materialize_file.min=-1) (action_http_get_request.min=10) (op_is_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_get_file_status.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_list.min=-1) (op_mkdirs.min=14) (op_create.failures.min=-1) (op_list_status.min=-1) (op_exists.min=-1) (op_delete.min=25) (action_file_opened.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_magic_marker_put.min=-1) (op_get_delegation_token.min=-1) (object_list_request.failures.min=-1) (object_put_request.min=28) (op_get_file_checksum.failures.min=-1) (op_access.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_rename.min=-1) (op_xattr_get_named.failures.min=-1) (committer_commit_job.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named.min=-1) (op_createfile.min=-1) (op_glob_status.min=-1) (op_get_file_status.min=4) (op_glob_status.failures.min=-1) (op_mkdirs.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (object_delete_request.min=-1) (action_http_head_request.min=2) (committer_magic_marker_put.failures.min=-1) (action_http_head_request.failures.min=-1) (object_put_request.failures.min=-1) (committer_stage_file_upload.min=-1) (op_createfile.failures.min=-1) (object_delete_request.failures.min=-1) (multipart_upload_list.min=-1) (committer_materialize_file.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (store_exists_probe.min=-1) (multipart_upload_list.failures.min=-1) (action_http_get_request.failures.min=-1) (op_is_file.failures.min=-1) (op_abort.failures.min=-1) (object_bulk_delete_request.min=6) (object_continue_list_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (stream_read_remote_stream_aborted.min=-1));
maximums=((object_list_request.failures.max=-1) (op_mkdirs.max=300) (op_list_status.failures.max=-1) (op_rename.failures.max=-1) (op_get_file_checksum.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_list.max=-1) (delegation_tokens_issued.failures.max=-1) (op_rename.max=-1) (committer_commit_job.max=-1) (store_exists_probe.max=-1) (op_access.max=-1) (op_xattr_list.failures.max=-1) (committer_materialize_file.max=-1) (op_create.failures.max=-1) (op_glob_status.max=-1) (object_continue_list_request.max=-1) (object_list_request.max=185) (committer_stage_file_upload.max=-1) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.failures.max=-1) (committer_commit_job.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=13) (op_is_file.max=-1) (op_is_directory.max=-1) (op_xattr_get_map.failures.max=-1) (op_copy_from_local_file.max=-1) (committer_materialize_file.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.max=77) (op_glob_status.failures.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.max=-1) (op_create.max=62) (op_get_file_status.max=6) (object_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (op_list_status.max=-1) (op_xattr_get_named.failures.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (op_get_file_status.failures.max=-1) (action_http_head_request.max=21) (op_exists.max=-1) (stream_write_queue_duration.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=28) (object_delete_request.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_createfile.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.max=10) (op_list_files.failures.max=-1) (op_xattr_get_named.max=-1) (op_is_directory.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_access.failures.max=-1) (action_http_get_request.failures.max=-1) (op_mkdirs.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_abort.max=-1) (op_xattr_get_map.max=-1) (object_multipart_aborted.failures.max=-1) (op_delete.max=87) (op_copy_from_local_file.failures.max=-1) (op_xattr_list.max=-1) (multipart_upload_list.failures.max=-1) (op_get_delegation_token.failures.max=-1) (object_continue_list_request.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (store_exists_probe.failures.max=-1) (object_put_request.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_bulk_delete_request.max=26) (object_bulk_delete_request.failures.max=-1) (op_exists.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.max=-1) (op_get_content_summary.failures.max=-1) (op_createfile.failures.max=-1) (op_delete.failures.max=-1) (op_is_file.failures.max=-1));
means=((op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=5, sum=14, mean=2.8000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=40, sum=1658, mean=41.4500)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=34, sum=190, mean=5.5882)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=40, sum=468, mean=11.7000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=114, sum=540, mean=4.7368)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=40, sum=1303, mean=32.5750)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=160, sum=1618, mean=10.1125)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=80, sum=912, mean=11.4000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=80, sum=1925, mean=24.0625)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=39, sum=571, mean=14.6410)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:05,011 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:05,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,011 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,012 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,012 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,012 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925011
2024-11-16 17:42:05,018 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,018 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,018 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925011
2024-11-16 17:42:05,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,022 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:05,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:05,022 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:05,022 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000191&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925011
2024-11-16 17:42:05,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:05,031 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:05,031 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:05,031 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:05,032 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,032 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,032 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,032 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,032 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000192 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000192&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925032
2024-11-16 17:42:05,043 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.011s
2024-11-16 17:42:05,044 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,044 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:05,044 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16551960481929536179.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:05,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16551960481929536179.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((multipart_upload_part_put.failures=0) (object_multipart_aborted.failures=0) (op_hflush=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (object_put_request=0) (action_executor_acquired.failures=0) (action_executor_acquired=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (object_multipart_initiated=0) (stream_write_block_uploads=0) (committer_magic_marker_put=0) (stream_write_total_data=0) (multipart_upload_completed=0) (op_hsync=0) (object_put_request.failures=0) (op_abort=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.max=-1) (object_multipart_aborted.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16551960481929536179.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,045 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,046 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:05,046 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16551960481929536179.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:05,046 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:05,046 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:05,046 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:05,046 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:05,046 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [149] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000192 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000192/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000192&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=149&ts=1731778925032
2024-11-16 17:42:05,087 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:05,087 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:05,087 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.041s
2024-11-16 17:42:05,087 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16551960481929536179.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:05,087 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16551960481929536179.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,087 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-16551960481929536179.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,087 [s3a-transfer-fso-bucket-bounded-pool1-t55] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:05,088 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,090 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (stream_write_exceptions=0) (stream_write_bytes=65536) (object_multipart_aborted=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (committer_magic_marker_put.failures=0) (stream_write_total_time=0) (op_abort=0) (object_multipart_initiated.failures=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_part_put=0) (multipart_upload_completed.failures=0) (object_multipart_aborted.failures=0) (action_executor_acquired=0) (object_multipart_initiated=0) (op_abort.failures=0) (multipart_upload_completed=0) (stream_write_block_uploads=1) (stream_write_queue_duration=0) (stream_write_total_data=65536) (committer_magic_marker_put=0) (object_put_request=1) (op_hflush=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.min=41) (multipart_upload_completed.min=-1));
maximums=((multipart_upload_completed.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.max=41) (multipart_upload_part_put.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=41, mean=41.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:05,090 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:05,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:05,091 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925090
2024-11-16 17:42:05,094 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:05,094 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:05,094 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,094 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:42:05,094 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(881)) - Not merging the ranges as they are disjoint
2024-11-16 17:42:05,095 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,200)] 
2024-11-16 17:42:05,095 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1015)) - Start reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,095 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,095 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: lazySeek
2024-11-16 17:42:05,095 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readSingleRange
2024-11-16 17:42:05,095 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [152] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=99, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-199&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=152&ts=1731778925090
2024-11-16 17:42:05,096 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:reopen(269)) - reopen(s3a://fso-bucket/test/vectored_file.txt) for read from new offset range[100-65536], length=100, streamPosition=0, nextReadPosition=100, policy=default
2024-11-16 17:42:05,096 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,096 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=65435, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=100-65535&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000193&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925090
2024-11-16 17:42:05,108 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readSingleRange: duration 0:00.013s
2024-11-16 17:42:05,108 [s3a-transfer-fso-bucket-bounded-pool1-t56] DEBUG s3a.S3AInputStream (S3AInputStream.java:readSingleRange(1033)) - Finished reading range range[100,200) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,109 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - lazySeek: duration 0:00.014s
2024-11-16 17:42:05,109 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: read
2024-11-16 17:42:05,109 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - read: duration 0:00.000s
2024-11-16 17:42:05,109 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:closeStream(669)) - Closing stream close() operation: soft
2024-11-16 17:42:05,109 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(192)) - drain or abort reason close() operation remaining=65336 abort=false
2024-11-16 17:42:05,109 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(202)) - draining 65336 bytes
2024-11-16 17:42:05,109 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 7537 bytes
2024-11-16 17:42:05,110 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:05,110 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:05,110 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 16384 bytes
2024-11-16 17:42:05,110 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(211)) - read 8647 bytes
2024-11-16 17:42:05,110 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(219)) - Drained stream of 65336 bytes
2024-11-16 17:42:05,110 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG impl.SDKStreamDrainer (SDKStreamDrainer.java:drainOrAbortHttpStream(233)) - Closing stream
2024-11-16 17:42:05,111 [JUnit-testVectoredReadAndReadFully[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_vectored_combined_ranges=1) (stream_read_block_acquire_read=0) (stream_read_unbuffered=0) (stream_read_bytes=200) (stream_aborted=0) (stream_read_close_operations=1) (action_executor_acquired=0) (action_file_opened.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_opened=1) (action_http_get_request=2) (stream_read_closed=1) (action_executor_acquired.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_block_acquire_read.failures=0) (stream_read_prefetch_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_block_read=0) (stream_read_fully_operations=1) (stream_read_vectored_operations=1) (stream_read_bytes_discarded_in_close=65336) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_operations=0) (stream_read_operations=1) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_bytes_backwards_on_seek=0) (action_http_get_request.failures=0) (stream_read_remote_stream_drain=1) (stream_read_block_read.failures=0) (stream_read_total_bytes=65536) (stream_read_vectored_incoming_ranges=1) (stream_read_seek_backward_operations=0) (stream_read_seek_forward_operations=0) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (stream_read_remote_stream_aborted=0) (stream_read_exceptions=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (stream_read_seek_bytes_skipped=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_read_gauge_input_policy=0));
minimums=((action_http_get_request.failures.min=-1) (action_http_get_request.min=13) (action_file_opened.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=1) (action_file_opened.min=3) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_file_opened.max=3) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_block_acquire_read.max=-1) (action_http_get_request.max=13) (stream_read_block_read.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=1));
means=((stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=1, sum=1, mean=1.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=2, sum=26, mean=13.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:05,112 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:05,112 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,112 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,112 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925112
2024-11-16 17:42:05,118 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,118 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,118 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [236] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=236&ts=1731778925112
2024-11-16 17:42:05,127 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:05,127 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:05,127 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:05,127 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:05,127 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:05,127 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:05,127 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:05,127 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:05,128 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:05,128 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:05,128 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:05,128 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:05,129 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:05,129 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:05,130 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,130 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [237] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=237&ts=1731778925112
2024-11-16 17:42:05,136 [s3a-transfer-fso-bucket-unbounded-pool2-t50] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,136 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:42:05,136 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:05,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:05,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:05,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778925081; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:05,137 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:05,137 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:05,137 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:05,137 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:05,138 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,138 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=154&ts=1731778925112
2024-11-16 17:42:05,145 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:05,145 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:42:05,145 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:42:05,145 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:05,145 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:05,146 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,146 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,146 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:05,146 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,146 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [154] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000194&t0=236&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=154&ts=1731778925112
2024-11-16 17:42:05,152 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.006s
2024-11-16 17:42:05,153 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:42:05,153 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:42:05,153 [s3a-transfer-fso-bucket-bounded-pool1-t57] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:42:05,153 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:42:05,153 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.025s
2024-11-16 17:42:05,153 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:05,153 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:05,154 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:05,165 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 50, active threads = 0, queued tasks = 0, completed tasks = 50], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_multipart_aborted.failures=0) (op_list_located_status=0) (stream_write_exceptions_completing_upload=0) (op_get_delegation_token=0) (fake_directories_created=0) (committer_jobs_failed=0) (committer_commits.failures=0) (object_continue_list_request=0) (op_hsync=0) (op_copy_from_local_file.failures=0) (files_deleted=41) (fake_directories_deleted=41) (action_file_opened.failures=0) (stream_read_close_operations=35) (stream_write_queue_duration=0) (store_exists_probe.failures=0) (stream_read_unbuffered=2) (object_delete_request.failures=0) (committer_bytes_uploaded=0) (op_createfile=0) (committer_tasks_failed=0) (stream_write_queue_duration.failures=0) (stream_read_seek_forward_operations=0) (committer_commits_completed=0) (op_get_delegation_token.failures=0) (stream_read_total_bytes=404642) (stream_read_vectored_incoming_ranges=93) (committer_stage_file_upload.failures=0) (action_file_opened=35) (op_get_file_checksum=0) (op_xattr_get_map.failures=0) (stream_read_opened=6) (committer_load_single_pending_file=0) (stream_read_remote_stream_aborted.failures=0) (op_rename.failures=0) (op_xattr_list=0) (stream_write_block_uploads_committed=0) (committer_magic_marker_put=0) (op_access=0) (multipart_upload_part_put_bytes=0) (op_delete=41) (files_copied_bytes=0) (op_get_file_checksum.failures=0) (action_http_head_request=117) (op_access.failures=0) (object_put_request.failures=0) (stream_read_remote_stream_aborted=0) (committer_load_single_pending_file.failures=0) (op_glob_status.failures=0) (stream_read_seek_bytes_skipped=0) (stream_read_fully_operations=2) (action_http_head_request.failures=0) (object_multipart_initiated.failures=0) (op_xattr_get_named.failures=0) (object_put_request_completed=82) (stream_read_remote_stream_drain=6) (object_metadata_request=117) (op_mkdirs=41) (audit_span_creation=161) (op_is_directory=0) (op_list_status.failures=0) (op_hflush=0) (object_list_request=164) (files_created=41) (stream_write_block_uploads=41) (op_create_non_recursive=0) (store_io_request=487) (multipart_upload_abort_under_path_invoked=0) (object_bulk_delete_request.failures=0) (op_exists=0) (stream_read_bytes=12626) (committer_magic_marker_put.failures=0) (object_bulk_delete_request=82) (multipart_upload_list=0) (store_io_retry=0) (op_createfile.failures=0) (stream_read_vectored_operations=29) (stream_write_bytes=2686976) (op_is_file.failures=0) (stream_read_seek_bytes_discarded=0) (committer_magic_files_created=0) (object_select_requests=0) (object_copy_requests=0) (object_list_request.failures=0) (op_create.failures=0) (op_xattr_get_named_map.failures=0) (files_copied=0) (committer_materialize_file.failures=0) (op_xattr_get_named=0) (files_delete_rejected=0) (op_xattr_get_named_map=0) (committer_commits_reverted=0) (multipart_instantiated=0) (op_glob_status=0) (stream_read_seek_policy_changed=37) (stream_write_block_uploads_aborted=0) (stream_aborted=0) (op_abort=0) (multipart_upload_list.failures=0) (object_multipart_aborted=0) (stream_read_closed=6) (object_continue_list_request.failures=0) (delegation_tokens_issued.failures=0) (op_list_status=0) (multipart_upload_part_put=0) (op_xattr_get_map=0) (committer_tasks_completed=0) (stream_write_exceptions=0) (committer_commit_job=0) (op_list_files=0) (committer_commits_created=0) (stream_read_seek_backward_operations=0) (store_exists_probe=0) (stream_read_version_mismatches=0) (object_delete_objects=82) (op_exists.failures=0) (committer_materialize_file=0) (op_get_content_summary=0) (audit_failure=0) (object_delete_request=0) (op_get_content_summary.failures=0) (op_get_file_status=2) (stream_read_remote_stream_drain.failures=0) (op_mkdirs.failures=0) (committer_stage_file_upload=0) (object_put_request=82) (op_openfile=0) (audit_access_check_failure=0) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired.failures=0) (action_http_get_request.failures=0) (op_copy_from_local_file=0) (action_executor_acquired=0) (op_create=41) (stream_read_operations=6) (committer_commit_job.failures=0) (directories_deleted=0) (delegation_tokens_issued=0) (object_put_bytes=2686976) (multipart_upload_completed=0) (op_rename=0) (op_list_files.failures=0) (ignored_errors=0) (stream_read_operations_incomplete=0) (op_abort.failures=0) (stream_read_bytes_discarded_in_close=392016) (stream_read_exceptions=0) (committer_commits_aborted=0) (object_multipart_initiated=0) (stream_read_vectored_read_bytes_discarded=49026) (stream_read_seek_operations=0) (op_is_file=0) (committer_bytes_committed=0) (op_is_directory.failures=0) (committer_jobs_completed=0) (store_io_throttled=0) (action_http_get_request=42) (stream_read_vectored_combined_ranges=39) (op_xattr_list.failures=0) (stream_write_total_data=5373952) (multipart_upload_started=0) (op_get_file_status.failures=0) (op_delete.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_write_total_time=0) (op_open=35) (audit_request_execution=487) (multipart_upload_aborted=0) (directories_created=41));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_active=0) (stream_write_block_uploads_pending=41) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (object_put_bytes_pending=0) (object_put_request_active=0));
minimums=((committer_load_single_pending_file.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.failures.min=-1) (action_http_get_request.failures.min=-1) (op_copy_from_local_file.min=-1) (multipart_upload_list.min=-1) (object_multipart_aborted.min=-1) (op_xattr_get_map.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_head_request.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (op_abort.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_aborted.failures.min=-1) (committer_commit_job.failures.min=-1) (op_glob_status.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (op_get_file_checksum.failures.min=-1) (object_bulk_delete_request.min=6) (action_file_opened.min=3) (action_http_get_request.min=13) (op_access.min=-1) (op_list_files.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_xattr_get_named.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_list_status.failures.min=-1) (op_xattr_list.min=-1) (op_get_content_summary.min=-1) (committer_materialize_file.failures.min=-1) (op_glob_status.min=-1) (op_access.failures.min=-1) (op_create.min=6) (store_exists_probe.failures.min=-1) (op_is_file.min=-1) (object_multipart_initiated.failures.min=-1) (op_is_file.failures.min=-1) (op_exists.min=-1) (op_exists.failures.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=41) (object_bulk_delete_request.failures.min=-1) (op_get_file_status.min=4) (op_is_directory.failures.min=-1) (action_executor_acquired.failures.min=-1) (committer_stage_file_upload.min=-1) (action_http_head_request.min=2) (op_mkdirs.min=14) (op_is_directory.min=-1) (op_create.failures.min=-1) (op_xattr_get_named.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.failures.min=-1) (object_continue_list_request.min=-1) (stream_write_queue_duration.failures.min=-1) (object_put_request.failures.min=-1) (op_mkdirs.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (op_createfile.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (committer_materialize_file.min=-1) (action_executor_acquired.min=-1) (op_delete.failures.min=-1) (object_list_request.failures.min=-1) (stream_write_queue_duration.min=-1) (op_delete.min=25) (object_continue_list_request.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_rename.min=-1) (object_list_request.min=5) (committer_commit_job.min=-1) (action_file_opened.failures.min=-1) (op_rename.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (op_list_files.min=-1) (op_list_status.min=-1) (op_get_file_checksum.min=-1) (delegation_tokens_issued.min=-1) (store_exists_probe.min=-1) (object_delete_request.min=-1) (op_get_content_summary.failures.min=-1));
maximums=((op_get_content_summary.failures.max=-1) (op_xattr_get_named_map.max=-1) (object_delete_request.max=-1) (action_http_head_request.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (action_file_opened.max=13) (op_glob_status.failures.max=-1) (op_get_file_status.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_delegation_token.max=-1) (object_continue_list_request.failures.max=-1) (op_abort.max=-1) (stream_write_queue_duration.max=-1) (committer_stage_file_upload.max=-1) (op_get_file_checksum.failures.max=-1) (op_delete.max=87) (object_put_request.failures.max=-1) (op_xattr_list.max=-1) (op_access.max=-1) (object_multipart_initiated.failures.max=-1) (op_list_status.failures.max=-1) (committer_commit_job.max=-1) (object_list_request.failures.max=-1) (op_delete.failures.max=-1) (op_list_status.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (object_list_request.max=185) (object_bulk_delete_request.max=26) (op_create.failures.max=-1) (op_createfile.max=-1) (delegation_tokens_issued.max=-1) (action_http_get_request.failures.max=-1) (op_is_directory.max=-1) (op_get_file_checksum.max=-1) (op_xattr_list.failures.max=-1) (op_list_files.max=-1) (committer_magic_marker_put.max=-1) (op_is_directory.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (action_http_get_request.max=28) (object_delete_request.failures.max=-1) (committer_commit_job.failures.max=-1) (op_exists.max=-1) (store_exists_probe.failures.max=-1) (object_continue_list_request.max=-1) (committer_magic_marker_put.failures.max=-1) (op_create.max=62) (op_xattr_get_map.max=-1) (op_mkdirs.max=300) (delegation_tokens_issued.failures.max=-1) (op_mkdirs.failures.max=-1) (op_access.failures.max=-1) (op_glob_status.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (op_abort.failures.max=-1) (action_http_head_request.max=21) (op_exists.failures.max=-1) (object_multipart_aborted.max=-1) (committer_load_single_pending_file.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (object_multipart_initiated.max=-1) (op_copy_from_local_file.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_xattr_get_named.max=-1) (op_rename.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_drain.max=10) (action_executor_acquired.max=-1) (op_createfile.failures.max=-1) (object_put_request.max=77) (committer_materialize_file.max=-1) (op_is_file.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_get_content_summary.max=-1) (committer_load_single_pending_file.max=-1) (op_rename.failures.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (store_exists_probe.max=-1) (op_is_file.max=-1) (op_get_file_status.max=6) (op_get_delegation_token.failures.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_copy_from_local_file.max=-1));
means=((op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=41, sum=1323, mean=32.2683)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=82, sum=1975, mean=24.0854)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=41, sum=1684, mean=41.0732)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=35, sum=193, mean=5.5143)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=117, sum=551, mean=4.7094)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=41, sum=481, mean=11.7317)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=15, mean=2.5000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=597, mean=14.5610)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=82, sum=925, mean=11.2805)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=164, sum=1650, mean=10.0610)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:05,165 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:05,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,165 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,166 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,166 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,166 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=238&ts=1731778925165
2024-11-16 17:42:05,171 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:05,171 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,171 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,171 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,171 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,171 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=238&ts=1731778925165
2024-11-16 17:42:05,173 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,174 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:05,174 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:05,174 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:05,174 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000195&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=238&ts=1731778925165
2024-11-16 17:42:05,181 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:05,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:05,182 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:42:05,182 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:05,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,182 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,182 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,182 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000196 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000196&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=238&ts=1731778925182
2024-11-16 17:42:05,188 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,188 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,189 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:05,189 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8777131299696325077.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:05,190 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8777131299696325077.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((action_executor_acquired=0) (op_abort=0) (op_hsync=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (object_multipart_initiated=0) (stream_write_total_data=0) (stream_write_exceptions=0) (stream_write_block_uploads=0) (object_put_request.failures=0) (multipart_upload_completed=0) (action_executor_acquired.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (multipart_upload_part_put.failures=0) (multipart_upload_completed.failures=0) (object_put_request=0) (object_multipart_aborted.failures=0) (stream_write_exceptions_completing_upload=0) (op_abort.failures=0) (op_hflush=0) (stream_write_total_time=0) (object_multipart_aborted=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.min=-1) (object_multipart_aborted.min=-1) (object_put_request.failures.min=-1));
maximums=((object_multipart_initiated.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_aborted.max=-1));
means=((committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8777131299696325077.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,190 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,190 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:05,190 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8777131299696325077.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:05,191 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:05,191 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:05,191 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:05,191 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:05,191 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [158] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000196 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000196/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000196&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=158&ts=1731778925182
2024-11-16 17:42:05,218 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:05,219 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:05,219 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.028s
2024-11-16 17:42:05,219 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8777131299696325077.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:05,219 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8777131299696325077.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,219 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8777131299696325077.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,219 [s3a-transfer-fso-bucket-bounded-pool1-t58] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:05,219 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,220 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_total_data=65536) (stream_write_total_time=0) (multipart_upload_completed.failures=0) (stream_write_bytes=65536) (object_put_request=1) (multipart_upload_completed=0) (multipart_upload_part_put=0) (op_abort.failures=0) (object_multipart_initiated.failures=0) (committer_magic_marker_put=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_exceptions_completing_upload=0) (stream_write_exceptions=0) (stream_write_block_uploads=1) (object_multipart_initiated=0) (stream_write_queue_duration=0) (object_multipart_aborted.failures=0) (object_multipart_aborted=0) (op_hflush=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (op_abort=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((committer_magic_marker_put.failures.min=-1) (multipart_upload_completed.min=-1) (op_abort.failures.min=-1) (object_put_request.min=27) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_aborted.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.min=-1));
maximums=((object_multipart_aborted.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_completed.max=-1) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_put_request.max=27));
means=((multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=27, mean=27.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:05,221 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:05,222 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,222 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,222 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:05,222 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [239] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000197 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000197/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000197&t0=239&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=239&ts=1731778925222
2024-11-16 17:42:05,225 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:05,225 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:05,225 [s3a-transfer-fso-bucket-unbounded-pool2-t51] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,226 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[100,600), range[400,900)] 
2024-11-16 17:42:05,227 [JUnit-testOverlappingRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (stream_read_bytes=0) (stream_read_block_acquire_read=0) (stream_read_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_fully_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_version_mismatches=0) (stream_read_vectored_combined_ranges=0) (action_file_opened.failures=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_seek_backward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_prefetch_operations=0) (action_http_get_request=0) (stream_read_seek_operations=0) (stream_read_vectored_operations=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_close=0) (stream_read_closed=0) (stream_read_operations_incomplete=0) (stream_read_remote_stream_aborted.failures=0) (stream_aborted=0) (stream_read_total_bytes=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_seek_bytes_discarded=0) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (action_executor_acquired=0) (stream_read_unbuffered=0) (stream_read_remote_stream_drain=0) (stream_read_close_operations=1) (stream_read_exceptions=0) (stream_read_block_read.failures=0) (stream_read_opened=0));
gauges=((stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_gauge_input_policy=0) (stream_read_active_prefetch_operations=0));
minimums=((action_http_get_request.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_read.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=3) (stream_read_prefetch_operations.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1));
maximums=((stream_read_remote_stream_drain.max=-1) (stream_read_block_acquire_read.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.max=3) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.failures.max=-1));
means=((stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:05,229 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:05,229 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,230 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,231 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=238&ts=1731778925229
2024-11-16 17:42:05,233 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,234 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,234 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [238] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=238&ts=1731778925229
2024-11-16 17:42:05,241 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:05,242 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:05,242 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:05,242 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:05,243 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:05,243 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:05,244 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:05,244 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:05,244 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:05,245 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:05,245 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:05,246 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:05,246 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:05,246 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:05,247 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,247 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [240] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=240&ts=1731778925229
2024-11-16 17:42:05,253 [s3a-transfer-fso-bucket-unbounded-pool2-t52] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,254 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:05,254 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:05,254 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:05,255 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:05,255 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778925214; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:05,255 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:05,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:05,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:05,256 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:05,257 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:05,257 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:05,257 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:05,257 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:05,257 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,257 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,257 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:05,257 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,258 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=160&ts=1731778925229
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,264 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:05,265 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,265 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [160] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000198&t0=238&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=160&ts=1731778925229
2024-11-16 17:42:05,272 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:05,272 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:05,272 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:42:05,272 [s3a-transfer-fso-bucket-bounded-pool1-t59] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:42:05,273 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.016s
2024-11-16 17:42:05,273 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.029s
2024-11-16 17:42:05,273 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:05,273 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:05,274 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:05,286 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 52, active threads = 0, queued tasks = 0, completed tasks = 52], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_glob_status=0) (op_copy_from_local_file=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_operations_incomplete=0) (multipart_upload_list.failures=0) (ignored_errors=0) (stream_write_exceptions=0) (stream_read_seek_backward_operations=0) (committer_tasks_failed=0) (stream_write_total_time=0) (stream_read_closed=6) (op_list_status.failures=0) (op_xattr_list.failures=0) (multipart_upload_completed=0) (committer_commits.failures=0) (object_continue_list_request=0) (stream_read_version_mismatches=0) (op_delete.failures=0) (op_rename.failures=0) (op_glob_status.failures=0) (stream_read_fully_operations=2) (multipart_upload_aborted=0) (stream_read_vectored_combined_ranges=39) (object_select_requests=0) (committer_stage_file_upload=0) (object_multipart_aborted.failures=0) (object_put_request_completed=84) (committer_magic_marker_put.failures=0) (stream_write_bytes=2752512) (committer_jobs_failed=0) (op_get_delegation_token=0) (object_list_request.failures=0) (stream_read_seek_forward_operations=0) (object_put_request=84) (action_file_opened=36) (stream_read_exceptions=0) (directories_deleted=0) (action_file_opened.failures=0) (committer_bytes_uploaded=0) (committer_materialize_file=0) (stream_read_vectored_incoming_ranges=93) (committer_commit_job=0) (stream_write_queue_duration.failures=0) (op_rename=0) (op_xattr_get_named_map=0) (object_list_request=168) (object_bulk_delete_request.failures=0) (op_list_status=0) (directories_created=42) (op_get_file_status=2) (op_xattr_get_map=0) (op_get_file_checksum=0) (files_copied_bytes=0) (op_is_directory=0) (op_get_content_summary=0) (stream_read_vectored_read_bytes_discarded=49026) (committer_bytes_committed=0) (op_xattr_get_named_map.failures=0) (object_continue_list_request.failures=0) (op_exists.failures=0) (op_hflush=0) (stream_write_block_uploads_committed=0) (op_is_file=0) (delegation_tokens_issued.failures=0) (stream_write_block_uploads=42) (stream_read_close_operations=36) (store_exists_probe=0) (stream_read_operations=6) (files_created=42) (action_executor_acquired.failures=0) (committer_stage_file_upload.failures=0) (multipart_instantiated=0) (stream_read_seek_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_bytes_backwards_on_seek=0) (multipart_upload_part_put=0) (op_list_files=0) (fake_directories_deleted=42) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_operations=0) (committer_magic_marker_put=0) (op_list_located_status=0) (op_createfile.failures=0) (op_get_file_status.failures=0) (stream_read_bytes_discarded_in_abort=0) (audit_span_creation=165) (committer_tasks_completed=0) (object_bulk_delete_request=84) (object_delete_request.failures=0) (op_xattr_get_map.failures=0) (committer_load_single_pending_file=0) (store_io_request=498) (stream_read_seek_bytes_skipped=0) (committer_materialize_file.failures=0) (op_openfile=0) (stream_write_exceptions_completing_upload=0) (op_is_file.failures=0) (op_access.failures=0) (op_xattr_get_named.failures=0) (stream_read_seek_policy_changed=38) (op_copy_from_local_file.failures=0) (stream_read_bytes_discarded_in_close=392016) (op_get_file_checksum.failures=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (stream_read_bytes=12626) (op_create=42) (stream_read_unbuffered=2) (stream_read_remote_stream_aborted=0) (files_delete_rejected=0) (store_io_retry=0) (object_metadata_request=120) (op_get_content_summary.failures=0) (committer_load_single_pending_file.failures=0) (object_put_bytes=2752512) (action_http_head_request.failures=0) (audit_access_check_failure=0) (op_create_non_recursive=0) (stream_read_opened=6) (committer_magic_files_created=0) (action_http_head_request=120) (object_multipart_initiated=0) (op_xattr_get_named=0) (op_create.failures=0) (op_mkdirs.failures=0) (stream_aborted=0) (op_list_files.failures=0) (delegation_tokens_issued=0) (op_hsync=0) (object_delete_request=0) (op_get_delegation_token.failures=0) (committer_commits_created=0) (audit_request_execution=498) (stream_read_total_bytes=404642) (audit_failure=0) (committer_commits_completed=0) (action_executor_acquired=0) (files_deleted=42) (op_delete=42) (stream_read_remote_stream_drain.failures=0) (object_multipart_initiated.failures=0) (committer_jobs_completed=0) (multipart_upload_list=0) (multipart_upload_part_put_bytes=0) (op_xattr_list=0) (op_createfile=0) (op_abort.failures=0) (op_abort=0) (stream_read_vectored_operations=29) (op_open=36) (store_exists_probe.failures=0) (op_mkdirs=42) (fake_directories_created=0) (object_multipart_aborted=0) (object_copy_requests=0) (committer_commits_reverted=0) (stream_read_remote_stream_drain=6) (committer_commits_aborted=0) (files_copied=0) (action_http_get_request=42) (multipart_upload_started=0) (stream_write_total_data=5505024) (committer_commit_job.failures=0) (store_io_throttled=0) (op_is_directory.failures=0) (op_access=0) (object_delete_objects=84) (op_exists=0) (stream_write_block_uploads_aborted=0));
gauges=((stream_write_block_uploads_active=0) (stream_write_block_uploads_data_pending=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=42) (client_side_encryption_enabled=0) (stream_read_blocks_in_cache=0) (object_put_bytes_pending=0));
minimums=((op_exists.min=-1) (committer_load_single_pending_file.min=-1) (object_list_request.min=5) (op_xattr_get_named.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_xattr_list.min=-1) (op_list_files.min=-1) (op_mkdirs.failures.min=-1) (committer_magic_marker_put.min=-1) (op_get_file_status.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_head_request.min=2) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.min=-1) (op_xattr_list.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_access.min=-1) (action_http_get_request.min=13) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (committer_materialize_file.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (op_xattr_get_map.min=-1) (multipart_upload_list.failures.min=-1) (op_abort.min=-1) (action_file_opened.min=3) (stream_write_queue_duration.min=-1) (op_createfile.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.failures.min=-1) (object_multipart_aborted.min=-1) (stream_read_remote_stream_drain.min=1) (op_list_status.min=-1) (op_is_directory.failures.min=-1) (op_glob_status.min=-1) (op_glob_status.failures.min=-1) (object_bulk_delete_request.min=6) (op_createfile.min=-1) (op_get_file_checksum.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_rename.failures.min=-1) (committer_stage_file_upload.failures.min=-1) (delegation_tokens_issued.failures.min=-1) (op_get_delegation_token.failures.min=-1) (object_delete_request.failures.min=-1) (op_delete.min=25) (op_is_directory.min=-1) (op_get_content_summary.failures.min=-1) (op_rename.min=-1) (committer_magic_marker_put.failures.min=-1) (object_list_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_create.min=6) (op_xattr_get_named.min=-1) (object_delete_request.min=-1) (op_xattr_get_named_map.min=-1) (op_exists.failures.min=-1) (op_access.failures.min=-1) (op_get_content_summary.min=-1) (committer_commit_job.failures.min=-1) (op_mkdirs.min=14) (stream_read_remote_stream_aborted.min=-1) (op_list_status.failures.min=-1) (op_get_file_status.min=4) (multipart_upload_list.min=-1) (store_exists_probe.min=-1) (action_http_head_request.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_abort.failures.min=-1) (committer_stage_file_upload.min=-1) (object_put_request.min=27) (object_continue_list_request.min=-1) (object_multipart_aborted.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_commit_job.min=-1) (op_copy_from_local_file.min=-1) (object_put_request.failures.min=-1) (store_exists_probe.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_multipart_initiated.min=-1) (op_delete.failures.min=-1));
maximums=((committer_stage_file_upload.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_copy_from_local_file.max=-1) (op_xattr_get_named.max=-1) (op_xattr_get_map.failures.max=-1) (action_http_get_request.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_get_delegation_token.failures.max=-1) (store_exists_probe.failures.max=-1) (op_is_directory.max=-1) (multipart_upload_list.failures.max=-1) (object_multipart_initiated.max=-1) (op_rename.max=-1) (object_bulk_delete_request.max=26) (committer_materialize_file.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_list_files.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.max=77) (op_list_status.failures.max=-1) (op_rename.failures.max=-1) (op_create.failures.max=-1) (object_list_request.failures.max=-1) (op_abort.failures.max=-1) (op_is_file.failures.max=-1) (op_createfile.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.max=-1) (op_list_status.max=-1) (object_continue_list_request.max=-1) (action_http_head_request.max=21) (op_is_directory.failures.max=-1) (object_delete_request.max=-1) (op_list_files.max=-1) (stream_read_remote_stream_drain.max=10) (op_get_file_checksum.max=-1) (op_xattr_list.max=-1) (op_get_file_status.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (op_delete.max=87) (committer_load_single_pending_file.failures.max=-1) (op_xattr_list.failures.max=-1) (stream_write_queue_duration.max=-1) (op_get_delegation_token.max=-1) (store_exists_probe.max=-1) (committer_load_single_pending_file.max=-1) (op_glob_status.failures.max=-1) (op_abort.max=-1) (committer_commit_job.max=-1) (op_create.max=62) (op_get_content_summary.failures.max=-1) (op_is_file.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (delegation_tokens_issued.max=-1) (op_delete.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_get_request.max=28) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.max=-1) (delegation_tokens_issued.failures.max=-1) (action_http_head_request.failures.max=-1) (op_exists.max=-1) (committer_stage_file_upload.max=-1) (op_createfile.failures.max=-1) (action_file_opened.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.max=185) (committer_commit_job.failures.max=-1) (op_get_file_status.failures.max=-1) (op_access.max=-1) (op_access.failures.max=-1) (op_exists.failures.max=-1) (op_get_file_checksum.failures.max=-1) (object_put_request.failures.max=-1) (action_file_opened.max=13) (op_xattr_get_named_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_glob_status.max=-1) (multipart_upload_list.max=-1) (object_delete_request.failures.max=-1) (op_mkdirs.max=300) (committer_materialize_file.max=-1));
means=((op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=15, mean=2.5000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=36, sum=196, mean=5.4444)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=120, sum=559, mean=4.6583)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=42, sum=1340, mean=31.9048)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=42, sum=488, mean=11.6190)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=168, sum=1674, mean=9.9643)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=84, sum=939, mean=11.1786)) (op_delete.mean=(samples=42, sum=1714, mean=40.8095)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=597, mean=14.5610)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=84, sum=2009, mean=23.9167)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:05,287 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:05,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,287 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,287 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,287 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=241&ts=1731778925287
2024-11-16 17:42:05,293 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,293 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,293 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=241&ts=1731778925287
2024-11-16 17:42:05,296 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,296 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:05,296 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:05,296 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:05,296 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000199&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=241&ts=1731778925287
2024-11-16 17:42:05,315 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:05,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:05,316 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.020s
2024-11-16 17:42:05,316 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:05,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,316 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,316 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,316 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000200 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000200&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=241&ts=1731778925316
2024-11-16 17:42:05,330 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.014s
2024-11-16 17:42:05,330 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,330 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:05,331 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-375622384156121623.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:05,331 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-375622384156121623.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((op_abort=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_aborted=0) (multipart_upload_part_put=0) (object_put_request.failures=0) (action_executor_acquired.failures=0) (stream_write_exceptions_completing_upload=0) (object_multipart_aborted.failures=0) (multipart_upload_completed.failures=0) (object_multipart_initiated.failures=0) (object_multipart_initiated=0) (stream_write_total_time=0) (stream_write_block_uploads=0) (multipart_upload_part_put.failures=0) (op_abort.failures=0) (stream_write_queue_duration=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (stream_write_bytes=65536) (stream_write_total_data=0) (op_hsync=0) (stream_write_exceptions=0) (object_put_request=0) (multipart_upload_completed=0));
gauges=((stream_write_block_uploads_pending=0) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_part_put.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.failures.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (committer_magic_marker_put.min=-1));
maximums=((object_put_request.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.max=-1) (multipart_upload_completed.failures.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (committer_magic_marker_put.max=-1));
means=((action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-375622384156121623.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,332 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,332 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:05,332 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-375622384156121623.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:05,332 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:05,332 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:05,332 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:05,332 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:05,332 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [162] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000200 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000200/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000200&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=162&ts=1731778925316
2024-11-16 17:42:05,366 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:05,366 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:05,366 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.034s
2024-11-16 17:42:05,367 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-375622384156121623.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:05,367 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-375622384156121623.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,367 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-375622384156121623.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,367 [s3a-transfer-fso-bucket-bounded-pool1-t60] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:05,367 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,368 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((stream_write_queue_duration=0) (action_executor_acquired.failures=0) (object_multipart_aborted=0) (stream_write_total_data=65536) (committer_magic_marker_put.failures=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (stream_write_exceptions=0) (object_multipart_initiated=0) (stream_write_total_time=0) (op_abort.failures=0) (action_executor_acquired=0) (committer_magic_marker_put=0) (object_multipart_aborted.failures=0) (op_abort=0) (op_hflush=0) (multipart_upload_part_put=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (multipart_upload_completed=0) (op_hsync=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (object_put_request=1) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_put_request.min=34) (object_put_request.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_completed.min=-1) (action_executor_acquired.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (committer_magic_marker_put.min=-1) (object_multipart_aborted.failures.min=-1) (action_executor_acquired.failures.min=-1));
maximums=((action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_put_request.max=34) (object_multipart_aborted.failures.max=-1) (op_abort.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.max=-1) (op_abort.failures.max=-1) (multipart_upload_part_put.failures.max=-1));
means=((object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=34, mean=34.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:05,369 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:05,370 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,370 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,370 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:05,370 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [242] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000201 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000201/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000201&t0=242&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=242&ts=1731778925370
2024-11-16 17:42:05,373 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:05,374 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:05,374 [s3a-transfer-fso-bucket-unbounded-pool2-t53] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,374 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[8000,9000), range[8000,9000), range[8000,9000)] 
2024-11-16 17:42:05,375 [JUnit-testSameRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_bytes=0) (stream_read_seek_bytes_skipped=0) (stream_read_close_operations=1) (stream_read_vectored_combined_ranges=0) (stream_read_closed=0) (stream_read_block_acquire_read.failures=0) (action_file_opened.failures=0) (stream_read_prefetch_operations=0) (stream_read_vectored_incoming_ranges=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (stream_read_vectored_operations=0) (action_executor_acquired.failures=0) (stream_read_seek_operations=0) (stream_read_prefetch_operations.failures=0) (stream_read_vectored_read_bytes_discarded=0) (stream_read_unbuffered=0) (stream_read_total_bytes=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_exceptions=0) (stream_read_block_read=0) (stream_read_operations_incomplete=0) (stream_read_version_mismatches=0) (action_executor_acquired=0) (stream_read_operations=0) (action_http_get_request=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain=0) (stream_read_bytes_discarded_in_abort=0) (action_http_get_request.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_fully_operations=0) (stream_read_seek_policy_changed=1) (stream_read_remote_stream_drain.failures=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_opened=0) (stream_aborted=0) (stream_read_seek_backward_operations=0));
gauges=((stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0));
minimums=((action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (action_file_opened.min=4) (action_executor_acquired.failures.min=-1) (action_executor_acquired.min=-1) (stream_read_block_read.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((stream_read_prefetch_operations.max=-1) (action_file_opened.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_read.max=-1) (action_http_get_request.max=-1) (stream_read_block_read.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.max=4) (stream_read_block_acquire_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1));
means=((stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:05,376 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:05,376 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,376 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,376 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=241&ts=1731778925376
2024-11-16 17:42:05,379 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,379 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,379 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [241] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=241&ts=1731778925376
2024-11-16 17:42:05,400 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.021s
2024-11-16 17:42:05,400 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:05,400 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:05,400 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:05,400 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:05,400 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:05,400 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:05,400 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:05,400 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:05,400 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:05,400 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:05,400 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:05,401 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:05,401 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:05,404 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,404 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [243] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=243&ts=1731778925376
2024-11-16 17:42:05,411 [s3a-transfer-fso-bucket-unbounded-pool2-t54] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:05,411 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.010s
2024-11-16 17:42:05,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:05,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:05,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:05,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778925359; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:05,411 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:05,412 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:05,412 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:05,412 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:05,412 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,412 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=163&ts=1731778925376
2024-11-16 17:42:05,421 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.009s
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,422 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [163] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000202&t0=241&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=163&ts=1731778925376
2024-11-16 17:42:05,440 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:42:05,440 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.018s
2024-11-16 17:42:05,440 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.018s
2024-11-16 17:42:05,440 [s3a-transfer-fso-bucket-bounded-pool1-t61] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:42:05,440 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:42:05,440 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.040s
2024-11-16 17:42:05,440 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:05,440 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:05,441 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:05,454 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 54, active threads = 0, queued tasks = 0, completed tasks = 54], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((action_http_head_request.failures=0) (multipart_instantiated=0) (op_xattr_get_named_map.failures=0) (stream_read_opened=6) (op_get_file_checksum.failures=0) (op_xattr_get_map.failures=0) (stream_write_bytes=2818048) (op_exists.failures=0) (op_createfile=0) (op_delete=43) (stream_read_closed=6) (committer_tasks_failed=0) (stream_read_seek_operations=0) (delegation_tokens_issued.failures=0) (op_get_content_summary.failures=0) (committer_commit_job.failures=0) (audit_access_check_failure=0) (op_xattr_list.failures=0) (op_hsync=0) (stream_write_block_uploads_committed=0) (op_get_delegation_token=0) (object_delete_request=0) (stream_read_total_bytes=404642) (object_put_bytes=2818048) (stream_read_seek_bytes_skipped=0) (op_xattr_list=0) (op_xattr_get_named.failures=0) (op_list_files.failures=0) (stream_read_version_mismatches=0) (op_mkdirs.failures=0) (stream_read_remote_stream_drain.failures=0) (stream_read_operations=6) (object_list_request.failures=0) (stream_read_bytes_discarded_in_close=392016) (fake_directories_created=0) (stream_write_block_uploads=43) (op_open=37) (stream_write_total_time=0) (store_io_request=509) (committer_commit_job=0) (object_multipart_initiated=0) (stream_read_vectored_incoming_ranges=93) (action_file_opened=37) (committer_commits.failures=0) (stream_read_vectored_combined_ranges=39) (stream_read_close_operations=37) (op_glob_status.failures=0) (stream_write_total_data=5636096) (op_is_file=0) (op_access.failures=0) (op_is_directory=0) (stream_read_seek_policy_changed=39) (directories_created=43) (action_executor_acquired.failures=0) (object_copy_requests=0) (stream_write_block_uploads_aborted=0) (op_createfile.failures=0) (object_select_requests=0) (stream_read_seek_backward_operations=0) (committer_commits_reverted=0) (committer_tasks_completed=0) (stream_read_vectored_read_bytes_discarded=49026) (action_http_get_request.failures=0) (op_mkdirs=43) (files_created=43) (op_get_file_checksum=0) (directories_deleted=0) (op_xattr_get_named=0) (committer_stage_file_upload=0) (action_http_get_request=42) (stream_read_vectored_operations=29) (stream_read_unbuffered=2) (stream_read_exceptions=0) (stream_read_bytes_backwards_on_seek=0) (object_put_request.failures=0) (op_rename=0) (op_list_located_status=0) (committer_jobs_completed=0) (audit_failure=0) (stream_write_exceptions=0) (multipart_upload_started=0) (ignored_errors=0) (store_io_retry=0) (object_multipart_aborted.failures=0) (op_xattr_get_named_map=0) (op_list_status=0) (committer_materialize_file=0) (op_list_status.failures=0) (op_is_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (stream_read_remote_stream_drain=6) (committer_magic_marker_put.failures=0) (delegation_tokens_issued=0) (committer_magic_files_created=0) (audit_span_creation=169) (committer_commits_completed=0) (committer_bytes_uploaded=0) (stream_read_fully_operations=2) (op_xattr_get_map=0) (op_delete.failures=0) (op_copy_from_local_file.failures=0) (stream_write_queue_duration=0) (object_continue_list_request=0) (stream_read_remote_stream_aborted=0) (op_exists=0) (stream_write_exceptions_completing_upload=0) (stream_read_bytes_discarded_in_abort=0) (files_deleted=43) (committer_jobs_failed=0) (op_copy_from_local_file=0) (op_get_file_status.failures=0) (multipart_upload_part_put_bytes=0) (multipart_upload_aborted=0) (audit_request_execution=509) (action_http_head_request=123) (object_continue_list_request.failures=0) (committer_materialize_file.failures=0) (multipart_upload_part_put=0) (op_rename.failures=0) (files_copied_bytes=0) (op_create.failures=0) (multipart_upload_list.failures=0) (stream_aborted=0) (object_delete_objects=86) (object_list_request=172) (op_get_file_status=2) (store_exists_probe=0) (stream_read_bytes=12626) (stream_read_operations_incomplete=0) (files_copied=0) (multipart_upload_list=0) (fake_directories_deleted=43) (object_delete_request.failures=0) (action_file_opened.failures=0) (object_multipart_initiated.failures=0) (op_hflush=0) (op_get_content_summary=0) (op_abort.failures=0) (stream_write_queue_duration.failures=0) (op_list_files=0) (op_access=0) (stream_read_seek_bytes_discarded=0) (op_create=43) (op_glob_status=0) (op_openfile=0) (object_multipart_aborted=0) (committer_stage_file_upload.failures=0) (committer_load_single_pending_file=0) (committer_bytes_committed=0) (store_exists_probe.failures=0) (object_bulk_delete_request.failures=0) (op_create_non_recursive=0) (action_executor_acquired=0) (object_bulk_delete_request=86) (committer_magic_marker_put=0) (committer_load_single_pending_file.failures=0) (op_is_directory.failures=0) (files_delete_rejected=0) (object_metadata_request=123) (op_abort=0) (store_io_throttled=0) (committer_commits_aborted=0) (object_put_request_completed=86) (stream_read_remote_stream_aborted.failures=0) (op_get_delegation_token.failures=0) (object_put_request=86) (multipart_upload_completed=0) (committer_commits_created=0) (stream_read_seek_forward_operations=0));
gauges=((stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=43) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((object_delete_request.failures.min=-1) (op_is_directory.min=-1) (op_list_files.min=-1) (committer_materialize_file.min=-1) (op_mkdirs.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_named.min=-1) (action_executor_acquired.failures.min=-1) (op_get_file_checksum.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (op_xattr_get_named_map.min=-1) (stream_read_remote_stream_drain.min=1) (stream_read_remote_stream_drain.failures.min=-1) (stream_write_queue_duration.min=-1) (multipart_upload_list.min=-1) (committer_stage_file_upload.min=-1) (op_get_delegation_token.failures.min=-1) (op_list_status.min=-1) (op_rename.min=-1) (object_multipart_aborted.min=-1) (store_exists_probe.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_map.failures.min=-1) (object_bulk_delete_request.failures.min=-1) (op_get_content_summary.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_get_delegation_token.min=-1) (committer_magic_marker_put.min=-1) (op_exists.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (committer_commit_job.failures.min=-1) (object_list_request.failures.min=-1) (action_file_opened.failures.min=-1) (op_abort.failures.min=-1) (op_xattr_get_map.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (action_http_head_request.min=2) (object_continue_list_request.failures.min=-1) (op_create.failures.min=-1) (op_abort.min=-1) (op_mkdirs.min=14) (stream_read_remote_stream_aborted.min=-1) (op_get_file_status.failures.min=-1) (op_exists.min=-1) (committer_load_single_pending_file.min=-1) (delegation_tokens_issued.min=-1) (op_createfile.min=-1) (op_delete.failures.min=-1) (object_delete_request.min=-1) (op_glob_status.min=-1) (action_executor_acquired.min=-1) (committer_stage_file_upload.failures.min=-1) (op_glob_status.failures.min=-1) (op_list_files.failures.min=-1) (action_file_opened.min=4) (op_copy_from_local_file.min=-1) (action_http_get_request.min=13) (object_continue_list_request.min=-1) (op_get_file_checksum.min=-1) (committer_commit_job.min=-1) (op_xattr_get_named.failures.min=-1) (object_list_request.min=5) (object_put_request.min=34) (op_access.failures.min=-1) (op_delete.min=25) (object_bulk_delete_request.min=6) (object_multipart_initiated.failures.min=-1) (op_xattr_list.failures.min=-1) (committer_materialize_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (multipart_upload_list.failures.min=-1) (action_http_head_request.failures.min=-1) (store_exists_probe.failures.min=-1) (op_get_file_status.min=4) (op_access.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_file.failures.min=-1) (op_create.min=6) (op_rename.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_createfile.failures.min=-1) (op_is_directory.failures.min=-1));
maximums=((committer_commit_job.failures.max=-1) (object_continue_list_request.max=-1) (op_get_delegation_token.failures.max=-1) (op_list_status.max=-1) (object_multipart_initiated.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (object_list_request.max=185) (op_get_file_status.max=6) (stream_read_remote_stream_aborted.failures.max=-1) (op_glob_status.max=-1) (op_exists.max=-1) (op_list_status.failures.max=-1) (action_http_head_request.max=21) (op_mkdirs.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (op_xattr_get_map.max=-1) (object_multipart_initiated.max=-1) (action_http_get_request.max=28) (op_xattr_list.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.max=-1) (op_exists.failures.max=-1) (op_delete.max=87) (op_get_content_summary.failures.max=-1) (store_exists_probe.failures.max=-1) (object_multipart_aborted.max=-1) (op_get_file_checksum.max=-1) (action_http_get_request.failures.max=-1) (op_list_files.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_access.max=-1) (object_delete_request.max=-1) (committer_materialize_file.max=-1) (object_bulk_delete_request.failures.max=-1) (op_get_content_summary.max=-1) (op_abort.max=-1) (committer_load_single_pending_file.max=-1) (op_list_files.max=-1) (op_mkdirs.max=300) (committer_magic_marker_put.max=-1) (op_delete.failures.max=-1) (committer_stage_file_upload.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=10) (stream_write_queue_duration.failures.max=-1) (object_bulk_delete_request.max=26) (op_createfile.max=-1) (store_exists_probe.max=-1) (stream_read_remote_stream_aborted.max=-1) (op_xattr_get_named_map.failures.max=-1) (stream_write_queue_duration.max=-1) (op_is_file.max=-1) (object_put_request.max=77) (op_access.failures.max=-1) (op_is_directory.failures.max=-1) (action_file_opened.failures.max=-1) (action_file_opened.max=13) (op_create.max=62) (delegation_tokens_issued.max=-1) (multipart_upload_list.max=-1) (multipart_upload_list.failures.max=-1) (op_rename.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_is_file.failures.max=-1) (op_glob_status.failures.max=-1) (op_copy_from_local_file.max=-1) (op_createfile.failures.max=-1) (object_put_request.failures.max=-1) (object_list_request.failures.max=-1) (op_get_file_status.failures.max=-1) (op_xattr_list.failures.max=-1) (op_xattr_get_map.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_rename.max=-1) (op_get_file_checksum.failures.max=-1) (op_abort.failures.max=-1) (action_executor_acquired.max=-1) (object_continue_list_request.failures.max=-1) (committer_commit_job.max=-1) (op_create.failures.max=-1) (action_http_head_request.failures.max=-1) (op_xattr_get_named.max=-1) (object_multipart_aborted.failures.max=-1) (object_delete_request.failures.max=-1) (committer_materialize_file.failures.max=-1) (committer_load_single_pending_file.failures.max=-1));
means=((op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=43, sum=503, mean=11.6977)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=123, sum=568, mean=4.6179)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=43, sum=1369, mean=31.8372)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=41, sum=597, mean=14.5610)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=86, sum=2062, mean=23.9767)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=37, sum=200, mean=5.4054)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=172, sum=1722, mean=10.0116)) (op_delete.mean=(samples=43, sum=1754, mean=40.7907)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=15, mean=2.5000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=86, sum=966, mean=11.2326)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:05,455 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:05,455 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,455 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,455 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,455 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,455 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=244&ts=1731778925455
2024-11-16 17:42:05,468 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.013s
2024-11-16 17:42:05,469 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,469 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,469 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,469 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,469 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=244&ts=1731778925455
2024-11-16 17:42:05,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,478 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:05,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:05,478 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:05,478 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000203&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=244&ts=1731778925455
2024-11-16 17:42:05,486 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:05,486 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:05,486 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.008s
2024-11-16 17:42:05,486 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:05,487 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,487 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,487 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,487 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,487 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000204 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000204&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=244&ts=1731778925487
2024-11-16 17:42:05,493 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,493 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,493 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:05,494 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8347361359859952579.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:05,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8347361359859952579.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_initiated.failures=0) (op_hsync=0) (object_multipart_aborted.failures=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (stream_write_total_time=0) (object_multipart_aborted=0) (stream_write_total_data=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (object_put_request.failures=0) (committer_magic_marker_put=0) (stream_write_queue_duration=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (op_abort=0) (object_put_request=0) (multipart_upload_completed=0) (stream_write_exceptions_completing_upload=0) (op_hflush=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (op_abort.failures=0) (action_executor_acquired=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (op_abort.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (committer_magic_marker_put.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (object_put_request.failures.max=-1) (op_abort.failures.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=-1) (action_executor_acquired.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (multipart_upload_part_put.max=-1));
means=((object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8347361359859952579.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,495 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:05,495 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8347361359859952579.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:05,495 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:05,495 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:05,495 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:05,495 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:05,496 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [166] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000204 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000204/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000204&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=166&ts=1731778925487
2024-11-16 17:42:05,519 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:05,519 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:05,520 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.025s
2024-11-16 17:42:05,520 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8347361359859952579.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:05,520 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8347361359859952579.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,520 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-8347361359859952579.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,520 [s3a-transfer-fso-bucket-bounded-pool1-t62] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:05,520 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,521 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((object_multipart_initiated=0) (action_executor_acquired.failures=0) (committer_magic_marker_put=0) (action_executor_acquired=0) (multipart_upload_part_put=0) (stream_write_exceptions=0) (op_abort=0) (op_abort.failures=0) (multipart_upload_completed=0) (stream_write_total_data=65536) (object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (op_hsync=0) (stream_write_block_uploads=1) (committer_magic_marker_put.failures=0) (op_hflush=0) (stream_write_bytes=65536) (object_put_request=1) (object_multipart_aborted=0) (stream_write_total_time=0) (stream_write_exceptions_completing_upload=0) (stream_write_queue_duration=0) (object_put_request.failures=0) (multipart_upload_part_put.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((action_executor_acquired.min=-1) (multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (object_multipart_aborted.min=-1) (object_multipart_initiated.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1) (multipart_upload_completed.min=-1) (object_put_request.min=24) (committer_magic_marker_put.failures.min=-1) (op_abort.min=-1) (object_multipart_initiated.min=-1));
maximums=((op_abort.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_initiated.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.max=24) (object_multipart_aborted.failures.max=-1));
means=((object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=24, mean=24.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:05,521 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:05,522 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,522 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,522 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:05,522 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=244&ts=1731778925521
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 2 , Number of combined ranges 1 
2024-11-16 17:42:05,525 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,525 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[0,100), range[110,160)] 
2024-11-16 17:42:05,525 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,525 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:05,526 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [169] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=169&ts=1731778925521
2024-11-16 17:42:05,525 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,526 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,526 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:05,526 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [172] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=159, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=0-159&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000205&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=172&ts=1731778925521
2024-11-16 17:42:05,539 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.013s
2024-11-16 17:42:05,539 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:05,539 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.014s
2024-11-16 17:42:05,539 [s3a-transfer-fso-bucket-bounded-pool1-t64] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,539 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:drainUnnecessaryData(989)) - 10 bytes drained from stream 
2024-11-16 17:42:05,539 [s3a-transfer-fso-bucket-bounded-pool1-t63] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[0,160) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,540 [JUnit-testMultipleVectoredReads[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_remote_stream_drain.failures=0) (stream_read_seek_forward_operations=0) (stream_read_remote_stream_aborted=0) (stream_read_block_read=0) (stream_read_unbuffered=0) (stream_read_seek_bytes_discarded=0) (stream_read_fully_operations=0) (action_file_opened=1) (stream_aborted=0) (stream_read_exceptions=0) (stream_read_bytes=300) (action_file_opened.failures=0) (stream_read_vectored_incoming_ranges=4) (stream_read_block_acquire_read=0) (action_http_get_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_operations=0) (stream_read_remote_stream_drain=0) (stream_read_opened=0) (stream_read_closed=0) (stream_read_block_read.failures=0) (action_http_get_request=2) (stream_read_seek_bytes_skipped=0) (stream_read_vectored_operations=2) (stream_read_version_mismatches=0) (stream_read_total_bytes=300) (stream_read_prefetch_operations=0) (action_executor_acquired=0) (stream_read_bytes_discarded_in_close=0) (stream_read_seek_policy_changed=1) (stream_read_operations_incomplete=0) (stream_read_seek_backward_operations=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_vectored_combined_ranges=2) (stream_read_prefetch_operations.failures=0) (stream_read_seek_operations=0) (stream_read_vectored_read_bytes_discarded=20) (stream_read_block_acquire_read.failures=0) (action_executor_acquired.failures=0) (stream_read_remote_stream_aborted.failures=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_memory_in_use=0) (stream_read_active_prefetch_operations=0));
minimums=((stream_read_remote_stream_drain.failures.min=-1) (action_http_get_request.min=13) (stream_read_prefetch_operations.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_block_read.min=-1) (action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (action_file_opened.min=3) (stream_read_remote_stream_aborted.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (action_file_opened.failures.min=-1) (action_http_get_request.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((stream_read_remote_stream_aborted.failures.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_block_read.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_file_opened.failures.max=-1) (action_http_get_request.max=14) (action_executor_acquired.max=-1) (action_file_opened.max=3) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.max=-1));
means=((action_http_get_request.mean=(samples=2, sum=27, mean=13.5000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=3, mean=3.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:05,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:05,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,541 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,541 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=244&ts=1731778925541
2024-11-16 17:42:05,544 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,544 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,544 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [244] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=244&ts=1731778925541
2024-11-16 17:42:05,550 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,550 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:05,550 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:05,550 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:05,550 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:05,550 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:05,550 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:05,550 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:05,550 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:05,550 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:05,550 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:05,550 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:05,551 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:05,551 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:05,551 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,551 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [245] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=245&ts=1731778925541
2024-11-16 17:42:05,556 [s3a-transfer-fso-bucket-unbounded-pool2-t55] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.005s
2024-11-16 17:42:05,556 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.005s
2024-11-16 17:42:05,557 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:05,557 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:05,557 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:05,557 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778925516; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:05,557 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:05,557 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:05,557 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:05,558 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:05,558 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,558 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=31&ts=1731778925541
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.007s
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.007s
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,565 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [31] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000206&t0=244&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=31&ts=1731778925541
2024-11-16 17:42:05,573 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.008s
2024-11-16 17:42:05,573 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:05,573 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.008s
2024-11-16 17:42:05,573 [s3a-transfer-fso-bucket-bounded-pool1-t1] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.015s
2024-11-16 17:42:05,573 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.015s
2024-11-16 17:42:05,573 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.023s
2024-11-16 17:42:05,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:05,573 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:05,574 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:05,585 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 55, active threads = 0, queued tasks = 0, completed tasks = 55], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((object_list_request=176) (store_exists_probe=0) (op_xattr_get_named_map.failures=0) (op_access=0) (op_access.failures=0) (action_file_opened.failures=0) (op_is_file.failures=0) (committer_commits.failures=0) (committer_materialize_file=0) (committer_tasks_completed=0) (committer_bytes_uploaded=0) (multipart_upload_started=0) (op_hflush=0) (stream_read_bytes_discarded_in_close=392016) (files_copied_bytes=0) (op_glob_status=0) (committer_jobs_completed=0) (object_put_bytes=2883584) (committer_load_single_pending_file.failures=0) (committer_commits_created=0) (op_copy_from_local_file.failures=0) (stream_read_version_mismatches=0) (object_metadata_request=126) (action_http_head_request.failures=0) (object_multipart_aborted.failures=0) (stream_read_exceptions=0) (committer_bytes_committed=0) (op_mkdirs=44) (object_multipart_aborted=0) (stream_read_seek_operations=0) (files_copied=0) (stream_read_remote_stream_drain.failures=0) (committer_stage_file_upload=0) (op_xattr_get_named_map=0) (op_get_file_checksum=0) (object_put_request_completed=88) (op_xattr_list.failures=0) (object_continue_list_request=0) (op_xattr_get_named.failures=0) (committer_jobs_failed=0) (op_get_file_status.failures=0) (op_exists=0) (audit_access_check_failure=0) (op_delete.failures=0) (multipart_upload_abort_under_path_invoked=0) (op_xattr_get_named=0) (stream_read_seek_bytes_discarded=0) (op_list_files.failures=0) (object_bulk_delete_request.failures=0) (op_create.failures=0) (files_deleted=44) (audit_failure=0) (stream_read_total_bytes=404942) (op_copy_from_local_file=0) (directories_created=44) (object_delete_request=0) (object_put_request=88) (committer_commit_job=0) (stream_read_bytes_backwards_on_seek=0) (op_exists.failures=0) (stream_write_exceptions=0) (committer_magic_files_created=0) (multipart_upload_part_put_bytes=0) (multipart_upload_list.failures=0) (object_multipart_initiated=0) (op_abort.failures=0) (op_get_delegation_token=0) (op_glob_status.failures=0) (delegation_tokens_issued=0) (op_openfile=0) (multipart_instantiated=0) (stream_read_vectored_incoming_ranges=97) (committer_commit_job.failures=0) (object_continue_list_request.failures=0) (multipart_upload_completed=0) (op_list_files=0) (op_rename=0) (committer_magic_marker_put=0) (store_io_throttled=0) (stream_read_operations_incomplete=0) (stream_read_opened=6) (store_io_retry=0) (stream_write_block_uploads_committed=0) (op_get_delegation_token.failures=0) (stream_read_seek_backward_operations=0) (op_createfile.failures=0) (stream_read_remote_stream_aborted.failures=0) (action_http_get_request=44) (stream_read_bytes=12926) (committer_commits_reverted=0) (stream_read_fully_operations=2) (object_copy_requests=0) (object_delete_objects=88) (stream_write_total_data=5767168) (multipart_upload_aborted=0) (op_get_content_summary=0) (op_open=38) (stream_read_seek_bytes_skipped=0) (committer_load_single_pending_file=0) (store_io_request=522) (object_list_request.failures=0) (stream_aborted=0) (multipart_upload_part_put=0) (delegation_tokens_issued.failures=0) (object_bulk_delete_request=88) (stream_read_seek_forward_operations=0) (stream_write_queue_duration.failures=0) (stream_write_exceptions_completing_upload=0) (op_mkdirs.failures=0) (action_executor_acquired.failures=0) (action_file_opened=38) (op_list_located_status=0) (ignored_errors=0) (stream_read_remote_stream_drain=6) (files_created=44) (stream_write_block_uploads_aborted=0) (directories_deleted=0) (fake_directories_deleted=44) (store_exists_probe.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_unbuffered=2) (stream_read_seek_policy_changed=40) (op_create=44) (op_get_content_summary.failures=0) (stream_write_total_time=0) (stream_read_vectored_combined_ranges=41) (stream_read_operations=6) (op_delete=44) (op_list_status=0) (stream_write_bytes=2883584) (op_get_file_checksum.failures=0) (object_select_requests=0) (op_rename.failures=0) (op_get_file_status=2) (committer_materialize_file.failures=0) (committer_tasks_failed=0) (committer_stage_file_upload.failures=0) (object_put_request.failures=0) (audit_request_execution=522) (stream_read_vectored_read_bytes_discarded=49046) (committer_commits_aborted=0) (action_http_get_request.failures=0) (stream_write_queue_duration=0) (op_create_non_recursive=0) (op_list_status.failures=0) (action_executor_acquired=0) (op_createfile=0) (audit_span_creation=173) (committer_magic_marker_put.failures=0) (op_is_file=0) (object_multipart_initiated.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_hsync=0) (op_is_directory=0) (op_is_directory.failures=0) (files_delete_rejected=0) (fake_directories_created=0) (stream_read_close_operations=38) (stream_read_closed=6) (object_delete_request.failures=0) (op_abort=0) (op_xattr_get_map.failures=0) (stream_write_block_uploads=44) (op_xattr_get_map=0) (committer_commits_completed=0) (action_http_head_request=126) (op_xattr_list=0) (stream_read_vectored_operations=31) (multipart_upload_list=0));
gauges=((stream_write_block_uploads_data_pending=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=44) (stream_read_active_memory_in_use=0) (object_put_request_active=0) (stream_read_active_prefetch_operations=0) (stream_read_blocks_in_cache=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0));
minimums=((store_exists_probe.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.failures.min=-1) (op_is_directory.failures.min=-1) (op_get_file_status.min=4) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named.min=-1) (object_multipart_aborted.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_map.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=24) (action_http_head_request.min=2) (stream_write_queue_duration.min=-1) (committer_magic_marker_put.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_xattr_list.min=-1) (op_get_content_summary.failures.min=-1) (op_is_file.failures.min=-1) (object_list_request.failures.min=-1) (op_exists.min=-1) (action_http_get_request.failures.min=-1) (op_get_delegation_token.min=-1) (committer_materialize_file.failures.min=-1) (op_createfile.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_access.failures.min=-1) (op_access.min=-1) (committer_stage_file_upload.failures.min=-1) (committer_load_single_pending_file.min=-1) (committer_commit_job.failures.min=-1) (op_copy_from_local_file.min=-1) (action_http_head_request.failures.min=-1) (object_list_request.min=5) (op_get_file_checksum.failures.min=-1) (op_mkdirs.failures.min=-1) (delegation_tokens_issued.min=-1) (committer_materialize_file.min=-1) (multipart_upload_list.failures.min=-1) (op_get_content_summary.min=-1) (op_rename.failures.min=-1) (op_abort.failures.min=-1) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.failures.min=-1) (action_file_opened.min=3) (action_http_get_request.min=13) (object_bulk_delete_request.failures.min=-1) (object_delete_request.min=-1) (object_multipart_initiated.min=-1) (op_createfile.min=-1) (op_glob_status.failures.min=-1) (op_create.min=6) (delegation_tokens_issued.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.failures.min=-1) (stream_read_remote_stream_drain.min=1) (op_delete.failures.min=-1) (committer_commit_job.min=-1) (object_multipart_aborted.failures.min=-1) (multipart_upload_list.min=-1) (op_delete.min=24) (op_create.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_get_file_checksum.min=-1) (op_is_file.min=-1) (op_glob_status.min=-1) (op_rename.min=-1) (object_bulk_delete_request.min=6) (store_exists_probe.min=-1) (action_file_opened.failures.min=-1) (object_continue_list_request.min=-1) (op_xattr_get_map.failures.min=-1) (op_list_status.min=-1) (op_list_files.min=-1) (op_is_directory.min=-1) (op_list_files.failures.min=-1) (op_xattr_get_named_map.min=-1) (op_xattr_get_named.failures.min=-1) (object_delete_request.failures.min=-1) (op_abort.min=-1) (action_executor_acquired.failures.min=-1) (op_mkdirs.min=14) (committer_stage_file_upload.min=-1));
maximums=((object_bulk_delete_request.max=26) (op_rename.failures.max=-1) (multipart_upload_list.max=-1) (op_create.max=62) (op_xattr_get_named.max=-1) (op_access.failures.max=-1) (op_list_files.max=-1) (op_glob_status.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (store_exists_probe.failures.max=-1) (op_createfile.failures.max=-1) (committer_commit_job.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (action_file_opened.failures.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_content_summary.max=-1) (committer_magic_marker_put.failures.max=-1) (action_http_get_request.max=28) (committer_load_single_pending_file.max=-1) (object_bulk_delete_request.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_list.failures.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.max=-1) (delegation_tokens_issued.max=-1) (object_multipart_aborted.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_get_named.failures.max=-1) (object_put_request.max=77) (op_create.failures.max=-1) (committer_commit_job.max=-1) (op_is_directory.max=-1) (object_continue_list_request.failures.max=-1) (op_get_delegation_token.max=-1) (stream_write_queue_duration.max=-1) (committer_materialize_file.failures.max=-1) (object_multipart_aborted.max=-1) (op_xattr_get_map.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_rename.max=-1) (op_delete.failures.max=-1) (object_multipart_initiated.failures.max=-1) (action_file_opened.max=13) (op_xattr_get_named_map.max=-1) (object_delete_request.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (op_delete.max=87) (op_get_file_status.max=6) (committer_stage_file_upload.failures.max=-1) (object_delete_request.max=-1) (op_exists.failures.max=-1) (op_list_status.failures.max=-1) (op_get_file_status.failures.max=-1) (op_createfile.max=-1) (op_xattr_list.max=-1) (action_executor_acquired.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (object_list_request.max=185) (op_copy_from_local_file.max=-1) (object_continue_list_request.max=-1) (op_exists.max=-1) (object_put_request.failures.max=-1) (op_list_status.max=-1) (committer_stage_file_upload.max=-1) (op_is_file.failures.max=-1) (store_exists_probe.max=-1) (op_access.max=-1) (op_mkdirs.max=300) (op_is_file.max=-1) (op_list_files.failures.max=-1) (stream_write_queue_duration.failures.max=-1) (op_glob_status.max=-1) (op_abort.failures.max=-1) (stream_read_remote_stream_drain.max=10) (object_multipart_initiated.max=-1) (op_abort.max=-1) (object_list_request.failures.max=-1) (action_http_head_request.max=21) (op_is_directory.failures.max=-1) (op_get_file_checksum.failures.max=-1) (committer_magic_marker_put.max=-1) (op_get_content_summary.failures.max=-1) (op_get_file_checksum.max=-1) (op_get_delegation_token.failures.max=-1));
means=((multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=15, mean=2.5000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=43, sum=624, mean=14.5116)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=88, sum=981, mean=11.1477)) (object_list_request.mean=(samples=176, sum=1752, mean=9.9545)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=88, sum=2094, mean=23.7955)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=44, sum=1778, mean=40.4091)) (action_http_head_request.mean=(samples=126, sum=583, mean=4.6270)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=38, sum=203, mean=5.3421)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=44, sum=1400, mean=31.8182)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=44, sum=510, mean=11.5909)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:05,586 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:05,586 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,586 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,586 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,586 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,586 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=246&ts=1731778925586
2024-11-16 17:42:05,592 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,592 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,593 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,593 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,593 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,593 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=246&ts=1731778925586
2024-11-16 17:42:05,599 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,599 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:05,599 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:05,599 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:05,600 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000207&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=246&ts=1731778925586
2024-11-16 17:42:05,608 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:05,608 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:05,608 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.009s
2024-11-16 17:42:05,608 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:05,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,609 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,609 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,609 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000208 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000208&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=246&ts=1731778925608
2024-11-16 17:42:05,617 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.008s
2024-11-16 17:42:05,618 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,618 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:05,618 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5856103167454983974.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:05,619 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5856103167454983974.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (stream_write_exceptions=0) (op_abort.failures=0) (object_multipart_initiated=0) (object_multipart_aborted=0) (committer_magic_marker_put=0) (object_put_request=0) (multipart_upload_part_put.failures=0) (stream_write_bytes=65536) (action_executor_acquired.failures=0) (object_put_request.failures=0) (committer_magic_marker_put.failures=0) (object_multipart_initiated.failures=0) (stream_write_block_uploads=0) (stream_write_exceptions_completing_upload=0) (action_executor_acquired=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (stream_write_total_data=0) (op_abort=0) (multipart_upload_part_put=0) (multipart_upload_completed=0) (op_hsync=0) (op_hflush=0) (multipart_upload_completed.failures=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((object_multipart_initiated.failures.min=-1) (multipart_upload_part_put.failures.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (multipart_upload_part_put.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (object_put_request.min=-1) (op_abort.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_completed.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.min=-1));
maximums=((multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_completed.max=-1) (multipart_upload_part_put.max=-1) (committer_magic_marker_put.failures.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_multipart_initiated.failures.max=-1) (object_put_request.max=-1) (multipart_upload_completed.failures.max=-1) (op_abort.max=-1) (object_multipart_initiated.max=-1));
means=((committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5856103167454983974.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,619 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,619 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:05,619 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5856103167454983974.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:05,620 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:05,620 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:05,620 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:05,620 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [36] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000208 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000208/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000208&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=36&ts=1731778925608
2024-11-16 17:42:05,621 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:05,658 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:05,658 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:05,658 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.038s
2024-11-16 17:42:05,658 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5856103167454983974.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:05,658 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5856103167454983974.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,658 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-5856103167454983974.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,658 [s3a-transfer-fso-bucket-bounded-pool1-t2] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:05,659 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,660 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((action_executor_acquired=0) (stream_write_queue_duration=0) (action_executor_acquired.failures=0) (object_put_request=1) (op_abort.failures=0) (object_multipart_aborted.failures=0) (multipart_upload_part_put=0) (stream_write_bytes=65536) (stream_write_total_data=65536) (op_hflush=0) (multipart_upload_part_put.failures=0) (committer_magic_marker_put.failures=0) (committer_magic_marker_put=0) (object_multipart_initiated=0) (multipart_upload_completed=0) (op_hsync=0) (object_multipart_initiated.failures=0) (multipart_upload_completed.failures=0) (op_abort=0) (object_multipart_aborted=0) (stream_write_exceptions=0) (stream_write_total_time=0) (stream_write_block_uploads=1) (object_put_request.failures=0) (stream_write_exceptions_completing_upload=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=1));
minimums=((multipart_upload_completed.failures.min=-1) (action_executor_acquired.min=-1) (committer_magic_marker_put.min=-1) (op_abort.min=-1) (object_multipart_aborted.failures.min=-1) (object_multipart_initiated.failures.min=-1) (object_put_request.failures.min=-1) (object_put_request.min=38) (multipart_upload_part_put.failures.min=-1) (object_multipart_aborted.min=-1) (multipart_upload_completed.min=-1) (object_multipart_initiated.min=-1) (committer_magic_marker_put.failures.min=-1) (action_executor_acquired.failures.min=-1) (op_abort.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((object_multipart_initiated.failures.max=-1) (op_abort.max=-1) (op_abort.failures.max=-1) (object_multipart_aborted.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (action_executor_acquired.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.max=-1) (object_put_request.max=38) (multipart_upload_part_put.max=-1) (object_multipart_initiated.max=-1) (multipart_upload_part_put.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_completed.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=38, mean=38.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:05,660 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:05,661 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,661 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,662 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:05,662 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [247] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000209 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000209/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000209&t0=247&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=247&ts=1731778925661
2024-11-16 17:42:05,665 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:05,665 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:05,665 [s3a-transfer-fso-bucket-unbounded-pool2-t56] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,665 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[-1,49)] 
2024-11-16 17:42:05,666 [JUnit-testNegativeOffsetRange[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_prefetch_operations.failures=0) (stream_aborted=0) (action_file_opened.failures=0) (stream_read_operations=0) (stream_read_bytes=0) (stream_read_exceptions=0) (stream_read_prefetch_operations=0) (stream_read_seek_bytes_skipped=0) (stream_read_block_read.failures=0) (stream_read_opened=0) (stream_read_remote_stream_drain.failures=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_seek_policy_changed=1) (stream_read_block_read=0) (stream_read_seek_forward_operations=0) (stream_read_vectored_operations=0) (stream_read_vectored_combined_ranges=0) (stream_read_operations_incomplete=0) (stream_read_fully_operations=0) (stream_read_block_acquire_read.failures=0) (stream_read_vectored_read_bytes_discarded=0) (action_http_get_request.failures=0) (stream_read_seek_bytes_discarded=0) (action_file_opened=1) (stream_read_bytes_backwards_on_seek=0) (action_executor_acquired=0) (stream_read_unbuffered=0) (action_executor_acquired.failures=0) (stream_read_total_bytes=0) (stream_read_vectored_incoming_ranges=0) (stream_read_version_mismatches=0) (stream_read_seek_operations=0) (action_http_get_request=0) (stream_read_seek_backward_operations=0) (stream_read_block_acquire_read=0) (stream_read_bytes_discarded_in_close=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_close_operations=1) (stream_read_closed=0) (stream_read_remote_stream_aborted=0) (stream_read_remote_stream_drain=0));
gauges=((stream_read_gauge_input_policy=0) (stream_read_blocks_in_cache=0) (stream_read_active_prefetch_operations=0) (stream_read_active_memory_in_use=0));
minimums=((action_executor_acquired.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (stream_read_block_acquire_read.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_prefetch_operations.min=-1) (action_http_get_request.min=-1) (stream_read_block_read.min=-1) (action_http_get_request.failures.min=-1) (action_file_opened.failures.min=-1) (action_file_opened.min=4) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1));
maximums=((action_file_opened.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_get_request.failures.max=-1) (stream_read_block_read.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_prefetch_operations.max=-1) (stream_read_block_acquire_read.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (action_executor_acquired.max=-1) (action_file_opened.max=4) (action_http_get_request.max=-1) (stream_read_block_acquire_read.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.failures.max=-1));
means=((action_file_opened.mean=(samples=1, sum=4, mean=4.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)));

2024-11-16 17:42:05,667 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:05,667 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,668 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,668 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=246&ts=1731778925667
2024-11-16 17:42:05,670 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,670 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,671 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [246] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=246&ts=1731778925667
2024-11-16 17:42:05,701 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.031s
2024-11-16 17:42:05,702 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:05,702 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:05,702 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:05,702 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:05,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:05,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:05,702 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:05,702 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:05,703 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:05,703 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:05,703 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:05,703 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:05,703 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:05,703 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,703 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [248] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=248&ts=1731778925667
2024-11-16 17:42:05,710 [s3a-transfer-fso-bucket-unbounded-pool2-t57] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:05,710 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.007s
2024-11-16 17:42:05,710 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:05,710 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:05,710 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:05,710 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778925648; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:05,711 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:05,711 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:05,711 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:05,711 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:05,712 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,712 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=38&ts=1731778925667
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.010s
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.010s
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.010s
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,722 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [38] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000210&t0=246&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=38&ts=1731778925667
2024-11-16 17:42:05,745 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.023s
2024-11-16 17:42:05,745 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.023s
2024-11-16 17:42:05,745 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.023s
2024-11-16 17:42:05,745 [s3a-transfer-fso-bucket-bounded-pool1-t3] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.033s
2024-11-16 17:42:05,745 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.034s
2024-11-16 17:42:05,746 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.044s
2024-11-16 17:42:05,746 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:05,746 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:05,747 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:initializeClass(5412)) - Initialize S3A class
2024-11-16 17:42:05,763 [setup] INFO  contract.AbstractFSContractTestBase (AbstractFSContractTestBase.java:setup(194)) - Test filesystem = s3a://fso-bucket implemented by S3AFileSystem{uri=s3a://fso-bucket, workingDir=s3a://fso-bucket/user/runner, partSize=67108864, enableMultiObjectsDelete=true, maxKeys=5000, OpenFileSupport{changePolicy=ETagChangeDetectionPolicy mode=Server, defaultReadAhead=65536, defaultBufferSize=4096, defaultAsyncDrainThreshold=16000, defaultInputPolicy=default}, blockSize=33554432, multiPartThreshold=134217728, s3EncryptionAlgorithm='NONE', blockFactory=org.apache.hadoop.fs.s3a.S3ADataBlocks$DiskBlockFactory@7cd3c0c, auditManager=Service ActiveAuditManagerS3A in state ActiveAuditManagerS3A: STARTED, auditor=LoggingAuditor{ID='a37cdd3f-d132-44ca-b747-a874b4f9fa05', headerEnabled=true, rejectOutOfSpan=true, isMultipartUploadEnabled=true}}, authoritativePath=[], useListV1=false, magicCommitter=true, boundedExecutor=BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}, unboundedExecutor=java.util.concurrent.ThreadPoolExecutor@a34d1db[Running, pool size = 57, active threads = 0, queued tasks = 0, completed tasks = 57], credentials=AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider, delegation tokens=disabled, DirectoryMarkerRetention{policy='keep'}, instrumentation {S3AInstrumentation{instanceIOStatistics=counters=((op_exists.failures=0) (op_copy_from_local_file.failures=0) (op_xattr_get_map.failures=0) (object_multipart_initiated.failures=0) (action_http_get_request.failures=0) (committer_commits_reverted=0) (multipart_upload_list=0) (committer_stage_file_upload.failures=0) (committer_jobs_completed=0) (stream_read_exceptions=0) (multipart_upload_part_put=0) (ignored_errors=0) (committer_jobs_failed=0) (stream_read_bytes_backwards_on_seek=0) (op_create.failures=0) (op_abort.failures=0) (op_xattr_get_map=0) (committer_magic_marker_put=0) (op_open=39) (object_put_request.failures=0) (stream_read_bytes_discarded_in_abort=0) (op_xattr_get_named_map=0) (action_executor_acquired.failures=0) (op_is_directory=0) (delegation_tokens_issued=0) (committer_bytes_committed=0) (op_rename=0) (op_is_directory.failures=0) (stream_read_opened=6) (op_xattr_get_named_map.failures=0) (stream_read_operations=6) (stream_read_close_operations=39) (stream_read_seek_backward_operations=0) (stream_read_seek_operations=0) (op_list_located_status=0) (object_continue_list_request.failures=0) (op_mkdirs.failures=0) (committer_commits.failures=0) (audit_access_check_failure=0) (op_access.failures=0) (op_delete=45) (stream_read_seek_bytes_skipped=0) (multipart_upload_completed=0) (committer_materialize_file=0) (op_xattr_get_named=0) (multipart_instantiated=0) (object_delete_request=0) (store_exists_probe.failures=0) (stream_read_bytes=12926) (store_io_throttled=0) (stream_read_closed=6) (files_delete_rejected=0) (object_bulk_delete_request.failures=0) (object_list_request.failures=0) (stream_read_seek_forward_operations=0) (op_delete.failures=0) (stream_write_queue_duration=0) (object_put_request=90) (op_is_file.failures=0) (stream_read_bytes_discarded_in_close=392016) (committer_magic_files_created=0) (op_createfile.failures=0) (object_select_requests=0) (object_copy_requests=0) (committer_tasks_failed=0) (stream_read_vectored_incoming_ranges=97) (stream_read_remote_stream_aborted.failures=0) (op_copy_from_local_file=0) (multipart_upload_started=0) (directories_created=45) (committer_commits_aborted=0) (op_get_file_checksum=0) (op_get_delegation_token=0) (committer_stage_file_upload=0) (stream_write_exceptions=0) (committer_commit_job=0) (action_file_opened.failures=0) (stream_read_unbuffered=2) (op_list_status.failures=0) (committer_bytes_uploaded=0) (multipart_upload_part_put_bytes=0) (stream_write_exceptions_completing_upload=0) (multipart_upload_aborted=0) (stream_read_remote_stream_drain.failures=0) (object_bulk_delete_request=90) (files_copied=0) (fake_directories_created=0) (object_put_request_completed=90) (op_get_delegation_token.failures=0) (stream_read_operations_incomplete=0) (stream_write_bytes=2949120) (stream_read_seek_bytes_discarded=0) (action_http_head_request=129) (op_get_content_summary=0) (op_list_status=0) (store_io_request=533) (op_rename.failures=0) (op_xattr_list=0) (op_openfile=0) (object_continue_list_request=0) (stream_read_version_mismatches=0) (stream_read_vectored_operations=31) (stream_read_remote_stream_aborted=0) (stream_aborted=0) (store_exists_probe=0) (stream_read_total_bytes=404942) (object_put_bytes=2949120) (delegation_tokens_issued.failures=0) (committer_tasks_completed=0) (multipart_upload_abort_under_path_invoked=0) (committer_magic_marker_put.failures=0) (stream_write_total_data=5898240) (object_list_request=180) (object_multipart_initiated=0) (op_get_file_status.failures=0) (action_executor_acquired=0) (stream_write_total_time=0) (object_multipart_aborted=0) (op_hsync=0) (audit_failure=0) (op_exists=0) (stream_read_remote_stream_drain=6) (op_hflush=0) (stream_read_fully_operations=2) (op_list_files=0) (store_io_retry=0) (op_get_content_summary.failures=0) (stream_read_vectored_read_bytes_discarded=49046) (op_access=0) (files_deleted=45) (stream_read_seek_policy_changed=41) (committer_commits_created=0) (op_createfile=0) (op_list_files.failures=0) (fake_directories_deleted=45) (stream_read_vectored_combined_ranges=41) (multipart_upload_list.failures=0) (committer_commits_completed=0) (committer_commit_job.failures=0) (stream_write_block_uploads_committed=0) (op_abort=0) (object_multipart_aborted.failures=0) (action_file_opened=39) (committer_materialize_file.failures=0) (stream_write_block_uploads=45) (committer_load_single_pending_file.failures=0) (committer_load_single_pending_file=0) (stream_write_queue_duration.failures=0) (action_http_get_request=44) (op_is_file=0) (audit_span_creation=177) (files_created=45) (op_get_file_status=2) (op_create=45) (stream_write_block_uploads_aborted=0) (op_mkdirs=45) (object_metadata_request=129) (op_glob_status=0) (action_http_head_request.failures=0) (audit_request_execution=533) (object_delete_request.failures=0) (op_get_file_checksum.failures=0) (files_copied_bytes=0) (op_xattr_list.failures=0) (directories_deleted=0) (op_create_non_recursive=0) (op_glob_status.failures=0) (object_delete_objects=90) (op_xattr_get_named.failures=0));
gauges=((client_side_encryption_enabled=0) (stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (stream_read_blocks_in_cache=0) (object_put_request_active=0) (stream_read_active_memory_in_use=0) (stream_write_block_uploads_pending=45) (stream_write_block_uploads_data_pending=0) (object_put_bytes_pending=0));
minimums=((op_get_file_checksum.failures.min=-1) (op_createfile.failures.min=-1) (op_mkdirs.min=14) (op_get_content_summary.min=-1) (action_http_head_request.failures.min=-1) (op_xattr_get_map.failures.min=-1) (op_glob_status.failures.min=-1) (op_rename.failures.min=-1) (op_mkdirs.failures.min=-1) (op_xattr_list.failures.min=-1) (op_copy_from_local_file.failures.min=-1) (committer_commit_job.failures.min=-1) (op_glob_status.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_list_files.min=-1) (action_file_opened.min=4) (committer_magic_marker_put.min=-1) (op_rename.min=-1) (op_abort.failures.min=-1) (object_delete_request.failures.min=-1) (op_is_directory.failures.min=-1) (action_executor_acquired.failures.min=-1) (action_http_head_request.min=2) (committer_magic_marker_put.failures.min=-1) (op_access.failures.min=-1) (committer_stage_file_upload.min=-1) (op_delete.min=24) (op_createfile.min=-1) (object_continue_list_request.failures.min=-1) (object_list_request.failures.min=-1) (object_multipart_aborted.min=-1) (object_list_request.min=5) (op_exists.failures.min=-1) (object_put_request.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_abort.min=-1) (stream_write_queue_duration.failures.min=-1) (op_get_file_status.min=4) (multipart_upload_list.failures.min=-1) (op_list_files.failures.min=-1) (op_access.min=-1) (store_exists_probe.failures.min=-1) (action_executor_acquired.min=-1) (op_xattr_get_named_map.min=-1) (object_multipart_aborted.failures.min=-1) (op_xattr_get_named.min=-1) (action_file_opened.failures.min=-1) (op_get_delegation_token.min=-1) (object_bulk_delete_request.failures.min=-1) (store_exists_probe.min=-1) (op_create.min=6) (object_multipart_initiated.min=-1) (delegation_tokens_issued.failures.min=-1) (op_is_directory.min=-1) (action_http_get_request.failures.min=-1) (op_xattr_list.min=-1) (object_bulk_delete_request.min=6) (committer_stage_file_upload.failures.min=-1) (committer_load_single_pending_file.min=-1) (object_continue_list_request.min=-1) (committer_load_single_pending_file.failures.min=-1) (object_delete_request.min=-1) (op_list_status.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (op_exists.min=-1) (stream_read_remote_stream_drain.min=1) (op_get_content_summary.failures.min=-1) (delegation_tokens_issued.min=-1) (op_create.failures.min=-1) (action_http_get_request.min=13) (committer_materialize_file.min=-1) (op_xattr_get_named_map.failures.min=-1) (object_put_request.min=38) (committer_commit_job.min=-1) (op_get_file_checksum.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (op_list_status.failures.min=-1) (op_is_file.failures.min=-1) (op_get_delegation_token.failures.min=-1) (op_delete.failures.min=-1) (op_is_file.min=-1) (op_xattr_get_map.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.failures.min=-1) (stream_write_queue_duration.min=-1) (op_copy_from_local_file.min=-1) (object_multipart_initiated.failures.min=-1));
maximums=((op_copy_from_local_file.max=-1) (op_list_files.failures.max=-1) (object_list_request.max=185) (op_exists.max=-1) (committer_load_single_pending_file.max=-1) (op_xattr_get_named.max=-1) (op_get_content_summary.max=-1) (delegation_tokens_issued.max=-1) (stream_write_queue_duration.failures.max=-1) (op_list_files.max=-1) (object_put_request.failures.max=-1) (store_exists_probe.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_continue_list_request.max=-1) (op_abort.failures.max=-1) (object_continue_list_request.failures.max=-1) (op_delete.max=87) (action_file_opened.failures.max=-1) (action_file_opened.max=13) (object_bulk_delete_request.max=26) (stream_read_remote_stream_drain.failures.max=-1) (action_http_get_request.failures.max=-1) (object_delete_request.failures.max=-1) (op_xattr_get_map.failures.max=-1) (op_glob_status.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_get_delegation_token.max=-1) (multipart_upload_list.max=-1) (op_rename.max=-1) (op_is_directory.failures.max=-1) (stream_write_queue_duration.max=-1) (op_mkdirs.max=300) (action_http_head_request.max=21) (op_get_file_checksum.failures.max=-1) (action_executor_acquired.max=-1) (op_create.max=62) (op_create.failures.max=-1) (op_xattr_list.failures.max=-1) (op_rename.failures.max=-1) (op_is_file.max=-1) (store_exists_probe.max=-1) (object_bulk_delete_request.failures.max=-1) (object_list_request.failures.max=-1) (committer_materialize_file.max=-1) (op_xattr_get_named_map.max=-1) (object_multipart_aborted.max=-1) (op_abort.max=-1) (op_delete.failures.max=-1) (op_xattr_get_named.failures.max=-1) (op_is_file.failures.max=-1) (op_is_directory.max=-1) (op_get_delegation_token.failures.max=-1) (op_access.failures.max=-1) (object_multipart_aborted.failures.max=-1) (op_glob_status.failures.max=-1) (op_createfile.max=-1) (object_multipart_initiated.max=-1) (committer_materialize_file.failures.max=-1) (object_put_request.max=77) (committer_stage_file_upload.failures.max=-1) (op_xattr_get_map.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_get_file_status.failures.max=-1) (delegation_tokens_issued.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_stage_file_upload.max=-1) (op_list_status.failures.max=-1) (op_get_file_checksum.max=-1) (op_mkdirs.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_access.max=-1) (op_copy_from_local_file.failures.max=-1) (committer_commit_job.max=-1) (action_http_get_request.max=28) (op_exists.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (op_get_content_summary.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.failures.max=-1) (multipart_upload_list.failures.max=-1) (op_xattr_list.max=-1) (op_list_status.max=-1) (op_get_file_status.max=6) (object_delete_request.max=-1) (committer_magic_marker_put.max=-1) (committer_commit_job.failures.max=-1) (op_createfile.failures.max=-1));
means=((op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=43, sum=624, mean=14.5116)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=39, sum=207, mean=5.3077)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=90, sum=2140, mean=23.7778)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=180, sum=1803, mean=10.0167)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=45, sum=1822, mean=40.4889)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=129, sum=594, mean=4.6047)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=45, sum=519, mean=11.5333)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=15, mean=2.5000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=90, sum=1014, mean=11.2667)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=45, sum=1422, mean=31.6000)));
}}, ClientSideEncryption=false}
2024-11-16 17:42:05,764 [setup] DEBUG impl.MkdirOperation (MkdirOperation.java:execute(94)) - Making directory: s3a://fso-bucket/test
2024-11-16 17:42:05,764 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,764 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,764 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,765 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,765 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211 Executing op_mkdirs with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=249&ts=1731778925764
2024-11-16 17:42:05,771 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:05,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,771 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=false
2024-11-16 17:42:05,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,772 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,772 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211 Executing op_mkdirs with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=249&ts=1731778925764
2024-11-16 17:42:05,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test
2024-11-16 17:42:05,786 [setup] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: PUT 0-byte object 
2024-11-16 17:42:05,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 0 bytes to test/
2024-11-16 17:42:05,786 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 0 bytes
2024-11-16 17:42:05,786 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211 Executing op_mkdirs with {object_put_request 'test/' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_mkdirs/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211/?op=op_mkdirs&p1=test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000211&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=249&ts=1731778925764
2024-11-16 17:42:05,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 0 bytes
2024-11-16 17:42:05,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/, len 0. etag null, version null
2024-11-16 17:42:05,799 [setup] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - PUT 0-byte object : duration 0:00.013s
2024-11-16 17:42:05,799 [setup] DEBUG S3AFileSystem.Progress (S3AFileSystem.java:incrementPutProgressStatistics(3093)) - PUT test: 0 bytes
2024-11-16 17:42:05,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,799 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/vectored_file.txt/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,799 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,800 [setup] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000212 Executing op_create with {object_list_request 'test/vectored_file.txt/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000212&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=249&ts=1731778925799
2024-11-16 17:42:05,808 [setup] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.009s
2024-11-16 17:42:05,809 [setup] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3800)) - Not Found: s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,809 [setup] DEBUG s3a.S3ARetryPolicy (S3ARetryPolicy.java:<init>(132)) - Retrying on recoverable AWS failures 7 times with an initial interval of 500ms
2024-11-16 17:42:05,810 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:<init>(218)) - Initialized S3ABlockOutputStream for test/vectored_file.txt output to FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14093428309808764598.tmp, state=Writing, dataSize=0, limit=67108864}
2024-11-16 17:42:05,811 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(417)) - S3ABlockOutputStream{WriteOperationHelper {bucket=fso-bucket}, blockSize=67108864, isMultipartUploadEnabled=true, activeBlock=FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14093428309808764598.tmp, state=Writing, dataSize=65536, limit=67108864} Statistics=counters=((object_multipart_aborted.failures=0) (object_multipart_initiated.failures=0) (action_executor_acquired.failures=0) (stream_write_block_uploads=0) (op_hflush=0) (stream_write_queue_duration=0) (stream_write_total_time=0) (object_put_request.failures=0) (multipart_upload_completed=0) (multipart_upload_completed.failures=0) (multipart_upload_part_put.failures=0) (multipart_upload_part_put=0) (object_multipart_aborted=0) (op_hsync=0) (action_executor_acquired=0) (stream_write_total_data=0) (op_abort.failures=0) (stream_write_exceptions=0) (object_put_request=0) (stream_write_bytes=65536) (committer_magic_marker_put.failures=0) (object_multipart_initiated=0) (stream_write_exceptions_completing_upload=0) (committer_magic_marker_put=0) (op_abort=0));
gauges=((stream_write_block_uploads_data_pending=0) (stream_write_block_uploads_pending=0));
minimums=((action_executor_acquired.min=-1) (op_abort.min=-1) (object_put_request.min=-1) (object_multipart_aborted.failures.min=-1) (committer_magic_marker_put.min=-1) (multipart_upload_part_put.failures.min=-1) (op_abort.failures.min=-1) (object_put_request.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_multipart_aborted.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.min=-1) (object_multipart_initiated.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_completed.failures.min=-1) (multipart_upload_part_put.min=-1));
maximums=((op_abort.failures.max=-1) (action_executor_acquired.max=-1) (committer_magic_marker_put.failures.max=-1) (committer_magic_marker_put.max=-1) (multipart_upload_completed.failures.max=-1) (action_executor_acquired.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.max=-1) (object_put_request.max=-1) (object_multipart_aborted.failures.max=-1) (object_multipart_aborted.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.failures.max=-1) (object_multipart_initiated.max=-1) (op_abort.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)));
}: Closing block #1: current block= FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14093428309808764598.tmp, state=Writing, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,811 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:putObject(592)) - Executing regular upload for WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,811 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:startUpload(325)) - Start datablock[1] upload
2024-11-16 17:42:05,811 [setup] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14093428309808764598.tmp, state=Writing, dataSize=65536, limit=67108864}: entering state Upload
2024-11-16 17:42:05,812 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:clearActiveBlock(261)) - Clearing active block
2024-11-16 17:42:05,812 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Writing Object
2024-11-16 17:42:05,812 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:putObjectDirect(2987)) - PUT 65536 bytes to test/vectored_file.txt
2024-11-16 17:42:05,813 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutStartStatistics(3060)) - PUT start 65536 bytes
2024-11-16 17:42:05,813 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [41] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000212 Executing op_create with {object_put_request 'test/vectored_file.txt' size=0, mutating=true}; https://audit.example.org/hadoop/1/op_create/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000212/?op=op_create&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000212&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=41&ts=1731778925799
2024-11-16 17:42:05,844 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:incrementPutCompletedStatistics(3076)) - PUT completed success=true; 65536 bytes
2024-11-16 17:42:05,844 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:finishedWrite(4360)) - Finished write to test/vectored_file.txt, len 65536. etag 99927cfeffe4c5eaac4c81fd18232f13, version null
2024-11-16 17:42:05,844 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Writing Object: duration 0:00.032s
2024-11-16 17:42:05,844 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:enterState(232)) - FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14093428309808764598.tmp, state=Upload, dataSize=65536, limit=67108864}: entering state Closed
2024-11-16 17:42:05,844 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:close(347)) - Closed FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14093428309808764598.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,844 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:innerClose(913)) - Closing FileBlock{index=1, destFile=/home/runner/work/ozone/ozone/target/hadoop-src/target/tmp/s3a/s3ablock-0001-14093428309808764598.tmp, state=Closed, dataSize=65536, limit=67108864}
2024-11-16 17:42:05,844 [s3a-transfer-fso-bucket-bounded-pool1-t4] DEBUG s3a.S3ADataBlocks (S3ADataBlocks.java:closeBlock(967)) - block[1]: closeBlock()
2024-11-16 17:42:05,845 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(460)) - Upload complete to test/vectored_file.txt by WriteOperationHelper {bucket=fso-bucket}
2024-11-16 17:42:05,847 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:cleanupOnClose(484)) - Statistics: OutputStreamStatistics{counters=((op_hsync=0) (object_put_request.failures=0) (object_put_request=1) (action_executor_acquired.failures=0) (object_multipart_initiated=0) (action_executor_acquired=0) (committer_magic_marker_put.failures=0) (op_hflush=0) (object_multipart_aborted=0) (object_multipart_aborted.failures=0) (stream_write_block_uploads=1) (stream_write_total_data=65536) (committer_magic_marker_put=0) (multipart_upload_completed=0) (multipart_upload_part_put=0) (object_multipart_initiated.failures=0) (multipart_upload_part_put.failures=0) (stream_write_total_time=0) (stream_write_queue_duration=0) (stream_write_exceptions=0) (multipart_upload_completed.failures=0) (op_abort=0) (stream_write_exceptions_completing_upload=0) (stream_write_bytes=65536) (op_abort.failures=0));
gauges=((stream_write_block_uploads_pending=1) (stream_write_block_uploads_data_pending=0));
minimums=((multipart_upload_completed.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_abort.min=-1) (object_put_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_multipart_initiated.failures.min=-1) (action_executor_acquired.failures.min=-1) (object_put_request.min=31) (committer_magic_marker_put.min=-1) (object_multipart_initiated.min=-1) (action_executor_acquired.min=-1) (object_multipart_aborted.min=-1) (op_abort.failures.min=-1) (multipart_upload_completed.min=-1) (multipart_upload_part_put.min=-1) (multipart_upload_part_put.failures.min=-1));
maximums=((action_executor_acquired.max=-1) (op_abort.failures.max=-1) (object_put_request.max=31) (action_executor_acquired.failures.max=-1) (object_multipart_aborted.max=-1) (committer_magic_marker_put.failures.max=-1) (multipart_upload_part_put.max=-1) (object_multipart_initiated.failures.max=-1) (multipart_upload_completed.max=-1) (object_multipart_initiated.max=-1) (object_multipart_aborted.failures.max=-1) (object_put_request.failures.max=-1) (multipart_upload_part_put.failures.max=-1) (multipart_upload_completed.failures.max=-1) (committer_magic_marker_put.max=-1) (op_abort.max=-1));
means=((op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_completed.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.mean=(samples=1, sum=31, mean=31.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_part_put.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)));
, blocksActive=0, blockUploadsCompleted=0, blocksAllocated=1, blocksReleased=1, blocksActivelyAllocated=0, transferDuration=0 ms, totalUploadDuration=0 ms, effectiveBandwidth=0.0 bytes/s}
2024-11-16 17:42:05,847 [setup] DEBUG s3a.S3ABlockOutputStream (S3ABlockOutputStream.java:close(412)) - Ignoring close() as stream is already closed
2024-11-16 17:42:05,848 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test/vectored_file.txt  (test/vectored_file.txt); needEmptyDirectory=false
2024-11-16 17:42:05,848 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test/vectored_file.txt
2024-11-16 17:42:05,848 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test/vectored_file.txt with change tracker null
2024-11-16 17:42:05,858 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000213 Executing op_open with {action_http_head_request 'test/vectored_file.txt' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000213&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=249&ts=1731778925847
2024-11-16 17:42:05,862 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3725)) - Found exact file: normal file test/vectored_file.txt
2024-11-16 17:42:05,862 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:executeOpen(1583)) - Opening 'S3AReadOpContext{path=s3a://fso-bucket/test/vectored_file.txt, inputPolicy=default, readahead=65536, changeDetectionPolicy=ETagChangeDetectionPolicy mode=Server}'
2024-11-16 17:42:05,862 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG impl.ChangeTracker (ChangeTracker.java:<init>(99)) - Tracker ETagChangeDetectionPolicy mode=Server has revision ID for object at s3a://fso-bucket/test/vectored_file.txt: 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,862 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(868)) - Starting vectored read on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:42:05,862 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(888)) - Trying to merge the ranges as they are not disjoint
2024-11-16 17:42:05,862 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(893)) - Number of original ranges size 3 , Number of combined ranges 1 
2024-11-16 17:42:05,863 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(912)) - Start reading combined range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,863 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.ChangeDetectionPolicy (ChangeDetectionPolicy.java:applyRevisionConstraint(353)) - Restricting get request to etag 99927cfeffe4c5eaac4c81fd18232f13
2024-11-16 17:42:05,863 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: readCombinedFileRange
2024-11-16 17:42:05,863 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [43] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000213 Executing op_open with {action_http_get_request 'test/vectored_file.txt' size=399, mutating=false}; https://audit.example.org/hadoop/1/op_open/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000213/?op=op_open&p1=test/vectored_file.txt&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&rg=500-899&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000213&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=43&ts=1731778925847
2024-11-16 17:42:05,864 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInputStream (S3AInputStream.java:readVectored(900)) - Finished submitting vectored read to threadpool on path s3a://fso-bucket/test/vectored_file.txt for ranges [range[500,600), range[600,800), range[800,900)] 
2024-11-16 17:42:05,870 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - readCombinedFileRange: duration 0:00.007s
2024-11-16 17:42:05,871 [s3a-transfer-fso-bucket-bounded-pool1-t5] DEBUG s3a.S3AInputStream (S3AInputStream.java:readCombinedRangeAndUpdateChildren(931)) - Finished reading range range[500,900) from path s3a://fso-bucket/test/vectored_file.txt 
2024-11-16 17:42:05,874 [JUnit-testConsecutiveRanges[Buffer type : array]] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:merge(1214)) - Merging statistics into FS statistics in close(): counters=((stream_read_operations=0) (stream_read_bytes=400) (stream_read_closed=0) (stream_read_operations_incomplete=0) (stream_read_unbuffered=0) (stream_read_seek_backward_operations=0) (stream_read_block_read.failures=0) (stream_read_remote_stream_drain.failures=0) (action_http_get_request=1) (stream_read_vectored_incoming_ranges=3) (stream_read_bytes_discarded_in_close=0) (action_executor_acquired=0) (stream_read_seek_bytes_skipped=0) (stream_read_bytes_backwards_on_seek=0) (stream_read_block_acquire_read=0) (stream_read_seek_operations=0) (stream_read_remote_stream_drain=0) (action_file_opened.failures=0) (stream_read_close_operations=1) (stream_aborted=0) (stream_read_opened=0) (stream_read_seek_bytes_discarded=0) (stream_read_vectored_combined_ranges=1) (stream_read_prefetch_operations=0) (stream_read_total_bytes=400) (action_http_get_request.failures=0) (stream_read_exceptions=0) (stream_read_prefetch_operations.failures=0) (stream_read_remote_stream_aborted=0) (stream_read_seek_policy_changed=1) (stream_read_seek_forward_operations=0) (stream_read_block_acquire_read.failures=0) (action_file_opened=1) (stream_read_block_read=0) (stream_read_remote_stream_aborted.failures=0) (stream_read_fully_operations=0) (stream_read_vectored_operations=1) (stream_read_vectored_read_bytes_discarded=0) (stream_read_bytes_discarded_in_abort=0) (stream_read_version_mismatches=0) (action_executor_acquired.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_read_gauge_input_policy=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0));
minimums=((stream_read_block_read.min=-1) (action_http_get_request.min=8) (action_file_opened.min=15) (action_executor_acquired.failures.min=-1) (stream_read_block_acquire_read.failures.min=-1) (stream_read_remote_stream_aborted.min=-1) (action_executor_acquired.min=-1) (action_http_get_request.failures.min=-1) (stream_read_block_acquire_read.min=-1) (action_file_opened.failures.min=-1) (stream_read_block_read.failures.min=-1) (stream_read_remote_stream_drain.min=-1) (stream_read_prefetch_operations.min=-1) (stream_read_prefetch_operations.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1));
maximums=((action_http_get_request.max=8) (stream_read_remote_stream_drain.max=-1) (stream_read_prefetch_operations.max=-1) (action_http_get_request.failures.max=-1) (action_executor_acquired.failures.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (stream_read_block_read.max=-1) (stream_read_block_read.failures.max=-1) (stream_read_prefetch_operations.failures.max=-1) (action_executor_acquired.max=-1) (stream_read_block_acquire_read.max=-1) (action_file_opened.max=15) (stream_read_remote_stream_aborted.failures.max=-1) (action_file_opened.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (stream_read_block_acquire_read.failures.max=-1));
means=((stream_read_block_acquire_read.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=1, sum=15, mean=15.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_prefetch_operations.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_block_acquire_read.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=1, sum=8, mean=8.0000)));

2024-11-16 17:42:05,875 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerGetFileStatus(3650)) - Getting path status for s3a://fso-bucket/test  (test); needEmptyDirectory=true
2024-11-16 17:42:05,875 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3709)) - S3GetFileStatus s3a://fso-bucket/test
2024-11-16 17:42:05,875 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:lambda$getObjectMetadata$11(2661)) - HEAD test with change tracker null
2024-11-16 17:42:05,876 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214 Executing op_delete with {action_http_head_request 'test' size=0, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=249&ts=1731778925875
2024-11-16 17:42:05,880 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=/ keys=2 requester pays=false
2024-11-16 17:42:05,880 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,880 [teardown] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [249] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214 Executing op_delete with {object_list_request 'test/' size=2, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=249&ts=1731778925875
2024-11-16 17:42:05,886 [teardown] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.006s
2024-11-16 17:42:05,886 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:s3GetFileStatus(3773)) - Found path as directory (with /)
2024-11-16 17:42:05,886 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(143)) - Prefix count = 0; object count=2
2024-11-16 17:42:05,886 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/ 0
2024-11-16 17:42:05,886 [teardown] DEBUG s3a.S3AFileSystem (S3ListResult.java:logAtDebug(146)) - Summary: test/vectored_file.txt 65536
2024-11-16 17:42:05,887 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(171)) - Delete path s3a://fso-bucket/test - recursive true
2024-11-16 17:42:05,887 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(172)) - Type = Directory
2024-11-16 17:42:05,887 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(180)) - delete: Path is a directory: s3a://fso-bucket/test
2024-11-16 17:42:05,887 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: deleting test/
2024-11-16 17:42:05,887 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(243)) - Getting objects for directory prefix test/ to delete
2024-11-16 17:42:05,888 [teardown] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:innerListFiles(4886)) - listFiles(s3a://fso-bucket/test, true)
2024-11-16 17:42:05,889 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:getListFilesAssumingDir(205)) - Recursive list of all entries under test/
2024-11-16 17:42:05,890 [teardown] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: listObjects()
2024-11-16 17:42:05,890 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:listObjects(2702)) - LIST List fso-bucket:/test/ delimiter=null keys=5000 requester pays=false
2024-11-16 17:42:05,890 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: LIST
2024-11-16 17:42:05,890 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [250] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214 Executing op_delete with {object_list_request 'test/' size=5000, mutating=false}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=250&ts=1731778925875
2024-11-16 17:42:05,897 [s3a-transfer-fso-bucket-unbounded-pool2-t58] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - LIST: duration 0:00.007s
2024-11-16 17:42:05,898 [teardown] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - listObjects(): duration 0:00.008s
2024-11-16 17:42:05,898 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test: test/ size=0
2024-11-16 17:42:05,898 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test; isDirectory=true; modification_time=0; access_time=0; owner=runner; group=runner; permission=rwxrwxrwx; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=UNKNOWN eTag=null versionId=null
2024-11-16 17:42:05,898 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(461)) - s3a://fso-bucket/test/vectored_file.txt: test/vectored_file.txt size=65536
2024-11-16 17:42:05,898 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(469)) - Adding: S3AFileStatus{path=s3a://fso-bucket/test/vectored_file.txt; isDirectory=false; length=65536; replication=1; blocksize=33554432; modification_time=1731778925840; access_time=0; owner=runner; group=runner; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=true; isErasureCoded=false} isEmptyDirectory=FALSE eTag=99927cfeffe4c5eaac4c81fd18232f13 versionId=null
2024-11-16 17:42:05,898 [teardown] DEBUG s3a.S3AFileSystem (Listing.java:buildNextStatusBatch(499)) - Added 2 entries; ignored 0; hasNext=true; hasMoreObjects=false
2024-11-16 17:42:05,898 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/"
2024-11-16 17:42:05,899 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:queueForDeletion(298)) - Adding object to delete: "test/vectored_file.txt"
2024-11-16 17:42:05,900 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(256)) - Deleting final batch of listed files
2024-11-16 17:42:05,900 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:<init>(80)) - Starting: Waiting for task completion
2024-11-16 17:42:05,900 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:<init>(80)) - Starting: Delete page of 2 keys
2024-11-16 17:42:05,900 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(393)) - Deleting of 1 file objects
2024-11-16 17:42:05,900 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Files
2024-11-16 17:42:05,900 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,900 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,900 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/vectored_file.txt 
2024-11-16 17:42:05,901 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,901 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214 Executing op_delete with {object_bulk_delete_request 'test/vectored_file.txt' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=44&ts=1731778925875
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.018s
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.019s
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Files: duration 0:00.019s
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DeleteOperation.java:asyncDeleteAction(405)) - Deleting of 1 directory markers
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:<init>(80)) - Starting: Remove S3 Dir Markers
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: Deleting 1 keys
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3121)) - Initiating delete operation for 1 objects
2024-11-16 17:42:05,919 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:removeKeysS3(3124)) -  test/ 
2024-11-16 17:42:05,920 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:<init>(80)) - Starting: DELETE 1 keys
2024-11-16 17:42:05,920 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.LoggingAuditor (LoggingAuditor.java:beforeExecution(377)) - [44] a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214 Executing op_delete with {object_bulk_delete_request 'test/' size=1, mutating=true}; https://audit.example.org/hadoop/1/op_delete/a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214/?op=op_delete&p1=s3a://fso-bucket/test&pr=runner&ps=d933aeab-708f-4024-9aa5-3f219b3328be&ks=1&id=a37cdd3f-d132-44ca-b747-a874b4f9fa05-00000214&t0=249&fs=a37cdd3f-d132-44ca-b747-a874b4f9fa05&t1=44&ts=1731778925875
2024-11-16 17:42:05,927 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - DELETE 1 keys: duration 0:00.007s
2024-11-16 17:42:05,927 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.S3AFileSystem (DurationInfo.java:close(101)) - Deleting 1 keys: duration 0:00.008s
2024-11-16 17:42:05,928 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG s3a.Invoker (DurationInfo.java:close(101)) - Remove S3 Dir Markers: duration 0:00.009s
2024-11-16 17:42:05,928 [s3a-transfer-fso-bucket-bounded-pool1-t6] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - Delete page of 2 keys: duration 0:00.028s
2024-11-16 17:42:05,928 [teardown] DEBUG impl.CallableSupplier (DurationInfo.java:close(101)) - Waiting for task completion: duration 0:00.028s
2024-11-16 17:42:05,928 [teardown] DEBUG impl.DeleteOperation (DurationInfo.java:close(101)) - deleting test/: duration 0:00.041s
2024-11-16 17:42:05,928 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:deleteDirectoryTree(261)) - Delete "s3a://fso-bucket/test" completed; deleted 2 objects
2024-11-16 17:42:05,928 [teardown] DEBUG impl.DeleteOperation (DeleteOperation.java:execute(211)) - Deleted 2 objects
2024-11-16 17:42:05,951 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AFileSystem.java:close(4053)) - Filesystem s3a://fso-bucket is closed
2024-11-16 17:42:05,961 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service BlockingThreadPoolExecutorService{SemaphoredDelegatingExecutor{permitCount=160, available=160, waiting=0}, activeCount=0}. Waiting max 30 SECONDS
2024-11-16 17:42:05,963 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:05,963 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(118)) - Gracefully shutting down executor service java.util.concurrent.ThreadPoolExecutor@a34d1db[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 58]. Waiting max 30 SECONDS
2024-11-16 17:42:05,963 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (HadoopExecutors.java:shutdown(128)) - Succesfully shutdown executor service
2024-11-16 17:42:05,964 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(717)) - Unregistering metrics for S3AMetrics1-fso-bucket
2024-11-16 17:42:05,964 [shutdown-hook-0] DEBUG s3a.S3AInstrumentation (S3AInstrumentation.java:close(733)) - Shutting down metrics publisher
2024-11-16 17:42:05,965 [shutdown-hook-0] DEBUG auth.SignerManager (SignerManager.java:close(143)) - Unregistering fs from 0 initializers
2024-11-16 17:42:05,966 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (S3AUtils.java:closeAutocloseables(1808)) - Closing AWSCredentialProviderList[refcount= 1: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:05,966 [shutdown-hook-0] DEBUG s3a.AWSCredentialProviderList (AWSCredentialProviderList.java:close(315)) - Closing AWSCredentialProviderList[refcount= 0: [TemporaryAWSCredentialsProvider, SimpleAWSCredentialsProvider, EnvironmentVariableCredentialsProvider, org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider@47ececad] last provider: SimpleAWSCredentialsProvider
2024-11-16 17:42:05,967 [shutdown-hook-0] DEBUG s3a.S3AFileSystem (IOStatisticsLogging.java:logIOStatisticsAtDebug(235)) - IOStatistics: counters=((stream_read_seek_operations=0) (stream_read_exceptions=0) (op_abort=0) (committer_load_single_pending_file=0) (committer_commit_job.failures=0) (stream_read_unbuffered=2) (stream_read_remote_stream_aborted=0) (object_metadata_request=132) (op_mkdirs=46) (op_create.failures=0) (object_copy_requests=0) (files_copied=0) (action_http_head_request.failures=0) (op_hsync=0) (op_is_directory=0) (op_create=46) (op_createfile.failures=0) (op_delete=46) (stream_read_remote_stream_drain=6) (object_put_request=92) (op_get_file_checksum.failures=0) (op_is_file=0) (stream_read_seek_bytes_skipped=0) (committer_stage_file_upload.failures=0) (stream_read_seek_forward_operations=0) (op_list_files.failures=0) (op_xattr_get_named_map.failures=0) (object_select_requests=0) (stream_write_bytes=3014656) (multipart_instantiated=0) (op_xattr_list=0) (op_openfile=0) (stream_write_block_uploads=46) (object_multipart_aborted=0) (action_http_head_request=132) (op_get_file_status.failures=0) (files_delete_rejected=0) (fake_directories_created=0) (committer_load_single_pending_file.failures=0) (stream_read_vectored_incoming_ranges=100) (multipart_upload_part_put=0) (op_get_file_checksum=0) (op_exists.failures=0) (op_copy_from_local_file.failures=0) (multipart_upload_abort_under_path_invoked=0) (audit_request_execution=545) (multipart_upload_list=0) (store_io_retry=0) (object_multipart_aborted.failures=0) (committer_tasks_completed=0) (stream_read_vectored_read_bytes_discarded=49046) (delegation_tokens_issued=0) (op_is_file.failures=0) (directories_created=46) (op_list_status.failures=0) (stream_read_bytes_backwards_on_seek=0) (op_get_content_summary.failures=0) (object_multipart_initiated=0) (op_xattr_get_named_map=0) (op_create_non_recursive=0) (action_file_opened.failures=0) (committer_commits_completed=0) (multipart_upload_completed=0) (op_list_files=0) (object_continue_list_request.failures=0) (op_mkdirs.failures=0) (op_rename.failures=0) (stream_read_total_bytes=405342) (op_access.failures=0) (op_list_status=0) (object_continue_list_request=0) (object_delete_request.failures=0) (object_bulk_delete_request=92) (op_hflush=0) (op_get_delegation_token=0) (object_put_request_completed=92) (files_created=46) (multipart_upload_part_put_bytes=0) (action_http_get_request=45) (committer_magic_files_created=0) (stream_read_operations=6) (op_xattr_get_named=0) (committer_bytes_committed=0) (committer_commit_job=0) (stream_read_seek_bytes_discarded=0) (multipart_upload_list.failures=0) (ignored_errors=0) (committer_commits_aborted=0) (op_get_content_summary=0) (committer_commits.failures=0) (op_glob_status.failures=0) (committer_commits_reverted=0) (stream_write_block_uploads_committed=0) (committer_bytes_uploaded=0) (files_deleted=46) (stream_read_vectored_combined_ranges=42) (action_executor_acquired.failures=0) (audit_span_creation=181) (stream_read_fully_operations=2) (stream_write_exceptions=0) (stream_read_close_operations=40) (stream_write_total_time=0) (store_exists_probe.failures=0) (committer_magic_marker_put=0) (op_access=0) (multipart_upload_started=0) (committer_jobs_failed=0) (stream_read_closed=6) (committer_magic_marker_put.failures=0) (store_io_throttled=0) (object_list_request=184) (audit_access_check_failure=0) (stream_read_remote_stream_aborted.failures=0) (op_xattr_list.failures=0) (stream_write_queue_duration.failures=0) (op_open=40) (stream_read_seek_backward_operations=0) (audit_failure=0) (object_multipart_initiated.failures=0) (stream_read_opened=6) (op_copy_from_local_file=0) (action_http_get_request.failures=0) (object_delete_objects=92) (committer_jobs_completed=0) (delegation_tokens_issued.failures=0) (op_xattr_get_named.failures=0) (op_createfile=0) (object_bulk_delete_request.failures=0) (stream_read_version_mismatches=0) (stream_write_block_uploads_aborted=0) (action_file_opened=40) (object_put_request.failures=0) (multipart_upload_aborted=0) (op_is_directory.failures=0) (op_delete.failures=0) (stream_aborted=0) (op_exists=0) (stream_read_remote_stream_drain.failures=0) (files_copied_bytes=0) (committer_materialize_file=0) (stream_read_bytes_discarded_in_abort=0) (op_rename=0) (stream_write_total_data=6029312) (stream_read_vectored_operations=32) (committer_commits_created=0) (stream_write_exceptions_completing_upload=0) (committer_stage_file_upload=0) (store_exists_probe=0) (store_io_request=545) (op_get_file_status=2) (op_get_delegation_token.failures=0) (object_delete_request=0) (op_abort.failures=0) (committer_tasks_failed=0) (op_list_located_status=0) (committer_materialize_file.failures=0) (object_list_request.failures=0) (stream_read_bytes_discarded_in_close=392016) (op_xattr_get_map=0) (action_executor_acquired=0) (stream_read_operations_incomplete=0) (stream_read_seek_policy_changed=42) (stream_read_bytes=13326) (fake_directories_deleted=46) (op_glob_status=0) (stream_write_queue_duration=0) (directories_deleted=0) (object_put_bytes=3014656) (op_xattr_get_map.failures=0));
gauges=((stream_read_active_prefetch_operations=0) (stream_write_block_uploads_active=0) (object_put_bytes_pending=0) (stream_read_active_memory_in_use=0) (stream_read_blocks_in_cache=0) (client_side_encryption_enabled=0) (stream_write_block_uploads_pending=46) (object_put_request_active=0) (stream_write_block_uploads_data_pending=0));
minimums=((op_xattr_get_named.min=-1) (stream_write_queue_duration.failures.min=-1) (op_list_status.min=-1) (multipart_upload_list.min=-1) (op_get_file_status.failures.min=-1) (object_list_request.min=5) (delegation_tokens_issued.failures.min=-1) (committer_load_single_pending_file.min=-1) (action_file_opened.failures.min=-1) (stream_read_remote_stream_aborted.failures.min=-1) (op_xattr_get_named.failures.min=-1) (stream_read_remote_stream_drain.min=1) (committer_materialize_file.min=-1) (object_list_request.failures.min=-1) (op_createfile.min=-1) (op_list_files.failures.min=-1) (committer_commit_job.min=-1) (op_get_file_checksum.failures.min=-1) (object_continue_list_request.failures.min=-1) (op_rename.min=-1) (op_get_content_summary.failures.min=-1) (committer_materialize_file.failures.min=-1) (op_mkdirs.min=14) (object_put_request.failures.min=-1) (op_rename.failures.min=-1) (op_get_content_summary.min=-1) (action_http_get_request.failures.min=-1) (committer_magic_marker_put.failures.min=-1) (object_continue_list_request.min=-1) (op_get_delegation_token.min=-1) (op_get_file_status.min=4) (op_delete.failures.min=-1) (delegation_tokens_issued.min=-1) (op_abort.min=-1) (store_exists_probe.min=-1) (action_executor_acquired.failures.min=-1) (stream_read_remote_stream_drain.failures.min=-1) (object_multipart_initiated.min=-1) (stream_write_queue_duration.min=-1) (object_delete_request.min=-1) (op_is_file.failures.min=-1) (op_copy_from_local_file.min=-1) (op_list_status.failures.min=-1) (op_xattr_get_named_map.failures.min=-1) (op_is_directory.failures.min=-1) (object_multipart_aborted.failures.min=-1) (op_create.failures.min=-1) (op_exists.min=-1) (committer_stage_file_upload.min=-1) (op_xattr_list.failures.min=-1) (action_executor_acquired.min=-1) (action_http_head_request.min=2) (stream_read_remote_stream_aborted.min=-1) (action_file_opened.min=15) (object_multipart_initiated.failures.min=-1) (object_bulk_delete_request.min=6) (op_delete.min=24) (op_xattr_get_map.min=-1) (object_multipart_aborted.min=-1) (op_glob_status.failures.min=-1) (op_list_files.min=-1) (op_exists.failures.min=-1) (op_xattr_get_map.failures.min=-1) (action_http_get_request.min=8) (committer_stage_file_upload.failures.min=-1) (op_is_directory.min=-1) (op_access.failures.min=-1) (store_exists_probe.failures.min=-1) (op_mkdirs.failures.min=-1) (op_access.min=-1) (committer_load_single_pending_file.failures.min=-1) (op_xattr_get_named_map.min=-1) (object_delete_request.failures.min=-1) (op_xattr_list.min=-1) (op_copy_from_local_file.failures.min=-1) (action_http_head_request.failures.min=-1) (multipart_upload_list.failures.min=-1) (op_glob_status.min=-1) (committer_magic_marker_put.min=-1) (object_put_request.min=31) (op_get_delegation_token.failures.min=-1) (committer_commit_job.failures.min=-1) (op_abort.failures.min=-1) (op_create.min=6) (op_createfile.failures.min=-1) (op_get_file_checksum.min=-1) (object_bulk_delete_request.failures.min=-1) (op_is_file.min=-1));
maximums=((delegation_tokens_issued.failures.max=-1) (op_createfile.max=-1) (object_continue_list_request.max=-1) (action_executor_acquired.failures.max=-1) (op_xattr_get_named.max=-1) (store_exists_probe.failures.max=-1) (committer_magic_marker_put.max=-1) (op_createfile.failures.max=-1) (op_copy_from_local_file.failures.max=-1) (stream_read_remote_stream_drain.max=10) (op_exists.max=-1) (op_is_file.failures.max=-1) (op_abort.failures.max=-1) (object_list_request.failures.max=-1) (object_continue_list_request.failures.max=-1) (action_http_head_request.failures.max=-1) (object_multipart_initiated.max=-1) (object_put_request.failures.max=-1) (object_multipart_initiated.failures.max=-1) (op_xattr_get_map.failures.max=-1) (stream_read_remote_stream_aborted.max=-1) (action_http_head_request.max=21) (op_list_files.max=-1) (op_is_directory.failures.max=-1) (op_mkdirs.failures.max=-1) (op_get_content_summary.max=-1) (stream_read_remote_stream_drain.failures.max=-1) (op_mkdirs.max=300) (committer_materialize_file.max=-1) (op_delete.max=87) (op_xattr_get_map.max=-1) (action_http_get_request.failures.max=-1) (action_http_get_request.max=28) (op_get_delegation_token.max=-1) (op_glob_status.max=-1) (object_delete_request.max=-1) (object_list_request.max=185) (op_create.max=62) (op_get_file_checksum.failures.max=-1) (op_access.max=-1) (delegation_tokens_issued.max=-1) (op_xattr_get_named.failures.max=-1) (object_multipart_aborted.failures.max=-1) (store_exists_probe.max=-1) (committer_commit_job.failures.max=-1) (committer_magic_marker_put.failures.max=-1) (op_xattr_get_named_map.max=-1) (op_xattr_list.max=-1) (op_get_delegation_token.failures.max=-1) (committer_load_single_pending_file.max=-1) (stream_write_queue_duration.failures.max=-1) (op_get_file_status.max=6) (action_file_opened.failures.max=-1) (op_is_directory.max=-1) (object_bulk_delete_request.max=26) (op_create.failures.max=-1) (object_bulk_delete_request.failures.max=-1) (op_access.failures.max=-1) (op_rename.failures.max=-1) (op_xattr_get_named_map.failures.max=-1) (object_multipart_aborted.max=-1) (action_file_opened.max=15) (op_get_file_checksum.max=-1) (committer_load_single_pending_file.failures.max=-1) (op_list_status.failures.max=-1) (op_list_status.max=-1) (op_get_content_summary.failures.max=-1) (stream_write_queue_duration.max=-1) (op_delete.failures.max=-1) (stream_read_remote_stream_aborted.failures.max=-1) (committer_stage_file_upload.failures.max=-1) (op_get_file_status.failures.max=-1) (op_glob_status.failures.max=-1) (op_exists.failures.max=-1) (multipart_upload_list.max=-1) (op_list_files.failures.max=-1) (committer_materialize_file.failures.max=-1) (op_rename.max=-1) (object_delete_request.failures.max=-1) (action_executor_acquired.max=-1) (op_xattr_list.failures.max=-1) (committer_commit_job.max=-1) (op_copy_from_local_file.max=-1) (op_is_file.max=-1) (object_put_request.max=77) (op_abort.max=-1) (committer_stage_file_upload.max=-1) (multipart_upload_list.failures.max=-1));
means=((op_list_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.mean=(samples=0, sum=0, mean=0.0000)) (op_mkdirs.mean=(samples=46, sum=1457, mean=31.6739)) (object_put_request.mean=(samples=92, sum=2184, mean=23.7391)) (committer_commit_job.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_continue_list_request.mean=(samples=0, sum=0, mean=0.0000)) (op_create.mean=(samples=46, sum=530, mean=11.5217)) (op_get_file_checksum.mean=(samples=0, sum=0, mean=0.0000)) (action_file_opened.mean=(samples=40, sum=222, mean=5.5500)) (op_exists.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.mean=(samples=44, sum=632, mean=14.3636)) (op_get_delegation_token.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_list.mean=(samples=0, sum=0, mean=0.0000)) (op_access.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.mean=(samples=6, sum=15, mean=2.5000)) (op_xattr_get_named_map.mean=(samples=0, sum=0, mean=0.0000)) (committer_commit_job.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_status.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.mean=(samples=0, sum=0, mean=0.0000)) (op_exists.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_list_files.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_executor_acquired.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.mean=(samples=0, sum=0, mean=0.0000)) (op_createfile.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (delegation_tokens_issued.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_create.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.mean=(samples=0, sum=0, mean=0.0000)) (object_bulk_delete_request.mean=(samples=92, sum=1039, mean=11.2935)) (op_get_file_checksum.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_access.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_list_request.mean=(samples=184, sum=1830, mean=9.9457)) (committer_materialize_file.mean=(samples=0, sum=0, mean=0.0000)) (action_http_get_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_initiated.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_file.mean=(samples=0, sum=0, mean=0.0000)) (op_glob_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_drain.failures.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_write_queue_duration.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.failures.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.mean=(samples=0, sum=0, mean=0.0000)) (store_exists_probe.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_is_directory.mean=(samples=0, sum=0, mean=0.0000)) (committer_materialize_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_content_summary.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_abort.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.failures.mean=(samples=0, sum=0, mean=0.0000)) (action_http_head_request.mean=(samples=132, sum=627, mean=4.7500)) (object_put_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named_map.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_delegation_token.mean=(samples=0, sum=0, mean=0.0000)) (object_multipart_aborted.failures.mean=(samples=0, sum=0, mean=0.0000)) (stream_read_remote_stream_aborted.mean=(samples=0, sum=0, mean=0.0000)) (object_delete_request.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_named.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_rename.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_delete.mean=(samples=46, sum=1863, mean=40.5000)) (op_createfile.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_stage_file_upload.mean=(samples=0, sum=0, mean=0.0000)) (multipart_upload_list.mean=(samples=0, sum=0, mean=0.0000)) (op_copy_from_local_file.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.mean=(samples=2, sum=10, mean=5.0000)) (op_xattr_list.failures.mean=(samples=0, sum=0, mean=0.0000)) (op_xattr_get_map.mean=(samples=0, sum=0, mean=0.0000)) (op_get_file_status.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_magic_marker_put.failures.mean=(samples=0, sum=0, mean=0.0000)) (committer_load_single_pending_file.failures.mean=(samples=0, sum=0, mean=0.0000)));

